cset: moving following pidspec: 1793
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.364852932 seconds)
loading group "string"... done (took 0.568711019 seconds)
loading group "linalg"... done (took 7.300311145 seconds)
loading group "parallel"... done (took 0.167217883 seconds)
loading group "find"... done (took 1.137170581 seconds)
loading group "tuple"... done (took 2.03454041 seconds)
loading group "dates"... done (took 1.290160292 seconds)
loading group "micro"... done (took 0.2381399 seconds)
loading group "io"... done (took 0.964711334 seconds)
loading group "scalar"... done (took 40.476630071 seconds)
loading group "sparse"... done (took 13.234898049 seconds)
loading group "broadcast"... done (took 1.066758813 seconds)
loading group "union"... done (took 14.425649951 seconds)
loading group "simd"... done (took 4.701715341 seconds)
loading group "random"... done (took 9.508105181 seconds)
loading group "problem"... done (took 1.992897468 seconds)
loading group "array"... done (took 22.328836447 seconds)
loading group "misc"... done (took 2.012119461 seconds)
loading group "sort"... done (took 3.412366791 seconds)
loading group "collection"... done (took 19.554370982 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.570525039 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.156653613 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.148354362 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.147281963 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.197218914 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.14243451 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157126621 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.097259898 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.965225272 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.171703906 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.151640341 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.522873566 seconds)
done (took 5.174947377 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.218345786 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.096281913 seconds)
    (2/2) benchmarking "String"...
    done (took 0.10347095 seconds)
  done (took 0.885007687 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.076874651 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.14756392 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.096632312 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.077710351 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094233665 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077796941 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094248676 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.093255088 seconds)
  done (took 1.376708775 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.087145399 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.096366381 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.081804158 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.095843424 seconds)
  done (took 1.048877961 seconds)
done (took 4.302675538 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.721824219 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.271098568 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.20256799 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.461487086 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.195810543 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.216405351 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.680249107 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.345536552 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.252645427 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099640896 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.134832602 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.391755545 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137037653 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.680471492 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.088976997 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123307434 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.177068995 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.452660383 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082331682 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109627829 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117017582 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140475551 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.127659928 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090287453 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.18452592 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081325538 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.192225595 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.10703197 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080321994 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.276829364 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200251151 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.692578046 seconds)
  done (took 10.853583937 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.112202129 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133058317 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096527195 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137645722 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.133835793 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099371273 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084502328 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096692663 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121454821 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.174252989 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113941584 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.136180127 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094020056 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082584471 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.113949823 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245168008 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.118662671 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.099035365 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099387017 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.087832151 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.136534431 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111784195 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107679167 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092542464 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166024802 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.220601693 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110561946 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124600143 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096753323 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.111347794 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143054342 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142583844 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093898395 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079735373 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.170255671 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123106319 seconds)
  done (took 5.118760964 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.088533756 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.127809893 seconds)
    (2/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.137476634 seconds)
    (3/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.188687294 seconds)
    (4/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.102550954 seconds)
    (5/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.184547046 seconds)
    (6/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080574538 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.141362244 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.094534908 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111733111 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.255319392 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.119326647 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.487347906 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.140542967 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.098679983 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.0963506 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081998225 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096598213 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.456676775 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.15751055 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.13421123 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.095883178 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104782621 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.099445743 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.362580102 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.080016311 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.095244365 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08861457 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.082103554 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.161095146 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08191383 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.319954 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.083611336 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.117747784 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097896771 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131581731 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10949034 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.1338699 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095648968 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079011729 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.17432013 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104488546 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079436371 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.120942892 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133310004 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134553051 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097313096 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.08147384 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.196544958 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.096714854 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.095537918 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.939168727 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.179178784 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.106221514 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.099177813 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.303575752 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097517767 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097942393 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.07684721 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.284582236 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.19577885 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097782614 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.096140894 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079205528 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.097411466 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.358358738 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.080080177 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.795595322 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083394552 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.106087341 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082578264 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095477101 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.075801096 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10391139 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102330299 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.098193417 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.095806283 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080842137 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.096899728 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.077908513 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.098472926 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.105889734 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.215704385 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.08005795 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.097211408 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.076726948 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.115213625 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125754212 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.081714285 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095217002 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128569949 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08176965 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.096936354 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.133218727 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080063804 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.107999028 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097943847 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141253769 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.080618427 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.145541166 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.095600848 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124073319 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098210975 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112888828 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.110199609 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098765979 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.168463128 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077028692 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.095583727 seconds)
    (109/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080494254 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.097630257 seconds)
    (111/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.076320889 seconds)
    (112/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.094428795 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080472411 seconds)
    (114/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.095282916 seconds)
  done (took 22.678322359 seconds)
done (took 40.430374535 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.323743334 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.101904094 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.101973769 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104806782 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100355983 seconds)
  done (took 1.504761533 seconds)
done (took 2.245298457 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.164551923 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114406869 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093880402 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.127282769 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076514714 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.132174825 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.130241875 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.093718752 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.131167618 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.091993861 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.125334554 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077139164 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092000977 seconds)
  done (took 2.223429291 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095672111 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113239407 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081869907 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109774889 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076783085 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109769024 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091438335 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11541376 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107454154 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084946439 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091424938 seconds)
  done (took 1.809801556 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095816672 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.110524428 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081820643 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108726582 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076076933 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108872878 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091841868 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114253577 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107799378 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085618882 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092060827 seconds)
  done (took 1.809461108 seconds)
done (took 6.574401759 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091602786 seconds)
  done (took 0.824267988 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.920285286 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.574804549 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112035561 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.148735876 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.315789873 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.170165396 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.467055748 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.124264862 seconds)
  done (took 10.776228453 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.113866337 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.11117128 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.102032894 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.083937467 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.102167444 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.085833528 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.09900266 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.098487141 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.082998822 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.097189316 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.081714468 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.098513445 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.099469304 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.080285711 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.098509843 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.084753651 seconds)
  done (took 2.324540987 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118857144 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116897408 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.104359641 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.106808158 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085611137 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103749684 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105061048 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.08803689 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.100389138 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.10199369 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.08950842 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.104648165 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102577319 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079309126 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.104704038 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.106137054 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085099639 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.104628508 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.104754149 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089735008 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.104774577 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094317863 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.085191613 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.103760909 seconds)
  done (took 3.240191717 seconds)
done (took 17.898558157 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.158590173 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108058329 seconds)
  done (took 1.009694132 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.09664247 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.11089919 seconds)
  done (took 0.953129588 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.098999344 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094409321 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.119471071 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.107831168 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.078632219 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.094955139 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.117675009 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079311888 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.095066075 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.095416611 seconds)
  done (took 1.731422177 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083615468 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.10862338 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100430477 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.093283052 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.104767596 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.09341034 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087288399 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098113426 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.107624748 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076529575 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.101142225 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.113383546 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.084105301 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.114131194 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104529064 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.098624849 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.084030572 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097959712 seconds)
  done (took 2.499633135 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081566946 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096321474 seconds)
  done (took 0.923678197 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082533126 seconds)
    (2/7) benchmarking "second"...
    done (took 0.092850978 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080280078 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096688269 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.092492168 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076287848 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.092669871 seconds)
  done (took 1.360172295 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.438707713 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135447603 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.258769653 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.101094903 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.103143689 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.295308697 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.096582763 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083880929 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.101288376 seconds)
  done (took 2.418732255 seconds)
done (took 11.640960365 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.094697325 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.1138695 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.110923782 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.454341462 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106003283 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.097036506 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.145791806 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.243475476 seconds)
done (took 2.122763663 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.146634905 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.567861207 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.421185727 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.228539411 seconds)
  done (took 1.974233757 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.402132669 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.098135891 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083026606 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.079856812 seconds)
  done (took 1.422328685 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080161088 seconds)
    (2/2) benchmarking "read"...
    done (took 0.09862838 seconds)
  done (took 0.936037064 seconds)
done (took 5.240186651 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081357755 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.131202642 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.080051186 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.098087538 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.077087189 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.09772037 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.077142418 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.094072355 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.079854024 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.095828 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.095470389 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.079780642 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.095122081 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079126126 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093359461 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076541624 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095511055 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.076642233 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093586755 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.076937445 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093130309 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07927521 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.092996337 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077271377 seconds)
  done (took 2.911356685 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100392212 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097024343 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.101791912 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.084840837 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101361135 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085417505 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101445466 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.095972953 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085127049 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.098267806 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100782447 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083893967 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098488896 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084339876 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098627944 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.10120352 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086262363 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096512106 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08206129 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.099673307 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.101216212 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079489703 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.100447586 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084993213 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.100765546 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100637151 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082684913 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.095962664 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102237721 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.083574873 seconds)
  done (took 3.577311409 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086240705 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.092881075 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078187066 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101167219 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077162151 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096190628 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.076695125 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.094696624 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078358055 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.093965744 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079416884 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.093980587 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078409554 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.095532693 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078039879 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.097624919 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.111504294 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077252543 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094571557 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078419682 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.097664902 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.076807413 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094678113 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.076917846 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.09402 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.076999126 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094577323 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077329445 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.094614472 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.07695536 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.097432477 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.080102235 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.093617791 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.10017709 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.080266451 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.093729857 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.081290999 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.093375836 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.078263027 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094163683 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.076583661 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094177947 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077275315 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101231369 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078172366 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.095708736 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.07703613 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096507258 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.077448592 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097179195 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.076682133 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.093632868 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.095916251 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.079063389 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.098353637 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077110372 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095005016 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.07706094 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095776084 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078120936 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094062404 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.076888352 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096577269 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.077989941 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.110094103 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.08434869 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.093923891 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.095645093 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.078437702 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.096911685 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.079267862 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108479273 seconds)
  done (took 7.108488772 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.13241508 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.124111394 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.078978347 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097573833 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076130427 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.09507235 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.081013867 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093681872 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095939111 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083638004 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094919394 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079618039 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096510368 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093785006 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095139775 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.079644739 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.099763065 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092745928 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078298679 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.09831288 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078892896 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098743216 seconds)
  done (took 2.811475096 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.205180052 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102464078 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140617035 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.105694663 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.081710785 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.104233072 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101071796 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084601644 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101533949 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082227707 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099497028 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101979961 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082716715 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098794895 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099548688 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081741847 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100948975 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083155358 seconds)
  done (took 2.623389715 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.09420522 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.097698688 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.096909941 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096876294 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.097715526 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.192265276 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102882222 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.105732172 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083104163 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097692903 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090269798 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099362434 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.082369238 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097892959 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099488114 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.079782425 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.099878786 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081019195 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106382164 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102898084 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086694599 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106333708 seconds)
  done (took 2.970854687 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097343569 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100090345 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.1180782 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083013785 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.093702182 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079124507 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.104976682 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.079943585 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.104489064 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099677633 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081693013 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.095959706 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.085293251 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097746597 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103336056 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080298239 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099801678 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081565777 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100201731 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077178984 seconds)
  done (took 2.635177279 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103610391 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099088242 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098479756 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091004898 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098923923 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081854867 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10843794 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.098802571 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082478242 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.121950442 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099143537 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081937324 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107085225 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105079986 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098589911 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090118746 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107657779 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107169537 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.081494229 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098443152 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124721398 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081133525 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108526672 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.0980364 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081171474 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.098965928 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098918599 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087540411 seconds)
  done (took 3.517552763 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082864355 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098125371 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078545644 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.09533668 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.077255929 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.095334233 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.077735176 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.09547722 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080386109 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095598637 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080079445 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097405664 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080024259 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.097404045 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.0803614 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097144151 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080342719 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.095124011 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078192833 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095427016 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080524251 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097470616 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.079711416 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095311518 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078249694 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.097203557 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07770852 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095201455 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080050746 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095642679 seconds)
  done (took 3.413082919 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091540868 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105358312 seconds)
  done (took 0.972970999 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079661505 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112694026 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078748643 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.101851234 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085496535 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098433146 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106801327 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085808437 seconds)
  done (took 1.524625838 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.09787912 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.108364013 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082609244 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.110372529 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109415057 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.096486256 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.17006619 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100329039 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.104108781 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.078467801 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.111987919 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080486813 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.104769761 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081152103 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104274874 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087383707 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.095324082 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.104086159 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.083010562 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.09695596 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08221181 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10645518 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100900755 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.077968101 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.102440736 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090647029 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.111372929 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.100320462 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084229731 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.10596892 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.086870071 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093201845 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081293103 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.098455945 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.07874276 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.107288801 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11541044 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085010624 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.107691568 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100150765 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092071644 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.09453454 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.085778399 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.104183908 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108711153 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.08187013 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.099240807 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.07654636 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.099099045 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083264935 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093195728 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080743836 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093375944 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105695644 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.08438915 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110597135 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080649991 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.099720716 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.083617222 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102418598 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.105124188 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.083284554 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101157243 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.080611183 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109251907 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086855797 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108619292 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.09385073 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.076330381 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.097234918 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.090943662 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.122736149 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.105564638 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.082016547 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100299727 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.078649281 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102504705 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100288759 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086970172 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.106266433 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.081428482 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105133236 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106410661 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081667962 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.101136549 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.08961627 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.096745744 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.101670003 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.078772073 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.1168583 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.080198334 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.09719129 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.078436877 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.109858263 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.101874079 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.081676315 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.096714626 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088568975 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.093106334 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.081786491 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101064905 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098440039 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.092212218 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104981002 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104987489 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.089573103 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.107192168 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081761392 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.102315184 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.078009094 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099822516 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.080998346 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.105293429 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.093342853 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.083901551 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.099342716 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.08320133 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.107974409 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.096432741 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.082013563 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106913509 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.086829909 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.098272304 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.078428021 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.101724946 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.08110665 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103163714 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.107518912 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.080633663 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.094816713 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.077965367 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.103117121 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.082069309 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.103798534 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105178841 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085176407 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.093330982 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.079510591 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.103855988 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.109351113 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.081899451 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.099833607 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.087693478 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.101328549 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.081356951 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.105724921 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.101667765 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.080919945 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.104985964 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.082012873 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.094596378 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085406482 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.102632934 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098263425 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085470817 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102836203 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.084656314 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.09969154 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08002652 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.104746124 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10102115 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.080473273 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099331673 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.080795716 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.110280665 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.083807357 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.094698428 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097236517 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089502599 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097451319 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.081358548 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.098223297 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.084405855 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.100554975 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.096609836 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.080589257 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.101712419 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.09375113 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104039309 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100633218 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.086928359 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.111574412 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082450672 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.10249387 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.081198202 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099993689 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.100316876 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091336153 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105158288 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086889517 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.102558918 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.096354068 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088045301 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107354374 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.080553085 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.096928061 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.08049073 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.103608663 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.104916544 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.085656205 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.10055372 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.07980485 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.099725277 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085061862 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.102656236 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099115933 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081023957 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.105296974 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081015179 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.106164111 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101508534 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092424984 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103446304 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078080276 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103675191 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097673126 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.087535481 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.094685416 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.079153438 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.098221467 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083075186 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.098557136 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085327151 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094057854 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089259628 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109031766 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.100089586 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.081133379 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.100200498 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088212698 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.101774559 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086432494 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.103465786 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.106773999 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092458471 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099521651 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.085430449 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.110563094 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101316784 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076644832 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.104919536 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.080687478 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.098929381 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.081245139 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.098163863 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085450065 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108707155 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.107656004 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076286488 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.103024849 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.080861416 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.099455511 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.077933523 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.105227823 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.102784918 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084202792 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.106796203 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084003027 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.100695962 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.103335381 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.081723095 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101290544 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.083516641 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.102923017 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083646075 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.10351683 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081468835 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.103980566 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.099314442 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080043846 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.101052873 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.082260949 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.099873809 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088309698 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.100157611 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082476847 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.102436743 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100913867 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082659829 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.100894273 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.081272342 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103821425 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.082636631 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.100449923 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.102153463 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.077665044 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108400042 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082058391 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10822258 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.082175415 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.097372649 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.08771527 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.103311138 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.105829755 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083759679 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.101880114 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083700362 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100110495 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.103482556 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088755796 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.09764868 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093177158 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109743275 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101354962 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.085598234 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.101187419 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.084331199 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.099763854 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.083423535 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101773759 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.083366086 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.10091449 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.105736869 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.084784266 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.101496987 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084516135 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.101844414 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.083242976 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101921436 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.076876217 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.100260132 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.082355442 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.100861024 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111862533 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.08306967 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.10101086 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.080805728 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10225783 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.09920219 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.078957 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.109125019 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091300373 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.101331874 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107459184 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081446841 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.10155181 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093160852 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095049436 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.080414004 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.097814044 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.079672016 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108316818 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.101111522 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.092150885 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.101454144 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.081550132 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.09876004 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.083598659 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.099708308 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.094384773 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.080625689 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112018878 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.081488474 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099885538 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.083284064 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.104171267 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083879498 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111191123 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.100003211 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.083728744 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.100951058 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.079520558 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.099538231 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.081356444 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.103793836 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101279652 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.079811839 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.097978824 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.081975807 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.101337752 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.083430078 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.100132872 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.083574206 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111359269 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082238149 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.103526041 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10494611 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.077237253 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.103575647 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.082055377 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.100799656 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.081496551 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.104455503 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104922239 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083506348 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.109625186 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.081850483 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101656496 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082289399 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.099533841 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100730678 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.082159033 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101722061 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.081807249 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102877321 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090371524 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.098946486 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.103998736 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082242374 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.101501775 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.089359607 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102803429 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085137328 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109140405 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.101351357 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.084537143 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109545011 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086098657 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10552653 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101869943 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.084429928 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107087105 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.0819426 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.107672626 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.083233862 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.102942985 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.10271085 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.080010756 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101362533 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.08270056 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100767946 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.089483482 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.102635092 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.081268919 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.100955608 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099517598 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.083778909 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104931241 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090290432 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.104422097 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085875999 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.096898944 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.080044326 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103130565 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099497009 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084297421 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.104576055 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089050455 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.104715239 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.082944114 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.101515075 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111209528 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.08909327 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.10501832 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.081185072 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.105096112 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.083620111 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.1047822 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.102612318 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.08226048 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104697009 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.087190942 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.103533569 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.082154412 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109302649 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.105485613 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083821716 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.102687167 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.083576722 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.101053193 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078126224 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.103063875 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.084178467 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106895615 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.103233138 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083252293 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113261612 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.0802585 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.102011592 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105158843 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082824227 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.106839723 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.078376976 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.103022543 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084020556 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10371436 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078683168 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.101224289 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.079859804 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.104680259 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.100467336 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078922025 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113340144 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.091915841 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.104729233 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100785976 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082196537 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.096731537 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.077963779 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.100949989 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.083948263 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103583051 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.112013311 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.082059572 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.101110298 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.078242903 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102026627 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086064192 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.10531667 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.08033088 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097394439 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.081965147 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.105357093 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.107764022 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081563785 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101670984 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086170646 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.104377015 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.080643121 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105295127 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.079714871 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.105727164 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115031441 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.083698078 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10275307 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.108168069 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091071092 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.102662937 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.078561011 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103282524 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.086612029 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.102262442 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.083369196 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.10294039 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118789366 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085908446 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101199747 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082772372 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105079776 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.101290638 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.091501621 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103665747 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084561421 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.106393974 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085076819 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111075633 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104467955 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090736274 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.105706907 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.105375591 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.082208566 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101652634 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.081615207 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.100962014 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.085248114 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103694733 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106291914 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.091812467 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.101486004 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094920534 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.112516811 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.104612592 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.080493106 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.101431579 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.083343968 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.09800142 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.085164157 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.101579398 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.082022289 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100158959 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.082723007 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.103989007 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108666631 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.084694761 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.103655217 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.083539375 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.096821635 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.085232383 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.104965537 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084203694 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.100732504 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084143926 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.10396353 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.106726251 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087740317 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.10067667 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.085564252 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.105278583 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084780228 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098761936 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.109480982 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082089655 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.105379864 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.083108996 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102564882 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.085564529 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107053021 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108252675 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085138847 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.105343836 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.093267233 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105355399 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.080529404 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100094769 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.108636758 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.081453344 seconds)
  done (took 57.329553178 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147964126 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079967105 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098116201 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079037407 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111280569 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098949247 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079306235 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098512909 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080049653 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101782198 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.07871044 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099387345 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108188939 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122885073 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092121537 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103838946 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097923695 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080077748 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097967063 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080469241 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.107860153 seconds)
  done (took 2.877370995 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.107177817 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.119578435 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114914461 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.117645791 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089079863 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.113447764 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.11461074 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11467152 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098448953 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110328785 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.11702873 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114478549 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.090777244 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110344422 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10943202 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092157844 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.117299279 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108574839 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115454942 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095512168 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112228881 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114458744 seconds)
  done (took 3.224671637 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.086545239 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102216816 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084670829 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097617474 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083416155 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.097331361 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087551715 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.100774406 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087110304 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102071736 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.100772753 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.082215847 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104480023 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.07869603 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.101731953 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.080925214 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.152612773 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.105684105 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082486773 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104625811 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.098735153 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.086038555 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098212129 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079671082 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101511102 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087794976 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104517514 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081525614 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102571338 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.08166349 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.10412313 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.100802493 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.085113982 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.104026367 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.08263065 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101547147 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083055215 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.1027816 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.078619488 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101053979 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084412093 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098429458 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084439869 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.105036546 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.101240712 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.081046923 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.104452079 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.08352225 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.098023927 seconds)
  done (took 5.458023421 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.105961434 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159710587 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086072663 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.142462711 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.120043806 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112200516 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087510901 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.141938612 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101890354 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.085393215 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.121809358 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119961958 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10374824 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.08923224 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.110778537 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103635958 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085571643 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102031471 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.088129713 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103171222 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108048872 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090503081 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.118963604 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.118985733 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107492469 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.082536078 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102861801 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108513122 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097494281 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109271898 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108687107 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090105029 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.120331273 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.106476186 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.08340001 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.106083381 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121398204 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.084053791 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.106460687 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100827925 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086716753 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108917058 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109825921 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102049218 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103504216 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109078109 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084164841 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100864789 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117268723 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086395463 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.111803416 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119837554 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.087945389 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.104608518 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107993452 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.100042417 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.104728445 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101472225 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087894085 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.117977506 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101162099 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088199581 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.12014564 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105256452 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.091444134 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.118218077 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109113605 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108082029 seconds)
  done (took 8.111688815 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097659302 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110075023 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12115348 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120149189 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090289693 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.110452847 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10977569 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090231299 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110506284 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115262959 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110070443 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.133518489 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086137011 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113901427 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111094525 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090332674 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111483218 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110607396 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091248345 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110246743 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.10996938 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.11957574 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.09041583 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.119016142 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.14122384 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105327941 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090425541 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111515942 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120632835 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110822639 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123563933 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.09123945 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110999228 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120596795 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.122917031 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.089912511 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10272714 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110208922 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.090847573 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111356919 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10563974 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119283644 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091868868 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105725527 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110338502 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.090424105 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.11938075 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123451624 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114455429 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116658499 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.090957741 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120175216 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11011362 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091351027 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11955109 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.14616967 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119665462 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120282783 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110669333 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.120455593 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.099834284 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.127697706 seconds)
  done (took 7.651462937 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109816839 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.114788261 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.11618192 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.101153296 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082013282 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108081535 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08243595 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101935184 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.093716587 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.112873122 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116007092 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108518701 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092896745 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116360052 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108105095 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111742448 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087916212 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108676324 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113139635 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087441809 seconds)
  done (took 2.919457329 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095830274 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123169504 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085038203 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112209017 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107014356 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091591229 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106683214 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106907839 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086090919 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107715914 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095650411 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.11607816 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105257832 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090233399 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115713908 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110506825 seconds)
  done (took 2.503559492 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.099177999 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116724837 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.119192335 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084889745 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.103725835 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.10179409 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.085231864 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100688235 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.080544563 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120957782 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085061256 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109198527 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104720538 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083703064 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101482163 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087767527 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100442372 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082646934 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104642849 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.119211909 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095810128 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103552831 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.10581134 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086520158 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105823746 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.08953269 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106181982 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102287417 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.082371807 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104423316 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084170667 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.112820753 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101725749 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084317326 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103000392 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.081936881 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104827495 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085090624 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108814551 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103680586 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083438808 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.10487831 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084915696 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105862052 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.100772029 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.085418647 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100327618 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091185487 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102818127 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084807015 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105831947 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.106453009 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086586842 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115443125 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.108259385 seconds)
  done (took 6.258058379 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101919502 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108852244 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080580944 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102970983 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08681202 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.106981191 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107865531 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.085746882 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10734849 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083560027 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10631486 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.087475957 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106807268 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10876734 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087033114 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108335398 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080143001 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10754499 seconds)
  done (took 2.616195596 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.093827682 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105100208 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092638307 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105054528 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085065235 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10751289 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080939904 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103730468 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102664637 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085922254 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105826358 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087204073 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10314538 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.08756855 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104455617 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085119171 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107271734 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103257278 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085117868 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101975966 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087166232 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102771948 seconds)
  done (took 2.972874546 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.115127294 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.120476947 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.090558879 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.224127252 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.099915634 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.128598441 seconds)
  done (took 1.63189793 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113367443 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120342553 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10581822 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106825252 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115690244 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107725411 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086978962 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106844799 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117098535 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100678615 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108405777 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117805589 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116422002 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096677217 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114518226 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114271783 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108284042 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087438993 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106216092 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127321295 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087082197 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116982563 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107354716 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086450009 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107994728 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116692172 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116842057 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122044968 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087369267 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11761521 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114447716 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087020673 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118326802 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122329122 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109267515 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096946356 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108057261 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127090575 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115141021 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095876593 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109195934 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114959101 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096329948 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113554182 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117086658 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10852457 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092531344 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10755322 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108000338 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134000223 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09396673 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117002156 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114355061 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117935187 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116444542 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134383524 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101061997 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116541649 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11490094 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121741019 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116684905 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09403339 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116689319 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122360815 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115017064 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120095423 seconds)
  done (took 8.133105992 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10515605 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125991967 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109148548 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122608249 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095735282 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108188663 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10711997 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087469526 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107530019 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107599372 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150152186 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087173881 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117976522 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11802885 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107211602 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087383502 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107150436 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116558081 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08620796 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133912622 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107704259 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116549141 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11653361 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096701865 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121677952 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115559855 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107493704 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08785662 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10772674 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107762976 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092516548 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108247852 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117129763 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086532496 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116849392 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107926348 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107873581 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093955469 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107813579 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114064748 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097507558 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127020747 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108386655 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107906352 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122162669 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087678831 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10868549 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087190747 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10864691 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107020954 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123119828 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101782895 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121846744 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118199073 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108526744 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08746759 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108187916 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107836003 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088035748 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114501583 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117035421 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108065527 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134234833 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087881394 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108170301 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117532785 seconds)
  done (took 8.004548358 seconds)
done (took 154.512650003 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.217057168 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.197813806 seconds)
  done (took 1.275776061 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.090773469 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.135449069 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095639775 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168150483 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085226398 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.139983008 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.13801363 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097353022 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106405021 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085289504 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.107059449 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086746909 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171617089 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085598818 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106509838 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108347098 seconds)
  done (took 2.673660507 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.116303909 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.255185896 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.121921504 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105072683 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.088062857 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109287928 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.083506706 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.111613349 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089186215 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.10442717 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.087365322 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.106436629 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.08391469 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.10662653 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.088811811 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.10864344 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105453953 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087506813 seconds)
  done (took 2.824144711 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.116497387 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146381156 seconds)
  done (took 1.134397515 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.244104299 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.160210992 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.228480096 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.473295673 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.277883925 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.355368308 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.19798097 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.210064137 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.165000661 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.207699511 seconds)
  done (took 3.383911293 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.123241184 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.182302097 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.315436022 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155350769 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107314202 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.12760532 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.155498472 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129666069 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.122648622 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100624872 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.121266908 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.117999418 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.137789585 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094167716 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.114545472 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117440849 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.119751509 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.113890912 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.113984725 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.094377817 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.136684862 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106392622 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.093335049 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.11341053 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.118000542 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.098099634 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105168514 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.084490603 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.115843381 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.115627557 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.091798668 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125193012 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.118886371 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.153370712 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.122910626 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.153744016 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.118159766 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.089733361 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114498653 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090277697 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119061211 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.117620444 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.124879563 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.096363732 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.105762418 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.096590174 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105675324 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085233317 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114425108 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.118253968 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.093184399 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113539008 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.152478369 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118294845 seconds)
  done (took 7.364174221 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.785720614 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.155775358 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090144986 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.874331335 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.1353291 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103005593 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.772674417 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111648871 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.255435367 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.752004853 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132401758 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.09627715 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.229603387 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.258361094 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.954580386 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.294029994 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.637938297 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.125395534 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152015741 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153200732 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117220024 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114304836 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.13075195 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.454620798 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.116271094 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090079887 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118928113 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.118431239 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.16006622 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.124818759 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092202574 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.19977655 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.249176375 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204103463 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093424266 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111756416 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.088989615 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.191337434 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264929964 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.193509067 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.178343402 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107891226 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089142474 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.121313291 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131497199 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.087537826 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.18278262 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.173046885 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.169140382 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114602595 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118240542 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098305832 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121210412 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.16407116 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120811174 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.320549024 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.309427572 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089546041 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121087665 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.124830568 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.236670639 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122591058 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225090684 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138552414 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.189167988 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.110434432 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.777342043 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.168248957 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.11027808 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.094633004 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119330276 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115986126 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.099660978 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.165939192 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.390080625 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12330782 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113342297 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090076949 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.248316381 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102869908 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111094022 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160768049 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.11641081 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.098590953 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124103718 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122197571 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.168685816 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.254832819 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.100003061 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.12020086 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114736857 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.102520149 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.115755924 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.210931464 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219411466 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.161803049 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.228073658 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.099685023 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.183308246 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.168525263 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118083676 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.172570434 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119458401 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101681551 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121798154 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216938884 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145542875 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101937396 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114921979 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117920096 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.14704734 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.128124757 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097538552 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.170397955 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.501064109 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.169341935 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.107997021 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126678235 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097836861 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161432179 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117490956 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.258216945 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120623814 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.168628399 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097397234 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.108931809 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120629699 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.166650867 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121236634 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098617142 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121884296 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118216041 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.23398227 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.217180356 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120784775 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.220338422 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.18496028 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118133635 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.170743418 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120629572 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.16960747 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120063197 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10104263 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116081066 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.789769905 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.1235933 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098317485 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115833949 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.194676702 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.08930645 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.123509056 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.123767449 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086530724 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.806852995 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126225939 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120322993 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101861754 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118395612 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119285587 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095636725 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115517543 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.159862766 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229159366 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118535712 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098485561 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.124328078 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.159356139 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.116030326 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.123494341 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.101871015 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124632763 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120969816 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114209345 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102801938 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.188391969 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.162425422 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.216225518 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.567872917 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.110738256 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.123572702 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.204869962 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111761681 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.287688298 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096609878 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.223506434 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.18330705 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098503871 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.306584702 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.163774724 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.196504796 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.126907951 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.172886709 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.108968734 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117257444 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.164650346 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.088638697 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117423076 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.160892626 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124801355 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123384093 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.957221728 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089812788 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.223413715 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.110036561 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.168574469 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116614976 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120262071 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.270072952 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111060181 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127386881 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.163903336 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114183066 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.101594477 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.722922529 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.123894485 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.09977387 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11798625 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.219448109 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.16279199 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119686483 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118823536 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097240498 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.183706929 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.20929033 seconds)
  done (took 43.846904547 seconds)
done (took 63.367876162 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.282685705 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216447308 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.269138969 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170145348 seconds)
  done (took 1.913993619 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.176699418 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.149661957 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121238011 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.10753993 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.151048494 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.08490509 seconds)
  done (took 1.686908489 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.365150894 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.275243408 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.244887409 seconds)
  done (took 1.785997765 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.290056442 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.246475486 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.472023486 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.323496696 seconds)
  done (took 2.354179025 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.208593338 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.13327258 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110780037 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.10300916 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.196147479 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.243959668 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.14101139 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.201555801 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.099611842 seconds)
  done (took 2.383269953 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.197069966 seconds)
done (took 11.221742902 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.248241657 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.225013311 seconds)
    (3/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.202189078 seconds)
    (4/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.148745489 seconds)
    (5/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.158841106 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.198190862 seconds)
    (7/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.133355056 seconds)
    (8/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.158301804 seconds)
    (9/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.137562261 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.123553013 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.112054812 seconds)
    (12/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.155505884 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.180135535 seconds)
    (14/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.1981737 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.119062597 seconds)
    (16/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.222660516 seconds)
    (17/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.249710949 seconds)
    (18/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.219099102 seconds)
    (19/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.209390691 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.165862045 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.114069566 seconds)
    (22/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.211072047 seconds)
    (23/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.246218953 seconds)
    (24/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.216322955 seconds)
    (25/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.196382681 seconds)
    (26/309) benchmarking ("sort", BigInt, false)...
    done (took 0.243407439 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.142911228 seconds)
    (28/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.137960668 seconds)
    (29/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.115180083 seconds)
    (30/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.093251757 seconds)
    (31/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.088301703 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.124862417 seconds)
    (33/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.189116147 seconds)
    (34/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.236394892 seconds)
    (35/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.109642647 seconds)
    (36/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.099059151 seconds)
    (37/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.112211228 seconds)
    (38/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.219146302 seconds)
    (39/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.169184201 seconds)
    (40/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.187020541 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.111705459 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.116594709 seconds)
    (43/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.224763033 seconds)
    (44/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.121071847 seconds)
    (45/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.095246604 seconds)
    (46/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.206942473 seconds)
    (47/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.077888874 seconds)
    (48/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.203843826 seconds)
    (49/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.11867465 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.130849027 seconds)
    (51/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.107537346 seconds)
    (52/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.096771906 seconds)
    (53/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.223688053 seconds)
    (54/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.118437314 seconds)
    (55/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.098189416 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.120748619 seconds)
    (57/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.100756269 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.133437819 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.134823982 seconds)
    (60/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.085738712 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.118976122 seconds)
    (62/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.117992855 seconds)
    (63/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.227486888 seconds)
    (64/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.08381415 seconds)
    (65/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.125497249 seconds)
    (66/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.198139521 seconds)
    (67/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.119516537 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.086314912 seconds)
    (69/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.110688155 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.112283358 seconds)
    (71/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.124646424 seconds)
    (72/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.137849662 seconds)
    (73/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.125047695 seconds)
    (74/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.222996062 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.138807308 seconds)
    (76/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.088937533 seconds)
    (77/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.178109829 seconds)
    (78/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.147826729 seconds)
    (79/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.088146597 seconds)
    (80/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.088822682 seconds)
    (81/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.071829222 seconds)
    (82/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.11650454 seconds)
    (83/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.121764543 seconds)
    (84/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.206057448 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.131159007 seconds)
    (86/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.116286122 seconds)
    (87/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.102280272 seconds)
    (88/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.19685537 seconds)
    (89/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.066562691 seconds)
    (90/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.135821889 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 0.087716096 seconds)
    (92/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.180581677 seconds)
    (93/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.195954539 seconds)
    (94/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.113685939 seconds)
    (95/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.118381672 seconds)
    (96/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.20194576 seconds)
    (97/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.127686161 seconds)
    (98/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.144492794 seconds)
    (99/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.125219853 seconds)
    (100/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.190826849 seconds)
    (101/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.115101342 seconds)
    (102/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.114941055 seconds)
    (103/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.215582124 seconds)
    (104/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.115315369 seconds)
    (105/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.199884982 seconds)
    (106/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.192870676 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.085264876 seconds)
    (108/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.121288985 seconds)
    (109/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.117571971 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.13275567 seconds)
    (111/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.147948652 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.134739702 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.086198588 seconds)
    (114/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.091648444 seconds)
    (115/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066206629 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.194147084 seconds)
    (117/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.066444898 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.109386126 seconds)
    (119/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.181500369 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.120218723 seconds)
    (121/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066890698 seconds)
    (122/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.117066372 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.086955289 seconds)
    (124/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.119390551 seconds)
    (125/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.394009495 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 0.180972294 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.094813972 seconds)
    (128/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.111301638 seconds)
    (129/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.100493626 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.135263628 seconds)
    (131/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.10094423 seconds)
    (132/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.123199349 seconds)
    (133/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.066451978 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.114262467 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.085720917 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.116659578 seconds)
    (137/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.11788932 seconds)
    (138/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.093663945 seconds)
    (139/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.107819032 seconds)
    (140/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.086582487 seconds)
    (141/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.139020494 seconds)
    (142/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.153380842 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.116554023 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.129398565 seconds)
    (145/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.146224912 seconds)
    (146/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.17476752 seconds)
    (147/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.115354263 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.151694217 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.108680028 seconds)
    (150/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.09384977 seconds)
    (151/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.117199252 seconds)
    (152/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.06639652 seconds)
    (153/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.110139408 seconds)
    (154/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.21425922 seconds)
    (155/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.092655176 seconds)
    (156/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.132114153 seconds)
    (157/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068482254 seconds)
    (158/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.118888998 seconds)
    (159/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.087876741 seconds)
    (160/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.128848551 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.119199505 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.096596322 seconds)
    (163/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068728148 seconds)
    (164/309) benchmarking ("sort", Int8, false)...
    done (took 0.21091987 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.134281797 seconds)
    (166/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.130855848 seconds)
    (167/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.186751157 seconds)
    (168/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066020988 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.133549908 seconds)
    (170/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.086632224 seconds)
    (171/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.120124998 seconds)
    (172/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.06796884 seconds)
    (173/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.116239132 seconds)
    (174/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.093504835 seconds)
    (175/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.099808692 seconds)
    (176/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.086286771 seconds)
    (177/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.121671373 seconds)
    (178/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.066812996 seconds)
    (179/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.109845715 seconds)
    (180/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.06691994 seconds)
    (181/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.12094109 seconds)
    (182/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.076544345 seconds)
    (183/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.11282758 seconds)
    (184/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067840458 seconds)
    (185/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.115923399 seconds)
    (186/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.066306303 seconds)
    (187/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.066871394 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.133269653 seconds)
    (189/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.176849984 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.096019147 seconds)
    (191/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.116252973 seconds)
    (192/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.094367558 seconds)
    (193/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.091571473 seconds)
    (194/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.065839009 seconds)
    (195/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.067560051 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.137852484 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.109537271 seconds)
    (198/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.151752802 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.109958145 seconds)
    (200/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.178547821 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.085593314 seconds)
    (202/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.109162611 seconds)
    (203/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.111077529 seconds)
    (204/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.100765843 seconds)
    (205/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.066489298 seconds)
    (206/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.093900601 seconds)
    (207/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.123789469 seconds)
    (208/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.110637178 seconds)
    (209/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.087156531 seconds)
    (210/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.187927307 seconds)
    (211/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.114455479 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.093542683 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.119172056 seconds)
    (214/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.068119664 seconds)
    (215/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.068048865 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.1329926 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.181293675 seconds)
    (218/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.091624862 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.135428872 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.172613994 seconds)
    (221/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.092433181 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.13438648 seconds)
    (223/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.08597135 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.137776681 seconds)
    (225/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.067977031 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.117431221 seconds)
    (227/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.068252541 seconds)
    (228/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.091030619 seconds)
    (229/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.085277096 seconds)
    (230/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.106670365 seconds)
    (231/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.066883024 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.085424519 seconds)
    (233/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.114862591 seconds)
    (234/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.180275636 seconds)
    (235/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.089475807 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.189736198 seconds)
    (237/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.11785347 seconds)
    (238/309) benchmarking ("sort", Float64, false)...
    done (took 0.148306598 seconds)
    (239/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.112124435 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.086373375 seconds)
    (241/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.119607358 seconds)
    (242/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.096368004 seconds)
    (243/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.117823456 seconds)
    (244/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.067658521 seconds)
    (245/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.218006748 seconds)
    (246/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.116869863 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.086461332 seconds)
    (248/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.09146122 seconds)
    (249/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.087982163 seconds)
    (250/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.068850818 seconds)
    (251/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.090133941 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.115101115 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.187124919 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.110259061 seconds)
    (255/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.06785064 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.145647745 seconds)
    (257/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.125771221 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.13913138 seconds)
    (259/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.179892145 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.110133915 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.137777682 seconds)
    (262/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.111774129 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.113253904 seconds)
    (264/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.100244098 seconds)
    (265/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.069030437 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.116079446 seconds)
    (267/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.085724991 seconds)
    (268/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.068444382 seconds)
    (269/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.216424077 seconds)
    (270/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.100881468 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.095278959 seconds)
    (272/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.092298903 seconds)
    (273/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.067047784 seconds)
    (274/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.068372039 seconds)
    (275/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.12053416 seconds)
    (276/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.087082161 seconds)
    (277/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.093070511 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.106978567 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.110123813 seconds)
    (280/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.110546895 seconds)
    (281/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.067843152 seconds)
    (282/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.087936445 seconds)
    (283/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.11374712 seconds)
    (284/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.066784697 seconds)
    (285/309) benchmarking ("sort", Float32, false)...
    done (took 0.177438423 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.118238257 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.084894094 seconds)
    (288/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.1132461 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.084852677 seconds)
    (290/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.090844567 seconds)
    (291/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.08521341 seconds)
    (292/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067870047 seconds)
    (293/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.091406612 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.094528849 seconds)
    (295/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.100324687 seconds)
    (296/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.102590796 seconds)
    (297/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.092099049 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.087138951 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.116450764 seconds)
    (300/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.06691848 seconds)
    (301/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.116118175 seconds)
    (302/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.088367626 seconds)
    (303/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.066727703 seconds)
    (304/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.091192398 seconds)
    (305/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.067044625 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.115958562 seconds)
    (307/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.067427885 seconds)
    (308/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.216763392 seconds)
    (309/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.078579276 seconds)
  done (took 39.809457071 seconds)
done (took 40.712965188 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.104554789 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.135264012 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095452573 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135027285 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123697662 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.09173738 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118418589 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097823811 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123305799 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125525235 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097425606 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093959891 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.095906116 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120217789 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.095799032 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.135823517 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124400104 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093359099 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119767192 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086860628 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.118491156 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086112302 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112619692 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070708453 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122393306 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094123728 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.115986041 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.121128961 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086517417 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110779159 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.08954901 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117906756 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086529901 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123823102 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092522172 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119080693 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096588151 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.11996785 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.112483207 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.087173935 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.119192833 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086424144 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117808062 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094043868 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116767486 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092173218 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118976039 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099632972 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.134863849 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113387829 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095144641 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.121493967 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.09580932 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118083082 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091083326 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.12082267 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.117772933 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.111614527 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.12151525 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088870742 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.11957323 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.09395089 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116059176 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.118374398 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.094704108 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121951831 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098398253 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116247343 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.0967056 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116009151 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086926006 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.118434222 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.114143789 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.086519783 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.119907071 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.098141859 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.110777436 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.092885697 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.117879131 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.091879154 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109639036 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089613287 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112793567 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092792439 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112582509 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070552986 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.11516838 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.09318157 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110400666 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.09550575 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116123554 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093797697 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113460388 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098522496 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110572964 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.116190625 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.08712854 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.111373898 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.088549073 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.115414256 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.086179864 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113161653 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.095769363 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.112681921 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.092630279 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.123019375 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087620893 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117892262 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086520717 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110060256 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.125215503 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.096640153 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.111111066 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088871399 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.110588701 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.093502849 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110766869 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.086811799 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.111205065 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.087547721 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.117697768 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.08745289 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113851283 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.094763426 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125813977 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086744031 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.115316621 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089755274 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111468611 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092405219 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110626728 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.086870772 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112244527 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078221376 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113457023 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087419517 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118297525 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.08949415 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119258843 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.113255423 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.095365937 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.116125335 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.092587966 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.11681366 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.085899776 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.09897577 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088894398 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113633264 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.08887528 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.11169828 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.088728518 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.111525995 seconds)
done (took 16.94323859 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.091950483 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184102395 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151907568 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142552332 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.10803618 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.11138866 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122290683 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118986716 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.112969833 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143291503 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111329199 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132523313 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147797869 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086774012 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.111794126 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.090598112 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112890668 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103429399 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145119283 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133452644 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.164095895 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086700328 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147069564 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135988817 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121185931 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114567582 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112479117 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091368938 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.114602178 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103164362 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132490813 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.115217206 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.087032109 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.136054303 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104914603 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119760315 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.111195583 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.093681915 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.111850296 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.087280283 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140215113 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133511072 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092613364 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117929393 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091513195 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.11396265 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088543465 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120770004 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.12293258 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.091237067 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.126930431 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156894957 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090762377 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121919809 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.111710953 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.09794201 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122734849 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090013734 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.115683918 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.09048814 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112071342 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.090606289 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127536775 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142617321 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091760403 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121175314 seconds)
  done (took 8.635477428 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.109524423 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139591342 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.130284767 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.106182891 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112443885 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088000053 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113470674 seconds)
  done (took 1.76987279 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.093550483 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134316566 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111048792 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136837958 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.131651542 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.125361335 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122987563 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.087659158 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.130953532 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.088613018 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134164209 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.152110211 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090776254 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120795691 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137187557 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.087630047 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136627604 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.087820617 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116052554 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.136753154 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091746945 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135543303 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090606744 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113515863 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102619967 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113274003 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162696731 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093359203 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11509055 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092229171 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111809562 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.16525732 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102526809 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124978017 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113531981 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.103130376 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128602836 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086709862 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.131029414 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093910737 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128111672 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.11492988 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.089195829 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.111994642 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.092828938 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.12434825 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.09010209 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.114875261 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091965893 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133544867 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089441767 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127369106 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.113884956 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.092725819 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.115576495 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094865216 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124127178 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.09037526 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134377454 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091164408 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.130637571 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.130745803 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.102349312 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130375923 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091874465 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.130079729 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.128275354 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.090812762 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115876208 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.091571991 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.131156784 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.08669606 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116011546 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099575939 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115286601 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.138735406 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.111980191 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115605774 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.099611384 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114274637 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.088771229 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114601136 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.137540811 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091755378 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114687742 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.092973219 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11691722 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.087070318 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.113274951 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.092455414 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.11201039 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.089565421 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.117760779 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.089619745 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.11676937 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.105797623 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114546462 seconds)
  done (took 11.839898324 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.095554254 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115547369 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091458493 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114675223 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.089649602 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115439217 seconds)
  done (took 1.606966413 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.118998708 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118208455 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104068379 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120053037 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.15711741 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.129963179 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.104440725 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123664351 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107496557 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127879005 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129540378 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104853347 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.134676936 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122530139 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103602864 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121500058 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.129525098 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099180727 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128370218 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096131522 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136593521 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121751566 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096970888 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.13217883 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118873483 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.094830689 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125642282 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102839892 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127743166 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124012802 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096107128 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119504336 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.121439658 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.097693322 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.129600608 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095748074 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121639711 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120192027 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100243188 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119028156 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.130447634 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097492923 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127086115 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093701405 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123848401 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.122532019 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.093870954 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126281399 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.129185423 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.094478148 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120289945 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095779606 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119696099 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.119083109 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.09644901 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12412111 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094724596 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.12958576 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.12163828 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.09629228 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118738449 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.092991242 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122712074 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119687277 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104359581 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119365482 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.121850135 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096431843 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123000681 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095701908 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120688344 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.118663096 seconds)
  done (took 9.278717024 seconds)
done (took 34.093334796 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.698657893 seconds)
  done (took 1.676337989 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.725633227 seconds)
  done (took 1.707858151 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.179984686 seconds)
  done (took 18.162342193 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.505538326 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.583578917 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.814364434 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179216639 seconds)
  done (took 3.064457964 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.94440976 seconds)
  done (took 1.946055641 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.249468475 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.230755576 seconds)
  done (took 1.466773975 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.778594356 seconds)
  done (took 1.771577886 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.350487862 seconds)
  done (took 2.338311265 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.335992208 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.18442351 seconds)
  done (took 1.512339244 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.561055522 seconds)
  done (took 1.554670269 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.801592154 seconds)
  done (took 7.7995167 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.264699652 seconds)
  done (took 1.274104486 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.305879051 seconds)
  done (took 1.302142387 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.555361841 seconds)
  done (took 4.554155107 seconds)
done (took 51.115199474 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.104368249 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127724379 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101548195 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124315189 seconds)
  done (took 1.451469795 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.106822155 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121424501 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100000618 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120307855 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126142254 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095076875 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123877396 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100006253 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120347186 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096433455 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120541187 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120143038 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098352033 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122096993 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093449496 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124460388 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099162925 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121113246 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.123643428 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096131432 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118121157 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.09795909 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124265759 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093805286 seconds)
  done (took 3.665696966 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.105449778 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.120183351 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097185732 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118360728 seconds)
  done (took 1.449989058 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.10598297 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.141889876 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.139228467 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.099658851 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.143545692 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.135705486 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.092253986 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117091197 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.093716654 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126336272 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090030872 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.14915146 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.138013449 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.100615348 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.127609944 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.088506101 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.116952718 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.137549494 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.100214165 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126624044 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.092679444 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124812698 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090721466 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.139658602 seconds)
  done (took 3.820556216 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.163005786 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.150704785 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139041431 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.094659957 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.154421213 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.14096888 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.090388045 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141006208 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087251263 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.130048509 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118452858 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.132777274 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.128576262 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088143183 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113902678 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.11316087 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.101646605 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129254478 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091466896 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.144710283 seconds)
  done (took 3.4617256 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.103522164 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117669107 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089436707 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117036094 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099288191 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121182459 seconds)
  done (took 1.656006016 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.096861134 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114602173 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089612557 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.11451003 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094535079 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115160588 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088816726 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115092127 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.08950716 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115177908 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089800588 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114510456 seconds)
  done (took 2.245967653 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.46727127 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.092831244 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121129701 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.112216772 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.096744436 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.115395787 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.102874123 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.1190029 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.14069788 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088647832 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115873619 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091640825 seconds)
  done (took 2.671577972 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241382602 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125604414 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.290673147 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189825484 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158850005 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171402236 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152276468 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165356067 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.198624794 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157308983 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231714474 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19664564 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151805749 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190943701 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138178947 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.1445819 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1983221 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244718539 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154236609 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204146737 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226862817 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165449048 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178691229 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151706544 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137323939 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169005942 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.094865069 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129717381 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234608944 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178728268 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188442153 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162268869 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146428042 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238270805 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250585786 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196165387 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213089676 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10989373 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.169568006 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.167143509 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265205109 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111254456 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233856725 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157609973 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131218886 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193221468 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167635223 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.173123395 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.149543083 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13883042 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19709773 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239252032 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.191499461 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138535374 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160047829 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160518156 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.168192981 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151359319 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250738019 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198389901 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203831323 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.093809138 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146890559 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19142842 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179843777 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.165901581 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.208122414 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146292651 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193022993 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187116915 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164433452 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217168512 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.183741883 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137752181 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170403787 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174556629 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170647968 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258121455 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177827594 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.121443584 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166806814 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14922453 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104821963 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.195346388 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1246712 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213071218 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150568942 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.135058325 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163344827 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159952998 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160241373 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199151481 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218932976 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119803725 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.110594875 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156887946 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.12821645 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214581405 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138932007 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157551879 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159875473 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.102764715 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201400805 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097517262 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176204073 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.117419188 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176390702 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183455972 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.126600974 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157010332 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151106423 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.124243947 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204674132 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197657319 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140233465 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106634263 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233382045 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177085827 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.150427766 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178373341 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.200712836 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.14313904 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148816623 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199258823 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244957829 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139348448 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204025802 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155051257 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135293562 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.134233632 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17895404 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154688503 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161337019 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105675416 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.207828634 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20926929 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.124700929 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110435438 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213884514 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106053573 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131993611 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161453711 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148044511 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.138579405 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.120079979 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.15171666 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208406328 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178917099 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153349707 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167054144 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151608388 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25238754 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140957149 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.122901021 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148056328 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120223108 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.193469197 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196582969 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131327722 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229642618 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172044413 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156939916 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169887894 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107223142 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177177011 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130760083 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.093799371 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222622889 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166825219 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163337817 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.196205079 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154563231 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.181183177 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.207636218 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173346189 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174006323 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.16531143 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159347909 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.138198553 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130920755 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190822526 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.096244538 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.143166222 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.134825193 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156471718 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114959455 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133334547 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225373419 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167996651 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14841971 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130416582 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148267646 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181356472 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.128582287 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175556318 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.175837974 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146098189 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.222177615 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19260212 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186244847 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144676725 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234472081 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.094580204 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12563061 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.1426884 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170535654 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106874576 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135652504 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165896087 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17961988 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210604823 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175997272 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164119073 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177485258 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189436913 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.094826858 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.168932572 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210422812 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174498001 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.161197048 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138395713 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151056139 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17611104 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156246155 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256290099 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166557332 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176554597 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235988564 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.149037273 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10452314 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150924328 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18488604 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154258269 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176421086 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146926125 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143432563 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161102809 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.132068072 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161453543 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183596321 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163134839 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216421088 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.122071187 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213743832 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101145279 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19258942 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130295048 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164111723 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.109551632 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174623963 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229317469 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119626499 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196730984 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191939263 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130775592 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.148872538 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240268653 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192894834 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138487219 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157982098 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159401624 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163790154 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171381939 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177250937 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158774831 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188946935 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156960088 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136376146 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139879867 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149359798 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123787808 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.132645942 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148383019 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.174647607 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139219148 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187661387 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160661914 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158849195 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169723867 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150812248 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.144397046 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150362697 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216117906 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174229103 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241440519 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.149487023 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179014673 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20493029 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126934087 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131302855 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.10637652 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177288908 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136315424 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187879706 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.1481103 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157429352 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179350643 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21861622 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111966461 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.119661948 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156040248 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173124842 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164701238 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15158071 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.158083283 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206205319 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.142137401 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10449893 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1725445 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15776709 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147398646 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195396564 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.107841531 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121133391 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128161442 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133120044 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164045969 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205313469 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136451732 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.181411636 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16994169 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167766483 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164331245 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149762292 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121870733 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165480236 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229351522 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184904641 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.132296197 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156276755 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175425876 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19470182 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159725329 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.140833418 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202430632 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220492564 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.197942954 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.142819846 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16783846 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166733354 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156662741 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184507183 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135807866 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204797061 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135988583 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224840638 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152881853 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141874477 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175275171 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.120973234 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141152269 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21464105 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173089336 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107277806 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133573109 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167799678 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174983869 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154936428 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.127947486 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181432994 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.125753196 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190374969 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259677941 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132828286 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153827303 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119228855 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135331425 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156829106 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158344155 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139900675 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.139444941 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229146308 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.134151371 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190503082 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228608774 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16926587 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173742789 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14539194 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.692568115 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.101928715 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220616714 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153248545 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206406188 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150157265 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171942647 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16039612 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168058894 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194051217 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158469965 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.230963842 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220809388 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.177927738 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131981083 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15808719 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161832249 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.14528524 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124055357 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165938025 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160098332 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.152088296 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.203786231 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169222355 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.107106074 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14144588 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196704626 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154997214 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213249373 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177754397 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110764283 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171376675 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211563773 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105561894 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.207042374 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205384143 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143199486 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150892716 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133762953 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.155006612 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230736732 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.124850053 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198788357 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201492915 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157618214 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166023808 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147901673 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189321251 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157316822 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176973551 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145299167 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.157953315 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155582092 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137079459 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.102998168 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155518874 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165506497 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.14849562 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159225062 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.162015245 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192476115 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.096003513 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146165896 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155857707 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187732258 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242150516 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.136001946 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107393204 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161870506 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151106223 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.173252273 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175987023 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.13479401 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135178156 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.136253819 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.13134353 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.138998275 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127670648 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153994493 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164213096 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234078323 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.10853244 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.278051842 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138884982 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154063933 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.08900945 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.13120678 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15032086 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145510741 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156259882 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150553894 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231059494 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.146086331 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.131632322 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147992936 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.097902198 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136499279 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163615928 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165142085 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175159787 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144115789 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081232961 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157406817 seconds)
  done (took 80.576916625 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.167280225 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.130403853 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.145742083 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201449388 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175960029 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.267851315 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210888667 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.252113949 seconds)
  done (took 2.638921401 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.098995803 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.144998763 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.152307985 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133463872 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.09046223 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119145779 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.329579855 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132268512 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.089968898 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.14041698 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.146816581 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.118402046 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.505899861 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.117298576 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.117613235 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.08250657 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.115671043 seconds)
  done (took 3.718136574 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.466584113 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.712012037 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.47771169 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.123539142 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.156016143 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.133062987 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.758315701 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.208939569 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094270742 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.485316636 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.768893258 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.185833904 seconds)
  done (took 18.660164305 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.104487023 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.120818955 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.107274992 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.134933275 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.09615508 seconds)
  done (took 1.654607107 seconds)
done (took 128.667430504 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.109448695 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.404501897 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072010375 seconds)
  done (took 1.603959632 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.11252075 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136961992 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108562018 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.135996303 seconds)
  done (took 1.599166897 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.103385307 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127208274 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109120823 seconds)
  done (took 1.436780971 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.32210513 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.190278129 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.141835548 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.112684543 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129404842 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.101769708 seconds)
  done (took 1.437170135 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.104309883 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127057674 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097320438 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129434806 seconds)
  done (took 1.557568716 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.100136654 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071169226 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101359069 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075168194 seconds)
  done (took 1.440196755 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.119812337 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131016186 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103978926 seconds)
  done (took 1.454700779 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.135843696 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.138663147 seconds)
  done (took 1.375851923 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.110539293 seconds)
  done (took 1.203419626 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.122823158 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.168815585 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.188518533 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.164052244 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.22670717 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.164953748 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.141957925 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.113570098 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.129890637 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.143909923 seconds)
  done (took 2.66734573 seconds)
done (took 17.636276443 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.109464542 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.513523389 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413496744 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117099463 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.72155899 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.381228329 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.032184735 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146510222 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165251115 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092830095 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139408713 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.671633771 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.026133171 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.473442947 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.983057225 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.371048605 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.704413988 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093368343 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120224195 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093574604 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.016518302 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091691483 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121754264 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092326104 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.701653685 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425765366 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094771157 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.370975826 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092203794 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126943147 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.410714235 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094307557 seconds)
  done (took 17.10058705 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.100532882 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173856411 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098719159 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137172301 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123464117 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094278481 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124336636 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09347284 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179793627 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122743223 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111492534 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121252629 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126685541 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094690427 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142229988 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092071507 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124985266 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120811307 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092757394 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12216289 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.110868395 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120151562 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093634779 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122126872 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093339254 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134973523 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123899537 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.092502894 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120340138 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099135602 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128125313 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094362993 seconds)
  done (took 4.837288255 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.147208826 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183653515 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128820911 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126838939 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168828635 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124554557 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199394263 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147356889 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155065179 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123163598 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139986928 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092805264 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157090315 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.123195503 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115143583 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121887974 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09736383 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122098746 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092869397 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123046963 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.14082337 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09283009 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122524391 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094522494 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.124005655 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136693393 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095650117 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122392871 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093275304 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127329127 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.09995761 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124187988 seconds)
  done (took 5.175720643 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.102650554 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.128996937 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109558831 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138856282 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095482598 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126693415 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097863967 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124986729 seconds)
  done (took 2.034846832 seconds)
done (took 30.24302515 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.108641461 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.122898301 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.098100669 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135055912 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.098375394 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132320253 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.09168724 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.129032112 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.099997318 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.126398687 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.130270043 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092054625 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.125156282 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092070629 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.12886619 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.092775611 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132476897 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.096171064 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.133679022 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.133582004 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094094041 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.128473055 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.098479937 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132804324 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104220604 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.132748376 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.134196278 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.09776378 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122636959 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095980704 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124544394 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103654001 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.12204198 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.103137162 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.12241082 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.093229522 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.121679641 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.09243786 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133122444 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.129523202 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.095847985 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.130156343 seconds)
  done (took 5.911228656 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.113346753 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.14020398 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104609267 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.08245064 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117130747 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081626967 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137962067 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079382013 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110933882 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.10800838 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.077949682 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106814718 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078608295 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102941384 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077901736 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075899796 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109825662 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076024939 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076688239 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106667393 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.07999626 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073239452 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108620674 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079111184 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.104884809 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.08201878 seconds)
  done (took 3.606187063 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.105432657 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135768359 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112426737 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184499451 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162696131 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.10054452 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132412435 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.141370964 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108267316 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120626626 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096159827 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149797247 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.11095471 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128869231 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092164068 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136556112 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135970125 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093581911 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128930296 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113183443 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139914568 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103046875 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.142136816 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133673827 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.091819335 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123258495 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096056672 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135338123 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097711575 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.130840415 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.126526605 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.095406813 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122844073 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104740469 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.125722209 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094246583 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141703213 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131302637 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.100735209 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.122590229 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.09554788 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121734081 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.11339952 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.167040661 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.120582205 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.099309506 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.129320715 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.102712732 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121654343 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110594263 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131494905 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092519017 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125674448 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091967725 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121472095 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136629585 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.093851854 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.124848271 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.102206001 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.124943889 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.104877256 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.126003694 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108293269 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121530337 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.129104629 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.09187316 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.122189923 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.091885809 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.143984936 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094291244 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.164370695 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.122871925 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.093742645 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.131279368 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.100383395 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127334901 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093128463 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137727394 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101726231 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125120284 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.130213105 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.095939333 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.124257041 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.111894208 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.12493135 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.094401588 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.123304955 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.098929884 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.12453919 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093122391 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136639769 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.122205197 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.096010201 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.139510462 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.093482142 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.123219811 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.098703702 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.128025061 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.091873271 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135224174 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.128134606 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.093582016 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.132077781 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.092984726 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.125014098 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.102650641 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.126950734 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091411207 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.12692864 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.128395706 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.093262523 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.124280341 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.09537194 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.1236542 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.103096827 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128661691 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.097254102 seconds)
  done (took 14.83495728 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.232371369 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.225267445 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.125448218 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.209803067 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.104012704 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.134811705 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.211356067 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.155499599 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.092629973 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.124406684 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.093360399 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.162859957 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.155790199 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.166822935 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.104137264 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.120857265 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.141923059 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.134566845 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.213730276 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.206807922 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.14463052 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.131459975 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.095926878 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.124713562 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.095511369 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.132176939 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.141091295 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.105456182 seconds)
  done (took 5.220951968 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.113431274 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155839168 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098404241 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144570623 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.148235439 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093384258 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.127472641 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094434014 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.134282237 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135580918 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092915751 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129202968 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100308332 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.13256797 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.124199161 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102916778 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.131735787 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094769094 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125702362 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097587172 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.129186985 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.131327084 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.096220031 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.121733566 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.099427179 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120783958 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086199458 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.140790808 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122370809 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115160199 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121016298 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.099690922 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.133014831 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093805309 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.12241978 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.09479302 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.12516406 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095914079 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.123908343 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091545982 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.121152572 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077484651 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.12218954 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.13695411 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.098583229 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.109641941 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.099519297 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.129254188 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.098847844 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120561128 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.095455033 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125513 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096508405 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130156998 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.098211471 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.12888913 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096698608 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116607693 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.09989337 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.12554793 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085335746 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121518271 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098062375 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118299873 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101363556 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127762455 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.093315044 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125517845 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097880453 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129174106 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.126209232 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.095925359 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.120737449 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.097064082 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.127871831 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.098416323 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.126382693 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.091864258 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.123448661 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.093655419 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.105925821 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.093063977 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.104134702 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.096595619 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.121688115 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.092236369 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.125345516 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.101247795 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137932497 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095149071 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.130277324 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.124781772 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.092851613 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.126284852 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.083700938 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.126035916 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.108820406 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141730364 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093687475 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122464392 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.136957318 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.099181281 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.123006587 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.077454648 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.130828947 seconds)
  done (took 13.000993673 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.12319563 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.149683038 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095624095 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.137662115 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.15032199 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.116964302 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.130958141 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.099812671 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.126237274 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.111548058 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.124156755 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.101768543 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.127197056 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.133053424 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.116488029 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.132208322 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.095678397 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.133151166 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.101738588 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.159861589 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.137495863 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.10889754 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.13501691 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.094696042 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.12907305 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.105717267 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.15128716 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.134485083 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.102776145 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.137502961 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.104556386 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.149891344 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.109748502 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.12754537 seconds)
  done (took 5.329101789 seconds)
done (took 49.013499821 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.23532802 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.448849497 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.207190045 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.105530511 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.229392066 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.247599692 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.213347537 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.209342396 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.762640527 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.206779683 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.452357848 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.887126424 seconds)
done (took 60.342521481 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.286814015 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.344418929 seconds)
    (2/2) benchmarking "String"...
    done (took 1.478056182 seconds)
  done (took 3.95968702 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.567197663 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.141178165 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.468949096 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.208303064 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.209447763 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.504269463 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.878731447 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.561619496 seconds)
  done (took 28.10732898 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.208860261 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.613612716 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.921691293 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.921732788 seconds)
  done (took 18.800468427 seconds)
done (took 60.856300445 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.211730953 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.232058189 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.2193122 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.186412024 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.319588628 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.241414611 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.466560782 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.40650651 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.20823701 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.185754246 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.225832654 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.209533274 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.221178533 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.449115136 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.2080451 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.209030324 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.207433885 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.626980524 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.629310526 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.221343783 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.228452497 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.263092029 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.215858542 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.217423171 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.254058301 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.212669107 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.211511852 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.220866606 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.828187182 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.215963835 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.216242892 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.671485987 seconds)
  done (took 191.776932177 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.210705482 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.253130396 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.334366627 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.269410577 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.690103239 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.412392692 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.360947015 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.75670178 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.231257722 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.219509314 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.462765178 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.216088391 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.541832635 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.231734597 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.223963952 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.319270416 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.570679351 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.530434858 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.23465389 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.493536984 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.225549903 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.516870328 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.395227851 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.420101372 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.251402245 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.265659453 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.218384041 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.209740979 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.39835506 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.497132154 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.224602596 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.232132722 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.836480109 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.073755522 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.22938646 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.213014116 seconds)
  done (took 150.909224711 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.51401991 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.615077492 seconds)
    (2/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.209984985 seconds)
    (3/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.213748221 seconds)
    (4/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.21422428 seconds)
    (5/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.214718111 seconds)
    (6/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.247233366 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.214506509 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.800686679 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.80224865 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.716702682 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.399231021 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.275167242 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.473642142 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.208873428 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.31191114 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.223159714 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.210558435 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.229864045 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.25792143 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.210811635 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.215136084 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.803199486 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.230839554 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.359442848 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.216338224 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.215771816 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.248626073 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.608890942 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.209797246 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.249030641 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.871313147 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.535841021 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.261847612 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.209991515 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.54046842 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.322573977 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.212489954 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.248787892 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.214912888 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.491685219 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.216011373 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.216427816 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.219151175 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.821143955 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.211270648 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.803969655 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.218140683 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.137021885 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.211700703 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.217235141 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.587683465 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.713981943 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.225836921 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.215819202 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.219348688 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.21734832 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.216207117 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.250985766 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.517779696 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.317934207 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.234872362 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.221730238 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.251878428 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.2185578 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.303791974 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.212681301 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.759378677 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.292772465 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.328164037 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.805182147 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.218656687 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.21810896 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.315036406 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.339308475 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.215703076 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.217641658 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.21794988 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.219823995 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.327484282 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.216272997 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.641927451 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.220169189 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.220279955 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.278409162 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.318129219 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.215021898 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.558302886 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.214654409 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.218083266 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.944431739 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.310399064 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.213474598 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.218249707 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.220191316 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.639765122 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.802335257 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.447536006 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.214630707 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.54468931 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.217748144 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.660351521 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.777760585 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.83473028 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.215794243 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.331782903 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.221601885 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.221082991 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.217190129 seconds)
    (109/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.277976337 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.244894178 seconds)
    (111/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.234634157 seconds)
    (112/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.220867054 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.22151533 seconds)
    (114/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.221179688 seconds)
  done (took 347.914287189 seconds)
done (took 693.24860477 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.927308002 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.868198308 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.005491331 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.885772867 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.868038314 seconds)
  done (took 10.698117669 seconds)
done (took 11.840453895 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.412171099 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.412698162 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.282630047 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.413771009 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.248395955 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.432331573 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.38938691 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.239103672 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.323320494 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.304249437 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.322541098 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.274886434 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.24789781 seconds)
  done (took 18.446549995 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.55064934 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.533125713 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.284341047 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.553378819 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.261664295 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.544635173 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.42278465 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.4485974 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.432988444 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.252786299 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.234756227 seconds)
  done (took 16.665998783 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.550732708 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.543514213 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.288174578 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.553501535 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.262708688 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.547931879 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.427344929 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.443796713 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.4344591 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.25198417 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.233986634 seconds)
  done (took 16.685235637 seconds)
done (took 52.94221237 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.230311033 seconds)
  done (took 2.376477002 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.265199135 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.427654209 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.24806849 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.235554077 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.232084364 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.232733353 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.236651369 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.23167641 seconds)
  done (took 11.258003075 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.228970872 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.229845241 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.230376868 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.228788515 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.228905179 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.22956987 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.23119651 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.22697008 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.227413512 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.227432629 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.226379583 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.228186204 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.230587505 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.227160816 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.229427454 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.229842714 seconds)
  done (took 20.808214898 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.228401751 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.228416769 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.229692336 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.231310082 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.229638454 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.229656544 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.231096903 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.230601035 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.230000725 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.230539506 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.229363284 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.229468314 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.230431143 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.229991894 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.230855125 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.230133612 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.229798635 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.231543982 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.234385021 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.229310045 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.23107649 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.232033405 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.229487891 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.230891504 seconds)
  done (took 30.680043209 seconds)
done (took 66.268670608 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.390299862 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.970712295 seconds)
  done (took 9.509343512 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.232263619 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.232672857 seconds)
  done (took 3.615547631 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.232585089 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.23417384 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.234211023 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.235160798 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.232892723 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.235961335 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.233062401 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.23297107 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.234986208 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.235521075 seconds)
  done (took 13.492173851 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.236536787 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.23650899 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.231520034 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.236412098 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.235595713 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.233169534 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.236453138 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.236080521 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.233459772 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.233888762 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.235907383 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.233275849 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.233478001 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.233646149 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.235268564 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.232920428 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.231079581 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.233577708 seconds)
  done (took 23.371148974 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.234903371 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.237895487 seconds)
  done (took 3.624841259 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.232301215 seconds)
    (2/7) benchmarking "second"...
    done (took 1.232182518 seconds)
    (3/7) benchmarking "month"...
    done (took 1.236111955 seconds)
    (4/7) benchmarking "year"...
    done (took 1.233250582 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.233474653 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.233033126 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.236066886 seconds)
  done (took 9.789131965 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.238106169 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.412149742 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.491053209 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.825401037 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.236955651 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.241193717 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.098116796 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.238739781 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.241587018 seconds)
  done (took 14.176259225 seconds)
done (took 78.726876954 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.274255933 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.244062543 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.409328884 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.239781682 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.243371576 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.572724344 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.239321851 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.358382559 seconds)
done (took 37.734469807 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.241116066 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.023181139 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.987884052 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.241985726 seconds)
  done (took 11.406496871 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.223275469 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.197198304 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.227868514 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.276420479 seconds)
  done (took 18.076741591 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.298211687 seconds)
    (2/2) benchmarking "read"...
    done (took 1.561185661 seconds)
  done (took 5.014453009 seconds)
done (took 41.889609397 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.237254832 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.23901547 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.236752566 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.23793197 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.235443672 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.237648457 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.235553899 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.235058554 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.237915018 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.238264449 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.238489518 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.238335752 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.239346126 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239246538 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.235901065 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.234531322 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.238717829 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.235818558 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.236687061 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.235942193 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.23680467 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.237410153 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.236641443 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.237096698 seconds)
  done (took 30.846163473 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.243165657 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.23969789 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.242758668 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.242462226 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.238684935 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.241807194 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.241077951 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.23799198 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.24230418 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.242386611 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.241167463 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.238493983 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.240593426 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.239443062 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.240354913 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.238839767 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.241478274 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.241020919 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.242306656 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.238794662 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.241436427 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.237520748 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.237967096 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.240761607 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.23786297 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.238515207 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.243687759 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.238971269 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.240642497 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.238146794 seconds)
  done (took 38.369559167 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.247374295 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.247285274 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.240305542 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.241641314 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.240523386 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.2389666 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.239660609 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.238584369 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.239212833 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.239355317 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.239933921 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.239636338 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.24004395 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.238692186 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.241154202 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.240313124 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.240505141 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.240827187 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.239383632 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.240222658 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.238082913 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.24074468 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.24077521 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.240469658 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.241202026 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.238761658 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.24089954 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.240620835 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.240187434 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.238387174 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.241245833 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.2389363 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.238647758 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.23971425 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.236800114 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.240320427 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.245156348 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.24826201 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.240205216 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.239504855 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.239783308 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.240393956 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.240310915 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.241293623 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.239460054 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.238617844 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.240324127 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.239544769 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.240399903 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.239144021 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.238106374 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.242875677 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.241842856 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.240799186 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.242174681 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.241060575 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.2406306 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.240731486 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.241240667 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.240697655 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.239193481 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.240177729 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.240238506 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.240374693 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.240712904 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.239307618 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.241509586 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.240842796 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.240328854 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.239600684 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.240564965 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.241502895 seconds)
  done (took 90.474924134 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.242674154 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.240573737 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.23806059 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.238180909 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.238687528 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.241568526 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.238663964 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239793623 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.237878094 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.241446837 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240278945 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.241297466 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238479815 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.241471966 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.241871365 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.237423675 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.240833118 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.239053409 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.242149091 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.242193232 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.242000337 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.238281608 seconds)
  done (took 28.437018622 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.242754605 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.241256522 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.240028036 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.240680951 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.239902765 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.241157545 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.246525799 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.243045805 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.242077815 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.240202062 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.236662897 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.243071475 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.239430548 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.236135165 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.239570911 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.239327202 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.241628091 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.241378426 seconds)
  done (took 23.492902385 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.237934637 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.240655745 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.24009652 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.239777849 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.239873829 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.243176501 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.239442711 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.242827343 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.242559823 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.240500106 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.241644096 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.243208461 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.243405466 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.241019113 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.244399599 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.24129248 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.243006144 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.242359316 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.241724345 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.240867377 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.240842673 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.24337578 seconds)
  done (took 28.473826206 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.242758766 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.245954088 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.244217586 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.241652478 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.240418814 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.244202205 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.244020023 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.243350766 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.246505687 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.244264939 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.245024806 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.245999151 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.243630644 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.243976542 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.243952101 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.244687055 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.244757735 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.243298613 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.248005883 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.244579806 seconds)
  done (took 26.046840714 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.245373428 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.246339171 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.247715559 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.246137383 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.24627514 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.248669336 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.246646891 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.246145034 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.245292397 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.245664475 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.245377328 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.245472609 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.246406767 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.247648043 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.245884722 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.247437187 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.245899402 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.246447818 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.247046579 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.247238653 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.247578583 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.246416856 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.246459689 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.24778814 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.248037008 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.247332723 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.246862043 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.246853963 seconds)
  done (took 36.068190632 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.249476513 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.246122961 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.244114353 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.243670065 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.245863895 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.243832959 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.244494211 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.243211069 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.24949608 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.243861799 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.247916778 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.246386671 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.247193259 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.246397736 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.245626821 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.246707829 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.248766194 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.242832448 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.243474158 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.243349369 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.244623704 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245567466 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.246339721 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.244741145 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.245825282 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.246808056 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.244541473 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.244974872 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.246469938 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.244242845 seconds)
  done (took 38.53124975 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.264153077 seconds)
    (2/2) benchmarking "in"...
    done (took 1.263988544 seconds)
  done (took 3.689370912 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.243684302 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.246603153 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.246029251 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.244437634 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.242825952 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.247529512 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.245139007 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.244141103 seconds)
  done (took 11.123771561 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.246110489 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.246318464 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.245958494 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.246573945 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.247935058 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.246268662 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.253726159 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.264123503 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.248865115 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.246850824 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.254227556 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.255269371 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.249309944 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.249003845 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.246446046 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.249678571 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.250447352 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.246898328 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.248854861 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.247016673 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.247519735 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.249276364 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.251545842 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.247852493 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.250109303 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.258801026 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.273119601 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.249136437 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.247797053 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.25406512 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.249140734 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.246835201 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.248016247 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.24878516 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.248194398 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.249257632 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.257002438 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.270126016 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.257500885 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.267538391 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.248562141 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.244339775 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.247514609 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.250327901 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.249558068 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.247692815 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.250143535 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.246842345 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.24889084 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.251246483 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.255186552 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.24914067 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.244690897 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.253264104 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.251634247 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.257026617 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.268779179 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.252558923 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.258973709 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.260940116 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.282312881 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.271721297 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.252374458 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.249535258 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.261463506 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.274151886 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.25862491 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.267996299 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.24890484 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.250139311 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.258352628 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.282289556 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.273942194 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.250834524 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.25099019 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.251965376 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.252432501 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.251452998 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.257719068 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.272538569 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.253245632 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.250076056 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.26242599 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.273838973 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.250875745 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.251147037 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.249537569 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.250235484 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.252286104 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.262758397 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.267530346 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.249780747 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.250634924 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.253528993 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.252308947 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.250285936 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.248699765 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.252343407 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.24827597 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.251725855 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.250861252 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.256271409 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.260906917 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.250990767 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.249448845 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.255462604 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.26931677 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.250378162 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.257474985 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.254626551 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.251798853 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.251510814 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.257161249 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.24777551 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.255607839 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.260178946 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.24976528 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.253800287 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.249842871 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.250646976 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.260320083 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.278037927 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.251156461 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.251238644 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.256015964 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.265485319 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.250950279 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.253400234 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.25030754 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.248399357 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.247399933 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.252281428 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.251948826 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.251821789 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.250246539 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.252197525 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.249480281 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.25219844 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.252302035 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.251315892 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.252413342 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.254067955 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.252609256 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.254429026 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.251336881 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.251835058 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.259910033 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.266203868 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.253715608 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.25337399 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.251183717 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.254733695 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.253749419 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.250612047 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.252630333 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.25165706 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.252293157 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.255810426 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.25290725 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.254021777 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.253498638 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.253016875 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.257909307 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.252322105 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.256960212 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.252772855 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.250187242 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.253602917 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.254516036 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.251982115 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.25284008 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.250842956 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.256394069 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.262171986 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.255977667 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.253832884 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.255294733 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.255154361 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.253366718 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.254462124 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.257324513 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.263487849 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.255077714 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.260030659 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.270075519 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.254150823 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.256641968 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.254839526 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.253794627 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.253672542 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.257076157 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.263251064 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.267846062 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.27498408 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.256269806 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.259376362 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.257196628 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.260300776 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.258905669 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.255238409 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.254829812 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.254919827 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.254135441 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.255498745 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.258288023 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.256337712 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.253899841 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.255682458 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.25571676 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.255010723 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.257080179 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.257549204 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.256774871 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.253869298 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.255906454 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.25537108 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.256680146 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.255820064 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.255315996 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.253742041 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.256139224 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.257477997 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.259899946 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.253835751 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.256585435 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.257125531 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.258629961 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.25533721 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.257802713 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.259393267 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.257043422 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.263808311 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.272821237 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.257778563 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.263008139 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.272461582 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.255143283 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.258742597 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.255534249 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.252483847 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.256099157 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.265425416 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.255275373 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.255716882 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.255619923 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.257556705 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.257981531 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.263650453 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.271792198 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.257040471 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.256753313 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.25962567 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.255895385 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.257617856 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.257459825 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.258253145 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.258667847 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.259188508 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.258530219 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.256829035 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.256597632 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.256799599 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.255157347 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.260740785 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.265144531 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.260435774 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.25643975 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.261036027 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.260257792 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.26299623 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.259197189 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.2587917 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.259506836 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.271322517 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.276229527 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.265425067 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.275096134 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.25842958 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.266476415 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.27608067 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.264876035 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.259821002 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.260155202 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.258988356 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.259184145 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.257016823 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.260846319 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.261161607 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.260925433 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.261842061 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.263632486 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.259281366 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.259502693 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.258296354 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.258587916 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.258531516 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.259971727 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.262645623 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.263181155 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.264042026 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.258560258 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.261148149 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.268691387 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.279950034 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.263254068 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.260367697 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.26091293 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.260295238 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.262919126 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.261425476 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.265279238 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.269179228 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.264733469 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.270860397 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.263787302 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.271999938 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.26256809 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.265179591 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.271218695 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.260006646 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.261985317 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.261861734 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.262230757 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.270511484 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.279558827 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.263681325 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.266014233 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.262557134 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.263348917 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.263971678 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.262739123 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.261468343 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.262688987 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.272163753 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.281424152 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.267514125 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.267540799 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.261263237 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.264660186 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.264706607 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.264786053 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.26614047 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.263220701 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.263293891 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.262510954 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.26393895 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.265807243 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.264330931 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.262844132 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.262280375 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.26437182 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.27023671 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.282159528 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.268163711 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.262917251 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.270847404 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.281462685 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.27186008 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.2837499 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.264811397 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.264009712 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.263302427 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.266669016 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.265216227 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.26430881 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.264662298 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.264267297 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.268727672 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.264722637 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.266539646 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.263686494 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.265223256 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.265816753 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.274526718 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.288037565 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.264293325 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.27076419 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.262449833 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.268132554 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.270464589 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.265593843 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.264574664 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.269071616 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.276299443 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.273606785 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.265539997 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.267116293 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.265543068 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.265337005 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.265727773 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.266488282 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.266409798 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.265693301 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.267789441 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.266524862 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.268811159 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.267359429 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.267221895 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.26686386 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.26828029 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.277365709 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.28568029 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.266259307 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.266382302 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.265902922 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.267026848 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.26795688 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.266306971 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.266160574 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.268024334 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.269068065 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.273659166 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.274751967 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.270284515 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.268746174 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.267779236 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.268898355 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.269984932 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.268526182 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.267295887 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.268436576 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.269166374 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.266234672 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.269125739 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.267543625 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.268754164 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.268792789 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.268565433 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.271146157 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.275822897 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.26946042 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.266537157 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.26863825 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.269305168 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.268870623 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.269563833 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.276453929 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.290604534 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.280053154 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.278856465 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.274888131 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.270064244 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.273715913 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.27959114 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.269002024 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.270682366 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.268548508 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.271623691 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.270901686 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.273250163 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.269413629 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.275974522 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.288962174 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.269580838 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.280018299 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.289288045 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.269930784 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.273241098 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.275201167 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.270708877 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.267805242 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.271272058 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.271161733 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.27987516 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.290447644 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.272004461 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.273302352 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.270516443 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.272939264 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.275770486 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.27205863 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.271852844 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.269917241 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.27133586 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.271216852 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.272301961 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.27070048 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.271164179 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.271991237 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.275277405 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.279093382 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.268924806 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.27417635 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.271636517 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.271512672 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.274520467 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.272300434 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.270346006 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.269743444 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.273267846 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.272676039 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.272259239 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.275443459 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.272251089 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.274965169 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.273170218 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.272947489 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.275097272 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.284324237 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.280595985 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.269168778 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.272383145 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.272004299 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.274289231 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.274191964 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.274347903 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.273477999 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.275738502 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.274679589 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.272163805 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.274267652 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.276770641 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.290354141 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.292665802 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.274760205 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.273174118 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.277058541 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.273393161 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.271991235 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.274110352 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.276490334 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.276745411 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.281879897 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.274360979 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.281334655 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.292085624 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.27579768 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.280283479 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.277637088 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.282903104 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.277293341 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.274905919 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.275770351 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.279453616 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.29342648 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.276443516 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.28596805 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.307173693 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.295650696 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.276946044 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.277696228 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.276019173 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.273843637 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.277641268 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.277153017 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.27579721 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.277542367 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.278340827 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.277540819 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.282368747 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.278447383 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.278371728 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.276694782 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.27658306 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.277740756 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.274465932 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.277456266 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.277230275 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.275405432 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.27747153 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.278013858 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.277631425 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.290642578 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.302855487 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.277143431 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.278628319 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.275031718 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.281520801 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.280423527 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.289868111 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.286356776 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.278864682 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.277104786 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.280924012 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.278026298 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.273493839 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.279134328 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.279576104 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.277599657 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.275830621 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.290972011 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.300398571 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.28465584 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.279538521 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.279312275 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.279279312 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.280141462 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.281160496 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.279746341 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.280960784 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.280539693 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.283786558 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.279912021 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.278941716 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.2831097 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.286338068 seconds)
  done (took 754.824780156 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.278894906 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.278494431 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.278104803 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.277359319 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.276331224 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.279328361 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.276107797 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.278009442 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.277351584 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.275539628 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.277095816 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.278265566 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.278249818 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.278757168 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.278756597 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.278676182 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.278860795 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.278800971 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.279718462 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.277078992 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.277503237 seconds)
  done (took 28.031309094 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.281018791 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.279039455 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.280629257 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.281844277 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.280682197 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.282874662 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.280300753 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28183444 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.281538794 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.278936247 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.28370264 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283343626 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.279834413 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.280055082 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280038482 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.282316295 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.282984773 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.280226737 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.282695848 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.281135641 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.283719994 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.27993461 seconds)
  done (took 29.38210065 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.282225933 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.28370039 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.284254136 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.280819801 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.284680119 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.279922232 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.283701862 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.28421935 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.285257068 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.286594651 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.282794004 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.283757591 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.289946269 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.288997908 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.285089745 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.282945066 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.428442866 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.284503571 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.284924182 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.28625142 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.28231833 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.291629219 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.299242928 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.28181809 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.283698756 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.284267832 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.286279914 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.285119729 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.283825509 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.28718124 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.290711115 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.285508822 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.285545114 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.288229374 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.284645281 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.286615714 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.290471004 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.287518976 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.282666958 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.286842431 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.296913533 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.307936805 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.285452926 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.293026475 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.303957173 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.286472177 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.291786676 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.295344123 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.286049925 seconds)
  done (took 64.409547071 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.287327146 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.285841477 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.286245365 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.285450594 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.287810632 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.287140546 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.284831101 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.28731867 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.2845038 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.284750257 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.286786049 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.284883396 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.284194511 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.290082794 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.28671589 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.282861087 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.285933533 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.283611169 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.284879727 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.284149459 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.284264076 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.287878829 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.287141104 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.287622295 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.289286832 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.285835018 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.287674986 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.288009834 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.286084799 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.288444329 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.288401133 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.288378957 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.288599599 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.287097284 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.285593715 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.2891764 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.288290206 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.286889503 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.288340657 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.287191624 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.289019788 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.287869909 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.288246779 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.28858553 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.284710316 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.286583735 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.286128576 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.284999788 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.285652394 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.289310593 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.287705654 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.286847131 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.290059388 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.286338252 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.287730901 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.290357032 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.288061818 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.286038019 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.290755772 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.287587891 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.288882588 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.29085809 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.288203835 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.289563631 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.289407774 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.285595944 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.288027674 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.291992508 seconds)
  done (took 88.731994419 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.290676759 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.290823486 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.289662844 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.291321309 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.291374827 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.291937993 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.292877208 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.291528542 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.291818744 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.291686721 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.292424672 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.291967051 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.291891007 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.293074132 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.292484858 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.292426643 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.290672845 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.291649278 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.29199083 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.292348103 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.291570107 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.292708643 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.294734997 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.296150577 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.292811628 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.294165135 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.294216802 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.294513938 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.292731254 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.292302275 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.294644187 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.292918895 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.291603116 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.292751707 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.291659952 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.29262218 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.294012093 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.293009989 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.291934207 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.295152784 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.292595642 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.292963739 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.293673758 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.295054637 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.294703671 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.292114465 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.294480245 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.295531155 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.292982616 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.296161744 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.292206389 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.296416536 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.294385577 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.294970186 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.296551468 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.29490238 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.294851718 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.29458374 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.295549137 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.293693342 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.295991555 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.294110541 seconds)
  done (took 81.382450785 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.29673332 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.293080705 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.291046733 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.292123708 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.294977519 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.293669089 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.295638903 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.296597214 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.295740593 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.295076243 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.298298682 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.293678642 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.294339629 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294400631 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.295257823 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.29261059 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.294528612 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.294692792 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.295673367 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.294147967 seconds)
  done (took 27.097630228 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.295471557 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.298645446 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.295086911 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.293921011 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.297251481 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.293745579 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.297163535 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.295056478 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29489488 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297210251 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.29847231 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.297978254 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293728403 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.29481745 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.29714225 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.293959678 seconds)
  done (took 21.942087374 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.294594274 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.30066971 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.299515712 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.29818966 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.296185892 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.29392814 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.298204964 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.296330619 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.297621949 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.299401808 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.299360477 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.297654243 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.299434252 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.29566854 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.294605989 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.299205938 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.296128646 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.296582654 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.300057801 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.299414414 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.295457631 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.297243784 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.300389042 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.298244715 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.298274272 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.297053467 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.297210784 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.297314156 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.298039674 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.298905614 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.296982768 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.297818288 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.297135773 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.296151771 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.299604903 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.297629821 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.30139058 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.300353473 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.300379684 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.301814169 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.300574627 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.295820445 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.300351489 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.300935458 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.298989951 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.30105886 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.299121379 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.297811712 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.299590439 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.298506213 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.300372076 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.299948361 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.301491357 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.301669637 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.302090009 seconds)
  done (took 72.628439712 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.301172674 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.301695322 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.29857241 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.301138824 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.301038264 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.299921626 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.300921345 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.299102226 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.29882182 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.303044527 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.300740137 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.301253885 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.301527328 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.302115535 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.303217636 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.303235864 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.299172625 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.302783049 seconds)
  done (took 24.631714775 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.300486169 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.300873314 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.3032975 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.29966903 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.300064266 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.306244417 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.300755241 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.304447803 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.302417467 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.300544074 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.301167867 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.303120335 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.303831467 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.304212778 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.302709931 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.300031143 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.305542577 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.303070723 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.299327358 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.30060146 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.306311396 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.303454795 seconds)
  done (took 29.865676156 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.303465611 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.302339599 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.303367172 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.31755921 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.320768207 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.326664964 seconds)
  done (took 9.087657704 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310554504 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302946567 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.300014535 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303391156 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305509882 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301390492 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300025303 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301989315 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304024158 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302122817 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301693632 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303181588 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304261312 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30081195 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302720189 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304038787 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298942884 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300734045 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303634073 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304699141 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302915506 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304697694 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30243913 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301177773 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300567658 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303310104 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303990266 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303210175 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300327354 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302826559 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303091048 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301482443 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30481871 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301257899 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304862486 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304495819 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302269928 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304234394 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305771679 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301276553 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.304744587 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305551466 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304161805 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304724562 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305536883 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303445874 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303052563 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302005599 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301183886 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306621928 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30585954 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301214072 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307503185 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307365545 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305920806 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306102097 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302558016 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304908494 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306786563 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304694636 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304230984 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307272601 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302878498 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305238756 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307966003 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304865661 seconds)
  done (took 87.280540112 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303505678 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.304097985 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303481366 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305288852 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305041856 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304019455 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304741826 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305805975 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305250519 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305129565 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307182624 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305770077 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306881106 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308042938 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304982463 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304859219 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304623378 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306269867 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308050934 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309542048 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305431298 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308439644 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307351262 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303722097 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308257106 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309451517 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303927493 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305685413 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305092907 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308440389 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30484409 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303285092 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304282114 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.305709019 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302408064 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304201459 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304362287 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308247928 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306064613 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308108511 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307460523 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310314984 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305803969 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305305695 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310584238 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307606781 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304383456 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306570785 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304600691 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308479375 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307395635 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309432778 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307321748 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307790778 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30647422 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308841245 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30712353 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308483853 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30892649 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311057547 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303784052 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308266103 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30934222 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307299402 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306610981 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308203342 seconds)
  done (took 87.44773251 seconds)
done (took 1763.451733108 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.341798376 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.384585118 seconds)
  done (took 13.945240444 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.470693443 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.421264933 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.30660225 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.327598439 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.301577397 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.328140317 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.307712022 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.301084241 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.307589805 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.307492661 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.306605785 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.491526293 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.361203423 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.301390558 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.30669364 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.398939991 seconds)
  done (took 42.773403142 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.334254589 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.314396396 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.421137922 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.328113394 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.333471511 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.48960617 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.361882904 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.311067239 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.476565411 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.349846653 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.813176465 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.328275854 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.311872628 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.384412282 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.323102472 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.488603648 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.552800213 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.821386436 seconds)
  done (took 29.962168569 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.740052439 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.320744555 seconds)
  done (took 9.279015737 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.344637699 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.351296157 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.347119994 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.328178021 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.320915509 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.344051111 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.325359211 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.336371343 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.333160861 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.341254738 seconds)
  done (took 64.601591409 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.32871602 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.312863036 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.31261487 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.310265895 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.301260793 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.303510616 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.3086685 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.321758243 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.807961004 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.430481618 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.329239061 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.319259869 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.327218662 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.311775047 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.309959445 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.346086409 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.486917703 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.327369491 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.308198664 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.31596329 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.30986325 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.447148403 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.351427989 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.309364519 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.432077932 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.824509883 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.31449455 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.318716227 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.470138749 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.32791134 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.311460638 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.311781103 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.31259367 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.871838938 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.747240408 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.330329779 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.332061425 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.320568748 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.309727274 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.51016608 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.328264579 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.318637816 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.320200045 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.723545414 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.463909944 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.419467978 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.51855322 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.313658835 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.314749163 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.372229919 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.31330198 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.313874054 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.341003801 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.069781691 seconds)
  done (took 109.935896488 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.319256643 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.787529406 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.475249129 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.323863933 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.161022516 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.111575901 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.3218795 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.58569485 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.354212483 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.304712419 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.648347096 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.80278765 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.327508875 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.371522128 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.889488968 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.386934866 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.30610146 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.099314612 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.321055884 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.306124124 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.717918994 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.322228232 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.318949327 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.581770602 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.344253505 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.77148594 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.741087971 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.718843558 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.325710264 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.304356773 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.767970204 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.327710519 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.345344864 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.302280468 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.5793284 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.656417384 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.640719289 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.323264573 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.330835682 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.303864977 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.325431731 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.759627367 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.653116795 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.318535053 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.302772039 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.769498315 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.319412017 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.313958138 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.31268819 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.516757906 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.224115871 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.31049316 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.731339937 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.304467057 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.566189466 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.400978192 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.355582737 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.795193523 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.319171875 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.414577625 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.371075198 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.309944953 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.308462846 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.311115667 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.304927113 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.643898479 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.651744703 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.310395787 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.650348065 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.778198717 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.323030421 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.837674714 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.251279356 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.335331784 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.348766876 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.310734883 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.04460387 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.815668673 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.38261814 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.305745564 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.646033958 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.327158496 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.626623005 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.322260093 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.326871369 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.730549363 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.335884546 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.340734325 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.310588654 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.307601164 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.088585859 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.313446749 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.569929776 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.364940609 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.31377139 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.312058126 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.350779935 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.308436582 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.312529792 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.318975205 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.823138442 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.332319257 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.600663217 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.33246699 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.313484421 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.32860114 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.313173877 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.315359303 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.536134349 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.837350276 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.313457885 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.313124186 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.315790419 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.319995026 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.543464949 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.319771175 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.611139868 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.324715745 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.309379666 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.318963259 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.144313775 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.333516325 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.31802553 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.319104114 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.159456952 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.532119497 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.332987063 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.32029074 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.317397666 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.329147397 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.670642066 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.316252327 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.391412359 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.317118877 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.008148294 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.349937402 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.334809549 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.893752166 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.316731443 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.303269222 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.337132076 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.314692893 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.616452759 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.590369897 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.576882768 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.310221873 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.309952144 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.024202511 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.333494487 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.45410638 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.334941996 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.288484748 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.513489172 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.522138914 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.318343399 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.869707006 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.316714131 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.532915983 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.316838602 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.627130302 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.805347513 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.333127818 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.320028632 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.015575919 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.001944978 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.925978234 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.318911455 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.647216021 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.290240678 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.770787592 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.31801955 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.31684901 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.900138943 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.320735369 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.319651007 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.317376273 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.317497438 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.379666173 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.491659363 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.121822843 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.315346608 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.767491894 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.372035143 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.313420913 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.319584706 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.315343076 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.66971511 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.386648537 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.31987517 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.3662728 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.318930011 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.322932964 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.792547532 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.284852308 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.31729419 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.470552113 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.942561254 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.33165572 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.316849986 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.97747341 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.523552066 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.820334749 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.381245432 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.629168444 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.336968675 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.359636081 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.107374688 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.336160367 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.830512073 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.333449709 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.314830591 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.917884514 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.332597617 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.389619885 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.315595735 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.321987209 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.843256227 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.331563876 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.32300631 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.682432701 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.3291548 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.576538489 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.323984631 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.343358021 seconds)
  done (took 1108.69530117 seconds)
done (took 1380.408912012 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.320804777 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.316791801 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.30345879 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.319704878 seconds)
  done (took 26.494894242 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.332585671 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.326619838 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.327574865 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.32797387 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.32990617 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.326511611 seconds)
  done (took 9.207938736 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.377321989 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.319440514 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.320559597 seconds)
  done (took 19.251678796 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.538781982 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.586276233 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.684267553 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.494590302 seconds)
  done (took 10.540600657 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.330255533 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.329245054 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.328329081 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.330869198 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.330022089 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.332811653 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.330249938 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.331377216 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.332873882 seconds)
  done (took 13.212185645 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.200659352 seconds)
done (took 85.139972121 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.69617423 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.991391671 seconds)
    (3/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.302272863 seconds)
    (4/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.426355462 seconds)
    (5/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.57745217 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.401803741 seconds)
    (7/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.331531864 seconds)
    (8/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.32167022 seconds)
    (9/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.325508341 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.410899366 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.726154514 seconds)
    (12/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.33825621 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.42439202 seconds)
    (14/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.674450263 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.345694321 seconds)
    (16/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.802806611 seconds)
    (17/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.750359923 seconds)
    (18/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.180313365 seconds)
    (19/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.455508392 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.72140804 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.676582565 seconds)
    (22/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.11472984 seconds)
    (23/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.32369835 seconds)
    (24/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.63243195 seconds)
    (25/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.083342337 seconds)
    (26/309) benchmarking ("sort", BigInt, false)...
    done (took 6.325003099 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.337768629 seconds)
    (28/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.32324874 seconds)
    (29/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.090572257 seconds)
    (30/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.349104548 seconds)
    (31/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.696298545 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.334338176 seconds)
    (33/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.883801098 seconds)
    (34/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.385398485 seconds)
    (35/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.324371039 seconds)
    (36/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.351116663 seconds)
    (37/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.389360846 seconds)
    (38/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.30346812 seconds)
    (39/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.02863252 seconds)
    (40/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.336383578 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.359997957 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.454427469 seconds)
    (43/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.518468036 seconds)
    (44/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.344730997 seconds)
    (45/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.450278072 seconds)
    (46/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.305205699 seconds)
    (47/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.507002628 seconds)
    (48/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.170117227 seconds)
    (49/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.385675946 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.393307352 seconds)
    (51/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.152783859 seconds)
    (52/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.350768363 seconds)
    (53/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.325396714 seconds)
    (54/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.425243375 seconds)
    (55/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.327659026 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.449209917 seconds)
    (57/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.551656666 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.995820589 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.588158276 seconds)
    (60/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.188862246 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.678763418 seconds)
    (62/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.421633083 seconds)
    (63/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.200726452 seconds)
    (64/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.915711281 seconds)
    (65/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.602448064 seconds)
    (66/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.888718364 seconds)
    (67/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.354158738 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.67729147 seconds)
    (69/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.39335018 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.372560874 seconds)
    (71/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.451691408 seconds)
    (72/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.03244277 seconds)
    (73/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.937404425 seconds)
    (74/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.327222475 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.215243084 seconds)
    (76/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.391748436 seconds)
    (77/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.694373327 seconds)
    (78/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.56056292 seconds)
    (79/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.412500119 seconds)
    (80/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.890336363 seconds)
    (81/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.62914253 seconds)
    (82/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.173581205 seconds)
    (83/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.674855209 seconds)
    (84/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.698187759 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.819376688 seconds)
    (86/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.354555705 seconds)
    (87/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.315840958 seconds)
    (88/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.341104476 seconds)
    (89/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.174816172 seconds)
    (90/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.370475331 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 5.544526889 seconds)
    (92/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.632446472 seconds)
    (93/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.32811315 seconds)
    (94/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.341342746 seconds)
    (95/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.339144497 seconds)
    (96/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.310930794 seconds)
    (97/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.132496149 seconds)
    (98/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.465662989 seconds)
    (99/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.451228862 seconds)
    (100/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.930412317 seconds)
    (101/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.947187449 seconds)
    (102/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.832087363 seconds)
    (103/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.420805422 seconds)
    (104/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.168648839 seconds)
    (105/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.914133974 seconds)
    (106/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.321393503 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.261347109 seconds)
    (108/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.470995678 seconds)
    (109/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.434713657 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.309820218 seconds)
    (111/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.528805028 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.543100989 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.727741846 seconds)
    (114/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.634984181 seconds)
    (115/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.973818268 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.32965732 seconds)
    (117/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.913714216 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.761301833 seconds)
    (119/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.720707655 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.977104851 seconds)
    (121/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.567794128 seconds)
    (122/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.370146313 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.259040743 seconds)
    (124/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.333388412 seconds)
    (125/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.31333413 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 1.863401238 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.368551173 seconds)
    (128/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.467172094 seconds)
    (129/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.574157535 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.588862909 seconds)
    (131/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.699424637 seconds)
    (132/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.807840631 seconds)
    (133/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.837726976 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.09066391 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.941042659 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.607364381 seconds)
    (137/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.356600416 seconds)
    (138/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.355848028 seconds)
    (139/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.414121876 seconds)
    (140/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.341600515 seconds)
    (141/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.699603316 seconds)
    (142/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.109896739 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.435474402 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.831084029 seconds)
    (145/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.377727244 seconds)
    (146/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.829638999 seconds)
    (147/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.141178089 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.352836121 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.108862656 seconds)
    (150/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.357471329 seconds)
    (151/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.36281549 seconds)
    (152/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.979868854 seconds)
    (153/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.093826551 seconds)
    (154/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.334281633 seconds)
    (155/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.360088986 seconds)
    (156/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.347590512 seconds)
    (157/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.31421793 seconds)
    (158/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.373456821 seconds)
    (159/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.41868412 seconds)
    (160/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.728675518 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.355808272 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.21379266 seconds)
    (163/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.312932658 seconds)
    (164/309) benchmarking ("sort", Int8, false)...
    done (took 4.398361702 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.44991376 seconds)
    (166/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.335345006 seconds)
    (167/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.195211156 seconds)
    (168/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.491929334 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.836605832 seconds)
    (170/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.334380875 seconds)
    (171/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.342852199 seconds)
    (172/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.939048858 seconds)
    (173/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.373348101 seconds)
    (174/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.419099672 seconds)
    (175/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.094820974 seconds)
    (176/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.335536047 seconds)
    (177/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.341525756 seconds)
    (178/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.546357946 seconds)
    (179/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.346433315 seconds)
    (180/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.912780258 seconds)
    (181/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.42073464 seconds)
    (182/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.667630983 seconds)
    (183/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.397731941 seconds)
    (184/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.906132646 seconds)
    (185/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.360572249 seconds)
    (186/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.857730494 seconds)
    (187/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.952575389 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.328864639 seconds)
    (189/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.315299491 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.392766391 seconds)
    (191/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.723331523 seconds)
    (192/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.340862146 seconds)
    (193/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.197646268 seconds)
    (194/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.632200413 seconds)
    (195/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.320743278 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.379491855 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.392907204 seconds)
    (198/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.701832419 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.269000415 seconds)
    (200/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.337445566 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.755646195 seconds)
    (202/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.730744665 seconds)
    (203/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.413334911 seconds)
    (204/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.671303192 seconds)
    (205/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.469575863 seconds)
    (206/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.377680968 seconds)
    (207/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.760115128 seconds)
    (208/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.345813498 seconds)
    (209/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.356551311 seconds)
    (210/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.527001738 seconds)
    (211/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.437486185 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.556235716 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.960956631 seconds)
    (214/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.346011487 seconds)
    (215/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.660249393 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.451774538 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.455144874 seconds)
    (218/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.548943593 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.193051953 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.453737215 seconds)
    (221/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.422600531 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.294066029 seconds)
    (223/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.593322803 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.330214135 seconds)
    (225/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.414474486 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.35964661 seconds)
    (227/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.649358057 seconds)
    (228/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.712623774 seconds)
    (229/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.793280026 seconds)
    (230/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.318907764 seconds)
    (231/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.319017012 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.379540973 seconds)
    (233/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.441199128 seconds)
    (234/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.632853735 seconds)
    (235/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.50013157 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.352724405 seconds)
    (237/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.358964308 seconds)
    (238/309) benchmarking ("sort", Float64, false)...
    done (took 5.671113359 seconds)
    (239/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.460803547 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.924239108 seconds)
    (241/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.332436731 seconds)
    (242/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.446613874 seconds)
    (243/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.365538297 seconds)
    (244/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.7206644 seconds)
    (245/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.759642477 seconds)
    (246/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.354939483 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.283240711 seconds)
    (248/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.867196468 seconds)
    (249/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.477672333 seconds)
    (250/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.941977998 seconds)
    (251/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.665093304 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.484731571 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.357754695 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.551580806 seconds)
    (255/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.188455363 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.40660252 seconds)
    (257/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.645340603 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.841770856 seconds)
    (259/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.342306664 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.87475786 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.724235493 seconds)
    (262/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.339687709 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.19322767 seconds)
    (264/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.707618459 seconds)
    (265/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.321280838 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.367105536 seconds)
    (267/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.463549793 seconds)
    (268/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.321125266 seconds)
    (269/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.383572719 seconds)
    (270/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.809454332 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.741467368 seconds)
    (272/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.526719692 seconds)
    (273/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.736603219 seconds)
    (274/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.336571679 seconds)
    (275/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.355819708 seconds)
    (276/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.362974334 seconds)
    (277/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.224260573 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.741780405 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.022427791 seconds)
    (280/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.334463497 seconds)
    (281/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.422820561 seconds)
    (282/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.395460434 seconds)
    (283/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.373860954 seconds)
    (284/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.764219957 seconds)
    (285/309) benchmarking ("sort", Float32, false)...
    done (took 5.380325474 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.449915815 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.423493247 seconds)
    (288/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.406295623 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.45788859 seconds)
    (290/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.210391174 seconds)
    (291/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.09660204 seconds)
    (292/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.337142091 seconds)
    (293/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.56785087 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.177497147 seconds)
    (295/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.221097267 seconds)
    (296/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.72377308 seconds)
    (297/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.966944082 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.996430251 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.383265453 seconds)
    (300/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.64674329 seconds)
    (301/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.474136163 seconds)
    (302/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.392671624 seconds)
    (303/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.912600769 seconds)
    (304/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.946885894 seconds)
    (305/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.631743328 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.381580143 seconds)
    (307/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.195307659 seconds)
    (308/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.341795768 seconds)
    (309/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.782914392 seconds)
  done (took 923.61309614 seconds)
done (took 924.850392836 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.377072231 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.371450564 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.353458969 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.375336509 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.466229181 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.383983835 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.363139296 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.354822926 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.40029898 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.402942371 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.353094284 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.383946008 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.356646842 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.353974695 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.352992034 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.368912229 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.391414976 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.350943042 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.371542985 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.363186656 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.372155748 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.354474113 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.404565635 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.383787765 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.359450987 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.358800656 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.358561246 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.376320673 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.467449656 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.359704324 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.358579844 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.367012048 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.391338471 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.347912764 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.350597226 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.376213608 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.368328761 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.365453443 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.360408247 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.388870274 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.793998655 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.366234525 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.357496662 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.357487711 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.357798973 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.361960863 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.358284171 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.363656881 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.370061689 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.371665584 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.781422239 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.381758306 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.360909173 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.357797323 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.368265546 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.357352958 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.360427899 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.374000448 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.377915836 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.373518445 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.379284489 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.358428182 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.355036442 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.375556187 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.365678342 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.818270816 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.364058132 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.362788573 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.790396259 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.372763044 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.817989609 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.377519323 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.35799474 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.372644138 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.388418633 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.39777352 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.347907432 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.356084054 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.366528315 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.357543956 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.369048942 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.372032382 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.363587116 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.359335848 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.37243877 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.388841857 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.370946004 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.358176852 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.367934629 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.379523788 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.366968859 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.372083368 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.362908077 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.356660949 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.369048577 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.364710322 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.364003172 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.362733127 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.364646891 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.37067848 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.793609385 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.388470613 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.356455571 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.356093782 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.360019688 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.374820029 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.792176903 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.370759486 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.383504793 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.409580298 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.361835431 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.403513075 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.360060777 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.376503447 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.370215316 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.363803437 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.356659018 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.409783723 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.784035903 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.386445888 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.363708369 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.359271257 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.374783335 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.363982573 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.359093712 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.425085459 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.362095218 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.377473692 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.484507614 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.374388415 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.394780346 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.360869624 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.365136824 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.389433492 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.377909155 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.390360676 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.365040737 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.379650313 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.38077279 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.359034622 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.374970379 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.373658227 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.364196607 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.366695332 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.357754275 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.389379909 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.377498278 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.376759235 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.385202735 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.483121828 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.360276698 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.413025782 seconds)
done (took 229.405761171 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.422970612 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.354830451 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.441320298 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.360807067 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.46024302 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.460308668 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.356252924 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.358109549 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.357366841 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.738597829 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.358522914 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.358278408 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.35719601 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.358154862 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.442393592 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.362292398 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.358161846 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.702470619 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.36201463 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.432150219 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.357737365 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.359036722 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.361178711 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.766295685 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.355470431 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.355830059 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.430636291 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.361349753 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.75467248 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.357798001 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.360091211 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.75546197 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.451804149 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.379085626 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.37227241 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.370387149 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.46335147 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.378755009 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.444376416 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.444801676 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.445612553 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.401068825 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.359518901 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.35974085 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.364734396 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.363453258 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.360677705 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.389523093 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.363486495 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.362307099 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.703130185 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.372819538 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.371282906 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.359477477 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.362427501 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.383321509 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.361283209 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.363701745 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.453816896 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.364791802 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.426375008 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.743756428 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.743667471 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.364646598 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.356449359 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.362173989 seconds)
  done (took 150.412476781 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.429466446 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.435926711 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.477369536 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.380046789 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.415877543 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.482144942 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.38043019 seconds)
  done (took 11.27011269 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.370679184 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.364408894 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.418124923 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.4159378 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.365917954 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.51180502 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.365795366 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.377758819 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.363080574 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.416950475 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.367516323 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.366954327 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.373118748 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.359396574 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.416943656 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.377163971 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.482414538 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.367206405 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.366951871 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.517299156 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.363475861 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.373829362 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.41855849 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.378215778 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.36880076 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.373001153 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.930759635 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.366037131 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.36191271 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.366574446 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.364337823 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.403503923 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.367797013 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.364411757 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.363422774 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.482971608 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.366154422 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.36374932 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.366878928 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.361995929 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.366457964 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.367178167 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.369642831 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.365845373 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.368580705 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.390523642 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.367548064 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.368846017 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.369756622 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.370116539 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.418055044 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.367181918 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.366093821 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.365037847 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.425885966 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.375417557 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.368391593 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.366013781 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.368362023 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.36587673 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.519708211 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.414895827 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.368559227 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.415985104 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.369832884 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.368963103 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.367818111 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.368912632 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.421365781 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.369958557 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.416324506 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.367723365 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.52517486 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.393712975 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.370340068 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.372815619 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.371236077 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.370190537 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.372134136 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.376742102 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.367132041 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.369669155 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.377003512 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.369036443 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.368097279 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.471412842 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.479630874 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.367535978 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.383247086 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.377336105 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.366090331 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.426935571 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.369046207 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.36753581 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.421798727 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.483217803 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.42472149 seconds)
  done (took 156.548343115 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.376117571 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.379049051 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.371766186 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.38645832 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.370129876 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.372030539 seconds)
  done (took 9.530225604 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.373906069 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.373581832 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.37117909 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.372328135 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.372784313 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.373178535 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.372793237 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.373189832 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.377449573 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.371340959 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.370486833 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.373800498 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.37138211 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.372205291 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.371796205 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.37070188 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.370702943 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.370348756 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.371669819 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.372391819 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.473449913 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.37391597 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.372292308 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.373703921 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.377289927 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.373310568 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.382025495 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.370969341 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.372532784 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.376109738 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.388053615 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.372284735 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.372225774 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.379642771 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.377467876 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.375924543 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.379142849 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.373942738 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.368206192 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.372237934 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.37464332 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.370945696 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.375601701 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.377326113 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.373194979 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.380060872 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.382517973 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.38297293 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.375613673 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.376777353 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.374937507 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.372774794 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.375954292 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.37660598 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.376558906 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.39185034 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.382193466 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.377464096 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.376058428 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.378110688 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.37826971 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.373691281 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.375911117 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.378510431 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.371061286 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.375169418 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.373492179 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.377099117 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.373876743 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.375040119 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.379005764 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.374868169 seconds)
  done (took 101.38652291 seconds)
done (took 430.409896982 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.786955402 seconds)
  done (took 8.067210737 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.475554783 seconds)
  done (took 7.757691989 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.394209075 seconds)
  done (took 22.681568549 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.394020583 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.429103308 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.3889097 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.365934756 seconds)
  done (took 26.860785173 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.77151694 seconds)
  done (took 8.049696191 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.377098168 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.369881311 seconds)
  done (took 14.029445292 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.398564985 seconds)
  done (took 7.678575228 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.97863073 seconds)
  done (took 8.264731107 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.386784426 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.381807874 seconds)
  done (took 14.319483405 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.34945723 seconds)
  done (took 7.630622863 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.273975652 seconds)
  done (took 8.555285116 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.37121697 seconds)
  done (took 7.65430835 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.44714028 seconds)
  done (took 7.727519474 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.509681609 seconds)
  done (took 9.79239199 seconds)
done (took 160.348046578 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.369660122 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.367892588 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.366666315 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.364099337 seconds)
  done (took 26.749737772 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.852737297 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.411824528 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.412987682 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.420472231 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.414142943 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.412272039 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.403082495 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.405545861 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.424148235 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.415358869 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.413128748 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.41363578 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.413641024 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.404194634 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.414884319 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.411218748 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.422172037 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.412915392 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.403746952 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.415775289 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.380100946 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.422456321 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.415467659 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.380189964 seconds)
  done (took 35.578676611 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.900484647 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.449670034 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.529090344 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.42979329 seconds)
  done (took 7.590576794 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.429887531 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.43077664 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.443328668 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.481521358 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.513373696 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.439423438 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.406208478 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.400962471 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.385860925 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.431431766 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.507178814 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.44504271 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.523631792 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.379670908 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.565392977 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.380765728 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.38214024 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.434152508 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.48693467 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.499351066 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.382471929 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.432759379 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.437221776 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.450006997 seconds)
  done (took 35.953414059 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.393189986 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.390165934 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.382403931 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.376327224 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.400863537 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.378756598 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.379982337 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.381895837 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.381211954 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.388586919 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.381063532 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.392983547 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.378874144 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.380975409 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.388113766 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.382797818 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.384758242 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.380565627 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.382898624 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.385319791 seconds)
  done (took 28.976239661 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.375807235 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.230195992 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.727234747 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.631875155 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.376986062 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.369810297 seconds)
  done (took 27.998859094 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.451537872 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.606512485 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.382197326 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.741189331 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.83909137 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.396031416 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.382485709 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.626516576 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.945278155 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.940138102 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.435477634 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.447663997 seconds)
  done (took 20.482064048 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.376853583 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.376678835 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.374153366 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.408409147 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.438656313 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.402979414 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.38899081 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.376720684 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.438293466 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.454368915 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.400327243 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.439715627 seconds)
  done (took 38.163083944 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466517 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.424934841 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.37609311 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.133500447 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.092245953 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.584798353 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.376270601 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.808658709 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.377492523 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650807952 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377285293 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46392701 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.633413435 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387894376 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.379182017 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.374765825 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.621235803 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892463613 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374374645 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.375199612 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406138248 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.375958497 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.471219586 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.407716941 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.592284749 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.356264201 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.641711923 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.154367093 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.668893139 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.389524246 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392229027 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382730981 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652345565 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068203613 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490571481 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387136345 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.080765989 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.92511832 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.358779546 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.454218721 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387089023 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.384028653 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390068197 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380820866 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.314480805 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.391291045 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.821560855 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.380493974 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.092090392 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.378557411 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.390182003 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478756685 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.382755405 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.370208126 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.405266056 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.380739587 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.376672223 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386955791 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951706683 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.888957855 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.392215043 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.316786082 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.76065966 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.463243372 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031749744 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.497614681 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.383034962 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.386042389 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316496487 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.368734266 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.4007943 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.531086188 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.400623244 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.033680601 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.106744192 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.414410915 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.313713435 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946610296 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.381655087 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.31778885 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.609348772 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.1583026 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319368957 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.324448007 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.318457918 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.122455263 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387027462 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.801138589 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.386423817 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.816751011 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.391396497 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401688087 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408722486 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.60844724 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.262059923 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384502369 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.388806479 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509923 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399080276 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.81745559 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31484259 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.383573657 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.638823411 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.591683873 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.386887298 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.388160571 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.604875311 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381271575 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.398432321 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.393739763 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.396228098 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.975581992 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.410476408 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.888249094 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400645764 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.160876619 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.146748436 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394827749 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.483411407 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.384959603 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.633224371 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.163063731 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.541756706 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452567322 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386811507 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.387759766 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.485842218 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.23811428 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.278933433 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.381271745 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.392435649 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.395288111 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.383647879 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.330274557 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.378642696 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390765368 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.163182922 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.611968621 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.395594446 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661529256 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.321771383 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.53562183 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.393238666 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.604785502 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.621454721 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.399786169 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.648953608 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397891698 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.396004676 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.397843041 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406408879 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484490762 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409823283 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.400524087 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.642112879 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.390935677 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.392581753 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.516970424 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.167227713 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39392266 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.392258945 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.23479235 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.971776013 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380353582 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.392092541 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.276488296 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.399669785 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455333622 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.395236638 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.39861822 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.243969367 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.215419039 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.392029473 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.389588959 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.613126286 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.399916646 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.506601581 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.468874967 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.587999749 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.977518295 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.417382305 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.323435789 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.099448547 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.084693284 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389429687 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.57653672 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.387472011 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396845086 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.398836152 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.921443852 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.979298899 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407016883 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.418577428 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.395186676 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.399849982 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.393608806 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388750437 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.225076958 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.941796009 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.399402967 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.401051635 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.53616524 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.403766523 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.323736587 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.909907595 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.398294252 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.390321916 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.177577465 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42533975 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.408544641 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.871672692 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.647157362 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.081391056 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.400726194 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.617492056 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.423690151 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.393787942 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390754131 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407114294 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.407081516 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400526373 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.404487772 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.526559116 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.82986287 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962044045 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.135041853 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959650676 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375649621 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.390661054 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.28536249 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.834473802 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.323020294 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.049605742 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.586663262 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.848293574 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.334604202 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.591663877 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.636576461 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.187262281 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.402979982 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.622521517 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354674647 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.391714839 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.404170116 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.60549685 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426902007 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.39492693 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.325885664 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.669464419 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.632209191 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386702823 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.472240808 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.842653805 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.402214345 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.17372599 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.39422286 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.779440035 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.582377486 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.021636986 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.779651894 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.388498698 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.422246097 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.876275884 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.398184284 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.920935442 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037444637 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.405900303 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.597147511 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.32816511 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.404067079 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.406953732 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.392447057 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.743572845 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.407404263 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.648956436 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.404796639 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.331177803 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.408334777 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946485702 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.268730758 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.403678087 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397609868 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.181140116 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403256861 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.688579164 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.396823198 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.235449993 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412262845 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.33031688 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.331352747 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.091965119 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.399708923 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373160073 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916988865 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.759587182 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.404765446 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.417061053 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.242299322 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.649544957 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.412872897 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.991663048 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.638807596 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.194337786 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417140955 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.496312419 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403923222 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.381801546 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.280559343 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.635835423 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.247795747 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.61490859 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.460797111 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.294876305 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.396932036 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.607930477 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.279674169 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.410457469 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.649198001 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.126994482 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.402127397 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.137581738 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440740957 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.400585856 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.413881372 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.775692454 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402997045 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472319229 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.41094011 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.411275472 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.410818222 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.576861982 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397853192 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.403479257 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.416030882 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496820185 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.949784148 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.230285118 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.172677465 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.001839838 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.172413639 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.016633069 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.428644812 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.40200073 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412673349 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33642625 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.55008762 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.926918988 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673752208 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.5304886 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.841842234 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421066845 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.405187756 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.416664491 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615773308 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673229234 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.272209257 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405181532 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.06013375 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.297096111 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.414735729 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.615438506 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932928614 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986199628 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515368044 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.405242898 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.857042235 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672550825 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.493607862 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.404658598 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.992407258 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.403360296 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.805588177 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.422232931 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400612285 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.547701532 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.412910449 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.082280927 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.424826672 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.562955811 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.175454842 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.554008708 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.66008177 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.899759858 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.414254122 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.006761629 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.13757405 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.667021328 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470716142 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.416415036 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.517975752 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546249695 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.411958299 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.299062252 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.406438709 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.247569361 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.112024331 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.414541772 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.005449148 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.681867763 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.400691714 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.414814578 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429375193 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.415357369 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.62912157 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.140817891 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.621787422 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.413097177 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.408755819 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.973691138 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.005149633 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.431269434 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.341361444 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.40419755 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.652192685 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.656020863 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.429415822 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.858478397 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.115137981 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989943792 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.372146666 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425969415 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.417748591 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.125224382 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.007138823 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.256709406 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953905285 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.059176957 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.404755492 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.695478307 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.413976085 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.412889088 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.683217632 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.409198452 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.424260287 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.41894009 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.009641637 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.209978109 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.422314124 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.492107618 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.341137673 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.630806369 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.04845638 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.342333673 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.401489174 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.590273271 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.403832048 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.5376117 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.413741044 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.406936568 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411533272 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.16446755 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.694319122 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.409324393 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.388227501 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.39733086 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.407420791 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413507551 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.647685409 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408727637 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.0844076 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.759712904 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.663070389 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.40865962 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.390409713 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.412402751 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411162864 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.127021035 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.374783585 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.938295573 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004635075 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.410797908 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.419922211 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.414657909 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.626630081 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.618202047 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.408236165 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.436116163 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418812366 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.426129508 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.310824998 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.178519416 seconds)
  done (took 1616.871753142 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.459944575 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.417733736 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.437093331 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.477952748 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.437165657 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.500299796 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.441792941 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.451535914 seconds)
  done (took 52.940700394 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.414793655 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.563240844 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.44435255 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.416231766 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.41846705 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.410162192 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.883289774 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.433822992 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.412687119 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.420479537 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.412713231 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.419488753 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.08405361 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.418627463 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.419964206 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.393018806 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.41802466 seconds)
  done (took 66.706501874 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.411171621 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.475853864 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.513470996 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.409208346 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.626312345 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.435791183 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.478453791 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.436450717 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.435180634 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.466058371 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.07492393 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.406061233 seconds)
  done (took 80.488181898 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.420407227 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.422081461 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.423597359 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.422413207 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.422291809 seconds)
  done (took 8.43061821 seconds)
done (took 2048.210380706 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.660753077 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.128287803 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.075117638 seconds)
  done (took 5.524020505 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.560375937 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.611838944 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.730741879 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.735986709 seconds)
  done (took 7.960684371 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.694522274 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.798732246 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.606841105 seconds)
  done (took 6.420737994 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.854118362 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.418539808 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.540505118 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.412841645 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.410881264 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.411865597 seconds)
  done (took 20.558758824 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.419013049 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.42256279 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.420085064 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.421431388 seconds)
  done (took 7.004961338 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.397258559 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.105932221 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.393561705 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.410613343 seconds)
  done (took 18.626657281 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.165625823 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.178616724 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.164339099 seconds)
  done (took 7.832294115 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.414402963 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.257017995 seconds)
  done (took 9.99448407 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.718170097 seconds)
  done (took 3.040306034 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.551102564 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.746361088 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.477716142 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.433257519 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.507753991 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.351249076 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.102109845 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.675908654 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.418587449 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.652922325 seconds)
  done (took 29.241674893 seconds)
done (took 129.995319701 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.300386606 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.782384927 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.619585433 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.268131779 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.643006958 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.617453514 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.633605161 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.241425516 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.898116588 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.771899518 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.310781078 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.644542513 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.591302256 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.791289349 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.592984484 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.660960465 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.649200371 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.351239442 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.951521126 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.152536379 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.62899582 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.910225619 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.138076225 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.016058475 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.642366542 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.569808459 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.488683112 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.656401361 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.129633304 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.62679515 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.568984945 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.322163516 seconds)
  done (took 196.494328495 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.425624539 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.411110619 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.427288293 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.411213972 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.411416158 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.430952805 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.413195275 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.426735595 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.411466635 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.412363804 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.418644323 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.412720084 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.411069508 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.424529488 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.412716524 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.417322914 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.413056236 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.412819505 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.412052527 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.428062986 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.414242095 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.428503889 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.442534855 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.421466706 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.427737336 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.411876986 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.423412133 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.41472655 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.411552519 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.41370243 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.448110982 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.426246029 seconds)
  done (took 206.754442412 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.419621648 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.428091799 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.432829167 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.424591544 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.41324708 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.431275493 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.415185451 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.413812147 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.415205914 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.43273468 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.414706443 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.417727146 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.415991557 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.42876251 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.431987218 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.442109599 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.423216691 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.422367134 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.428580914 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.425384518 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.415295637 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.426427436 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.415286717 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.416559941 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.418032369 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.424975443 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.428715583 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.414712547 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.430014723 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.428942558 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.435099396 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.430511674 seconds)
  done (took 206.88976922 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.617991708 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.430483783 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.432158866 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.366551895 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.432349701 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.429940174 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.420687881 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.624775529 seconds)
  done (took 15.083586805 seconds)
done (took 626.542510054 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.801507272 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.506761395 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.632320673 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.449484289 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.236105914 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.467931752 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.447367087 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.623242697 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.362805603 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.626557727 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.706396482 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.467422755 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.82773643 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.442390554 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.705692993 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.545540955 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.337324204 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.45738187 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.771180877 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.005227864 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.716585947 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.927612944 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.637220409 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.367878269 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.879445959 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.934021391 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.200391528 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.324884762 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.461990153 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.773851693 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.195770751 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.465796307 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.511852751 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.504073742 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.558720895 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.54366466 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.433361212 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.505838052 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.651386235 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.694081364 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.994578753 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.18243271 seconds)
  done (took 96.217225514 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.414399712 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.413440422 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.415079743 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.414032881 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.415834109 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.414761595 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.413660662 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.410931404 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.415706556 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.412227431 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.41178852 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.4150775 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.415482107 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.414206728 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.413899194 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.413830077 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.413480848 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.416298762 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.416110143 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.413959254 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.417512619 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.414136383 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.416330958 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.413648135 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.412699857 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.413833526 seconds)
  done (took 38.106264195 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.43613086 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.694531556 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.859730636 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.439231331 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.431617143 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.436070531 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.511274376 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.433382086 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.438958007 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.434619491 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.607164836 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.435858037 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.472760417 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.884290314 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.435417254 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.432058878 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.433013169 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.433259463 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.704055539 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.441369055 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.535361908 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.435174304 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.513516061 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.444378675 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.45521815 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.432941135 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.438157468 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.957301881 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.451839896 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.608057773 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.248671886 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.512402412 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.909643999 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.881665995 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.248420778 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.437572768 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.434982581 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.612516559 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.436076156 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.433968046 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.513108454 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.436242526 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.865608149 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.062797691 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.451759928 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.436726445 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.980535406 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.631318432 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.68860033 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.443047391 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.888268674 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.439175566 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.436478302 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.437762937 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.688628566 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.442060071 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.434604336 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.976243365 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.456840692 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.514500563 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.436410723 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.436766562 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.710012393 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.435309793 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.698472041 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.434204841 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.446597757 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.453659182 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.86811863 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.439209403 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.082522193 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.455550861 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.436004709 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.610260817 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.698011828 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.01218462 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.453646715 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.712445519 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.924691106 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.52961637 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.440666896 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.947450968 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.536642391 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.441489288 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.438711041 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.439583422 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.43790282 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.486186953 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.515779717 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.014423494 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.09319521 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.995548728 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.536963514 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.449972326 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.439740847 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.981211555 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.455311905 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.43825056 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.864921199 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.087253876 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.459257505 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.447382954 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.0877281 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.458192831 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.518520212 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.445056408 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.875750758 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.439417857 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.485708506 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.439807585 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.446896311 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.456966382 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.521583919 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.444092894 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.442235091 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.057111378 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.638005385 seconds)
  done (took 188.364047762 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.454385436 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.437067247 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.43895407 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.4283191 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.432346403 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.437901704 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.432520233 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.433721964 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.43900763 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.433264705 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.434411594 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.434977856 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.435014219 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.436541355 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.438278074 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.440798449 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.043866963 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.437541413 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.43543276 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.431252145 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.233624115 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.438238094 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.435107098 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.430441262 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.434598685 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.436174923 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.438859842 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.450428434 seconds)
  done (took 154.975358024 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.441823135 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.037026328 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.457117841 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.576608856 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.460167823 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.441840225 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.576209437 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.50196415 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.458486713 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.439823883 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.443217621 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.762378539 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.445778738 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.983699305 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.636974886 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.591674679 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.978842621 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.458899231 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.440788537 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.439485882 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.582372447 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.445943307 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.759942054 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.019355348 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.455551994 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.019734457 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.425126165 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.443236551 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.444424136 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.026588833 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.454487848 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.758322139 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.519113917 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.505470312 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.039097555 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.997338634 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.002479335 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.594313518 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.439683416 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.444954333 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.445628523 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.428117934 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.025193816 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.458407154 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.44651591 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.028626196 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.46319979 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.447305142 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.45390565 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.442970039 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.509778906 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.523388101 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.774363497 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.026033228 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.535230275 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.464892142 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.58067603 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.817476661 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.447408142 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.986659792 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.428179178 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.031249154 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.460126781 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.430065644 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.444800053 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.449500565 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.600453645 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.581354815 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.98782427 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.464537216 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.987467279 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.615202239 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.445052447 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.444978961 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.446594053 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.027084888 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.000611399 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.614788145 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.58429076 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.642877448 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.431907784 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.444898775 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.430376805 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.526378835 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.444192005 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.048016228 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.00469642 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.459791029 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.450549142 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.449914925 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.448261266 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.627407679 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.061490445 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.542093757 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.98113885 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.785464884 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.768646806 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.453430404 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.511303489 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.463516933 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.771761342 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.450536378 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.508680423 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.883416806 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.768859413 seconds)
  done (took 172.008489042 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.698760538 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.679945433 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.535931274 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.576811087 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.050663983 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.024351625 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.735735604 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.595992771 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.559316043 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.709388652 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.621592268 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.535221539 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.62196055 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.52694055 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.223861496 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.532694352 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.554923994 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.593157491 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.560281696 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.473924795 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.10250346 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.737191927 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.624334999 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.384254787 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.539555366 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.274917118 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.018468063 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.008639777 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.633703008 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.759842924 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.97430784 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.582853504 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.44712695 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.156291127 seconds)
  done (took 69.005496092 seconds)
done (took 720.003443775 seconds)
SAVING RESULT...
DONE!
