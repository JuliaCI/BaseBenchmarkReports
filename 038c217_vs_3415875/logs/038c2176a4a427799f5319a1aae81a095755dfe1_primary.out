cset: moving following pidspec: 11986
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.304113788 seconds)
loading group "string"... done (took 0.56921234 seconds)
loading group "linalg"... done (took 7.298280711 seconds)
loading group "parallel"... done (took 0.167454219 seconds)
loading group "find"... done (took 1.137601944 seconds)
loading group "tuple"... done (took 2.036919729 seconds)
loading group "dates"... done (took 1.293218769 seconds)
loading group "micro"... done (took 0.238816971 seconds)
loading group "io"... done (took 0.987419754 seconds)
loading group "scalar"... done (took 39.919132064 seconds)
loading group "sparse"... done (took 12.794122801 seconds)
loading group "broadcast"... done (took 1.005438202 seconds)
loading group "union"... done (took 13.947476056 seconds)
loading group "simd"... done (took 4.699032749 seconds)
loading group "random"... done (took 9.541289866 seconds)
loading group "problem"... done (took 1.984438181 seconds)
loading group "array"... done (took 22.37391672 seconds)
loading group "misc"... done (took 2.014830083 seconds)
loading group "sort"... done (took 3.418745199 seconds)
loading group "collection"... done (took 19.592669485 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.571308913 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.156984528 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.14953925 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.147935467 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.196684115 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.143734985 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.15741798 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.096667693 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.96112948 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.172359568 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.151792158 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.52488286 seconds)
done (took 5.161992379 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.215839516 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094895583 seconds)
    (2/2) benchmarking "String"...
    done (took 0.10390265 seconds)
  done (took 0.874909234 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077083719 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.146083781 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.097399303 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.077868906 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095542121 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077852727 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094396549 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.093397339 seconds)
  done (took 1.364724082 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.086456747 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.096932876 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.081665855 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.096467755 seconds)
  done (took 1.041419963 seconds)
done (took 4.262980763 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.727113002 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.271556837 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.202911379 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.462007371 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.19739134 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.216566864 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.68122181 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.329571982 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.253495612 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.10061754 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.134794394 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.393145994 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136897277 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.681664004 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089002412 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123991509 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.176983087 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.435858922 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082919766 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.10885558 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116238607 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140350926 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.128165713 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090031405 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.186205819 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081746613 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.193875654 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107893024 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.081127775 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.277203673 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200869188 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.686567131 seconds)
  done (took 10.816629207 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110705624 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133222298 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096949421 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136939198 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.132797554 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099229367 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083684573 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095781076 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121483352 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.173687887 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114760632 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.136700117 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095572876 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081966022 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115127947 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.244179306 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.118904354 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.099832118 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100077558 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.087134378 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.136612891 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111508813 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.093005557 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.108869752 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166092968 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.221114598 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109979503 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125493647 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096340645 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.110976753 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142643374 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142434437 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.09447296 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079429949 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172670081 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.12307283 seconds)
  done (took 5.106451823 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.09452741 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.11037894 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.190599177 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.102968658 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.185982807 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080681909 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142864679 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.093437031 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112626185 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.256641105 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.110201512 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.488575565 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.139344963 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099087901 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096904495 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081752298 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096493469 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.45767225 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.158215689 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.134227811 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.096172512 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105053159 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.100248783 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.364554856 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.081068747 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.09510894 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081667083 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.089330943 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.161255733 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081716782 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.2006069 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.120020271 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081935021 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13332777 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.203442467 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.105557748 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124479474 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134798553 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078881564 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.096389329 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.17521328 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08721641 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096916063 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.119394449 seconds)
    (44/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.077294296 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13318067 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.133976595 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096680343 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080912687 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.195785861 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.096176076 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.09505692 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.938203613 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.179642217 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.107417811 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096373317 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.30449577 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098161974 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097542062 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077085163 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.286921779 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.195924753 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098317827 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.096442633 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079674495 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.09813107 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.379762197 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081361085 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.738593698 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083005419 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.106010583 seconds)
    (71/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.077889044 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097943867 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.079760975 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103096805 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102570042 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.098248389 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.096513041 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.08067665 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.096591526 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.078633426 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.09913064 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.1059995 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.215073856 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080651269 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.097523948 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.077396515 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.115903513 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125531037 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082445275 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095123244 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12900675 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082738162 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.096692803 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.133801685 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.079989908 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.10841478 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099377014 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141454134 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.079914147 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.155951726 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.08158466 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123671665 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098225904 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112460407 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.110535734 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098506468 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.167961726 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077279979 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.095192154 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079272036 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.095962368 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079994275 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099265811 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109111306 seconds)
  done (took 22.599415959 seconds)
done (took 40.297332683 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.319649713 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.102697578 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.101770004 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104408446 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100630187 seconds)
  done (took 1.48522986 seconds)
done (took 2.21403689 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.163776748 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114846117 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095382937 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.126841958 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076568306 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.132782907 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.130151413 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.094010157 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.131589077 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.093680969 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.126205413 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077342332 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091941722 seconds)
  done (took 2.214257069 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09412136 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113517117 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082578236 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110362597 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076658274 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110337438 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09164576 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116267074 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108774216 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084501551 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092885945 seconds)
  done (took 1.807028798 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092982167 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111914088 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082015647 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109388838 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077037009 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108394019 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092430352 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115077942 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108653099 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085009655 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092016042 seconds)
  done (took 1.801211797 seconds)
done (took 6.544781182 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090991783 seconds)
  done (took 0.810843897 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.91540874 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.534106527 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112174168 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.148269467 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.291046158 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.189590907 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.468330587 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.12423847 seconds)
  done (took 10.710238036 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.143484113 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.083825233 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.101829647 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.083944373 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.099133032 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.085744247 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.097836255 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.09782736 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.08087265 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.09927359 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.084011671 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.100331918 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.0981186 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.082815799 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.097562221 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.083512037 seconds)
  done (took 2.311591926 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.117850362 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116130071 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105254229 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.106359381 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085486077 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.102857478 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.103532097 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088482295 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.100249979 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.101020769 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.088391819 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.103295892 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.10206241 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.07877624 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.103667638 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.106101608 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.084285147 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.103708907 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.10570354 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.088138822 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.105143048 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094216936 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.085702388 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.104926806 seconds)
  done (took 3.217141301 seconds)
done (took 17.774255374 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.156893158 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107697035 seconds)
  done (took 0.995222871 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094110776 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111734227 seconds)
  done (took 0.94185635 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.096450642 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094764219 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.120804087 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108872484 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079061685 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.094649618 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.119377954 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079334825 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.094955508 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.095232041 seconds)
  done (took 1.724005624 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082059607 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.108471098 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100511801 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.093773658 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.103604364 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093814169 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087868068 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.097173214 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.108364418 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076699725 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.101341546 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.11281714 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085466943 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.114511125 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.10273234 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.09839527 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.084108706 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097545588 seconds)
  done (took 2.485717961 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078668686 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.095972046 seconds)
  done (took 0.912688056 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080080352 seconds)
    (2/7) benchmarking "second"...
    done (took 0.092867999 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080393489 seconds)
    (4/7) benchmarking "year"...
    done (took 0.094981522 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.09283912 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.075589981 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093676826 seconds)
  done (took 1.347359432 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.418882917 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.117376269 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.272914666 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.084618124 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.118225575 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.283964041 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.096852648 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083851542 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.101566233 seconds)
  done (took 2.3721773 seconds)
done (took 11.51368617 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092441409 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.113874995 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111529777 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.449194924 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106260523 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.096027684 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.145437776 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.244190649 seconds)
done (took 2.102298743 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.141873052 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.569378715 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.418951184 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.2267887 seconds)
  done (took 1.962645067 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.397431991 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.097479221 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.081370879 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.078918582 seconds)
  done (took 1.401285019 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.078394352 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098889678 seconds)
  done (took 0.923040079 seconds)
done (took 5.178067116 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079138824 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.132220847 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.078842052 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.094986501 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.07634693 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.096684124 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.076945877 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.093862581 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.078319835 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.095156594 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.095293712 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.079326397 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096052732 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076023382 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09341565 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079793055 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.093596393 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076532893 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.096870495 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077848774 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096530069 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.077594018 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.0933416 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.07679653 seconds)
  done (took 2.890683684 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099581033 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097282412 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102254956 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085298656 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102034688 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086321913 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101564571 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.09622434 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085507156 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.099240042 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084603119 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.100486356 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099650091 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083954095 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099170225 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100734206 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085274658 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097206374 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082592665 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.10075171 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.101673477 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081118311 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101401941 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08557945 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.100352688 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101145716 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.08194899 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.096861144 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103428564 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.08365389 seconds)
  done (took 3.576034077 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084509014 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093773871 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078241465 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101123595 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077389499 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096855888 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077650038 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.094683591 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078874257 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094307364 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079464179 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.09384016 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.07677349 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.095189679 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079012642 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.097610346 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.111507172 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077569492 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.095613329 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078111634 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.09767065 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.076683165 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094327187 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078025936 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.09404824 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.076954848 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094068644 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077456725 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.094677338 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078203933 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.096711951 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081315481 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094278904 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.10057882 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.080815172 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.093675566 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.080549746 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.094100218 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.077021189 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093825503 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077626608 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.093916304 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077371601 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101016815 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.077906771 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096664156 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.076972979 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096339762 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.077628068 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097498601 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.076474513 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094416951 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.096346815 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.079075772 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.09741351 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.076566431 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.094393636 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.076685609 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095464696 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077496928 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094081261 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077235003 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096463481 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.077604739 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.109242281 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084055531 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094509327 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.096404613 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.078466825 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.096546894 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.078971564 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108194397 seconds)
  done (took 7.103618118 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.133872856 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.124348804 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079382367 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096604656 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076136719 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.094773701 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098940256 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077752015 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096601973 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084205141 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095549571 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079529933 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096323127 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09262439 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095257984 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096095949 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.083445735 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092472752 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078817462 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098169457 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07832281 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097657592 seconds)
  done (took 2.807559859 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.205936642 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101957505 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140666933 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.105654609 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082444966 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105638176 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101306337 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083807129 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101510801 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08244483 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098928162 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103395665 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082212335 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098684382 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100203104 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.082555153 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101569233 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.082963351 seconds)
  done (took 2.623257095 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.09226729 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.097743338 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.120373401 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.08000505 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.206648814 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.082352127 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102575819 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106212232 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.081419836 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097658004 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.08976541 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099175127 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.099802842 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079958804 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099734378 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080235889 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100262635 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080823388 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105977939 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102765695 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103119432 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089611392 seconds)
  done (took 2.964322625 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095703838 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099350788 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.117856771 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.082737969 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094245317 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079170018 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.104931532 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.08011106 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.103360815 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099322734 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079784295 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096073586 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.085404371 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097071305 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103336236 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080663542 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100141575 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080451964 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099437384 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076729503 seconds)
  done (took 2.623011648 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.100826854 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.098483081 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099002887 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090879972 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098728077 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081446967 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107112002 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.098855884 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081315576 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123135329 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098751351 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081537027 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107574597 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.104755931 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098396153 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090521575 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107585362 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107703851 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082483918 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098631821 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123225565 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081486584 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106970624 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09881445 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081469223 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.098977605 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098804288 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087994395 seconds)
  done (took 3.504078274 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079906216 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097639682 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.077713353 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.095661171 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.077353717 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.095741101 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.077653766 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095296082 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079680677 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095363199 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.079949468 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.0981994 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080568243 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.097758103 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080473303 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097597854 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079818533 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.095393694 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077537725 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09484904 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080365641 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097851098 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080244717 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095401561 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078278975 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.097255677 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077601185 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.094427582 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079811853 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095319036 seconds)
  done (took 3.401019179 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089298242 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105438363 seconds)
  done (took 0.964199904 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.077424445 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113570812 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078622509 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.101752657 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085262146 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098198826 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106565767 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085505833 seconds)
  done (took 1.517278606 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095686857 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.108780008 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.081886109 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.111157819 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.108691975 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.09800438 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.16861416 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.099926962 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.105801097 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.078557321 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112910925 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.079880265 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.104591627 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081709801 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.10449503 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087569712 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.095583943 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.104516181 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.084248559 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.096845802 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083238296 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.106489884 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100167359 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.08110655 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.099638239 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090158503 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.111389295 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.100180245 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.083814811 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106793532 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.08806765 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.09263871 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.080832912 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099389289 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079875037 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.108596588 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115780706 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084432777 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108002899 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100134128 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091266958 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094086754 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.085683706 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.104556688 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10846444 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.081310702 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.099907401 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077024533 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.099562066 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.082894522 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093758062 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081236486 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.092803758 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106070324 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.084647135 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109643705 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080264761 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.101156001 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.101113997 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.084832976 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.105503893 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.08299438 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.100928456 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.081060249 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108850091 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.10304167 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090920524 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.094338566 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.075309857 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.097611321 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.091914414 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.120411478 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.105761961 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.082070356 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099629931 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.078908041 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.101759983 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100528451 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087259787 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.105094229 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.08220695 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105672821 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106503172 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081412036 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.102230316 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.090520789 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.096671895 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.101387413 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.079533291 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11636946 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.079971479 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.096333228 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.078690458 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110546355 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.101940762 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.081766903 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.09716281 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088918803 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.093069244 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.08281837 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10022212 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099590076 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.092731837 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105260217 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105716787 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.090521319 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.105760223 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082331411 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.102839547 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.079372095 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099992268 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.098378774 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.088872813 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.094033681 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084428263 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.100082572 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.082556693 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.107940004 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.097374056 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.081532526 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106751548 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.087630118 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.097809355 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.078387372 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.101413956 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.099246244 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084809256 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.108556162 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.080028926 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.095267418 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.077901181 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.102600198 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.099318736 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.085430691 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105416368 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085690703 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.093455028 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.079949738 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.104510389 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.109258473 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.082272162 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.099272754 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.088182739 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.100645892 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.098431052 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.088398097 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.102401516 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.080770292 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.105021879 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.08218402 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.094610457 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102321342 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.084986598 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.097850141 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085244598 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102895149 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.084276727 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.100460989 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.079959615 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.104926447 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101163725 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.080780864 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.098824046 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.08072079 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.109503634 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.101349846 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.076577026 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.096779802 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090355895 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.096712339 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.082240388 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.098222865 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.08460898 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.101083496 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.097711733 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.081514925 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.101646973 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.093493075 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104330614 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101281702 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.087702663 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.110376149 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.081415597 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.102854693 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.081316387 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101232226 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.100977595 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091341588 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105536816 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105471165 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.083422232 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.096541968 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087718168 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10730943 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.080782534 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.096558291 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081268192 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.104058394 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.10550711 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.085691506 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.100403459 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080232715 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.099984907 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103862548 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.084737402 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099228261 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.080946362 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.104613527 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081991504 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.10640188 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100596584 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093160036 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103940893 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077046042 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104018015 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097807386 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.087360136 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.094347419 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.079963115 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.098722249 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083215664 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.098936747 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.084627564 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.093990151 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106876422 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089878206 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.100064711 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.081941186 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.099747968 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089141511 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.101530257 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085894919 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.102886474 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.106656937 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.0928027 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099046735 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.084800677 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.110614586 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.099949777 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076033763 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.105213851 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.08095778 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099167618 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.080486707 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.097674066 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.084436169 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109098614 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.107413768 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076210127 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.102660862 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.080490407 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.098720324 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.095250336 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.087229639 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.102878912 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.082964458 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.106982616 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084488075 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.101336392 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104554788 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.081509129 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.100923406 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.083773229 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103714733 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083082771 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.102876298 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081538591 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.103666006 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.09989125 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080238788 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.102036404 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.082751121 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.100254078 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088492116 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.099274745 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100518616 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.084988583 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100965094 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083261697 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.100364106 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.082539401 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103893896 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.082647356 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.100680771 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.102770949 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.077261097 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107195298 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.081952282 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108163659 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.08259449 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.096877461 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.10546701 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.084198091 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.105731976 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.082982904 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.101081184 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083504866 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100400538 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.103926895 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089054402 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.09809481 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094110511 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109038864 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101036353 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.084993568 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.100871647 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.083731764 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.09955065 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.083700394 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101236761 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.082056654 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100929428 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.104773579 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.085397856 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.100731406 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084300926 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.101085785 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082362851 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101425709 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077156477 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.100234074 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.081722086 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.100983132 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111282693 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.08409794 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.099857766 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.08153512 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102259092 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.099636557 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.079653573 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.109578164 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091321344 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.101393802 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108397704 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081661177 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.102534281 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093411159 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095724885 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.080727563 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098266641 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.098220928 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090231187 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.10129399 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.091584937 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.100731662 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.081475476 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097920622 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.101010105 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.080653908 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.096057061 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.079884983 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113007528 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.082044833 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099500469 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.082068148 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.103835355 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083180815 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111762949 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.099440392 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084066662 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.10050448 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.07969323 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.100796431 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.081427455 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.103997871 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102264589 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.079625988 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.098357135 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.082759251 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.101251264 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.084238461 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.099988189 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084234648 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110473855 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100069807 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.085900213 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104410889 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.077607834 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.103612611 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.082918522 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.100185246 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.081006115 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.104588633 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104050607 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084231263 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.110080934 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.082479138 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101657612 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100860706 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.080072948 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101319391 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.083038041 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101766485 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.08174886 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102898553 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090544228 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.098256729 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.103900042 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082443845 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.100938059 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.09047619 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.10173775 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.08569667 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108833239 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.100921062 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.08467973 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110087891 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086123069 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104332205 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102327498 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.083948554 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107055482 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.082098842 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.107440856 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.082797521 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.102346433 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.102740262 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.080322185 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09995582 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.08374536 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099601341 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.088451555 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.10223323 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.081504218 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.099796017 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099502835 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.083675986 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104745286 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090565128 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.103856536 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085290327 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.096470518 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098825791 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084108508 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.098647084 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084736489 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.104511344 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088431024 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.103290286 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.08279648 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.100997193 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.110852409 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088438242 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.105108545 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.081174183 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.105423785 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.102328811 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.085119033 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.101932192 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.082620782 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102389258 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.087431061 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.103110931 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.082138501 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109296237 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.105417748 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084485107 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.102802216 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.083497788 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.101547285 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078784895 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.101694989 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085423607 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106409638 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.103750406 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083572597 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112365025 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.080613044 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.101340651 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10558005 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082657751 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.105842636 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.078369163 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.10317876 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084536844 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102566738 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078198247 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.100467443 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.099545383 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085822798 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.100613614 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078372848 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112707889 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.09159287 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.105267443 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100651937 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081514717 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.096874181 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.078133748 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101581962 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084258681 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103301164 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.112271308 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.081583679 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.100778652 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.077705808 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101808141 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086015965 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.104795357 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.079949253 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.096918451 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.081091344 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.104970627 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.107448359 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081739565 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.100919692 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086922698 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.104556704 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.080943222 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.1047079 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.098174382 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.086885503 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115074263 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.084039041 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.1017304 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.10875633 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091618709 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.102135473 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.078369951 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.101918352 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.087261768 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.101898415 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.102702475 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.084680098 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117714638 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085431189 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.100661173 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.100884033 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.085700668 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.100844676 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.091415051 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102760475 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084240806 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.106399934 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.103424135 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091516233 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104460414 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09106955 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.10438766 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.104863623 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.081686909 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102048353 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.080793711 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.100419311 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.084511505 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.10253939 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106632726 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.091512135 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.100780909 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09431162 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.112161053 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.104573253 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.080646322 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.10150781 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.083114634 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.097134301 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.085102916 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100115531 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.081301887 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.099742005 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.082090396 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.104317882 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108230066 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.084722682 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.102560019 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.083594009 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.096010914 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.086387122 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.104015273 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085151973 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.09915372 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.101787742 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.08478589 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.105900514 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088512518 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.099715966 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.085419235 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.104138834 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084518233 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097955623 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.109364053 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082500485 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.10435528 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.083266711 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102921194 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.084846307 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106491515 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109679004 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084531099 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.104708937 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.09270888 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104861439 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.080802709 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099561966 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.108744064 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.082160654 seconds)
  done (took 57.288805484 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145467405 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080526444 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098255286 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079061783 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111311787 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098486059 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078686318 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098430948 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080192329 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10140765 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079611331 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097965438 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107951194 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12336894 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092819496 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10295034 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09806202 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080180559 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097796715 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08008694 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.107779984 seconds)
  done (took 2.864813958 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.103331724 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.119591154 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114496517 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.117165032 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0895905 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.114955823 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113343072 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113977964 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098596733 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.1101638 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116665152 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114465304 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091445123 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.109822738 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109818737 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091842037 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.117047802 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108963845 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.114576666 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094166053 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111520003 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.112721684 seconds)
  done (took 3.210405233 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.083513368 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101625467 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084964406 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.096475847 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.082814075 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098019456 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.086851992 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.100099829 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086759567 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.101901221 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.100890445 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.081897397 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104426661 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079098396 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102868753 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081013608 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.152451313 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.106020567 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082352972 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105602604 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.097806465 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085630708 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098201385 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.07950638 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.100865777 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087276431 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.102769324 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081494405 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.101973998 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082096825 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103203305 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.100558165 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.084529042 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102315096 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082613595 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101293877 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083931964 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.10279167 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079184801 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100181791 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.083573556 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098575891 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083329005 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104201582 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.1008559 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.080637385 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.103617949 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.083676531 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097629723 seconds)
  done (took 5.438084107 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.10272492 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.158941917 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.084993693 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.141544851 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.118879827 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.111807836 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087078274 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.140954938 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101044666 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.084754468 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.121200302 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119686866 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102386857 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.08860662 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.10637511 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102175845 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084750351 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101973705 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.088142002 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103333654 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108202025 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.0908188 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.11907964 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117147186 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107251671 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.082436917 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.101980767 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.089420391 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.117381707 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.108326044 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108248374 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090625658 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.119765554 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.107998051 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083366357 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.106028322 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121223865 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.084140728 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.106334536 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100003808 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086112187 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.107472427 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109243157 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.101603474 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10344029 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.10873997 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084061503 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.099587173 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.11667285 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.085873098 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.111878053 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119218417 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.087829602 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.104396783 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.10784894 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.10034834 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.103776765 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101371398 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.086808091 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.116985562 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100152236 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088126054 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.118243958 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104775501 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.090858182 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.118866936 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.108603875 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106653407 seconds)
  done (took 8.068340526 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.092992364 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110393717 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120566975 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12046469 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090458235 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.109652413 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110296777 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091170777 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.109897104 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115189853 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110817024 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.132747337 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085727235 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114166706 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110351718 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091214317 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110713367 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110219877 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090479039 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110122552 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111053861 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119781459 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090992302 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.119701057 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140219923 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105299374 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090363426 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.110452095 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119710184 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110244687 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122869839 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091249518 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110875975 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.12030644 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.122562668 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090506716 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102988014 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109730401 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.090952057 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110183272 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104737231 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119479207 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091043129 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105129418 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109990998 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.090786488 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.118200026 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123547428 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113205189 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115297507 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.091595439 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119879009 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110453965 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090667476 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.119538167 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.145074049 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11965263 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120311721 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111624003 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.119062186 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.099674137 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.12704167 seconds)
  done (took 7.628605742 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105744342 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.113468181 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.116052687 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099777072 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08221176 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107576053 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082692424 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101605658 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.092874051 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.113628432 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115516413 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108425412 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092219472 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115502467 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.10793486 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110573422 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088461359 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108387287 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112954936 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088107868 seconds)
  done (took 2.903924809 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.09290878 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123034681 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084891234 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111058992 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107490152 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090567784 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106187044 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106131086 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085608952 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106870032 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095306707 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115633032 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104009384 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091212874 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115649042 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110819368 seconds)
  done (took 2.489766045 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096303998 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.115378713 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120025465 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084413813 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104736939 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.101485488 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.084479761 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100440743 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.080126259 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.119961939 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084375051 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108070112 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103720665 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083252644 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101190197 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088065007 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100779828 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082377521 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105110728 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.118092821 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096271834 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.10339478 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105159092 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086581686 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103971387 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090724526 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105429962 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102080944 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083242167 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104663526 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085590687 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.112292009 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.10054304 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083239697 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102413492 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082566026 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104175057 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084393531 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.10709606 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104215293 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083065017 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.103601573 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084654108 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105640939 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.10066998 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.085343175 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101223875 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091408646 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102774429 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085178809 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.104568779 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107103789 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.084887451 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115119988 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.108032997 seconds)
  done (took 6.236585623 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098308301 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108393676 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.079970864 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101939499 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.086796894 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.106587623 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107865563 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.085739694 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106656316 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082277902 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105710367 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.087196388 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105738524 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108513049 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086464616 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107614238 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080469035 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105988044 seconds)
  done (took 2.596368104 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090887066 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104768052 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092056191 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.104549158 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084764385 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107506109 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080535532 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103254758 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103240699 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084442022 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105325047 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087189243 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102454202 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.08755726 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105024611 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084578976 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107345141 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103079392 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.084518736 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100120686 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086677938 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102584368 seconds)
  done (took 2.958514797 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.110926534 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.119245571 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.09025197 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.22354163 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.099910604 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.12846647 seconds)
  done (took 1.620493826 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108485213 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119406462 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.1056525 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107119851 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113814293 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106610077 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086741899 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106765062 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117014059 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100946211 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107824213 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116107031 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117500007 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096450548 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11347058 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11291401 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107077721 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087242058 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104601096 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126328167 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087096223 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116282326 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106566108 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086747437 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107229755 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11679303 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117699635 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121092101 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086500801 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116033942 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114146703 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087156926 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116647522 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12053464 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109319242 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096562928 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106873562 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127406355 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11294386 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09531947 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.107773045 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113599088 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09631913 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113796039 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116238548 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107698378 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092638931 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107299072 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107510454 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133325223 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093257933 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116670766 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113889567 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116633289 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117511627 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133397281 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101060046 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116692915 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113801324 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121721703 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11666245 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09343476 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116390302 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12150313 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113741424 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118715474 seconds)
  done (took 8.083634227 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101375019 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.124738094 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107528165 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121920484 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096611326 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106389174 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107102138 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087836273 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106897413 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106487338 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.149831989 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087880431 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116248417 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116422144 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107910428 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087096974 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107024222 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116040923 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087389789 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133576499 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106916262 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116382607 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116439887 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096262189 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122345282 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11319181 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107939859 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088357661 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107203011 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107947248 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092886287 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108250251 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117110533 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086627062 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118071325 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107322888 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107074275 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092877653 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107653763 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113621412 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096266098 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127798576 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107227501 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107696609 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121362765 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086617305 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107827066 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086898059 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107577537 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106570472 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12159205 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101829157 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121269784 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11596215 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108845729 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08823625 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107967207 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108037648 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087181126 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113798 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116373176 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107759737 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134148536 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087617043 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108034792 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116716388 seconds)
  done (took 7.966778602 seconds)
done (took 154.071995637 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.213305781 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.196956291 seconds)
  done (took 1.262071156 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.085824073 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.135184827 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095898588 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168234309 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085222111 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.140024069 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138389412 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.09714544 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106258743 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085583457 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.10533108 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087589505 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171170244 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.08567572 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.105871579 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.106951362 seconds)
  done (took 2.658806617 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.112716538 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.254351415 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.121953353 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.104671884 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.088535753 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109824798 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.083545111 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.111240898 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.08927207 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.103989335 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.088210184 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.105572741 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.084016272 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.104935907 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.0885161 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.108472944 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.104113665 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.086936274 seconds)
  done (took 2.810132755 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112505791 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145384787 seconds)
  done (took 1.122035139 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.241450515 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.159699853 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.225988007 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.473582797 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.281402514 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.354227488 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.196068935 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.208435087 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.160238493 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.207381064 seconds)
  done (took 3.365035957 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118749616 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.181727948 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.314748452 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156016295 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106298928 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.126357657 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.154550566 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130134121 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.122650774 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100749723 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.121255263 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.11658679 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.136952573 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094341203 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.114946743 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.11675324 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.118740322 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.112946925 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114589496 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.095321495 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.136995311 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105873562 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.093811562 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.112328262 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.118009857 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.097236586 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105013686 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.083891723 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.115131998 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113530282 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.092054412 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124183793 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.117806944 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.15250623 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.122657725 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.153152409 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.117476448 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.089942038 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114518867 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.089563387 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.117725344 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.117635474 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.124334776 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.096133667 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.105179841 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.096885335 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105637631 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.084771619 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.113741044 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.117752817 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.093187826 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113786422 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.152605399 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118504994 seconds)
  done (took 7.332097598 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.7829669 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.155921763 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090123723 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.873626217 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.135547335 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102839556 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.766770394 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111057402 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.253673144 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.749793886 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.131927481 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096905777 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.227723962 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.255340932 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.92441358 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.286894786 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.635292125 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.125861405 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151369844 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.152363849 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117429297 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114274965 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130979087 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.42853797 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.115738973 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089944726 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117855362 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.118256614 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160255727 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.124924779 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.091754388 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.197345936 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.246383919 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.202939754 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.094388567 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.110286656 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.088077721 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.189251082 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261976999 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.193710787 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179528046 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108113021 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089496719 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.12228018 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133008806 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086846694 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.182077906 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.173920589 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.170460841 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114765763 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118983948 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098530651 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.119980718 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.163565003 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.122055219 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.309457167 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.315165458 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090377677 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120830562 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.125434254 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.236336227 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124231005 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.22435295 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138970906 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.189745035 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.110716328 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.77757643 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.168665615 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110853564 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095093271 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119100823 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115393902 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.098570379 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.165907646 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.405294163 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122372335 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113291379 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088968302 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.227379086 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102777966 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11067871 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161525799 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116064531 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.098513737 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124020699 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121614477 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.170142411 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.25032112 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.101022256 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120012734 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115242763 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.103869405 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116313647 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.212249812 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218092142 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.161639735 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.229541771 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100644725 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.184242724 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.167138231 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118902079 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.170706445 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.11944833 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100958459 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121486556 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.214700072 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.144514021 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101860706 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115418923 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117941361 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.14735433 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126246779 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096123597 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.169640282 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.476880234 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.168073653 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.108379602 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126385816 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097913591 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161501922 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117973041 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262584788 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121182156 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.167774275 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097790056 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.108232663 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119647811 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.163450633 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120652585 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099660188 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121123753 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118242633 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.234709531 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.214227253 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121034182 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.221163088 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183085688 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.116967884 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172011452 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119992806 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167401204 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119199594 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.100158911 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115131931 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.768691799 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.102388128 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120548031 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115001467 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.185377882 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088973027 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.122876592 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.123227847 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086717689 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.778177501 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125342547 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098683241 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.123584075 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11762458 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.11961463 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095456971 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115147736 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.16021381 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228900055 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119439742 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097671612 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.123934889 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.160536017 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.115969303 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.123748306 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.103395966 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124510267 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121430749 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093625719 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.123505971 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167474538 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.183984587 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.216358403 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.571783264 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.110888071 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.12402397 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.204787436 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111771731 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.286858412 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09744075 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.2239935 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182379803 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.09933146 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.317946571 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.164268567 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.185908976 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.126728344 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.171383031 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.108627152 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117195394 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.164109206 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089594298 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117410324 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.161475107 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123888961 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121109546 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.952073136 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090267681 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.224369988 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.109317925 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.169200411 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116598492 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11898397 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.26959228 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111726663 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126522176 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.1643057 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11406455 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.102443899 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.864819119 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.12512365 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.100315519 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.116920749 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.219761734 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.163799228 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118855892 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118497218 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097997993 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.160859898 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.230700813 seconds)
  done (took 43.772918087 seconds)
done (took 63.180558701 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.277866322 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216400453 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.266475643 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169171224 seconds)
  done (took 1.888463289 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.170258017 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.149112042 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121598559 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107101847 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.150403608 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084285316 seconds)
  done (took 1.66912029 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.359810437 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.274312771 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.24104217 seconds)
  done (took 1.765522558 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.289491903 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.244802794 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.470334188 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.323208089 seconds)
  done (took 2.336575699 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.207975138 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131873195 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110050866 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103947654 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.195966282 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.246038041 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.141660889 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.20060527 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.099063592 seconds)
  done (took 2.371244121 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.195912492 seconds)
done (took 11.118413865 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.166740322 seconds)
    (2/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.31469 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.183873902 seconds)
    (4/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.230309808 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.180930009 seconds)
    (6/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.115589216 seconds)
    (7/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.09533551 seconds)
    (8/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.246035341 seconds)
    (9/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.120117458 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.140175939 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.111613927 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.125325555 seconds)
    (13/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.226026037 seconds)
    (14/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.098449682 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.121113606 seconds)
    (16/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.120686429 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.095629893 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.215715961 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.162194349 seconds)
    (20/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.144752206 seconds)
    (21/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.248556081 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.139615742 seconds)
    (23/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.145660489 seconds)
    (24/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.18196002 seconds)
    (25/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.098570747 seconds)
    (26/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.190644788 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.107888142 seconds)
    (28/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.261060724 seconds)
    (29/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.178092619 seconds)
    (30/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.16300858 seconds)
    (31/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.280882549 seconds)
    (32/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.168084883 seconds)
    (33/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.119342207 seconds)
    (34/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.136054479 seconds)
    (35/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.125725243 seconds)
    (36/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.138527503 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.093342604 seconds)
    (38/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.234078813 seconds)
    (39/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.125650658 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.135069793 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.125150939 seconds)
    (42/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.108985525 seconds)
    (43/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.209751398 seconds)
    (44/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.092425092 seconds)
    (45/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.113993449 seconds)
    (46/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.170940675 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.112703227 seconds)
    (48/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.13930861 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.115697826 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.093457074 seconds)
    (51/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.116038836 seconds)
    (52/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.090030835 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.136869027 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.131533467 seconds)
    (55/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.096322568 seconds)
    (56/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.188158889 seconds)
    (57/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.109916005 seconds)
    (58/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.087161947 seconds)
    (59/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.106890157 seconds)
    (60/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.111068095 seconds)
    (61/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.116594996 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.086986638 seconds)
    (63/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.116687133 seconds)
    (64/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.108896432 seconds)
    (65/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.249874596 seconds)
    (66/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.126111888 seconds)
    (67/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.215190821 seconds)
    (68/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.116902241 seconds)
    (69/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.066716551 seconds)
    (70/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.183340682 seconds)
    (71/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.117528128 seconds)
    (72/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.112898948 seconds)
    (73/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.099991484 seconds)
    (74/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.185554487 seconds)
    (75/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.169790145 seconds)
    (76/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.216520402 seconds)
    (77/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.118114086 seconds)
    (78/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.166105741 seconds)
    (79/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.08949484 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.134610589 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 0.086449876 seconds)
    (82/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.114495677 seconds)
    (83/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.066785505 seconds)
    (84/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.085148454 seconds)
    (85/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.191013549 seconds)
    (86/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.089792669 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.112096192 seconds)
    (88/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.109323363 seconds)
    (89/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.066418481 seconds)
    (90/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.100045526 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.169147532 seconds)
    (92/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.10077005 seconds)
    (93/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.177104298 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.140043124 seconds)
    (95/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.17529739 seconds)
    (96/309) benchmarking ("sort", Float32, false)...
    done (took 0.173394708 seconds)
    (97/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.15223697 seconds)
    (98/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.072416898 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.143670559 seconds)
    (100/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.096332336 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.134570571 seconds)
    (102/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.134220246 seconds)
    (103/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.066776671 seconds)
    (104/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.109779276 seconds)
    (105/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.066106016 seconds)
    (106/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.155275435 seconds)
    (107/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.169170949 seconds)
    (108/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.110988059 seconds)
    (109/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.163364118 seconds)
    (110/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.160646899 seconds)
    (111/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.090231787 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.086215336 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.137570653 seconds)
    (114/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.066073011 seconds)
    (115/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.138476069 seconds)
    (116/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.096687338 seconds)
    (117/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.222644623 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.10924156 seconds)
    (119/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.163683973 seconds)
    (120/309) benchmarking ("sort", Bool, false)...
    done (took 0.204284265 seconds)
    (121/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.065929955 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.094985904 seconds)
    (123/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.099705734 seconds)
    (124/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.082113067 seconds)
    (125/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.089435036 seconds)
    (126/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.094411315 seconds)
    (127/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.174488028 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.11399212 seconds)
    (129/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.104961729 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.139346252 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.309830091 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.116193723 seconds)
    (133/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.124125959 seconds)
    (134/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.099975335 seconds)
    (135/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.095352394 seconds)
    (136/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.115097394 seconds)
    (137/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.093537753 seconds)
    (138/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.177304055 seconds)
    (139/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.090702824 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.09319828 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.109383439 seconds)
    (142/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.091472725 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.108538546 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.097208429 seconds)
    (145/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.209886716 seconds)
    (146/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.149626098 seconds)
    (147/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.114224577 seconds)
    (148/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.076571768 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.107705905 seconds)
    (150/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.117209541 seconds)
    (151/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.066489031 seconds)
    (152/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.159580676 seconds)
    (153/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.138381344 seconds)
    (154/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.087299976 seconds)
    (155/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.204676028 seconds)
    (156/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.118635927 seconds)
    (157/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.121159991 seconds)
    (158/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.118393562 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.085712362 seconds)
    (160/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.119696892 seconds)
    (161/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.178294935 seconds)
    (162/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.086110709 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.108333019 seconds)
    (164/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.09949989 seconds)
    (165/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.190766802 seconds)
    (166/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.203386483 seconds)
    (167/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.09450033 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.110295374 seconds)
    (169/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.118126596 seconds)
    (170/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.110445993 seconds)
    (171/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.119021174 seconds)
    (172/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.086926336 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.109214703 seconds)
    (174/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.086614925 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.134452331 seconds)
    (176/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.097008691 seconds)
    (177/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.115940441 seconds)
    (178/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.100057548 seconds)
    (179/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.205069222 seconds)
    (180/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.090966917 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.188322236 seconds)
    (182/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.093782814 seconds)
    (183/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.178538719 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.110597358 seconds)
    (185/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.101383863 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.08620737 seconds)
    (187/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.119845729 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.134296879 seconds)
    (189/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.067039887 seconds)
    (190/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.086966782 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.13074655 seconds)
    (192/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.066702781 seconds)
    (193/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.089852763 seconds)
    (194/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.100728485 seconds)
    (195/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.119975621 seconds)
    (196/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.189215268 seconds)
    (197/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.067144498 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.164931289 seconds)
    (199/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.065997133 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.109681193 seconds)
    (201/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.085673411 seconds)
    (202/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.112499296 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.15868285 seconds)
    (204/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.09354246 seconds)
    (205/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.212698261 seconds)
    (206/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.07566142 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.109042798 seconds)
    (208/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.088385669 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.148154878 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.118511511 seconds)
    (211/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.136485284 seconds)
    (212/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.135572738 seconds)
    (213/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.093486722 seconds)
    (214/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.091166358 seconds)
    (215/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.06667557 seconds)
    (216/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.124170355 seconds)
    (217/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.096707103 seconds)
    (218/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.115340634 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.094797082 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.116840454 seconds)
    (221/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.127997706 seconds)
    (222/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067236447 seconds)
    (223/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068571804 seconds)
    (224/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.091693359 seconds)
    (225/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.06750488 seconds)
    (226/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.066573431 seconds)
    (227/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.177577202 seconds)
    (228/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.066325079 seconds)
    (229/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.222086836 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.116631407 seconds)
    (231/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.087763778 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.157542829 seconds)
    (233/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.181286473 seconds)
    (234/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.213294148 seconds)
    (235/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.090232985 seconds)
    (236/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.12790377 seconds)
    (237/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067821245 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.108714738 seconds)
    (239/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.075689118 seconds)
    (240/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068899206 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.189246346 seconds)
    (242/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.115902733 seconds)
    (243/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.087355657 seconds)
    (244/309) benchmarking ("sort", Float64, false)...
    done (took 0.171996102 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.153509675 seconds)
    (246/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.21607461 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.136613505 seconds)
    (248/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.088619207 seconds)
    (249/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.067232283 seconds)
    (250/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.090806934 seconds)
    (251/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.087864376 seconds)
    (252/309) benchmarking ("sort", Int8, false)...
    done (took 0.18858668 seconds)
    (253/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.109952069 seconds)
    (254/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.077265163 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.13600372 seconds)
    (256/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.068312523 seconds)
    (257/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.091204299 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.085810318 seconds)
    (259/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.112692979 seconds)
    (260/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.100866115 seconds)
    (261/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.117521886 seconds)
    (262/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.092605688 seconds)
    (263/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.109925366 seconds)
    (264/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.094728675 seconds)
    (265/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.090281832 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.086918096 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.115817093 seconds)
    (268/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066829566 seconds)
    (269/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067893794 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.118516467 seconds)
    (271/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.066715813 seconds)
    (272/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.116654938 seconds)
    (273/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.085304166 seconds)
    (274/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.090345007 seconds)
    (275/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.068664436 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.177731452 seconds)
    (277/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.090755802 seconds)
    (278/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.12811667 seconds)
    (279/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.196065392 seconds)
    (280/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.086007586 seconds)
    (281/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.11645379 seconds)
    (282/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.093990277 seconds)
    (283/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.090635419 seconds)
    (284/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.178896736 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.128817277 seconds)
    (286/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.118105038 seconds)
    (287/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.066447045 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.118674729 seconds)
    (289/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.089585409 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.108935444 seconds)
    (291/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.0679016 seconds)
    (292/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.124140578 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.084653385 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.118729678 seconds)
    (295/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.093224359 seconds)
    (296/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.090786805 seconds)
    (297/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.089942757 seconds)
    (298/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.076755267 seconds)
    (299/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.090832756 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.092199387 seconds)
    (301/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.090633338 seconds)
    (302/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.06638248 seconds)
    (303/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.067206471 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.144499436 seconds)
    (305/309) benchmarking ("sort", BigInt, false)...
    done (took 0.219536054 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.135362684 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.093299149 seconds)
    (308/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.110373628 seconds)
    (309/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.0683436 seconds)
  done (took 39.666363441 seconds)
done (took 40.560443297 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099387732 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.136300829 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096064436 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.134443769 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.122926744 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091189082 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.1180921 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098141335 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123415537 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125368869 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097834352 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.094405693 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096149552 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120098681 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096264334 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.134768641 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123585718 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093651568 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118342259 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085538325 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119116301 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086600739 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.11240362 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069986651 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122265061 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093691714 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116912425 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119103002 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.08647789 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110971213 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090085007 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.118233438 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086110516 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124094907 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092703398 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119309205 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096920249 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.120519321 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.112557336 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086062848 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118211199 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086590151 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117435256 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094651233 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116313699 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.09259703 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.1187843 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099083154 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.13597388 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113480307 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095279414 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.120648936 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096289029 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.11773023 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090648519 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119700053 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092049127 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.135144317 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.120007981 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089456295 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.118183856 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.09426451 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116226539 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.096188429 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.118370344 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.12128725 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.09811075 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115909195 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097393887 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.117912222 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086153794 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119900648 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.115617152 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.086877293 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.119750379 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.097181855 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.109901743 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.092113449 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.11798067 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.091345651 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110287069 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089628521 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112413857 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093226422 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112365201 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.06986074 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.114846691 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.092547264 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.11045419 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.095932385 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116985308 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.09426774 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112914132 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098855076 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.109963617 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.115614216 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.087126322 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.110809647 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.088235655 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.114645554 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.086733919 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113462815 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.095532598 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.112449542 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.092673325 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.123488526 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087333097 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117557832 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.085948475 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109935875 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.125892014 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.096185664 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.111185205 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089534633 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.110277562 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.093837659 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110162573 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.086791346 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.110569125 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.087105328 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.116967024 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.086912849 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.11318352 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.094606808 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125006708 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087054094 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114629899 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088929709 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110725938 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092028926 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110950316 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.110422678 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.08866348 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077880463 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112617117 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087045216 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118701284 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.088738648 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.118489983 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.112407544 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.095008474 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.11585239 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.092172546 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.117091356 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.085868686 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.098794285 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089020202 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112881897 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.089058956 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.111256287 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.088584982 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.11129724 seconds)
done (took 16.904737026 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087163138 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.183792289 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151509808 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142648344 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.106875981 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112230243 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121796078 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118933528 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.112902539 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.142797058 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110231974 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.131560926 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147764663 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086199472 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.111951836 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091049433 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113422033 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102958552 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.144721645 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133028643 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.164520814 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086469934 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146120653 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135537058 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120829544 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114121465 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112050706 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091055611 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115254065 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103506411 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132092276 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.115526646 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.087124166 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134367284 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105236902 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120031315 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.111509496 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.094103676 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.111655857 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.087054367 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.14092155 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.134276485 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.093444801 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117766633 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091088065 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.113757609 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089666649 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120566425 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.122370391 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.091185039 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127133106 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156368473 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090783966 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.120763334 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.110741967 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.098002629 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121444042 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090299583 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.114950916 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090188699 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111108951 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091082167 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127223257 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142105047 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091434945 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121116423 seconds)
  done (took 8.610659216 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.103947094 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139418537 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.129898195 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.106380544 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112228447 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088218336 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112688043 seconds)
  done (took 1.752690939 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088256774 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134401942 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.110795452 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.135916202 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132412878 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.125003566 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122895572 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.087914365 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131343797 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.088740356 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.133853643 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.152298024 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090349491 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.119742182 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.136811123 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.08727804 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136492303 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.0881755 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116749862 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.136405444 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.090759208 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134588801 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090279001 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.112761117 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102615422 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114304066 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.16315469 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093585065 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114715689 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092198317 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112319417 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.163767178 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103005464 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124383172 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11281432 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.10306205 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.127919474 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086850231 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.129093878 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093877198 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.127398436 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.114398608 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.090050395 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.111597017 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.092822172 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.124315502 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.089811743 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.114312173 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091037937 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134481935 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.088895406 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.126514819 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.113438761 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.092940161 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.114802074 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094028547 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124337675 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089861209 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133706076 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090258815 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.130766911 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.129438267 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.101868731 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130776801 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091041879 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128328742 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.127349074 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.092162595 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115194729 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.09218473 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.129617586 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.086126588 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115502056 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099072576 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114344651 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.13715377 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.11119621 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115533313 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.09818622 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.113920707 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.088725548 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114308458 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.137023285 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.092279298 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114042526 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.092444534 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116560852 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.08685832 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.11237471 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.092800124 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.112304535 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.089882863 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.116833514 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.089484149 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117317792 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.105614081 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.11480661 seconds)
  done (took 11.795344189 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090224807 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114923265 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092047975 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115155585 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090115098 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.11550082 seconds)
  done (took 1.590701715 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.113396735 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118287206 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103821611 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120339011 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157157019 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.129169883 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.104065517 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122982771 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107672111 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126869096 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129032364 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105062422 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136216557 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120706815 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.10323102 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120728706 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.130202495 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.098871261 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128246158 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09569165 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136436984 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121569201 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096526886 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.133490312 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118347694 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095733387 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127130755 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102933874 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127598475 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122614212 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096519133 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118780924 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.120618794 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.096888413 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130883805 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.09560443 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120510062 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119070175 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099474962 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.11864068 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.1308949 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096538477 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127917463 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093978005 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123469575 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121763839 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094117344 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124908085 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.130590046 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.094289836 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119287567 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095088241 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118098159 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.119017909 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.096215401 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123341093 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.093283341 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.129642588 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.121744443 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.095920648 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118806616 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094335075 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122899288 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119139425 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.10476015 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119790422 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.120995826 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096068826 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122909421 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095936799 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119263649 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.11829452 seconds)
  done (took 9.246811063 seconds)
done (took 33.948370782 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.686686048 seconds)
  done (took 1.653856393 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.71425518 seconds)
  done (took 1.683689175 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.078861121 seconds)
  done (took 18.048753432 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.499292954 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.582793109 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.816964912 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.180134547 seconds)
  done (took 3.048343213 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.943595206 seconds)
  done (took 1.933608111 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.24434038 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.231429484 seconds)
  done (took 1.451261801 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.765961631 seconds)
  done (took 1.748351442 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.347625562 seconds)
  done (took 2.323072218 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.330481932 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184968232 seconds)
  done (took 1.501095705 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.554219895 seconds)
  done (took 1.53969859 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 45.384100525 seconds)
  done (took 46.370257283 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.256458526 seconds)
  done (took 1.255980078 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.299150681 seconds)
  done (took 1.289252356 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.493038484 seconds)
  done (took 4.482050463 seconds)
done (took 89.302545853 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098208111 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127035221 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101264148 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124150852 seconds)
  done (took 1.432067909 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100160137 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120946675 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.09982545 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120496119 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.1265537 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095055561 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123999543 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100442841 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119868932 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.095391433 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121056196 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120534975 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098038865 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122419489 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093286486 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124402985 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099357895 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120727749 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.123562344 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096460242 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119235242 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098168679 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124940509 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094213185 seconds)
  done (took 3.650126444 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.098952752 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.118928713 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096396298 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118371414 seconds)
  done (took 1.42865424 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.099521294 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.141841763 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.13898962 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.10006418 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.1427013 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.135066328 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.092048789 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117336648 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.093561501 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.124824608 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090011958 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.149884303 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.138047404 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099124167 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.126538683 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.088450808 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.11722815 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.136992604 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.099223227 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.125794346 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.092513494 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124801161 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.089824557 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.138570451 seconds)
  done (took 3.794655963 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.157310717 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.151226629 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139638277 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095618082 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.156354244 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141014974 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.090677554 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141219384 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087808241 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.129558248 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118820896 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.132162902 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.127841238 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088143028 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114046822 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.113439555 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.101712172 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.12861639 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090763641 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.145162316 seconds)
  done (took 3.450108403 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.096598573 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.116949755 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.087420953 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115959162 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.09824097 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120382446 seconds)
  done (took 1.634035096 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090136585 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114608092 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.088837601 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114520363 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.093144667 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114784533 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.087573708 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114160393 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089032727 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114177674 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.088696458 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113900433 seconds)
  done (took 2.221519152 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.45610148 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.092639119 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120927582 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.11180468 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.096569737 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.114861787 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.102798767 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.118749938 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.140961999 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088638842 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115057273 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091192615 seconds)
  done (took 2.647893585 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235742815 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124622821 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.290885061 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190660531 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158795398 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170419446 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151973927 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164539507 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.198349406 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157690596 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231286928 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194578963 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150447843 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189965663 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137004301 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.144252016 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197930046 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245066584 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154820218 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203149252 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225807834 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164795489 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177688542 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150871347 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138579063 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168161572 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.094252514 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130091022 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233073201 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177555423 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187856394 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161660278 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146063947 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238183062 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249129632 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195690941 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21194146 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107916279 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.169049792 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.166178066 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263543437 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112280481 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231738103 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158191417 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130987854 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191221184 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166776756 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.172556262 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.149232589 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137871025 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195275943 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238369243 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.191888472 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137550786 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15946128 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159955803 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.166148968 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152369528 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250277393 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197531335 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202869409 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.094025234 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146614231 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191590109 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180675974 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.165967248 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.206727355 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1458604 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191554572 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18681469 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163020591 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216730085 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.182762854 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138180183 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169316978 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173551236 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169747604 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257672377 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176516831 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.121836098 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166254647 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149443468 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104411026 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.192521563 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124459817 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211709838 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150159043 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.13452942 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162421627 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159285657 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161015061 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196621538 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217970339 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120226463 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.111550612 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155979165 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.153074378 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187315142 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138705817 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157232436 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15912967 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.102788555 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20075165 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.096616801 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174880327 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.11685373 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17545216 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184401361 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.125650428 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158407598 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151518916 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.124057956 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201982628 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197196079 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140280379 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106104169 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231806472 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177262164 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.149396701 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179002137 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198795583 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.142185094 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14805924 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223785514 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21783267 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140878499 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202731972 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153548149 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134321721 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.133642239 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179423863 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155219602 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.160271098 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105724412 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.206400227 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209547601 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.124236523 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110891496 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213993076 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106310621 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131926289 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159997417 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148212037 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.138769949 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.146265524 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.124008828 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207142834 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179254131 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152522689 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167578642 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150789615 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252262976 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139954033 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.122301841 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146992166 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120188981 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.193300803 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1961252 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130753175 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23053132 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172093578 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155353448 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170349468 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107879632 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175400593 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129814975 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.11935226 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194424156 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16712018 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163223285 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.194657731 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154322262 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.207245967 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.181486026 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172692096 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174676455 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.164360523 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15907892 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.138104313 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157922814 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1641882 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.095879969 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.14276045 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.133946634 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155974613 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143549177 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106437891 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226300212 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167927394 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147980074 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15864388 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121694256 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.205859525 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.101943991 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176942998 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.203468204 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118737539 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.224064062 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191745751 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185572097 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141854113 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23395556 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.093303427 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124742939 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.141895553 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169590722 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133160895 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108467696 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165723818 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178945028 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209874176 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177042834 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162176723 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175819961 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189621037 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.122159723 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.139783907 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210812405 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175028934 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.184537457 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115717487 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.152476534 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175068677 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155570575 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254890586 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165712221 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176041821 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236406055 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.149325442 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105154229 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15037346 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183595542 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153132058 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.201774461 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11903733 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142369956 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160050971 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.132998767 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159728173 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182481736 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162208908 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216038925 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150883033 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183805362 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127743273 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164396693 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158326681 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163117093 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081390407 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173578718 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228556133 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146677439 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170181553 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190699093 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129734232 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.178242814 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210633983 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220384301 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11005038 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157707534 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15931046 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16295471 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170488879 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175793941 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158847675 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214712042 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128929214 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136838835 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139835409 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14951568 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149658573 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.105125612 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148621493 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.174334986 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.138611538 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186592978 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160495677 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156615637 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170636617 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.149589041 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.144523369 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15058207 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215866642 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174039502 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239604997 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.149040956 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179130086 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203398747 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125942377 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131986943 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.105356403 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176127377 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136597138 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215103511 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.120262578 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156510919 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179229177 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219178868 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111632238 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.119872571 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155478308 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17312078 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163363851 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151418793 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.158942049 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204293952 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.141148168 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103954295 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169660079 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156854632 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147023087 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195436919 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.107419917 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148231945 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101537934 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132608044 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163690561 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205049022 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.135471881 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.181445654 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170380785 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167628478 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164836343 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149327809 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147865951 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164634672 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201811548 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183205584 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.132638333 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157979247 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175328399 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194247639 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187608438 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.111808766 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228920844 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192155689 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.196623767 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.140643785 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167779853 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16607139 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156443062 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184384974 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134438748 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231665701 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106767029 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224687844 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152630911 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141508258 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173983698 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.147417936 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112955234 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213598923 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174642124 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135409475 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105800225 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166424864 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203495634 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153319103 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099945624 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178828178 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.125414645 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188108193 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258743287 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132983324 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152519535 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118976041 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135275068 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156174587 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157666803 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138978615 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.16135212 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206264497 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.134139296 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191123522 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228136806 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168345217 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173284187 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142590347 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.693803933 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.12999008 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19123932 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153272754 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204929146 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150357425 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171073943 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16015463 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167965687 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222070481 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159282955 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.202365311 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219971025 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.177267321 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131767201 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158402422 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161540942 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.142945992 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151598845 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165393948 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158333465 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.124920273 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.20348938 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169353139 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.133220899 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112336665 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22502954 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12633869 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212796895 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178888138 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110486772 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198138881 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184222166 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133179457 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.179042457 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233195947 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113780103 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150570539 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.132782242 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.155002215 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257592273 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.096720709 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226136649 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174631129 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158275606 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166153684 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146880507 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190667331 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158916967 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176954128 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145128638 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.158400444 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154564414 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137751374 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.10221294 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153565933 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164493718 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.147724827 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157674699 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.162871687 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192167167 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.12255902 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116997705 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157159218 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186949679 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241546111 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.136442313 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107261215 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162046818 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151424557 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.173479596 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202573599 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.108106551 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135330506 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.136186366 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.131544501 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.136506077 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153769827 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128848407 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189256366 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205426573 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.136680988 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.278646304 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112932451 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154442465 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.114873161 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.104591003 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151036243 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145613339 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155982071 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150562942 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231332882 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.145995187 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.131744749 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147777196 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.098414016 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136499863 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164286235 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164947748 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175722916 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14378737 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081181682 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157291935 seconds)
  done (took 80.349763673 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.161376068 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.129861153 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.14607946 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.20162232 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176098041 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268125489 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210358091 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.252417214 seconds)
  done (took 2.622071935 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.092186678 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145278593 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.15275521 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.13326282 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090444286 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120051885 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.329241676 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.133236037 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.090845015 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.139871451 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.147484167 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.116527988 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.506726582 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.116796006 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.117904801 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.08203861 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.115327728 seconds)
  done (took 3.702020883 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.459305532 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.709473112 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.476524034 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.123749612 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.078570343 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.133225136 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.688529369 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.207919944 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.095124352 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.482778208 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.767823494 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.178646061 seconds)
  done (took 18.481880026 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.09778053 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.121547548 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.10723659 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.135459978 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.096070721 seconds)
  done (took 1.638251943 seconds)
done (took 128.034422572 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.103415703 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.388183114 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072045624 seconds)
  done (took 1.577218091 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107011149 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136473108 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108696556 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.135549174 seconds)
  done (took 1.58443094 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097295273 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126644374 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108562728 seconds)
  done (took 1.424177172 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.321924273 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.190211963 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.142768998 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.105095152 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129948856 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102428211 seconds)
  done (took 1.425058608 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.096816029 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127166176 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.09806373 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129489963 seconds)
  done (took 1.544608672 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.0946148 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070873014 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101728932 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074516548 seconds)
  done (took 1.430171283 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.112736533 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131705801 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103997459 seconds)
  done (took 1.444675464 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.129190213 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.13882731 seconds)
  done (took 1.364745114 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.104825298 seconds)
  done (took 1.196486469 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.117515701 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.169335743 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.189898991 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.163745186 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.227988436 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.166107112 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.14253847 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.113270624 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.131227732 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.1447534 seconds)
  done (took 2.66256273 seconds)
done (took 17.497626 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103108047 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.518664092 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413450817 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117247277 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.721396029 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380084582 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.068425141 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146470532 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165967156 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093050714 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139389022 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.69973038 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.99234338 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.467539201 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.978586593 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.369881144 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.704062075 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.091808513 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.11933083 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093106113 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.051723579 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091466812 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122219486 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092678413 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.701790348 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425716805 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095497759 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.370285052 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092014214 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125931988 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.410733634 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094113876 seconds)
  done (took 17.142780591 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.093808912 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173546621 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.09852205 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136675762 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122746943 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094023744 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124846773 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094693364 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179321518 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12327927 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140051392 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092593463 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127166293 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095194986 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142105024 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09292916 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125227933 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120715002 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09324049 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122821926 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111892647 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121058247 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094234845 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122061135 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094539722 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136042542 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124175939 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093228036 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.12034092 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098633186 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128573573 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095207057 seconds)
  done (took 4.836475248 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140586673 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182198217 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128110806 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126744619 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.16842007 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.12397554 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199299467 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147068948 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153815126 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122502926 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139572717 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092477306 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157133908 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.123494686 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114480442 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121353353 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096526626 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121856649 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092859771 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123184353 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141046493 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092264959 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122623821 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092717762 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.12292406 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136752033 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09505803 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121805679 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092480656 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127322371 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100229178 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123682926 seconds)
  done (took 5.150312825 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096761914 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.128074297 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108411454 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138870597 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095008871 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125082428 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097036856 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124177245 seconds)
  done (took 2.018223779 seconds)
done (took 30.240813226 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.104042013 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.123059173 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.098871391 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135214102 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.097719157 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131391184 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.092945724 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.128374269 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.100480541 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.125949554 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.129728302 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092569883 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.12516501 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092304011 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.128730317 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.093439516 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132639022 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.096177835 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.13315393 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132625655 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095117214 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.129435545 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.098765314 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132917476 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104157131 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133125142 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.133493592 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.098488673 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122672343 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095731047 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.123795664 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.102803515 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.122397701 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.103755596 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.121762162 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.09222856 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.121604381 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.092734315 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.13343711 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.100279258 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.12496616 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.129525753 seconds)
  done (took 5.903620395 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.10698796 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.140505305 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.10409572 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.082002946 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.11601995 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081681393 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137743162 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079436921 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110619742 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.10736347 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.076891595 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106516244 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078564614 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102618692 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076908919 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075567792 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109019009 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076337782 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076580899 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106516551 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079721127 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072636403 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108397115 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079299768 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.104332398 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081283438 seconds)
  done (took 3.584286869 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.099762187 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136281377 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112111837 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.183272344 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161602635 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100409776 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132626905 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.140519309 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.107752713 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.121201299 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096081043 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149278233 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110941125 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.127956925 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092739173 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.135726901 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135259082 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093280808 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.12810003 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112760069 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.1381949 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102632781 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.142591122 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.132740745 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.09142153 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12326647 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096991833 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134794116 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097725758 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.130055871 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.125480734 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.096415358 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123266294 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.103643438 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.125531559 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094462892 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.149903109 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131838935 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.100693016 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.122799618 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.096159713 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122300536 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.112786702 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.166464975 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.121061805 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.099415759 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.129795787 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.102654858 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121540225 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.11080895 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131911467 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091512507 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.12515855 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.120994614 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.092084236 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136081124 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.09431612 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.123865331 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.102217353 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.124827894 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.10482701 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125843615 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138058231 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.091753664 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.129892722 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.091335577 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.121605945 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.091499243 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.144707599 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.093111853 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.164215495 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.122704607 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.093704876 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.131134063 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.100292745 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.12830807 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.092520682 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137400879 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.131333402 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.09660801 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.130259223 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.095659364 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.124039393 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.11063744 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.123989615 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095234325 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.123493652 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.098435594 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.125025198 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093954076 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135269661 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.122702811 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.096019194 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.139825407 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.09215559 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.123854311 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.099278654 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126990217 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.09225664 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134999328 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.128196135 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.093509961 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.131927507 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093243657 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.125225075 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.10365614 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.12743226 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.121075111 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.097470878 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.129339994 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.094305414 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.123282089 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.097085535 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.12398678 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.102563929 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.129393669 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.098230418 seconds)
  done (took 14.82236613 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.228317947 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.218826324 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.125510311 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.210180729 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.105366696 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.13444432 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.212689699 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.155098579 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.093175888 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.123783851 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.094418558 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.162303688 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.157218321 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.168460496 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.103952074 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.12285993 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.111499482 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.165326306 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.214119691 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.206328452 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.143923225 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.131496556 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.095078653 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.124401631 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.094856005 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.132464177 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.110484912 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.132946761 seconds)
  done (took 5.20570048 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.107995063 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155874438 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098718678 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144380511 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.148925985 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093315578 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.127432592 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.095058395 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135171192 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.13570911 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092468545 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.128843078 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100471 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.131980995 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123272962 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102328751 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132418925 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.09515029 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.12591274 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.096747549 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.129099861 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.131726083 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.097555928 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.12278797 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.101057379 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.12104968 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086097372 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141721774 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123446863 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115225572 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121631087 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.100446838 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.133160912 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094245707 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123424076 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095229186 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125423469 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.09543878 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.123740127 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092400292 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.120679537 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077822884 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122647492 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.13661629 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.099126309 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.110183913 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.099946387 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.128435662 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.098809028 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.12019692 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.095870013 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.1244903 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.09659384 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129838389 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.097736218 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.128182032 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096228397 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.115913369 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100539015 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125583491 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084654892 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121155666 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098068855 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.117492698 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.100638349 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128103103 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091852898 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.124859138 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097865856 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.128749182 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.12491292 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.095870159 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.121192204 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.095303678 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.127973312 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.097972911 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.126728629 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.092180776 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.122764984 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.092934512 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.105866564 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.094265648 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.10453553 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.097275559 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.121444357 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.091946402 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.124941125 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.099567682 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137875633 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.094780189 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.128882311 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.124391014 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.092356882 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.125967299 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.083386853 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.126109737 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.108391711 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140596956 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.092833968 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121078546 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.137058034 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.09872435 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.122309965 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.076317363 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.130622591 seconds)
  done (took 12.977668818 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.117213429 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.147921164 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095515426 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.136984141 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.149676631 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.116395701 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.130999687 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.099804534 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.124740038 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.110025743 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.123565713 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.102121462 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.126762075 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.132250206 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.116252981 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.131030758 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.094808864 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.13226308 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.101435246 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.159434031 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.137381038 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.107788101 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.134472333 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.093508812 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.128765262 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.106205893 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.149557987 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.134448143 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.103988642 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.138114881 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.103840117 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.150378384 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.109538754 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.128433348 seconds)
  done (took 5.304544089 seconds)
done (took 48.902215784 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.236107649 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.418996333 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.194652758 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.118967299 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.202698052 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.244095128 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.206505686 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.195623569 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.727034687 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.196228569 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.452876333 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.863134668 seconds)
done (took 60.184782646 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.238488758 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.331942122 seconds)
    (2/2) benchmarking "String"...
    done (took 1.464063975 seconds)
  done (took 3.922508315 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.693696808 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.144844756 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.458844068 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.197102024 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.1992931 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.494293266 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.855653658 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.549203886 seconds)
  done (took 28.025555428 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.196415152 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.586208715 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.857900515 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.856624393 seconds)
  done (took 18.623513206 seconds)
done (took 60.629878972 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.194585025 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.243125263 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.207874016 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.176477312 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.308373938 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.229456269 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.457868727 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.411850366 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.207417106 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.181824819 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.218076221 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.197687049 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.230606928 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.440726145 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.196153629 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.20024331 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.275679892 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.614026711 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.60176268 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.199732976 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.225785386 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.244836238 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.200211774 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.20162408 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.251625947 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.198104002 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.222574617 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.198106595 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.798184649 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.202883764 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.203766677 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.612195083 seconds)
  done (took 191.481696479 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.197290527 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.293721608 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.389244331 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.257255372 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.644374991 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.398777371 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.33939147 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.726234085 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.21836975 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.207271363 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.435912973 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.200828115 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.514240197 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.184717608 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.207714783 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.288841901 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.407762668 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.517700334 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.221204025 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.4719421 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.2060751 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.480928686 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.400550403 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.403039633 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.23423808 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.310821999 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.222468784 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.207539027 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.391041201 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.345665699 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.205326408 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.2179096 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.818872699 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.061735954 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.203806702 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.227281007 seconds)
  done (took 150.189113051 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.478822646 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.199446713 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.198220356 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.200111705 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.199725882 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.231881629 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.198964733 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.7790666 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.769083663 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.702400066 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.484758959 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.263141388 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.438883489 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.200554617 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.29507828 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.211778616 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.202871099 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.21534316 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.244258411 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.205192009 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.201349371 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.783214315 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.217255155 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.302076524 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.207593523 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.200668351 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.233386272 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.592162567 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.201357058 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.232704385 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.52445284 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.250899481 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.20220024 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.508265433 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.256912626 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.202533284 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.311705644 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.203769353 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.234226339 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.201614604 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.47234585 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.203472162 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.202001476 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.20486165 seconds)
    (44/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.201887107 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.78176188 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.201921814 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.784663155 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.206827779 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.105582182 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.202733014 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.20187938 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.37737796 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.643898765 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.214133873 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.197769255 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.201980041 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.1999654 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.198779095 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.229781655 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.361178991 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.298960127 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.213417685 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.202154607 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.228675378 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.198494993 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.252140011 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.197584605 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.380885994 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.253568569 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.320668526 seconds)
    (71/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.196095442 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.76228157 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.200916347 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.292045425 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.315487528 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.197260791 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.196440017 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.197709894 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.196834369 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.305055212 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.197094604 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.604723805 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.203652735 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.199535668 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.257038982 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.292276649 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.197303281 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.537120269 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.198758903 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.197720512 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.903706834 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.291072344 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.197351833 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.197383944 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.197577239 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.609806217 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.749291691 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.404277899 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.198586601 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.427395952 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.202913253 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.626609822 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.73826311 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.797292871 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.198246652 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.305114873 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.201903925 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.200105614 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.197638353 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.227551264 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.21525343 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.256783535 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.198834701 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.596875293 seconds)
  done (took 344.272397065 seconds)
done (took 688.547117827 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.899466332 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.849420744 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.988681264 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.863990636 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.84914103 seconds)
  done (took 10.579935558 seconds)
done (took 11.706864381 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.381963547 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.381388359 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.258727053 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.383137253 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.227632955 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.398962499 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.364464604 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.219545021 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.300834184 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.279423995 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.299481004 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.252029659 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.226734649 seconds)
  done (took 18.103077406 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.511312899 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.504543589 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.264330484 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.514289102 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.239460779 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.515012306 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.39844099 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.408866674 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.409325704 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.232554097 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.212936816 seconds)
  done (took 16.342588671 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.526729126 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.53446707 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.270804188 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.519283004 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.24532883 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.512475037 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.400336909 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.41075662 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.408171345 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.232127888 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.213105583 seconds)
  done (took 16.40375142 seconds)
done (took 51.976560509 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.208025136 seconds)
  done (took 2.338492887 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.241838801 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.404085381 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.223389305 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.212685054 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.208719445 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.210012724 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.212061913 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.208117786 seconds)
  done (took 11.050722561 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.208110913 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.204403041 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.2078201 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.207793985 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.205850136 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.206827517 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.204784757 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.204950828 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.203953426 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.207387321 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.207530899 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.207263063 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.205924206 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.205763475 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.204211657 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.207626997 seconds)
  done (took 20.430457917 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.207812614 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.206589878 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.205896311 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.20778711 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.206090817 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.205846016 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.206739993 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.205712583 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.206865041 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.206014095 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.206470165 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.206098457 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.207283487 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.20554236 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.205328047 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.206416046 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.207354425 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.206306255 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.21163837 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.205304499 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.207059724 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.206545003 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.20765725 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.206152186 seconds)
  done (took 30.092503522 seconds)
done (took 65.039729297 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.252138152 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.794586211 seconds)
  done (took 9.176306809 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.208974218 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.208049354 seconds)
  done (took 3.549639297 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.209477265 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.209714716 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.209393605 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.209253037 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.209570623 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.209261809 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.208952817 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.208274766 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.208974007 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.208826171 seconds)
  done (took 13.223389118 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.209496536 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.208568301 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.207348143 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.210971802 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.209685136 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.207298075 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.209040992 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.209630137 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.210761737 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.208175903 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.20971172 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.209055159 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.210198167 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.2085046 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.210926181 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.208381613 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.207197619 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.20834054 seconds)
  done (took 22.894265114 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.209910791 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.210196291 seconds)
  done (took 3.551529923 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.208514888 seconds)
    (2/7) benchmarking "second"...
    done (took 1.207888039 seconds)
    (3/7) benchmarking "month"...
    done (took 1.207229493 seconds)
    (4/7) benchmarking "year"...
    done (took 1.207508559 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.2081939 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.208230936 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.208579444 seconds)
  done (took 9.589183178 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.212287088 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.390051449 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.473365057 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.829633757 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.211119982 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.213628282 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.071073496 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.214908885 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.21682705 seconds)
  done (took 13.965053354 seconds)
done (took 77.078883987 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.210569127 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.217089327 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.341326093 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.214938784 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.220924806 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.500793104 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.230551307 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.326233345 seconds)
done (took 37.391563879 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.215242514 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.942354587 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.94479126 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.202069054 seconds)
  done (took 11.219764412 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.182143219 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.095146622 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.184147086 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.195085594 seconds)
  done (took 17.787001382 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.203233497 seconds)
    (2/2) benchmarking "read"...
    done (took 1.536596214 seconds)
  done (took 4.86878856 seconds)
done (took 41.21953512 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.209299154 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.208781425 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.209327194 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.205897866 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.207202833 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.208402489 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.206660441 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.207315563 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.209334857 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.208396673 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.208846051 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.209005412 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.210330214 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.206919436 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.207793812 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.20958446 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.207832882 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207999996 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.209921046 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.207795651 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.21051853 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.208382699 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.206807938 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.207547763 seconds)
  done (took 30.130794889 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.211155566 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.208759583 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.210482301 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.21037559 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.20812326 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.210554432 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.210552739 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.209448111 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.210099768 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.211075005 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.208385948 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.209004107 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.210485566 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.208364461 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.21187031 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.209477046 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.2118304 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.209687712 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.210681765 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.208823137 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.211179823 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208434588 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.20945218 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.212906829 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.20856975 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.208654742 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.211740863 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.20978091 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.21267006 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.209872468 seconds)
  done (took 37.435672453 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.2171616 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.22006374 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.211726509 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.213000084 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.212323671 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.213707846 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.211334394 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.21180938 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.212694203 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.213760959 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.213216409 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.211891261 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.212448915 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.21219511 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.212682908 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.212397728 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.213356936 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.213104407 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.213053923 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.212863275 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.212671136 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.211620009 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.212123607 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.212158296 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.213819048 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.213838805 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.211860807 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.211919873 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.212513873 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.213761974 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.212597564 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.212952161 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.212679774 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.212680008 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.213251253 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.212176496 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.218223228 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.219839096 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.212996935 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.213667737 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.21218673 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.214296865 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.212918353 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.213999417 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.211650251 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.212093583 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.212573542 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.212266119 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.214274976 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.212692491 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.213859161 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.212336752 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.2123606 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.211869705 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.211857139 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.213057378 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.21168847 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.212791023 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.213304856 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.21251858 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.213648409 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.212140823 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.213270679 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.212738785 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.214050426 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.21345136 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.213431087 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.212911589 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.213499472 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.212402972 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.213264871 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.213476605 seconds)
  done (took 88.480989647 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.212895989 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.211590733 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.208923855 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.211649095 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.209580935 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.211907934 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.210077783 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213690888 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.210561396 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.213751907 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214381246 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.211981943 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.211839692 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.213606469 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.2137907 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.21100686 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.212873996 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.210772518 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.214626166 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.213812311 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.214248778 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.211719309 seconds)
  done (took 27.803988183 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.214209883 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.214702455 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.211551925 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.214863904 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.213708543 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.213421163 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.213420302 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.214210556 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.214285701 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.210891667 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.211631644 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214415551 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.210994942 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.210942898 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.211274361 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.211756007 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.214248143 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.212049926 seconds)
  done (took 22.967880389 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.211582325 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.212236941 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.212494422 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.210572792 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.211932388 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.213993303 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.211794036 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.21496204 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.212982612 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.212563507 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.213869135 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.21437565 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.213417301 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212141074 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.21469366 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.211243217 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.214747581 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.211192404 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.213024352 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.211438978 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.21108473 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.213494016 seconds)
  done (took 27.816895289 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.213354064 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.213533769 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.211042656 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.21228651 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.210417035 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.213716331 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.213650116 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.21168495 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.213742018 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.215488 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.21167781 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.21528485 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.211351363 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.212694631 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.211732338 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.210968684 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.214051404 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.213110736 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.213722869 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.215693135 seconds)
  done (took 25.394113157 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.213995938 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.214613941 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.214453192 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.214481218 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.214040078 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.215793517 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.21676921 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.215342041 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.215037785 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.214927104 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.215595915 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.215260121 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.215028886 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.215362559 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.21511101 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.217698107 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.215860383 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.214873828 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.215415618 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.214358345 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.215238217 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.21511054 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.215046022 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.216533043 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.215641028 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.215268049 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.215848139 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.215604147 seconds)
  done (took 35.164722405 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.215539896 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.215026687 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.214047377 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.213566071 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.214414215 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.211637707 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.21349378 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.213810747 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.215601201 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.213233167 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.217649852 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.215488424 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.215589326 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.21590521 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.215920609 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.21618635 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216392666 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.2147373 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.213932368 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216136372 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.215145537 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.216387504 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.216461722 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.214087649 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213187858 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.217535235 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.214374816 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.214692394 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.216343958 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.213818948 seconds)
  done (took 37.587840054 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.235285257 seconds)
    (2/2) benchmarking "in"...
    done (took 1.235749858 seconds)
  done (took 3.609145921 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.214153373 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.217599085 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.217509962 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.213883446 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.214691474 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.217136427 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.218685339 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.214325949 seconds)
  done (took 10.866547389 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.217477028 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.217130783 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.217987771 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.217741084 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.217421964 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.217073929 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.226539187 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.234629461 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.217519774 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.217497177 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.222595302 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.223350819 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.222008341 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.217564043 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.217397929 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.220123843 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.217922779 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.218910656 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.218285934 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.219410808 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.218068671 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.220169743 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.220750331 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.216451047 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.219645967 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.229296156 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.241004944 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.219681495 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.218191104 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.223474272 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.219713689 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.217794584 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.218743235 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.220214046 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.219587318 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.21917366 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.228579207 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.235766686 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.226647941 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.23638456 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.220320341 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.219100156 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.220720182 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.222063316 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.221503921 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.220962758 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.221192166 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.217749163 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.219421207 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.223735549 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.225412063 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.219870967 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.218382395 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.223807251 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.221422899 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.227594318 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.237843502 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.224201337 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.229633447 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.231143404 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.251226176 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.241405402 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.222180241 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.220940438 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.229909918 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.239909299 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.22942817 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.235881699 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.218816205 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.223244962 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.229360823 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.252162458 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.245098401 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.221191752 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.222399611 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.2218542 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.22251689 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.223715994 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.23019694 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.241976872 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.222118087 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.22262558 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.231100474 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.240003083 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.221980074 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.222597222 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.224047989 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.222395205 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.223049739 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.232870259 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.239705193 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.222470338 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.222229899 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.223430665 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.225354042 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.222927075 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.221941916 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.223508921 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.221498064 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.224192848 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.224003126 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.225309492 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.228957423 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.224059987 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.224151439 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.231757082 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.241737026 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.223474442 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.232118082 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.224093826 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.223715269 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.223658951 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.231565131 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.222113528 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.226255369 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.230766287 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.223678996 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.226603847 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.224567695 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.22506189 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.232191809 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.246524503 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.226191677 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.224904253 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.22845276 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.234873597 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.226896124 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.229225664 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.225940886 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.222266224 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.223650313 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.227226062 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.225727196 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.22650585 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.2255724 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.227338349 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.223969383 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.225297017 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.225700674 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.226925921 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.228058581 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.227351176 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.227366959 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.229659227 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.225361775 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.226937058 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.233031814 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.242515029 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.227588967 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.228461636 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.224997998 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.227598257 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.22723586 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.226663442 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.22686342 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.227290128 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.226501535 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.227043954 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.227185161 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.228635988 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.228868266 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.227778055 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.229984574 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.227546148 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.233585818 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.226995408 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.226111258 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.226801632 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.228073441 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.227792972 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.229772163 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.22658801 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.230397854 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.232844752 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.229683925 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.226719562 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.230741138 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.227980029 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.228801075 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.227971877 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.230603556 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.234127018 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.229104839 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.235849583 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.245751052 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.228675067 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.228509181 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.228186578 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.229931341 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.22839415 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.232116383 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.234658976 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.241403887 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.250631698 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.230230941 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.231058384 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.229123643 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.231182306 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.234233268 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.229749882 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.229852383 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.229748782 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.228754729 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.229488144 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.231975358 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.229204834 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.228647689 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.230863721 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.230341861 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.230915111 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.23058024 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.230490419 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.231941639 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.228500042 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.230649772 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.230179623 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.230079281 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.22792641 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.229098663 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.230879017 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.230422704 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.230857284 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.238357701 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.229306704 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.232037831 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.23245066 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.231419182 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.231362224 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.232487132 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.233820776 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.231735873 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.240146612 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.248283994 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.233633256 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.239762259 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.249753114 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.23145381 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.235631427 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.23226453 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.231608263 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.23415178 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.239309535 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.231954148 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.232807043 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.233709288 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.232411771 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.233359377 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.239905758 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.247384034 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.232534557 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.233098218 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.235384568 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.230257197 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.234127837 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.234460071 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.234548659 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.234619189 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.234091711 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.233392151 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.234949431 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.233924819 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.233842652 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.233737322 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.235643851 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.239851885 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.239914059 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.234193679 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.237397536 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.235103712 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.237168491 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.234902309 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.234262051 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.234859161 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.247956964 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.254761967 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.243081463 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.252991841 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.236164415 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.241594335 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.252785887 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.2388488 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.233655496 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.235284989 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.235637682 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.235035169 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.232791161 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.235136478 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.235677465 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.235526643 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.235630759 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.237696801 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.234722292 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.234597664 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.237424943 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.235214741 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.236803545 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.235740849 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.238679355 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.240093681 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.24136916 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.237201063 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.23679797 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.243955958 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.253121689 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.237255458 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.237389446 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.237041804 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.235912198 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.239038923 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.236898928 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.238661072 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.243995281 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.239907788 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.244163857 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.239268745 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.248436557 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.236107141 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.239927762 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.243116437 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.235470823 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.236385794 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.237967287 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.238301957 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.244709105 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.254972648 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.239512388 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.241410027 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.23787427 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.237881136 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.238387926 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.238124939 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.238781928 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.23866945 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.247828823 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.255333521 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.241878433 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.240677587 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.235810106 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.238587408 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.240010586 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.237525793 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.24223878 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.237721792 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.240846434 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.23925668 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.239889778 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.239775106 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.239492072 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.239863537 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.237111141 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.238984492 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.247219338 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.257550777 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.242950193 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.240160102 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.248739333 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.257670279 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.248377569 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.256806954 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.241847081 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.240341651 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.24026454 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.242805009 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.240667097 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.241353186 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.242095152 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.241713297 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.242618712 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.2412803 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.2438394 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.241518214 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.239533627 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.241722446 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.249784929 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.260492028 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.242335159 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.245450227 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.239239814 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.242312136 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.244603478 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.241663699 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.240382346 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.243516479 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.250861587 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.248429459 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.241741359 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.242437854 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.243657529 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.242220258 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.243492551 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.243739132 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.241366099 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.24246839 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.244206139 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.242962124 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.246905657 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.243555148 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.24320274 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.244166267 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.244976511 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.252896923 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.260755793 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.243916004 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.243994198 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.243001123 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.242134975 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.244108002 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.24398663 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.243669973 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.244833443 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.244034431 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.247570287 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.247323669 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.246124989 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.242696773 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.243599501 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.244497032 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.245293373 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.244425842 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.244603444 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.243900857 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.245399058 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.24509648 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.245944232 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.242930338 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.243825835 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.244941183 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.244652421 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.247121216 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.249444145 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.2449384 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.242438357 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.244410808 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.245418919 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.242453008 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.246632171 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.253640358 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.265544483 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.253884044 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.251569371 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.2481769 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.244887351 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.248563153 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.251941997 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.244162442 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.246273306 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.246352931 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.247235972 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.246940228 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.248280107 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.247286317 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.253333071 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.262846051 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.245889103 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.255279593 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.264448324 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.246349579 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.24765738 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.248152402 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.24748884 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.244800205 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.247572436 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.245708586 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.255075097 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.265684548 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.247626987 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.248845501 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.245763601 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.24817761 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.2497349 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.24798853 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.248833375 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.244970264 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.247768152 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.24799468 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.248115612 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.245729536 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.247978677 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.248696583 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.25092022 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.253228858 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.246365615 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.250316067 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.248699484 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.248994782 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.24779969 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.249637247 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.246980118 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.246572457 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.247757065 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.248920034 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.250286724 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.251459897 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.24944342 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.250320957 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.249394087 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.249515399 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.251886534 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.255635125 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.25621939 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.247281669 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.24957985 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.251098064 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.252436643 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.249485287 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.250275059 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.249248514 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.251694769 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.24971406 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.250434232 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.252712275 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.252342527 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.265526784 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.266741034 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.249719552 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.250678027 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.254449723 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.25146077 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.247475599 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.250435718 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.253751045 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.253407045 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.256256381 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.250368385 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.257977823 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.266788255 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.251380558 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.253729333 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.252989695 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.257741773 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.253374316 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.251622616 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.251520787 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.254829764 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.266358748 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.251972252 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.259371939 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.277241508 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.268088995 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.252265947 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.252149345 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.251118933 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.253210304 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.254213141 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.252362685 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.252606646 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.253286042 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.252442299 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.253258434 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.256977642 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.253808914 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.25226282 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.252720008 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.252999916 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.255145012 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.249881184 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.252676877 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.253428238 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.253143874 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.252667908 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.252852238 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.253148722 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.267110764 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.27703646 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.254594713 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.2545699 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.250853038 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.259133962 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.256527353 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.263358016 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.259614546 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.254851254 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.253868304 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.254510303 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.254109773 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.252299616 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.255102101 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.253627279 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.253087236 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.252544354 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.26644384 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.277695797 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.259767683 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.255742472 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.254367996 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.254600533 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.25578655 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.254519271 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.256455255 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.257473634 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.25471219 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.258739408 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.256126559 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.256588936 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.256868496 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.261689481 seconds)
  done (took 739.623995137 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.2539093 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.253236999 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.253218353 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.254445847 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.25548815 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.25376674 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.252264771 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.255116241 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.252697687 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.252624446 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.254678874 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.253500108 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.253820718 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.254325007 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.253953656 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.253955884 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.254115701 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.254722523 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.253423621 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.255002482 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.254501802 seconds)
  done (took 27.507129071 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.256492062 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.254699426 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.255317116 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.257353913 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.254465097 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.2571216 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.254733555 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.257127201 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.258678264 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.254701803 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.25748175 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.258559307 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.253354702 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.254832217 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.25596505 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.258662351 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.257642727 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.255683535 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.258647036 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.255858585 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.258693768 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.25610101 seconds)
  done (took 28.817138347 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.258104761 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.257984144 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.258138862 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.25698312 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.25958231 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.256456387 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.257650107 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.258290459 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.259355664 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.259781139 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.258334483 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.258911039 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.264139666 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.261729162 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.260683824 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.259507942 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.403759333 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.258548954 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.260094567 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.258205798 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.257210306 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.266845484 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.275135247 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.257622399 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.258188582 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.259582241 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.259775228 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.259415139 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.26038002 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.261636415 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.262200931 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.259194211 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.259780214 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.262386162 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.259919866 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.260651416 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.263325573 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.260523252 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.258350153 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.261673927 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.269752894 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.276562146 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.261181392 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.268008156 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.279520485 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.261348192 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.263697889 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.266830633 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.258038089 seconds)
  done (took 63.132273119 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.261141337 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.261735491 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.259604837 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.260583305 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.262748582 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.260862407 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.26133856 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.261847584 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.259134201 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.258102738 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.262249398 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.259908592 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.259899772 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.261585036 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.260969871 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.259807061 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.259723313 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.259997127 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.259784775 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.260657157 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.260928374 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.262228131 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.262741357 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.260975739 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.263058192 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.2607475 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.261306252 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.263990781 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.260011958 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.260290709 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.262820734 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.263310571 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.263143898 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.261364649 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.260753649 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.262997562 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.264073328 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.261007152 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.262651265 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.260384522 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.26287117 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.263939154 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.26374345 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.264639544 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.26152965 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.261954022 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.260883851 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.261088789 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.261504688 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.26380289 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.264672541 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.263050193 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.264229977 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.262494293 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.264843268 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.265701814 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.263004365 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.262376531 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.264559541 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.262282616 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.26293825 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.266545901 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.262952635 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.264033513 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.264750123 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.261603313 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.262896397 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.266177197 seconds)
  done (took 87.006551281 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.265527325 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.264598992 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.265671096 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.265438865 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.26510317 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.264985952 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.265204758 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.266329531 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.265196369 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.265703968 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.265862534 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.267196036 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.265998352 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.266827795 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.265636571 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.265563229 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.266478364 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.264951964 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.266621842 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.266106919 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.266649833 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.266042238 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.267344545 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.265421861 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.267519777 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.266300894 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.267023621 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.267329961 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.266348677 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.266524162 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.266357997 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.268032205 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.26825489 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.266762052 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.267710995 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.268882755 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.267651008 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.267851872 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.267281222 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.267854057 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.26739309 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.267536198 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.266623411 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.267523134 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.268124695 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.267912613 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.26814881 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.267907264 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.267661506 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.268723242 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.267614545 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.269184546 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.266321938 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.267486773 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.266504931 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.267925946 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.268090445 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.267591221 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.267685639 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.26379179 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.260915184 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.260458078 seconds)
  done (took 79.714624364 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.260722597 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.260055301 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.257278038 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.258407851 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.256785166 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.249922555 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.253630689 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.252492309 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.253007091 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.252961703 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.252311983 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.250406643 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.247339412 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.246233284 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.242833582 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.242930151 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.242818266 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.243200893 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.245572686 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.243625166 seconds)
  done (took 26.190802469 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.237681574 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.23978136 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.237381722 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.237886872 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.240379995 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.238226183 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.240584692 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239545573 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.234718296 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237723696 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.23942981 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.239137836 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235407209 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.236430175 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.239386943 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.236216204 seconds)
  done (took 20.973311991 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.233977497 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.235529626 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.236050116 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.236139383 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.233159965 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.234054584 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.236746127 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.234439673 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.233780158 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.236693586 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.236874244 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.236657258 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.236706815 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.235605846 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.234374528 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.236415516 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.23519118 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.234898422 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.237513868 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.236882169 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.235230299 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.234390264 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.237771654 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.237259254 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.234853767 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.236974054 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.235270776 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.234969497 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.235015799 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.238510776 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.234790455 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.235351365 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.235156094 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.234561094 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.237743201 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.2356735 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.239316583 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.237564725 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.23860475 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.237712216 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.238626663 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.234902045 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.237796101 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.238330049 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.236254852 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.238111393 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.23569563 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.236216757 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.23663577 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.235915921 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.237882399 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.239168901 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.238615988 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.239020098 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.238103651 seconds)
  done (took 69.155375547 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.238943334 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.240240815 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.236453551 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.23910142 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.239159252 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.23667748 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.240468281 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.236650526 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.236590927 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.239592905 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.238204029 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.239048125 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.237031978 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.238286333 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.237422315 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.238993515 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.236327459 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.237769231 seconds)
  done (took 23.444383296 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.238436789 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.238399043 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.239468859 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.237062906 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.237664061 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.240981395 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.238078109 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.240951404 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.240747986 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.238805398 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.238109027 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.24153519 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240633869 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.242063649 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.239383913 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238654615 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.241584692 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.241397937 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.2382382 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.238702621 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.242581086 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.241099415 seconds)
  done (took 28.433080699 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.239328377 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.240424361 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.239855163 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.256773988 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.256847575 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.261462532 seconds)
  done (took 8.654074539 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.246566562 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.242386086 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.239958957 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.242103496 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.241748111 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.239548345 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.239577552 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.239285282 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.243449148 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.240858615 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.239473155 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.243345883 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.242571006 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.240907133 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.242692469 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.243252383 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.240782096 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.23965469 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.241712106 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.242892204 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.240605951 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.243293184 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.239829637 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.240975093 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.241010034 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.241167979 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.244462369 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.242641214 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.240939998 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.243742687 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.244211078 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.241338031 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.245099726 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.241907624 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.244813098 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.244782539 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.240856961 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.244597413 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.244023731 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.241770331 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.245260483 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.245207241 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.245520577 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.242092023 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.245285728 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.241929522 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.24256259 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.242133947 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.242136074 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.246076142 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.244674943 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.242361808 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.245423563 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.245203772 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.245956787 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.245870745 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.242339728 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.24388543 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.246364044 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.244300526 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.244089929 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.245366581 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.242985123 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.244269422 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.247089189 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.243675352 seconds)
  done (took 83.221017396 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.243224261 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.244921567 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.244302499 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.245112656 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.243659704 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.243883536 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.244057932 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.244366489 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.243448889 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.244123651 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.247596445 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.244807623 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.244502474 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.244379944 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.245153879 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.244987226 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.244851045 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.244837612 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.24393787 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.248846087 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.245165447 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.244649285 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.244136719 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.24394968 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.245182436 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.248295379 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.245354894 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.244361411 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.244965944 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.244713983 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.246185189 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.245076609 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.245429512 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.245303133 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.24496703 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.24582586 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.244755441 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.24552195 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.246529739 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.248259549 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.246029953 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.248734946 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.246536466 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.245738009 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.246965068 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.244911947 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.247003566 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.246951124 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.246431016 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.247285927 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.246977673 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.247513712 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.247649814 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.24637999 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.245588167 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.246321589 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.247298671 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.247745055 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.246662303 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.249975513 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.247305416 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.248099668 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.250415574 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.247471824 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.246938517 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.247720524 seconds)
  done (took 83.39685648 seconds)
done (took 1717.658216131 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.237877277 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.332646155 seconds)
  done (took 13.73698096 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.410384148 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.363290699 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.248472779 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.25534086 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.248607539 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.242533993 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.250185264 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.247829846 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.247641891 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.247714863 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.247901233 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.435600441 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.299717803 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.2486994 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.24753074 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.339906969 seconds)
  done (took 41.750747864 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.271638575 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.257401081 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.36036489 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.274163724 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.277037978 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.427312399 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.310798487 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.256791265 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.413184354 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.292991242 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.701586252 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.276518333 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.255476002 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.286146444 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.273068241 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.426841527 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.488526831 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.709945148 seconds)
  done (took 28.727700336 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.669197014 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.245958774 seconds)
  done (took 9.085830091 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.266713628 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.279597815 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.243220644 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.244585345 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.286566079 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.256452508 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.289977752 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.296050252 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.289465131 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.265730014 seconds)
  done (took 63.888228751 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.260573353 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.242145362 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.243419128 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.238660251 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.232877809 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.231617779 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.239368967 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.23356091 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.576791408 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.361175708 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.263253795 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.24632173 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.256673219 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.242696439 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.237720688 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.275503328 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.364259786 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.257633946 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.238035621 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.245811676 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.241010982 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.330345988 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.278975275 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.239576412 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.355960769 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.60836475 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.248811609 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.248111509 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.351727207 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.256930431 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.240728357 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.241358865 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.24338045 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.797871773 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.687943149 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.254652957 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.264583088 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.250443233 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.24109889 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.361717385 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.261065482 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.24825378 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.23577067 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.664324023 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.39776456 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.349541879 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.447347723 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.249186529 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.244273775 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.301589744 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.243507215 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.243211679 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.270655413 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.991628003 seconds)
  done (took 105.543937666 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.265614869 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.723730833 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.402789363 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.255893772 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.001748206 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.9191299 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.252642636 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.502665355 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.276892794 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.235603731 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.575773685 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.72397813 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.254039672 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.238074936 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.878153923 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.299689694 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.237249553 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.996307 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.251609792 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.238382751 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.640994203 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.256578118 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.236979381 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.398433151 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.275261921 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.678641056 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.577758457 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.673968063 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.256111179 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.236964302 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.68036094 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.251940085 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.262438379 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.239762961 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.501644726 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.577841815 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.567391143 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.258472501 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.278311931 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.240608279 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.254782791 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.675484467 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.574264696 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.254632114 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.237269962 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.700322094 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.253829028 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.247785589 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.240308179 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.436425379 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.012459237 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.237407612 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.571266174 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.239778575 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.581133731 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.307135583 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.283354497 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.709970337 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.25461547 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.319511469 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.279676637 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.24041425 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.238012221 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.241068581 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.24321977 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.570432711 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.385834475 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.24244366 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.571644333 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.698527672 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.262351147 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.744352194 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.162766895 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.250732956 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.321244545 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.240059307 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.810159885 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.732208449 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.296625636 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.240875265 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.556735384 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.26378331 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.552455074 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.259417628 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.239807623 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.666897012 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.255840803 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.305456985 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.248922931 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.240385453 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.862302498 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.242097465 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.495850602 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.291603392 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.240763476 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.241191359 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.272305919 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.240978258 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.241671849 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.244198847 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.751465758 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.253781648 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.530416275 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.263905648 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.240929874 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.24574315 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.243069749 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.241236142 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.45688525 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.719071018 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.250693031 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.242132605 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.242595868 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.2492065 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.371238684 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.244021821 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.527329016 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.25748715 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.241420042 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.244957852 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.952069984 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.273459545 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.241869538 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.245816158 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.080595975 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.469630176 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.258148179 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.241489082 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.242722158 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.256719413 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.495449708 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.244036556 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.266578241 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.243784726 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.920581617 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.286207212 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.284165716 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.68346092 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.243923471 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.120417133 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.25946375 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.244344224 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.556320394 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.511643037 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.300613591 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.246581284 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.242776437 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.917068607 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.269547571 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.38396266 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.260520578 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.242090418 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.440185086 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.565565523 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.246000257 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.787923618 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.244370503 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.453262543 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.244937007 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.570401185 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.714398256 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.264357225 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.243690509 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.920248166 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.927459218 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.895732567 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.244364897 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.567691091 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.214916285 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.698212882 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.244264264 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.246130197 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.675472909 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.245039019 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.251866027 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.245152654 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.245583039 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.375978406 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.419956874 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.018299341 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.24737554 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.686743625 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.262256679 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.24584872 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.26795584 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.248675651 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.596084817 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.329986463 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.2481836 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.291250751 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.245931011 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.252617933 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.696555067 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.197168011 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.252561768 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.397430628 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.851117079 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.26707097 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.248667186 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.90964001 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.536080527 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.736548918 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.309181482 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.53860711 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.273723411 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.285457316 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.945990408 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.268733505 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.745950368 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.269034063 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.264286835 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.824043381 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.267307174 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.601053759 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.24642241 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.259417279 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.759182235 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.268169215 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.251205843 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.534185886 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.253223992 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.491275362 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.249408731 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.272198671 seconds)
  done (took 1090.625938131 seconds)
done (took 1354.524251307 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.248112882 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.254931293 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.235856269 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.255104634 seconds)
  done (took 26.167283169 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.25926993 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.256925566 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.25572855 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.254231385 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.256478132 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.25554242 seconds)
  done (took 8.712137313 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.279223486 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.253953171 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.2548818 seconds)
  done (took 18.960935468 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.461814102 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.477807549 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.605795501 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.359859361 seconds)
  done (took 10.080743288 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.256720148 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.256917981 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.256706899 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.259122635 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.260018571 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.262813598 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.258344378 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.25869796 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.261477128 seconds)
  done (took 12.506625904 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.996341256 seconds)
done (took 82.593204811 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.261888727 seconds)
    (2/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.058392019 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.253675569 seconds)
    (4/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.027238111 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.616021059 seconds)
    (6/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.683628241 seconds)
    (7/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.28287079 seconds)
    (8/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.401882921 seconds)
    (9/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.294084326 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.615306202 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.296901451 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.499672799 seconds)
    (13/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.249754761 seconds)
    (14/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.281797685 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.291164141 seconds)
    (16/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.252775481 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.363147358 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.641108551 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.367605396 seconds)
    (20/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.279785384 seconds)
    (21/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.655982099 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.098129227 seconds)
    (23/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.270577917 seconds)
    (24/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.588492678 seconds)
    (25/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.254299175 seconds)
    (26/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.615169425 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.600824631 seconds)
    (28/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.77739309 seconds)
    (29/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.969200438 seconds)
    (30/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.238647365 seconds)
    (31/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.769712547 seconds)
    (32/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.783324847 seconds)
    (33/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.366114275 seconds)
    (34/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.269055664 seconds)
    (35/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.827991109 seconds)
    (36/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.825621336 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.386859878 seconds)
    (38/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.262966497 seconds)
    (39/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.582882224 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.605252066 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.14598477 seconds)
    (42/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.278894901 seconds)
    (43/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.239243875 seconds)
    (44/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.367132736 seconds)
    (45/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.318002509 seconds)
    (46/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.430244247 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.157472097 seconds)
    (48/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.254494423 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.398872918 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.513934688 seconds)
    (51/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.269655256 seconds)
    (52/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.31802025 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.491194005 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.636040294 seconds)
    (55/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.375912677 seconds)
    (56/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.817136824 seconds)
    (57/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.315321156 seconds)
    (58/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.339695177 seconds)
    (59/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.731585697 seconds)
    (60/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.276160202 seconds)
    (61/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.278489979 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.283156984 seconds)
    (63/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.381145491 seconds)
    (64/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.265319224 seconds)
    (65/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.260930277 seconds)
    (66/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.980903317 seconds)
    (67/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.261485491 seconds)
    (68/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.984876196 seconds)
    (69/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.248130368 seconds)
    (70/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.241654329 seconds)
    (71/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.284870908 seconds)
    (72/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.4608668 seconds)
    (73/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.538898512 seconds)
    (74/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.68227122 seconds)
    (75/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.291704078 seconds)
    (76/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.610326473 seconds)
    (77/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.275481524 seconds)
    (78/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.245719541 seconds)
    (79/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.641620958 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.678213995 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 5.443802722 seconds)
    (82/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.456784899 seconds)
    (83/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.110067901 seconds)
    (84/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.981168253 seconds)
    (85/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.256250542 seconds)
    (86/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.242588182 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.637545174 seconds)
    (88/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.590926717 seconds)
    (89/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.93812027 seconds)
    (90/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.257169926 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.281742018 seconds)
    (92/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.539045838 seconds)
    (93/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.237433038 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.300157849 seconds)
    (95/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.650429602 seconds)
    (96/309) benchmarking ("sort", Float32, false)...
    done (took 5.251547111 seconds)
    (97/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.460515024 seconds)
    (98/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.493206078 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.202432842 seconds)
    (100/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.258850697 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.114656964 seconds)
    (102/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.472240546 seconds)
    (103/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.275926733 seconds)
    (104/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.28286503 seconds)
    (105/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.611122515 seconds)
    (106/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.992951506 seconds)
    (107/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.262588018 seconds)
    (108/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.561846603 seconds)
    (109/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.275867432 seconds)
    (110/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.626419409 seconds)
    (111/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.984998679 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.62103459 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.518033344 seconds)
    (114/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.38508313 seconds)
    (115/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.611169986 seconds)
    (116/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.38047546 seconds)
    (117/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.257460817 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.64937011 seconds)
    (119/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.589051445 seconds)
    (120/309) benchmarking ("sort", Bool, false)...
    done (took 1.772539825 seconds)
    (121/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.45165969 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.299575413 seconds)
    (123/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.478463841 seconds)
    (124/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.065883661 seconds)
    (125/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.777068037 seconds)
    (126/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.517551159 seconds)
    (127/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.675737852 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.171485604 seconds)
    (129/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.250251844 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.794634878 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.985115396 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.545112279 seconds)
    (133/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.635028936 seconds)
    (134/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.999616863 seconds)
    (135/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.274003866 seconds)
    (136/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.292033088 seconds)
    (137/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.34342878 seconds)
    (138/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.259918808 seconds)
    (139/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.240779305 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.418015142 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.88272867 seconds)
    (142/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.975117573 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.865177507 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.891258139 seconds)
    (145/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.571286355 seconds)
    (146/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.518755011 seconds)
    (147/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.846822664 seconds)
    (148/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.495516042 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.999224908 seconds)
    (150/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.292269294 seconds)
    (151/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.240860591 seconds)
    (152/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.571422597 seconds)
    (153/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.262688492 seconds)
    (154/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.326098085 seconds)
    (155/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.564496691 seconds)
    (156/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.285939698 seconds)
    (157/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.60680669 seconds)
    (158/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.397175839 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.659363209 seconds)
    (160/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.289678755 seconds)
    (161/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.804962871 seconds)
    (162/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.352187911 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.822632713 seconds)
    (164/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.409363519 seconds)
    (165/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.830947425 seconds)
    (166/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.486200014 seconds)
    (167/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.278427878 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.179544716 seconds)
    (169/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.246668712 seconds)
    (170/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.288964592 seconds)
    (171/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.294212103 seconds)
    (172/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.268816248 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.108096797 seconds)
    (174/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.31961134 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.308556173 seconds)
    (176/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.271218564 seconds)
    (177/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.28815488 seconds)
    (178/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.41039358 seconds)
    (179/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.970772905 seconds)
    (180/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.260554054 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.269013846 seconds)
    (182/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.346111524 seconds)
    (183/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.262922325 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.327727584 seconds)
    (185/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.263140544 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.180898701 seconds)
    (187/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.304764103 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.126584286 seconds)
    (189/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.441424614 seconds)
    (190/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.297333785 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.68474228 seconds)
    (192/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.459608596 seconds)
    (193/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.657164757 seconds)
    (194/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.368291312 seconds)
    (195/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.348195783 seconds)
    (196/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.456795683 seconds)
    (197/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.884815196 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.340472309 seconds)
    (199/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.512756403 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.889125816 seconds)
    (201/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.505724326 seconds)
    (202/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.338863144 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.374032063 seconds)
    (204/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.348728899 seconds)
    (205/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.423698113 seconds)
    (206/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.648228319 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.326789827 seconds)
    (208/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.326909157 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.24411111 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.355361898 seconds)
    (211/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.345853309 seconds)
    (212/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.264234974 seconds)
    (213/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.295681637 seconds)
    (214/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.676865235 seconds)
    (215/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.897786762 seconds)
    (216/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.424367318 seconds)
    (217/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.378045229 seconds)
    (218/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.025537852 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.890365709 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.498551351 seconds)
    (221/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.587594978 seconds)
    (222/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.797428849 seconds)
    (223/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.257774028 seconds)
    (224/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.969037605 seconds)
    (225/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.80693705 seconds)
    (226/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.740910746 seconds)
    (227/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.545230746 seconds)
    (228/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.572439756 seconds)
    (229/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.265770904 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.287202149 seconds)
    (231/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.324663177 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.366366493 seconds)
    (233/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.81832941 seconds)
    (234/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.270145379 seconds)
    (235/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.405649434 seconds)
    (236/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.587981106 seconds)
    (237/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.799724652 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.311803196 seconds)
    (239/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.604849624 seconds)
    (240/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.252980577 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.267118455 seconds)
    (242/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.411632113 seconds)
    (243/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.275917039 seconds)
    (244/309) benchmarking ("sort", Float64, false)...
    done (took 5.552530114 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.25735157 seconds)
    (246/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.27219503 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.710866349 seconds)
    (248/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.355350554 seconds)
    (249/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.447456846 seconds)
    (250/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.89990041 seconds)
    (251/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.2720592 seconds)
    (252/309) benchmarking ("sort", Int8, false)...
    done (took 4.356899909 seconds)
    (253/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.073097412 seconds)
    (254/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.482708809 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.312232719 seconds)
    (256/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.115793167 seconds)
    (257/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.075508899 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.478079189 seconds)
    (259/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.412019151 seconds)
    (260/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.963465849 seconds)
    (261/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.310175334 seconds)
    (262/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.2933162 seconds)
    (263/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.27414072 seconds)
    (264/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.283670912 seconds)
    (265/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.346519903 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.180212025 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.295389406 seconds)
    (268/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.740604837 seconds)
    (269/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.274287574 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.65257117 seconds)
    (271/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.497737386 seconds)
    (272/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.295424562 seconds)
    (273/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.377393699 seconds)
    (274/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.091856972 seconds)
    (275/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.249181593 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.404989261 seconds)
    (277/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.287038846 seconds)
    (278/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.099586519 seconds)
    (279/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.275370085 seconds)
    (280/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.06531766 seconds)
    (281/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.294098893 seconds)
    (282/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.27824955 seconds)
    (283/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.007284902 seconds)
    (284/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.488617952 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.248356939 seconds)
    (286/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.369937228 seconds)
    (287/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.584521182 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.367651625 seconds)
    (289/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.377668587 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.351223229 seconds)
    (291/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.856281562 seconds)
    (292/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.983345356 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.403373449 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.075238953 seconds)
    (295/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.296475574 seconds)
    (296/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.081868975 seconds)
    (297/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.331796645 seconds)
    (298/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.636460297 seconds)
    (299/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.645700375 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.332464245 seconds)
    (301/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.117130012 seconds)
    (302/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.81172553 seconds)
    (303/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.598127218 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.344294994 seconds)
    (305/309) benchmarking ("sort", BigInt, false)...
    done (took 6.270550072 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.743356819 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.294120285 seconds)
    (308/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.353940061 seconds)
    (309/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.557635441 seconds)
  done (took 894.564698724 seconds)
done (took 895.738904166 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.302715136 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.297810638 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.28075582 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.302991656 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.393713296 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.306382687 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.29094384 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.283241616 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.329275422 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.331213583 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.280955426 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.303957508 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.283931421 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.282136822 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.280883967 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.296337494 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.280420228 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.283133335 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.299154738 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.290976241 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.29891568 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.28079597 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.330268916 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.305440605 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.286769588 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.284510713 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.285819168 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.302008842 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.39406076 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.287021606 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.284919395 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.295682063 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.280576081 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.282033947 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.278702338 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.302828757 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.294803312 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.292821373 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.287529097 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.314639016 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.667921736 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.299352501 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.285105222 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.283294375 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.283747517 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.287706032 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.285365829 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.290189095 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.297521648 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.29860625 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.65936342 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.314664467 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.288208336 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.285253556 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.294876668 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.285824988 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.287352043 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.301081941 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.304849981 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.30096775 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.270831644 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.290630017 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.286968263 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.30122819 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.29346778 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.69473531 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.297027566 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.289666411 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.666696822 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.305576174 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.692021466 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.309314905 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.286097171 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.299296851 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.318455224 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.279873159 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.280987147 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.285165507 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.293978834 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.285425781 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.295770679 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.298886715 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.292324622 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.287265035 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.301626617 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.311345837 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.296353654 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.287576989 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.296337862 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.307347204 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.29468059 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.298279032 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.29100515 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.283362466 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.296691517 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.290443648 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.29138144 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.291170747 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.292176402 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.298050763 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.665733481 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.31971549 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.284121713 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.285428106 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.287142843 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.301649447 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.665977982 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.304613332 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.30903005 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.335367826 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.289802972 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.272164216 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.29284053 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.303683895 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.296942812 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.291216885 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.283744279 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.274916165 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.662895967 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.319368263 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.290045283 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.287682113 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.304986418 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.290792904 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.285965386 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.285447259 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.290709154 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.304248369 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.410758208 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.298615955 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.320609947 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.28824503 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.291991507 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.314330014 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.305617792 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.320933337 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.291890573 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.305607034 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.30651659 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.287143103 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.30120126 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.299869009 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.291017589 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.295082428 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.284781872 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.319487003 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.303528311 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.304086532 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.311725046 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.411932914 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.287943713 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.277411697 seconds)
done (took 217.515477408 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.354558959 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.279293428 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.376458548 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.287424773 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.391386615 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.386680047 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.285068251 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.285489553 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.285720648 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.664689989 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.286115667 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.286066808 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.287732911 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.285998918 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.375016419 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.287789875 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.285832208 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.62877544 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.288647333 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.363968793 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.288679058 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.285971462 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.288692252 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.668576316 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.287637164 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.28759576 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.35884637 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.289003314 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.632656607 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.28558006 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.285895554 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.633332102 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.378376157 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.307367684 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.298256481 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.29612148 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.388080121 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.307249081 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.369367151 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.376530321 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.377506707 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.327523383 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.289490303 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.28941869 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.291066311 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.291160503 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.286414903 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.316617108 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.28858909 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.288963913 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.629834996 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.29934844 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.297938725 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.288679476 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.287788741 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.31026104 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.288248894 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.29141075 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.387257451 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.291040907 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.350898266 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.671147027 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.668216332 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.290120357 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.288397453 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.289330689 seconds)
  done (took 145.468138653 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.358448403 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.367642107 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.398737871 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.309492344 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.341310893 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.405459852 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.308167243 seconds)
  done (took 10.69407934 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.297780893 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.291510995 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.342054661 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.341439474 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.292035922 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.437194203 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.291517507 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.303040211 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.288568104 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.345245344 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.293090319 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.292968989 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.300025507 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.285933632 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.340921986 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.303983776 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.406163577 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.294752338 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.293046063 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.443010093 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.291024414 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.300910697 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.345242496 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.30469465 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.294302716 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.299124504 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.859917282 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.293195732 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.290868642 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.293178558 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.291225574 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.330796831 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.293564118 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.292072796 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.290926724 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.408626702 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.293030347 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.292096185 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.294562661 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.28832614 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.295114753 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.294092075 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.295874693 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.292265835 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.294186122 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.316206844 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.293851735 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.294262532 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.294454575 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.294478568 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.344291906 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.294743335 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.292110181 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.292161585 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.350189143 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.301797771 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.294626545 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.293618872 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.295766213 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.29384944 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.445391751 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.342362611 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.294280453 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.344207123 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.295076652 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.295870012 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.295691768 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.295430037 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.349111857 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.295334626 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.343628732 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.293987691 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.451215184 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.31902431 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.298485956 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.298409726 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.298563695 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.29589087 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.289801867 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.302310012 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.294457332 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.296927102 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.302142537 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.294671936 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.295338843 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.399090209 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.40545909 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.295310732 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.30926135 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.30447489 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.29477037 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.350210115 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.296852597 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.295242085 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.34931071 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.411632981 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.349329363 seconds)
  done (took 149.347625759 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.302379101 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.304747023 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.298474175 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.315181845 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.298004905 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.29655215 seconds)
  done (took 9.025819255 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.299284501 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.298737693 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.297988726 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.29840289 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.297695214 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.299357983 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.299164172 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.299010856 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.301574427 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.298933187 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.299754781 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.300133315 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.298818545 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.299772182 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.30072301 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.299916654 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.300777934 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.297104487 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.300312851 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.300835447 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.406476654 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.299361889 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.299485633 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.301197742 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.304016928 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.299987022 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.307601552 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.299414062 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.300811664 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.308399391 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.318816957 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.300667552 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.301108926 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.30567015 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.304062704 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.301548896 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.303395482 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.30287559 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.298457035 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.302241757 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.303720058 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.300951835 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.301354096 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.303270219 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.301917865 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.305472087 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.306723472 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.308217297 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.30158266 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.304139464 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.302637294 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.302421082 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.302133225 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.30213324 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.303168899 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.32131413 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.306645476 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.302290052 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.302121527 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.30306886 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.303334206 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.302329564 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.30463279 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.305394108 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.300097478 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.304863707 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.303395802 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.306551878 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.302260674 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.302915932 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.30422574 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.300264083 seconds)
  done (took 96.093994672 seconds)
done (took 411.828350809 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.609828293 seconds)
  done (took 7.827106406 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.324855232 seconds)
  done (took 7.544763149 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.460878202 seconds)
  done (took 21.684224212 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.369600818 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.422810488 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.301328296 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.316639372 seconds)
  done (took 26.630426751 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.635467885 seconds)
  done (took 7.852117834 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.29782549 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.296691437 seconds)
  done (took 13.813773738 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.756087173 seconds)
  done (took 7.973815568 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.575417379 seconds)
  done (took 7.799035961 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.306696474 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.325483358 seconds)
  done (took 14.107892531 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.278484314 seconds)
  done (took 7.497450791 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 44.167837793 seconds)
  done (took 45.38724454 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.30146164 seconds)
  done (took 7.52522305 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.361339483 seconds)
  done (took 7.580778807 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.135805368 seconds)
  done (took 9.354186899 seconds)
done (took 193.79252458 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.298970611 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.299303427 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.298384776 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.29899781 seconds)
  done (took 26.415717325 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.340384765 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.766294778 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.34089788 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.350804802 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.343894386 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.339835657 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.333753229 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.333519296 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.351267811 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.343813515 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.34100749 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.343208945 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.340108852 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.33243847 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.342283946 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.342776551 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.351689648 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.341004468 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.33344073 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.34278317 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.307960277 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.351718147 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.344277449 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.307817381 seconds)
  done (took 33.787774714 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.828168675 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.378461315 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.460681645 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.360463439 seconds)
  done (took 7.248647652 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.358909068 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.360387784 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.373119926 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.410720119 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.437798334 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.369725256 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.334797365 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.329489634 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.315274971 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.361387224 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.437245223 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.378341705 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.44584662 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.309308044 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.496309539 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.308380831 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.308517514 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.361016516 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.411478954 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.447083862 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.309322594 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.360603878 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.364210977 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.378590129 seconds)
  done (took 34.190433821 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.32245969 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.316877454 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.308799971 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.30877958 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.330179215 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.309399259 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.310430716 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.311514092 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.308276372 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.315271095 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.309115223 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.322378316 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.308347047 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.309727392 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.316373114 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.310774078 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.315238734 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.30996138 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.310541653 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.313664267 seconds)
  done (took 27.491844041 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.303494879 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.156428255 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.653884898 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.559131336 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.304741506 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.3083591 seconds)
  done (took 27.51080744 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.377034098 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.528265034 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.313439729 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.657644391 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.754709413 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.333569002 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.311297805 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.547094607 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.852289837 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.846656556 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.37374377 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.377835524 seconds)
  done (took 19.501013551 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.308981054 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.308193161 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.3145301 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.323834415 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.363873886 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.334104177 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.317941734 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.305077847 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.367681704 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.386975983 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.334681947 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.366045594 seconds)
  done (took 37.258440156 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.392575001 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.349576421 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.26864923 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.050966484 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.028370679 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.518207473 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.080540184 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.72698765 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.311709522 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.580108357 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.307384167 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.40066628 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.561400965 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.317841194 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.311560685 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.282429319 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.550147291 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.79314535 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.312055822 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.159506999 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339642207 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.307943308 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.340123417 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.343374632 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.519225349 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.285674037 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.569171036 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.084567202 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.587884528 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.325842847 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.319338005 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.308647281 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.581765924 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964240848 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423455123 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.319697558 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.014958749 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.854617999 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.298002564 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.256343853 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.049642836 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.314678306 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.319356061 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.308678513 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.243249853 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.318394763 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.74025446 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.315019753 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.021106347 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.309924214 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.321393605 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.403804486 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.313458092 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.300818377 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.323638144 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.31612846 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.308225075 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.316182992 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.883434924 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.645655844 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.317994258 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.263204858 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.688026463 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.265281295 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932254379 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.428131617 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.31505514 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.313585787 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.244515177 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.168971192 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.330413589 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457548842 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.33663644 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.960321229 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.011435709 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.337026109 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.247479851 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.862517105 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.318218652 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.264471793 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.538465504 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.089380703 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.24814293 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.255730765 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.246528139 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.025353117 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.327715664 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.707461878 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.325790306 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.731216063 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.322913948 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.328636381 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337361049 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.534256218 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.190961298 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.311759194 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.098812298 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464413824 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.334743458 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.734711013 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.247411604 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.316975806 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.568633061 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.523909474 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.31411062 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.29329308 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.525929236 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.315809177 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.330514053 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.31728935 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.327383314 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.876576866 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.345043453 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.646468624 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.334347744 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.091083083 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.054310009 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.330305673 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.418899059 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.318323974 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.561503585 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.085454321 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.480599507 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.38199325 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.317216555 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.314405503 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.283539056 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.168201661 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.203884541 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.312787276 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.324722528 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.32836185 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.313644881 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.260149494 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.313425588 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322803988 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.097429441 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.539124533 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.316440323 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.593153677 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.249491631 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.462770996 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.324427318 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.538425929 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.490124908 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.335074175 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.575467016 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.31821 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.323630282 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.330979997 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.334331606 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413636581 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338496074 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.320475107 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.57601165 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.319827381 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.32157345 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.306415604 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.096691313 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.319971296 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.321513084 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.149078509 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.885751935 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314051085 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.328308873 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.206741935 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.331199267 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.384648744 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.32299825 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.32743609 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.092214495 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.145532438 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.325433619 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.321411168 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.54375596 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.327140397 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.29743389 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.402131112 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.509556758 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.888601935 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.351650059 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.251184108 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.029234729 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.011128373 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.318073722 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.506414519 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.318348044 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.326959728 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.328032951 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.845192676 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.887730093 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.341304103 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.213050895 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.326973081 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.33036931 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.323859229 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.319926511 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.071724866 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.704157048 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.325025624 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.333453782 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463635032 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.332957838 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.254281996 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.836790932 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.325767769 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.31936298 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.103777542 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354470988 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.203359438 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.795805421 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.578969793 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.015520483 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.332225601 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.397864022 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.358576082 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.326365521 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.154570035 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348941542 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.331167677 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343726537 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.330829101 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.322936389 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.764094156 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890177174 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.036453343 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875040575 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.260254423 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.333549392 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.216496074 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.748284044 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.255957091 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.97692352 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.50486554 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.770986468 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.266904707 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.514378234 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.504272539 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.090632795 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.339309692 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.549410159 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.24228028 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.161145212 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.358142938 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.533665686 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356843079 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.322177014 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.255566246 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.603342271 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.55088412 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.115398232 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.407775432 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.752588564 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.161199613 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.124896919 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.321406396 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.677073322 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.512105194 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.955659384 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.710635105 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.331951253 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.328424882 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.796310442 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.333387258 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.849414608 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931698351 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.343731492 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.521559153 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.260795891 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.334771783 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.334333239 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.320785637 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.589210959 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.336819991 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.582787876 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.336135864 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.259396782 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.33492396 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.844578213 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.19718276 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.330035773 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.325261353 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.08866071 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.334216538 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.607987338 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.337614633 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.061621002 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347430407 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.259293827 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.259540255 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.018487988 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.327494355 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299054635 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.827893529 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.690629787 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.325366931 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.360414192 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.173430195 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.581909117 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.340782755 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.901105483 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.570962158 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.11675808 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350926994 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.425083508 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.197369718 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.33332837 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.208378777 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.562353176 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.160936352 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.551830015 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.316416687 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.233580208 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.324750791 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.543051431 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.208918439 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.328103776 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.572543255 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.059121153 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.341310684 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.027298929 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376404952 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.328277128 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.345024869 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.710724204 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.336985253 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.397980958 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.337483815 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.338491642 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.338755293 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.494633307 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33241921 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.354595401 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.341669301 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421120698 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.698062942 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.082594138 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.104561424 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.908479463 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.078539649 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.924746849 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.360166992 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.329400757 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32754498 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.262163636 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477832534 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.854140432 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.602341 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.459087526 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.784211253 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352028985 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.209803174 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.356484612 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.548037702 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.604231806 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.198746345 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340885035 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.992872302 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.222584991 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.340712896 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.542254714 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837198446 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907386202 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456780149 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.34454651 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.758878674 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.605171786 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.421700444 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.330210437 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.918443858 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.353219606 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.695435386 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.358033505 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.330237878 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485403397 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.339913791 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984208185 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.359174161 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.491961003 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.103488054 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.34934697 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.596825549 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.775935162 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.34294949 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.909710767 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.040765436 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.597963439 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.400798653 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.342213092 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.43965694 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477716997 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.338735757 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.228622555 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.333210659 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.174642794 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.04245688 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.341128189 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.911523331 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.615936464 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.329115721 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.338246976 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35451255 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.341586678 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.556143294 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.044667858 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.56186077 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.342042304 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.335176469 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.902077926 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.911184735 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.361208263 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.267374234 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.336537159 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.569725158 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.59021139 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.358404585 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.786809444 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.044698992 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893581044 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.307907737 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356161591 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.34073987 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.025387097 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.913798191 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.115035164 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842302156 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.995688484 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.345048612 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.611430495 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.34074155 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.336018432 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.613823454 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.33886313 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.336247891 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.350662202 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.916095391 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.115939204 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.353574606 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.282968849 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.27621159 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.56138779 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.972048203 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.275447864 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.344623207 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.509037664 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.338095551 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.465418946 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.347339952 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.346206797 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349178458 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.094770825 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.618644005 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.342451559 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.322249298 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.262485474 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.352184034 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346827737 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.568097657 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342868765 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.011071383 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.685704645 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.590929854 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.341589091 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.321156226 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.340511767 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.338585418 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.053924592 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.305916312 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.867681243 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920343992 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.346235148 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.35167629 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.340835395 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.553821324 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.54960892 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.337598222 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.369241862 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350985024 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.355061661 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.237145323 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.105095839 seconds)
  done (took 1576.871268239 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.369519726 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.367054321 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.350837169 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.442451354 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.344161473 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.45285393 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.409329776 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.447990912 seconds)
  done (took 52.439402427 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.340296464 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.496629316 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.368226093 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.343260369 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.347796049 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.337993842 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.794346019 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.357753232 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.347739377 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.348258606 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.351065812 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.34375919 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.987485958 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.348655806 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.343245514 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.324504366 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.34624682 seconds)
  done (took 65.389647595 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.338019023 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.869704019 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.431027492 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.344864926 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.33816393 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.373235958 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.092973399 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.378495516 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.343345907 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.64471947 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.006360673 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.347405112 seconds)
  done (took 84.766727691 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.347706252 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.348552761 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.349861799 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.347474611 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.347674367 seconds)
  done (took 7.999613839 seconds)
done (took 2002.090238363 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.585257885 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.020410214 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.968533124 seconds)
  done (took 5.246193295 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.488111965 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.536777869 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.65808072 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.680166362 seconds)
  done (took 7.620784066 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.617977698 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.72406602 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.529134018 seconds)
  done (took 6.128256562 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.721497161 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.354625541 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.478864589 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.339390201 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.345244599 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.343399784 seconds)
  done (took 20.287413222 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.345935578 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.348902311 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.347198076 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.34912673 seconds)
  done (took 6.649229482 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.322715882 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.02827544 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.325250878 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.341402027 seconds)
  done (took 18.276078686 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.093156234 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.10380196 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.089439177 seconds)
  done (took 7.545137748 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.353678831 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.187918555 seconds)
  done (took 9.801158378 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.638183841 seconds)
  done (took 2.896870299 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.477665261 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.672269142 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.362120246 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.321993534 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.38938681 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.121394995 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.951839187 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.546941775 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.288130935 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.489626626 seconds)
  done (took 27.881843737 seconds)
done (took 125.728407622 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.105663753 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.708230411 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.539691921 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.082926262 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.571747733 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.541987333 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.777354242 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.052422854 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.590701643 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.583699567 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.118989202 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.571892701 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.501192178 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.712619407 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.50217808 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.585853097 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.572394915 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.152556294 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.803968543 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.963166382 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.769055835 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.719172607 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.952766884 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.739308227 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.576420021 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.496181841 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.298721416 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.585269727 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.973521543 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.318265682 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.496364633 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.138797867 seconds)
  done (took 192.364255287 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.343858226 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.344571062 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.364597379 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.344014799 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.346453085 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.344236366 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.345487719 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.374809062 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.358983506 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.344227065 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.362797986 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.344624879 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.364524145 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.371203795 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.34696689 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.361753508 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.346427597 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.360944788 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.361716052 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.361287529 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.347440001 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.345714594 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.34960988 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.34533248 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.352497395 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.346224226 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.345904932 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.362570999 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.362552612 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.346534817 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.348527456 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.35356613 seconds)
  done (took 204.563707948 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.34594869 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.356208399 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.34555004 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.373896965 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.360789324 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.348122918 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.364263168 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.346090239 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.347176924 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.346451604 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.346763145 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.358482041 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.348715166 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.347384594 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.349494222 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.365516224 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.34829209 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.347481535 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.359690313 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.361483979 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.346638442 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.356470549 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.348996998 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.347133962 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.3641656 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.349033952 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.348628721 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.347972343 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.353203441 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.348655299 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.350496738 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.356947079 seconds)
  done (took 204.550426999 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.542633362 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.355153452 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.357274449 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.290327103 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.357373811 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.355996434 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.348397923 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.551969755 seconds)
  done (took 14.425449374 seconds)
done (took 617.159882103 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.625255244 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.348045524 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.552429043 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.377275925 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.109371905 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.396183731 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.376866934 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.541910008 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.26547311 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.546489305 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.589664721 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.392540146 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.732932601 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.380642309 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.623466016 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.473792754 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.263772838 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.375072364 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.688314078 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.880645963 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.633276475 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.807533462 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.556860314 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.273284987 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.746348796 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.804471004 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.068307728 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.245105882 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.393368669 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.689077132 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.970817647 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.343839896 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.435386541 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.433316502 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.48748365 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.47048188 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.295583456 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.430663296 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.573378226 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.572300734 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.878161107 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.08674479 seconds)
  done (took 92.005516056 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.342305768 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.342076195 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.340804883 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.343941859 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.343921112 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.341126525 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.341215501 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.342101794 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.342369265 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.341988463 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.341611633 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.344110237 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.344033802 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.343656842 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.342236566 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.341890503 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.343405396 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.345174812 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.342329275 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.341734254 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.342489733 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.340953436 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.344501354 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.342400958 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.342641256 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.344506575 seconds)
  done (took 36.179276284 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.361204206 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.60549965 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.761984155 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.368362742 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.361828293 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.365207955 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.438088626 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.363480778 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.366068104 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.364200908 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.531832089 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.365259888 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.397089818 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.790076637 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.364417688 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.363130885 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.363169002 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.363319388 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.616033626 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.374271862 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.461992711 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.366685154 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.4424404 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.373555109 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.385865049 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.36455724 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.369347998 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.880468893 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.385955114 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.531371034 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.142890021 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.441709817 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.83445332 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.795792964 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.144792702 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.369041188 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.370004569 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.536576013 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.365472452 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.364054841 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.441250049 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.368508018 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.774228855 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.982658406 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.386205509 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.36510269 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.905427717 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.557951759 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.604626978 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.376949897 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.795695935 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.372135854 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.366912462 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.365862649 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.60534036 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.376121939 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.366028377 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.89112179 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.391791938 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.440762572 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.370783961 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.365211091 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.623873205 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.369846719 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.614368975 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.37486097 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.372601942 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.385204666 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.776666664 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.372799495 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.0057761 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.38783974 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.367902704 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.53509564 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.615370143 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.941389557 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.391534789 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.628712945 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.851003881 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.462208179 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.375067509 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.872663232 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.466776984 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.374454264 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.369724947 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.370502596 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.368197156 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.418318915 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.442295444 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.934695615 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.015349809 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.914620726 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.465239847 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.38303054 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.36762485 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.900404941 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.388652591 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.368946994 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.773017199 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.004303254 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.390207873 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.376354779 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.006642652 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.391734263 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.445814793 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.377325308 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.782432399 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.373412832 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.418899597 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.369501697 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.375624123 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.390381006 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.445886722 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.376320348 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.370047215 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.976528613 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.56518422 seconds)
  done (took 179.64076394 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.363175299 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.362900328 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.364593448 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.363131588 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.362709804 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.368542789 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.36287196 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.362031049 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.368758625 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.362980268 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.365387026 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.36387776 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.364991195 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.365862004 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.392783732 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.371267541 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.972214293 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.364187512 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.363846086 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.380180313 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.158847845 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.369434713 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.364793506 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.381300103 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.365891582 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.36445194 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.371936948 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.367527095 seconds)
  done (took 152.970379297 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.373028379 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.924650646 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.389210723 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.499962247 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.395391516 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.370595669 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.498703049 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.433390505 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.391386295 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.36936715 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.369774309 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.668172832 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.37346998 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.87546969 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.559321193 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.521646425 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.875169173 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.39016797 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.370118252 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.37119827 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.503564384 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.378615615 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.669400755 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.935342911 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.395112912 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.932341455 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.362895438 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.373020616 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.371980232 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.935847608 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.391970146 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.675125831 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.451728159 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.434069016 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.953863215 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.897758068 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.894046526 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.52017494 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.372298242 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.371250058 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.371280097 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.357278372 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.928581615 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.392292555 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.37410361 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.91826401 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.391905251 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.376677131 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.382943649 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.371764685 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.432187264 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.452056929 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.694711079 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.936044865 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.468487221 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.39911996 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.503456471 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.736911995 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.375728372 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.879590049 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.358129405 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.937656381 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.394147966 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.359941753 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.375021114 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.380467282 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.52164963 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.508052014 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.88468112 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.3964039 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.882286608 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.541131253 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.378072636 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.37413486 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.37723061 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.934271172 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.902057307 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.543274273 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.512271449 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.568995753 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.365084198 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.375914698 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.358953706 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.452536379 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.376593691 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.937229561 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.902742579 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.399646261 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.378162977 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.3775598 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.378205604 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.549078282 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.956344549 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.470812681 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.875093787 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.69782603 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.677059274 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.379784253 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.435313378 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.393629055 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.680478539 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.379221323 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.434142127 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.801987509 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.679594572 seconds)
  done (took 163.712011626 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.617922713 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.617246247 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.468285579 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.503515838 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.956997754 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.9382064 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.597333476 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.525289168 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.487270733 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.631674895 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.517239215 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.467559859 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.542098837 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.453273593 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.11607853 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.462377182 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.485025977 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.520394916 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.488782447 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.389545425 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.019911603 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.65750023 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.544266904 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.253287344 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.469811765 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.167201444 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.932335092 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.904623369 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.545273899 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.700592788 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.903623538 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.506308143 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.333321722 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.052520055 seconds)
  done (took 66.064522481 seconds)
done (took 691.834807701 seconds)
SAVING RESULT...
DONE!
