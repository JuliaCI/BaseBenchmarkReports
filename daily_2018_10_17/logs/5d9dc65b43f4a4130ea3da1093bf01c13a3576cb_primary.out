cset: moving following pidspec: 2771
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.237414666 seconds)
loading group "string"... done (took 0.464770633 seconds)
loading group "linalg"... done (took 7.625791365 seconds)
loading group "parallel"... done (took 0.174226403 seconds)
loading group "find"... done (took 1.173579906 seconds)
loading group "tuple"... done (took 2.111641411 seconds)
loading group "dates"... done (took 1.345644565 seconds)
loading group "micro"... done (took 0.247973216 seconds)
loading group "io"... done (took 0.660501333 seconds)
loading group "scalar"... done (took 42.286633641 seconds)
loading group "sparse"... done (took 13.123955718 seconds)
loading group "broadcast"... done (took 1.162036416 seconds)
loading group "union"... done (took 14.360214329 seconds)
loading group "simd"... done (took 5.183004298 seconds)
loading group "random"... done (took 9.759137177 seconds)
loading group "problem"... done (took 1.974134193 seconds)
loading group "array"... done (took 22.608621684 seconds)
loading group "misc"... done (took 1.439260426 seconds)
loading group "sort"... done (took 3.597534753 seconds)
loading group "collection"... done (took 19.471654718 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.515270413 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.138004201 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.133569794 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.148145108 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.20470912 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.14315002 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157772036 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.114485593 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.966988347 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.181618826 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.154436996 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.516303025 seconds)
done (took 5.124549848 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.224756058 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094004033 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103101208 seconds)
  done (took 0.870837411 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.078379184 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144661027 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094409045 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078701221 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095169426 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078729331 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.09668294 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.079171399 seconds)
  done (took 1.349908811 seconds)
done (took 3.210097211 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.735323699 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.276514934 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.203794423 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.462699461 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.19947051 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.213420892 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.669819924 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.36890884 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.253514198 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099905531 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.144349302 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.389303732 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137123965 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.685776779 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.090716159 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123836105 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.177570452 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.485487537 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082419102 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.111230084 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117496412 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.14159456 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.12883169 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.09041533 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.185021298 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.084869652 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.194720818 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108615627 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.081536694 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.28992473 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.201586225 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.688138558 seconds)
  done (took 10.941311161 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111895803 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133881861 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097631937 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138958501 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.133428572 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099013699 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084336743 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096533905 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.122266581 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.176142418 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113771156 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.137701241 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094594113 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082374446 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114811211 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.244164119 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.122923302 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.106623916 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.101965609 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103693633 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121551097 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112833915 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108649283 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.09299074 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166889005 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.221546557 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111913006 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126183139 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.09615941 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.114211596 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14460664 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.14259383 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096537046 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080398722 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.173381097 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124655324 seconds)
  done (took 5.144898426 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.187101378 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120082564 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167112112 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.164168261 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.139792665 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.158783182 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111861915 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.244435291 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.110512308 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.12975028 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.164152104 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.141778757 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.117269708 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080773807 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098344142 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095717012 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.633602993 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.164267644 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.134899146 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.114823946 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.088397145 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.099239165 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.373633657 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105406884 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.080979871 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099739682 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.06583452 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.158776842 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098703345 seconds)
    (30/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.103841462 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.165763282 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.10124442 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101541603 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131922589 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.190743913 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126703138 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.117483084 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096622401 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078362499 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.194848114 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.089000235 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.095745067 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.103723627 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136350557 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134318641 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097373451 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.081966249 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.219396612 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.079818855 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.11477745 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.943212113 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.182029311 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.091058786 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098399484 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.323850431 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.100169184 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097441042 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077582621 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.271886464 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.184601871 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098013894 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080446754 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.0965013 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081423443 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.406581125 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083124604 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.754648985 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083849129 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.106664102 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083372627 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096891938 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103261557 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087040033 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114025684 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.077153602 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.096696069 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.081225275 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.097533335 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.078504868 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.100345718 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.106690374 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.085705476 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.097393383 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.148235173 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.093637433 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.098220756 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128520625 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.099308478 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.077713545 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131250489 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099003587 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.081669544 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.13217252 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098406206 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.091098832 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099406135 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143841413 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.095944011 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.166726367 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.095766226 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124169317 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098708443 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114275971 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111998952 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099175594 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084427173 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.094811696 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077846738 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.096629237 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.148989435 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.094319355 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080246033 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099432199 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.108851486 seconds)
  done (took 22.618249952 seconds)
done (took 39.385997274 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.327764724 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.10223782 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102530061 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101857684 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100608875 seconds)
  done (took 1.485710382 seconds)
done (took 2.210694952 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.291497092 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.172374556 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094829506 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.167153327 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093947461 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.174786854 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159089053 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.111687294 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.219152244 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.077288612 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.16425979 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.094253434 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076373113 seconds)
  done (took 2.646271534 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095218723 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115244023 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082622848 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110611447 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076126137 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111298629 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09216544 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117170296 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109396772 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085478748 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093388866 seconds)
  done (took 1.812771726 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094254305 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112469669 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08223906 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109431735 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076077605 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110721148 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092830213 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116029442 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109839635 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085626975 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093704213 seconds)
  done (took 1.806364405 seconds)
done (took 6.980004346 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091611185 seconds)
  done (took 0.811301891 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.925489268 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.946322356 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113108569 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.14984122 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.317245984 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.174539624 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.476558526 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.125176923 seconds)
  done (took 11.158730795 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.115731824 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.115160636 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.10394084 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.084195855 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.100435233 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.082471826 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.100210292 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.101594405 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.084046908 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.102338572 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.083497544 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.101455279 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.101960901 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.08645315 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.100989295 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.085368278 seconds)
  done (took 2.335271395 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120469309 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.119021475 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.106998586 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108507911 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086918384 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.10460591 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106787881 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088993055 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.101805617 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.10348309 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091616404 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.105844329 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104388604 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079584442 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105338377 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.10744649 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086308095 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.106397569 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107187295 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090012803 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106835846 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095703816 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087221574 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.10696267 seconds)
  done (took 3.260605468 seconds)
done (took 18.290517039 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.160310776 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.109049703 seconds)
  done (took 0.998624572 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.095615811 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113957732 seconds)
  done (took 0.940019234 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.098682929 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095178742 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.122612571 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.110413108 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080458232 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095963993 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.121434333 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.07997321 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096622597 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080607594 seconds)
  done (took 1.716536537 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082407623 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.10964425 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101506841 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095225983 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.105081988 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095466179 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.088446814 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098988305 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.110076457 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076921448 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103307917 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.115738663 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087136936 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116156779 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104834872 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083242732 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.102100701 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099156412 seconds)
  done (took 2.510444609 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079247118 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.09729338 seconds)
  done (took 0.909991597 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081895645 seconds)
    (2/7) benchmarking "second"...
    done (took 0.09519801 seconds)
    (3/7) benchmarking "month"...
    done (took 0.08143346 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097186773 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094144943 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076975078 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.0945432 seconds)
  done (took 1.354518023 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.473004278 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135409414 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.253519549 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.08439362 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.120491568 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.303295245 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.098308222 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.085368346 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102888414 seconds)
  done (took 2.445903473 seconds)
done (took 11.609597461 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.093149007 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.117412446 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.113187101 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.466296835 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107322418 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.097596705 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.160211462 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.25085156 seconds)
done (took 2.146612287 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.151967446 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.32502991 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.113550919 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.069486434 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.098213244 seconds)
  done (took 1.352375593 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079872135 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100260567 seconds)
  done (took 0.923809864 seconds)
done (took 3.175461229 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080721189 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.128882065 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.077875869 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.099050339 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.0779681 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.09840282 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.07764926 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.095641705 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.080873134 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.095870456 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.096018629 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.080010317 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097006995 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078008155 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094447438 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079364556 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.094129336 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.079702719 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095063858 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.080578274 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094533665 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080208922 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.095094791 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077938408 seconds)
  done (took 2.913121315 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100468841 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099127373 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103130126 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086016025 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102344491 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085781554 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102998048 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097179301 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085830915 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.099091578 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100818398 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084414839 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099341687 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084580085 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09976143 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.10232935 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086548651 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098551991 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083160953 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100958053 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103904565 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082048336 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101038255 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102742122 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.084245657 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101642166 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082844163 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.098148834 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102916323 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085561458 seconds)
  done (took 3.595231855 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084731006 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094094256 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078845725 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.103172929 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079224503 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097724913 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078449766 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095631496 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079894426 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.095099759 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081214985 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096290033 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077824572 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.09656407 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079320474 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.098401612 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.108342508 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078284204 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.095158639 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079279296 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098131619 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078066355 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095054509 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077467382 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.094645058 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.07771566 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.095756477 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078269012 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096051686 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077355962 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.097464265 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081361771 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094803267 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085255771 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.098953681 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078023315 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.098501205 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.094005999 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.078671362 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094558511 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077936478 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095055834 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078395228 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101525576 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078648388 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097065977 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078676806 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096822202 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079028089 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098295745 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077508916 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094925983 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080833683 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.09571383 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.099203497 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077619165 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.096413441 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077741998 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095871691 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077899098 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094574749 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077600579 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.097029947 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078400613 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.110877739 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085770621 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094762487 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080547833 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.096040937 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080912224 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096683278 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108976212 seconds)
  done (took 7.15784403 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082954949 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106269424 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080387965 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097015126 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077052744 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095892777 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099615721 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079445903 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097359051 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085436155 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09535137 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080195845 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097891927 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107807566 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078356254 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.09730237 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085662012 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094068377 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078947377 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098721309 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07971695 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.099532371 seconds)
  done (took 2.745915051 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.212852223 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105474537 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142324932 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.10780419 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084008915 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107231124 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.10204004 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086689832 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103243399 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084552169 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100791274 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102087876 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.08340608 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101299292 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101243203 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084877314 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102611605 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084987156 seconds)
  done (took 2.65265139 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093657339 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098585731 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102538297 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099477163 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099062357 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084072333 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103448228 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107604624 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083777577 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098443371 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092280696 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10315931 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.103007952 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08355933 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103668662 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083334078 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.104182335 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083541006 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110770286 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106499926 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.106730437 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092688366 seconds)
  done (took 2.899995838 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097186491 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100863029 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.119315622 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084756624 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095320013 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080773881 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.10780237 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.083282148 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.109233611 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102649843 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083627703 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.100155046 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.090364846 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100449013 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105678016 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083335044 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103287917 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083720874 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.1044229 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078911219 seconds)
  done (took 2.675239632 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102817058 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099720786 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.0998007 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092949681 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099838454 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083116988 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109573116 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099499379 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083796179 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124058828 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100018714 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082514529 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10910355 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105925498 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100190212 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092123264 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108904516 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109378999 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083887606 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100730655 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125035685 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083355795 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.11006097 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.209304482 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083716238 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100320012 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100888674 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088727134 seconds)
  done (took 3.650944435 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08118988 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098640958 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079055835 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096299526 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.078476715 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.097131203 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.07890522 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096178849 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082187315 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096122225 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081361533 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098433622 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081731647 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098669583 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081834045 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098690169 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084388976 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.096707447 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079060504 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096504067 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082052704 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099439917 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081555259 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.096236314 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07905783 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.098611643 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079444016 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096174592 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082516033 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096349489 seconds)
  done (took 3.436203656 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091105271 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106282996 seconds)
  done (took 0.960826496 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079379596 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11496589 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.07981077 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104980191 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08822033 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.102096329 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110912638 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089005235 seconds)
  done (took 1.532145499 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096176325 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.109919922 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082858439 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.111824249 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109676364 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.095424744 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.161656176 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.101190702 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.08681608 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.097763557 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.113611816 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080599558 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105844264 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08296541 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.10673308 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089624787 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.09902695 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.090286727 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.1046992 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.100800171 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085532979 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113485608 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086942507 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.099522955 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085219628 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.113338801 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.111388721 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.085760486 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105505792 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.112481561 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090437176 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.096304222 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.084617668 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.104069361 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.082226011 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.11174876 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116145682 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086413423 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110532032 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085778688 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.11438154 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.097739513 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.090457272 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.10892381 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095439724 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.10350297 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.086312092 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.098173367 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.100250969 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086935249 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.098018099 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084666426 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.09704125 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092275953 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.107125643 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115485861 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083218075 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.104383843 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087985191 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.106075892 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090881665 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.105800642 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.0872558 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.102277362 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109846977 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.088914151 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10922704 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.079797777 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095709942 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080728472 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.108450955 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.122581629 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091037219 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.100475346 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083694436 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.097269501 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103641154 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083934101 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107444701 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.090719414 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.100078489 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107213242 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091075535 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10022687 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.085536228 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.108358738 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098197676 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.08453801 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.097379366 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09713355 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.09925618 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.080629441 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.097265512 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.10963388 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086050997 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.101451689 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082251276 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109942875 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.078901923 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.105850173 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084024252 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100275076 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.10964598 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08869937 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107658851 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.107966056 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.090227094 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100726495 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085876007 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.097162918 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083910601 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.102650668 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.106951311 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.076881806 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102724329 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083832688 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.101581454 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.089867425 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.097843018 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.082339405 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108305545 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106614681 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080853764 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.09691798 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.086309229 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.100833254 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086151776 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.107200692 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098826834 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.078582365 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095657285 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.086659304 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.100721391 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087186446 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105574474 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103350151 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076426231 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.09830794 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.08731806 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.1078499 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.100319338 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.083197474 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.104705925 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.084018429 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.099615214 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.087956328 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.103020628 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.081798232 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.104457723 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.101885568 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.078033578 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104698798 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.08539496 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.099783888 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086434569 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104868273 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.103613021 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.083151194 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099109225 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.088199607 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101324959 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081769692 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100279312 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.099767015 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.091903508 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.102617002 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.077784253 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097757111 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090222275 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.098450719 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.082930979 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.099355814 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.103118872 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.084791213 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.099256028 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.082319168 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.102031591 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112763117 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087648144 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102044095 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088952705 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.109863125 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.083043411 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.102166399 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.10071637 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08399619 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.102496705 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090448607 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105548882 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106412084 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.085238646 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.097152459 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089085982 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108944652 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082078745 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.098135471 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081700006 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.104740261 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.107800027 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086337101 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.102872126 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080958274 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101393797 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105125708 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085081255 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.101607756 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081742225 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.106017673 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.0821499 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.108546765 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102050298 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092098861 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104510093 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077842328 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104676673 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098965307 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.089117923 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.0962939 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080132111 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.099470647 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.084573568 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.09990331 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085400031 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.09527242 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090468315 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108493055 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.101112066 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.083013822 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.101618841 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091326602 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.102384786 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086439517 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.104627399 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.106169989 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096801705 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099990591 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.085396706 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.110558761 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.102188316 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076521052 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.107359271 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081421937 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100789938 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.082869498 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.099617841 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086670662 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110477293 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.105317421 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.077429165 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.103772015 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.082130322 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.100320483 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078743214 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.106789346 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104579703 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084646197 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111205306 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085465464 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.101912721 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104912636 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.083545371 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101896905 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.085074814 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104237761 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084754621 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.10448366 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081757118 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.103727772 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.099998414 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080781817 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.102833115 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.083232709 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.101630595 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089147573 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.103852433 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082775295 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.103378029 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101897912 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083854297 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101741618 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.08251632 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105316016 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084568646 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.101336848 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085729783 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.097095837 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10843182 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.083590613 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109229732 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.082934945 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.098695487 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088583492 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.104369353 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107510807 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.085120326 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102620076 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084735139 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.101384361 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085976661 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110207689 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.099435243 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.092332119 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107748077 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084333999 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.104331327 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.083176642 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.102824159 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.10095245 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084413893 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.102540006 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.083524801 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.102504851 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.091347929 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.107172394 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.085953383 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10635932 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.10665815 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.086064735 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.105795817 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.080972239 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.102401397 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084812382 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.103942049 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093788982 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.106407178 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.108212102 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.084419842 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106673644 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084885681 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.101367426 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.094518644 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.116086679 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.10580278 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094314959 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.104071409 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.087696483 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114429493 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.097689147 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.082706943 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.103265408 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.083717443 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113180494 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.087756177 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.113718627 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.104448052 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.084972055 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.102322586 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.087506168 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.103601112 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.081479602 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.103446928 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088972724 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.107662668 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084894126 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.105746099 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.106424009 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087927913 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113022182 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.085474967 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.108094903 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.086416077 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.102495427 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.084360993 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.103912807 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.105849152 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.086484394 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.102821996 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.083559078 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.105080027 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.088063719 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.115183821 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.086003069 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.106478699 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093678184 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105575107 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.10678828 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088435196 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096001967 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.087322597 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.102250735 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.082644224 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.100825128 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.105180487 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087122769 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103491099 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.091444594 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.101939624 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083950112 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102627667 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.099961422 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.083781079 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.102298365 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083558769 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.101684909 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084737486 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110505032 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081918316 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.103998861 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102158009 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.084401833 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.107608198 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.085568526 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.104591155 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110676783 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.087746662 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.107680803 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.093318506 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.109765537 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090463746 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105766208 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.104423094 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092024261 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.10381496 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.093494802 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.103631741 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.087108742 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.105015357 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.081018584 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102899111 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101714858 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083267482 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.108075758 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.084594635 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.100856546 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.083035618 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099656802 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.085450883 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106553923 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109649908 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.086752857 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105515768 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.079475236 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.099584408 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084646972 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.100329946 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084990157 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105630922 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107994771 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.086652698 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.102486761 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.082651599 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.109398051 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108503113 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.089195626 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.100137026 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088862966 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.104171934 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.087109202 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.103254658 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.084503992 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10389044 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.107218337 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085596767 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.10195987 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091603731 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.106556128 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085237788 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.104662265 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.102455597 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.084385534 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098063674 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.084409336 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.105102531 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090235557 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.104943867 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102147245 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093406104 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.101495904 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.083634871 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10621684 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08259313 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.108887081 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097439433 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.08460987 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103750882 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085630836 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097149771 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082681421 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.099557283 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085811871 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.101745013 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078745539 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11174312 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.109962066 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.085750176 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101673158 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083645541 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.099190588 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.082144588 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.106171304 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107057621 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.088485068 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.11545083 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.086811828 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.105720463 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.082515195 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106645378 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090531365 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.109529488 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083209548 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.101705833 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.102123915 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.087319159 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.11103623 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083778372 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.10223935 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088412134 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.107206858 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.083770403 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.112216814 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.103316037 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.091642713 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116312417 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.088157683 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107941874 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.111364746 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095527035 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.108180339 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.082573693 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.10809673 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.090082208 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.107244983 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.107879271 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.089011772 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121548424 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090148984 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.106808859 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.08612159 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.109630396 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.105569937 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.0940358 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108093371 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.088244243 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.111106371 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.088419336 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.114395753 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106657639 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089725421 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.105395708 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086196574 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.102713594 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102658595 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.082690308 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.100310683 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.085958201 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.104040374 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08970155 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.11126094 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.102693964 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094331663 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.110598795 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.089875827 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.100246296 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082605814 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.102287532 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079427899 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.105628998 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.101004404 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.082423263 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100836426 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.083083473 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.102796882 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090276942 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104607559 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084514031 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103604245 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.096417253 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.086076577 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.105205833 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08476581 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099619891 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084239369 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104664748 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.090208928 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109942304 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.102861576 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.085665602 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.104346997 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085091505 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.099154699 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090816574 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102717153 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086636369 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.10245596 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083727974 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.105462581 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106769227 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090133142 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104284788 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086236013 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.116119502 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105231453 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.081799719 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100667964 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090740359 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.10095093 seconds)
  done (took 58.350086762 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147002703 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081321127 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098924204 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079034133 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114270451 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099459868 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079892457 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100035506 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080635712 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102533641 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.07942965 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098145854 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109888975 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125479268 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093862524 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104020285 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098027254 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.081492469 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098621019 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081186457 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.10993322 seconds)
  done (took 2.874942352 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104591512 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.117375418 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115952644 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119175901 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090084984 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115757634 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114997775 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115474657 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100241002 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111049774 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118923395 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116023812 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092142079 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111256017 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111177675 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094227476 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118315271 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10928051 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115867147 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095479348 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113449245 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114236006 seconds)
  done (took 3.228748543 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084244951 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102453479 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.08507594 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.098321632 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.08439777 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098227023 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088754888 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.10156861 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.088078083 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102355068 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081765408 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.101693335 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104362739 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079517763 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.10184414 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.08195006 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.153037124 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.10729304 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.084140614 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105150258 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.099459679 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.087140546 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098649826 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080461597 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.104756522 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.090666862 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.106958 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.084669631 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.105537143 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.084136145 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.107570227 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.084069173 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.106117038 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103983214 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082932288 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.102270315 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084780064 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102548686 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079667201 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100894836 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.08501508 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.099457867 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.08426962 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.105144868 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.082189432 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.10132978 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084619388 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103695211 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.098326068 seconds)
  done (took 5.490524598 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.105850032 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162869747 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.087104062 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143576869 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.12224652 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.113927851 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088249855 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143074485 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102819244 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083842644 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.124390662 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.121347353 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104071499 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.091009391 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.111108158 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104644013 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087098211 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102784541 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.108043577 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085397666 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.109421256 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091289245 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.121033712 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.118770386 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10906053 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083802209 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104130926 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.109716468 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098637463 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110209724 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109410027 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090875867 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.122564231 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.109046225 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104381952 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.088318696 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.123116392 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.105101094 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088235495 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102164985 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087653129 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110158641 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.111132615 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.123126594 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.085338976 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109434587 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.08574133 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101466513 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.118500684 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.088351428 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.114219024 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120081928 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109479133 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085524725 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110246201 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.121677219 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085407165 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.103700834 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.107763929 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.099365685 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102334056 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.109177785 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.100514512 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.107178511 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.11310426 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.10001379 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109643834 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.109393368 seconds)
  done (took 8.178935436 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094765176 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.112449394 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123076188 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121095968 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092668964 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112518062 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111722902 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.09247414 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111459344 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117768613 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112430727 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.135902167 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.088542951 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11765412 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112209997 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091958267 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112418738 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114784 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.095751337 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117825025 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.116323341 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.126615823 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.096952082 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.126426763 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.148240199 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.112005531 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.095675375 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.116547667 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125937668 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.116549971 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.129832366 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.097693407 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.116816495 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.126225479 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.129175681 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.09607552 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.107848098 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116772124 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.095825043 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.116919384 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.110337589 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125324044 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.096124317 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.111201026 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116019821 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.096548902 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.126846789 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.129235226 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119175788 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.101565965 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.117865554 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.126893055 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116430047 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.096377365 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.127479882 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.154290552 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126588296 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126876371 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116973199 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.126099873 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106267197 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.135202999 seconds)
  done (took 7.939152081 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108700802 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.11688849 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.11815526 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100673337 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084074236 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109842048 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083104318 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102761501 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114602878 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.09688773 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117612853 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108685212 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11483798 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102262274 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.113689906 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117638945 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093981841 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.114851777 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.120257274 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.1151466 seconds)
  done (took 2.984909519 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094869093 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124840844 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.086072776 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112772522 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.109231544 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092836338 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.108986428 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110526646 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088738139 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111279052 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100908035 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.120002318 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109962182 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095446712 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.122732968 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.116650918 seconds)
  done (took 2.535900455 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.097396643 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118402807 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120971882 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085570621 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104413313 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081138861 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.106128571 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.101084419 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082106684 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121530314 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.086258055 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108985002 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105166991 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.08351603 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101579574 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.089661959 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101453292 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083545015 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106545035 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.121816215 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.098099081 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105142672 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105825842 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.088087033 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105995943 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.091571018 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106419975 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102952092 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084109355 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105548015 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085236736 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113948979 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101466183 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.085299358 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103220177 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083932289 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104996301 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085494414 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.110000926 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.105577502 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084757568 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104915108 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085600232 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106867164 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081954337 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106535052 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101591832 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091956413 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103716122 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086129704 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105882434 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107719978 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.087145128 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116384925 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089677324 seconds)
  done (took 6.275349015 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099752631 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109423292 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081191893 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103956146 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088494792 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.109471105 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.109249606 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087988312 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10710944 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083726781 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108522822 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090209065 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108525691 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109538661 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087604639 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109316265 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080911624 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107633959 seconds)
  done (took 2.620668857 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091886207 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105041454 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093045809 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106113127 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085504095 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109311031 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081164817 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.105526403 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103861155 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086592508 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10610362 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088579146 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104395654 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.088415049 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10606105 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085775123 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108850537 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104988696 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086288539 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101474248 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08875257 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10467316 seconds)
  done (took 2.97956526 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.121799127 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125795423 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.117139868 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.210996661 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.107603424 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.136334497 seconds)
  done (took 1.657884448 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110090568 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12134136 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106791306 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107970465 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116091955 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107401821 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089020875 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107970553 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118872802 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106563873 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113166421 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123939014 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123413877 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102465274 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12144961 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120552076 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113368615 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092434534 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111845718 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133823479 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092286208 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12480607 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114119542 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092453366 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114378126 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123709287 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123440635 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129349258 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092519315 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124721868 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118677077 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091380541 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120040553 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124863018 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114279242 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103203382 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114567657 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135559767 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119923675 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101882277 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.11453329 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120635681 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103302769 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120212796 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124535512 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113157171 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099229333 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113892339 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113585664 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1417894 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098984531 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124168411 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120499949 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124490886 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123937749 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142434415 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107483214 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123486154 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121208789 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128900697 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124052854 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099782362 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122327039 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129255833 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120656768 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122807669 seconds)
  done (took 8.470091334 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103672556 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126612344 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108323837 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124025093 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099202695 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108756088 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108642436 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089037133 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109095572 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108244321 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153860534 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089021306 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119492445 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119413135 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109725206 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088501772 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108367935 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1187182 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087630039 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136542948 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109869826 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119900403 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122459309 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101710925 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127316608 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118326652 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108412339 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089375856 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108776592 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108321936 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095075732 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109117208 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118705873 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087592968 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120065147 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109404577 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088432734 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116215154 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10936397 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117009629 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099450284 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129917016 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10999735 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108571312 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123885647 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089635254 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108738577 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087728445 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110144773 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1079948 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124078167 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104013348 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124731823 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119420005 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108870975 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089198823 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109900033 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108901961 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088912953 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116127705 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119548507 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109335523 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137427539 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09017202 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109856354 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119038514 seconds)
  done (took 8.105180697 seconds)
done (took 156.653658247 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.099089335 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136791965 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096851989 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.169494883 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106719155 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.120490681 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138409786 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098536818 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106990681 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.08688511 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.108080748 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088329881 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171810888 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.086204802 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107297471 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108865152 seconds)
  done (took 2.675815851 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.200700377 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.256120653 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103021786 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106733094 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.090464879 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110726454 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.105338865 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.092137776 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110511267 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.086194223 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.10911619 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.087822438 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.105769053 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.087020552 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110664722 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.089348184 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.108085234 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088019246 seconds)
  done (took 2.897376991 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.114785545 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.148135887 seconds)
  done (took 1.117497347 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118868364 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.18146107 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.295881412 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155788182 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.119073089 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.12795777 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157151191 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131585249 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.197766132 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.123761438 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.123489506 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097671386 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.141546162 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.117270801 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.096394537 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119206474 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.142715562 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.093334898 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116145715 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116344874 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117820712 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.107795684 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116265169 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.094377329 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.183456134 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.120664476 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.085974867 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.108373435 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116602405 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095634279 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.114196081 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125430627 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.099542326 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.177315104 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103208125 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.178448043 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.098716672 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.113258201 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115125364 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.092260884 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.120285657 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.119380275 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.105501704 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.119871288 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.087552109 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.119644453 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105942429 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.086563734 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114882283 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.098759367 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.116161244 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.114764369 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.156852222 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119883009 seconds)
  done (took 7.574363542 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.799405762 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.164722381 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090884893 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.886942987 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.139778751 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104921061 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.781739576 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.135104945 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.235385082 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.764154464 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134625352 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.123078297 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.230454854 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.238096243 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.931161696 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.309084355 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.672765465 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104014628 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.15118334 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.154933222 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120361545 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139062009 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131972801 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.453410026 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.096521369 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113332429 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117305849 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100548614 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.161872583 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125944783 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115500344 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.179267019 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.26887137 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.187753549 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116821458 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089628009 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112859442 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.170829025 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266593066 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217559528 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.182878579 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087979203 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111510204 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123291989 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.111773518 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109797174 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.164954743 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.196464512 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.173934461 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09265277 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.123278193 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121654718 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123455369 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.167518906 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.12218405 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.290380806 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.320605598 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113190278 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122489693 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.107377358 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263980398 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124007098 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.226028089 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.118451519 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215464573 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112511439 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.773137319 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.192265697 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090755413 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.11968471 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119571731 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095621537 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122641721 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.170947959 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.3944793 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12560826 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.094268004 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113610398 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.205641719 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.126105056 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112690834 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.164219676 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116712266 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099842795 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.127232047 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123979311 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.173027714 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.230690802 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126228913 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121856267 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094588898 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126728449 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116882882 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.214257958 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.222352123 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.164087666 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.213394293 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124335101 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.188078795 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.170075795 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098862073 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.19592591 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098272147 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.128077029 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124615089 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217010633 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.148296116 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.124223075 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094850178 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119762547 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.15037738 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.128229908 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.098383262 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.192739797 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.483587039 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.169296814 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.11007304 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128719897 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099342029 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183969926 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097299097 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264353905 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123140621 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.171266422 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12055207 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088573824 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121674126 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.16562124 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123665981 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122017611 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102347407 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119913005 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.237526561 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.221808672 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124419872 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.224237482 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.185602398 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119643062 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173657782 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122997677 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168821973 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.1217244 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122327451 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095582635 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.795619072 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124698536 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.100316088 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117037266 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.196256154 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11249541 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102838821 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.126416472 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.109518871 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.772577004 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.129649228 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.122575743 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102798932 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119472216 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121682323 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.1182129 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.095526882 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162869127 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.233359379 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122578273 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121063037 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103281701 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.183455028 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.09645108 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.127229104 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125970735 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.12668241 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.101446332 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.11627236 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125045015 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.172317856 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.164269066 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.222287717 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.597748348 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090947506 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.126868428 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230840575 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089851567 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.29169877 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121018145 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.227217479 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.166599188 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.123019333 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.320820634 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.168208368 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.200440766 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.127887965 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.175818185 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.08741853 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11999698 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.164919076 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113144026 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118293165 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.165080773 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126273522 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102770021 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.941446601 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113893263 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.228455931 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.109804226 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.174282299 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11760756 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100691286 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.291030989 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112772464 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.10847716 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.188447356 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094762749 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.126862217 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.718827627 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.105137741 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123934531 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119712105 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.224300451 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.165590603 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119864385 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.098891633 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.123699477 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.164602447 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.211379929 seconds)
  done (took 44.352993827 seconds)
done (took 59.468761061 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.277730065 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216193734 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.260555967 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169621136 seconds)
  done (took 1.878774575 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.170779407 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.149666125 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121118792 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107502331 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.150284026 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086030559 seconds)
  done (took 1.66344693 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.355437996 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.273229608 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.241054443 seconds)
  done (took 1.753430678 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.290766075 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.253588379 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.356895768 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.42313864 seconds)
  done (took 2.320020397 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.210011857 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.13267829 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.112181362 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104752452 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.198806395 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.252158349 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.142032851 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.203936141 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.122857834 seconds)
  done (took 2.40461366 seconds)
done (took 10.903029179 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.260563507 seconds)
    (2/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.220820791 seconds)
    (3/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.152921338 seconds)
    (4/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.103324601 seconds)
    (5/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.137168414 seconds)
    (6/286) benchmarking ("sort", BigInt, false)...
    done (took 0.2215612 seconds)
    (7/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.125158246 seconds)
    (8/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.234231355 seconds)
    (9/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.101325653 seconds)
    (10/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.119829934 seconds)
    (11/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.094347124 seconds)
    (12/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.259239805 seconds)
    (13/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.23425123 seconds)
    (14/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.180935722 seconds)
    (15/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.123913832 seconds)
    (16/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.233239132 seconds)
    (17/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.119762225 seconds)
    (18/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.104695946 seconds)
    (19/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.227424224 seconds)
    (20/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.19734335 seconds)
    (21/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.174052642 seconds)
    (22/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.135879121 seconds)
    (23/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.227193038 seconds)
    (24/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.170333886 seconds)
    (25/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.108136698 seconds)
    (26/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.152925666 seconds)
    (27/286) benchmarking ("sort", Float64, true)...
    done (took 0.234048372 seconds)
    (28/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.10357054 seconds)
    (29/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.234229021 seconds)
    (30/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.217889203 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 0.227020135 seconds)
    (32/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.154781645 seconds)
    (33/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.227228461 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.100261528 seconds)
    (35/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.141422113 seconds)
    (36/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.067334059 seconds)
    (37/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.194535749 seconds)
    (38/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.206900796 seconds)
    (39/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.133810796 seconds)
    (40/286) benchmarking ("sort", Float64, false)...
    done (took 0.148714605 seconds)
    (41/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.152162312 seconds)
    (42/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.200896633 seconds)
    (43/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.158582856 seconds)
    (44/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.109927234 seconds)
    (45/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.113308266 seconds)
    (46/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.098062516 seconds)
    (47/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.135976324 seconds)
    (48/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.131424123 seconds)
    (49/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.116543876 seconds)
    (50/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.095322929 seconds)
    (51/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.137655492 seconds)
    (52/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.090166492 seconds)
    (53/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.112611561 seconds)
    (54/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.226402252 seconds)
    (55/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.089301743 seconds)
    (56/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.08327004 seconds)
    (57/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.112008744 seconds)
    (58/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.07173281 seconds)
    (59/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.185986619 seconds)
    (60/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.095384574 seconds)
    (61/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.188176125 seconds)
    (62/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.232525358 seconds)
    (63/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.091272058 seconds)
    (64/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.114887343 seconds)
    (65/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.149801449 seconds)
    (66/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.077967735 seconds)
    (67/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.187636712 seconds)
    (68/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.178048329 seconds)
    (69/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.102438503 seconds)
    (70/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.111668179 seconds)
    (71/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.086456463 seconds)
    (72/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.111170789 seconds)
    (73/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.147520541 seconds)
    (74/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.067782557 seconds)
    (75/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.192189356 seconds)
    (76/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.097375688 seconds)
    (77/286) benchmarking ("sort", Int64, false)...
    done (took 0.110589064 seconds)
    (78/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.122441036 seconds)
    (79/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.091188975 seconds)
    (80/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.0969179 seconds)
    (81/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.109599862 seconds)
    (82/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.101674316 seconds)
    (83/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.137416645 seconds)
    (84/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.147468323 seconds)
    (85/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.087550436 seconds)
    (86/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.184961264 seconds)
    (87/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.118487541 seconds)
    (88/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.106596666 seconds)
    (89/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.200313208 seconds)
    (90/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.099596419 seconds)
    (91/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.117023576 seconds)
    (92/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.092354882 seconds)
    (93/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.078253013 seconds)
    (94/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.067800404 seconds)
    (95/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.122153172 seconds)
    (96/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.075880666 seconds)
    (97/286) benchmarking ("sort", Float32, true)...
    done (took 0.232439194 seconds)
    (98/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.112257633 seconds)
    (99/286) benchmarking ("sort", Int8, false)...
    done (took 0.189240646 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.087314047 seconds)
    (101/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.118913012 seconds)
    (102/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.098257638 seconds)
    (103/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.125937368 seconds)
    (104/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066800194 seconds)
    (105/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.173133631 seconds)
    (106/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.136586364 seconds)
    (107/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.192303596 seconds)
    (108/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.103094085 seconds)
    (109/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.125240519 seconds)
    (110/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.117110622 seconds)
    (111/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.125847288 seconds)
    (112/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.066145587 seconds)
    (113/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.172165624 seconds)
    (114/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.163211411 seconds)
    (115/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.092147441 seconds)
    (116/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.109688226 seconds)
    (117/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.184864009 seconds)
    (118/286) benchmarking ("sort", Bool, false)...
    done (took 0.182493425 seconds)
    (119/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.097853348 seconds)
    (120/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.11843844 seconds)
    (121/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.166434821 seconds)
    (122/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.095895162 seconds)
    (123/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.175312443 seconds)
    (124/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.087776176 seconds)
    (125/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.117222433 seconds)
    (126/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.094612147 seconds)
    (127/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.090253229 seconds)
    (128/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.094463568 seconds)
    (129/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.122699425 seconds)
    (130/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.06799974 seconds)
    (131/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.090222488 seconds)
    (132/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.091762322 seconds)
    (133/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.141371631 seconds)
    (134/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.098757364 seconds)
    (135/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.11260589 seconds)
    (136/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.095491895 seconds)
    (137/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.153791228 seconds)
    (138/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.067606136 seconds)
    (139/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.090735015 seconds)
    (140/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.067010755 seconds)
    (141/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.122357641 seconds)
    (142/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.067844464 seconds)
    (143/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.068257752 seconds)
    (144/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.113844307 seconds)
    (145/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.136148791 seconds)
    (146/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.094693283 seconds)
    (147/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.112105493 seconds)
    (148/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.095347318 seconds)
    (149/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.066621717 seconds)
    (150/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.193100593 seconds)
    (151/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.110644393 seconds)
    (152/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.088088688 seconds)
    (153/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.173374791 seconds)
    (154/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.069292081 seconds)
    (155/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.118101841 seconds)
    (156/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.166987472 seconds)
    (157/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.093200632 seconds)
    (158/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.112447261 seconds)
    (159/286) benchmarking ("sort", Float32, false)...
    done (took 0.151292774 seconds)
    (160/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.120582391 seconds)
    (161/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.148489578 seconds)
    (162/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.097476625 seconds)
    (163/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.066807119 seconds)
    (164/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.188991437 seconds)
    (165/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.135234375 seconds)
    (166/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.110131627 seconds)
    (167/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.088215318 seconds)
    (168/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.123387536 seconds)
    (169/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.088281659 seconds)
    (170/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.090206883 seconds)
    (171/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.116683661 seconds)
    (172/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.090578015 seconds)
    (173/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.088175304 seconds)
    (174/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.117644286 seconds)
    (175/286) benchmarking ("sort", BigInt, true)...
    done (took 0.235735657 seconds)
    (176/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.068162784 seconds)
    (177/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.121399598 seconds)
    (178/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.088848817 seconds)
    (179/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.075596459 seconds)
    (180/286) benchmarking ("sort", Int8, true)...
    done (took 0.223105967 seconds)
    (181/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.102299342 seconds)
    (182/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.08934132 seconds)
    (183/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.124808722 seconds)
    (184/286) benchmarking ("sort", Bool, true)...
    done (took 0.225604934 seconds)
    (185/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.086202617 seconds)
    (186/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.167160012 seconds)
    (187/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.110738931 seconds)
    (188/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.088425422 seconds)
    (189/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.118230575 seconds)
    (190/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.087110034 seconds)
    (191/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.175858898 seconds)
    (192/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.136610831 seconds)
    (193/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.09444801 seconds)
    (194/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.11979389 seconds)
    (195/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.096054162 seconds)
    (196/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.143186487 seconds)
    (197/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.090627683 seconds)
    (198/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.091803691 seconds)
    (199/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.067547768 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.110381428 seconds)
    (201/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.093783308 seconds)
    (202/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.109990156 seconds)
    (203/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.086070558 seconds)
    (204/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.067151639 seconds)
    (205/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.117250227 seconds)
    (206/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.092900841 seconds)
    (207/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.090795428 seconds)
    (208/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.068385637 seconds)
    (209/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.109746862 seconds)
    (210/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.096264752 seconds)
    (211/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.108455339 seconds)
    (212/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.184950491 seconds)
    (213/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.087105267 seconds)
    (214/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.123675175 seconds)
    (215/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.113269401 seconds)
    (216/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.396584521 seconds)
    (217/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.119562158 seconds)
    (218/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.095976526 seconds)
    (219/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.116258537 seconds)
    (220/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.077196791 seconds)
    (221/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066686121 seconds)
    (222/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.150612163 seconds)
    (223/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.085961505 seconds)
    (224/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.09028829 seconds)
    (225/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.089638472 seconds)
    (226/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.089478296 seconds)
    (227/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.06725063 seconds)
    (228/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.12530697 seconds)
    (229/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.113592062 seconds)
    (230/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.110537444 seconds)
    (231/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.115011489 seconds)
    (232/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.110421245 seconds)
    (233/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.067915891 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.110449877 seconds)
    (235/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.067312288 seconds)
    (236/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.124010211 seconds)
    (237/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.132862999 seconds)
    (238/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.172466207 seconds)
    (239/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.119041805 seconds)
    (240/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.086431977 seconds)
    (241/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.090724067 seconds)
    (242/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.068594064 seconds)
    (243/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.092658732 seconds)
    (244/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.092104823 seconds)
    (245/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.096185695 seconds)
    (246/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.091851602 seconds)
    (247/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068823355 seconds)
    (248/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.06745902 seconds)
    (249/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.172968235 seconds)
    (250/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.114643389 seconds)
    (251/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.086953746 seconds)
    (252/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.185206432 seconds)
    (253/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.116700972 seconds)
    (254/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.067990095 seconds)
    (255/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.077197973 seconds)
    (256/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.111853363 seconds)
    (257/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068735398 seconds)
    (258/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.124195933 seconds)
    (259/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.094065006 seconds)
    (260/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.127874946 seconds)
    (261/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.152642194 seconds)
    (262/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.06688364 seconds)
    (263/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.094982534 seconds)
    (264/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.091270134 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.095328298 seconds)
    (266/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.110099344 seconds)
    (267/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.087715135 seconds)
    (268/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.091481127 seconds)
    (269/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.086532697 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.109495146 seconds)
    (271/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.111992716 seconds)
    (272/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.134563028 seconds)
    (273/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.119498126 seconds)
    (274/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.078535411 seconds)
    (275/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.094013557 seconds)
    (276/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.118775897 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.093584956 seconds)
    (278/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.091240988 seconds)
    (279/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.089528208 seconds)
    (280/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.090872655 seconds)
    (281/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.07795031 seconds)
    (282/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.067587155 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.116673212 seconds)
    (284/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.093620397 seconds)
    (285/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.091983581 seconds)
    (286/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.067427369 seconds)
  done (took 36.278295751 seconds)
done (took 37.159216475 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.102922668 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148947643 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096785612 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.137169331 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.12376472 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091807555 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118941707 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.099250611 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.124399755 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125737264 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.099108556 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093822122 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097382616 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120836753 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096579254 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139054456 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123805213 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094677073 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119321529 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085935869 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119148332 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.087264936 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.11148813 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.071405125 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121654054 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094940046 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.11636934 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.12098632 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087034876 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110560273 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.092843599 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117319246 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086750353 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124545459 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093297201 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119198686 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097704211 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.120489034 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.112747088 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.087300045 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.119080433 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087377161 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117875371 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095165018 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115771718 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092927223 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118735556 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.100823563 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.140381085 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116327006 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094829646 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.121867468 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.098165832 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118328364 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090823626 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.120287221 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091576028 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.140759711 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.119403228 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092403731 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.11914003 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094802934 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116921152 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095412668 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.118843714 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121206853 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098612592 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116557551 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.098379943 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116051431 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086296958 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119088244 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090384825 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.110472302 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096350364 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.121319788 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.110502897 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.09382741 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.117986315 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092665429 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110209252 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090234273 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112418025 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093538569 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114168339 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070243346 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.11517045 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.092718427 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.109809388 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.09655503 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117392236 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094345862 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112917272 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098907393 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111858794 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.093198209 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.11173874 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087454901 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113811401 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091694918 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.111523737 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090264976 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.121093288 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.112880656 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.09410713 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.12429576 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087908617 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117729309 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087659407 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110707702 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102543239 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.122993587 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.088213426 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117250567 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086750297 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.119707767 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.087620917 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111796127 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.111351733 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.088053075 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.118317382 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.088061146 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114232537 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.094074171 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125525503 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086982559 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114585028 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09076022 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110859975 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093011776 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.112087079 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087188488 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112868053 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078306182 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114442982 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.08802679 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.120026205 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090372577 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.120317035 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089228039 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.121244288 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092557964 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117470607 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.118470603 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.08671244 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.075227849 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117389489 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090221155 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.114422226 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087885597 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113795395 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087377256 seconds)
done (took 17.008639425 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088102998 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184175231 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152174993 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.143138749 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.108138439 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.113358408 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122776231 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.120277895 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113557963 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143658203 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111450198 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.13204691 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148143482 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087096329 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113109384 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091593372 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.11372844 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.10331836 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.147284118 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133045491 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.164932222 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086883041 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.148130399 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135885899 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121356297 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105666065 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112562025 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091729956 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.116261822 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.113280769 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132827532 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.116004591 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.087831333 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134919154 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105022312 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.121486422 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087549437 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118932144 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087504878 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.113033468 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.143027786 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.135096433 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.094054162 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117993124 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.092688678 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.115363106 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089886952 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122110816 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098729241 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115936095 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127391666 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157735792 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.09157129 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122861781 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.087430577 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.12362882 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122470712 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.091447303 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112075492 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090522525 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112168456 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091751252 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127568858 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.143673609 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092919092 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122419949 seconds)
  done (took 8.641102177 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.107165462 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140574434 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.106758497 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.131590008 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112100049 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.090027077 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112953955 seconds)
  done (took 1.753728336 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.091109529 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135620254 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112360882 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136319175 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133350186 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.11217843 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124544676 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.089720167 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133983524 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.090093119 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.135339457 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.152564662 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090644766 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.122481697 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.139223862 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089087065 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137669366 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.090104633 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117792223 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112818571 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118523649 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136416597 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.092015324 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114299792 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.104609403 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114515605 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163329533 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094129105 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115042946 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.09249451 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112548299 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.15205685 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103454222 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.126251417 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089851516 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13091839 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.129790561 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087612683 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.126479075 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.095344312 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128533336 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.090607292 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116334869 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.088703303 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119507758 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.10009222 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.118584298 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.132341324 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092782719 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134387114 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090468523 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128000399 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089360731 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118900652 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.091093578 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120370265 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.099332304 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.115286612 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134917457 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.09094682 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131315063 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.106572996 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.129228488 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131422578 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093280366 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128328529 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.104312461 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117059385 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091352718 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118079837 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.105147806 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.112614363 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115956892 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100283374 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116495086 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113157337 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.138375147 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091840058 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.124949203 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114835536 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090028371 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.115227609 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.113711655 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118758573 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089668292 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118234158 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092975126 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113431924 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088711972 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.118530124 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.088373844 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115793635 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.09326853 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114606121 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09236668 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.131852335 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115624451 seconds)
  done (took 11.899657764 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.092342053 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115671408 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092519624 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115182694 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.092308326 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116534885 seconds)
  done (took 1.585090839 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.12036941 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.11809554 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.105100025 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.12176547 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157168066 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104955806 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130506014 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124629465 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108212876 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128129317 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130882886 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105656517 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136800272 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.12256825 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.10501261 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121392232 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.10559397 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125822205 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.12779089 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097339049 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.138324352 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.12139947 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.09793375 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.13253396 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118502933 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096693896 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126233958 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.105291668 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127932638 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.125199717 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097314288 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118750874 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096394309 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123569604 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130792478 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096689802 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121412875 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.12012993 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100555191 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118319588 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.106176416 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121455264 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127843494 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095438473 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124854552 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.122079172 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094727604 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.127315676 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.105678492 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120020568 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120273138 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095685934 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.122270204 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.095004667 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.124947956 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.126557687 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095120697 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130565205 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.121759697 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.097315866 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119500209 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094194866 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125844317 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119045281 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105351417 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120455068 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.122209657 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.097445174 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122714418 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096697851 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119594845 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093518757 seconds)
  done (took 9.292825508 seconds)
done (took 34.118514788 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.687096926 seconds)
  done (took 1.652340608 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.838094449 seconds)
  done (took 1.805266037 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.727287386 seconds)
  done (took 17.715170244 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.493664853 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.583546451 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.987640869 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.180120607 seconds)
  done (took 3.201992536 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.95335247 seconds)
  done (took 1.933369395 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.287092626 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.235815638 seconds)
  done (took 1.487535895 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.780703842 seconds)
  done (took 1.756250892 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.368323251 seconds)
  done (took 2.326172618 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.328621794 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184939297 seconds)
  done (took 1.488264998 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.555254597 seconds)
  done (took 1.525348958 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.012810885 seconds)
  done (took 10.99172033 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.269682538 seconds)
  done (took 1.256813917 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.30546615 seconds)
  done (took 1.279060127 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.50117118 seconds)
  done (took 4.488917042 seconds)
done (took 53.883919718 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.102245369 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127894276 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.103324581 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125212684 seconds)
  done (took 1.435987124 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.104636885 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121421263 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101683394 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121712635 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127331265 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.09693628 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124144408 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.102537959 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120994831 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096622554 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121658433 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120295064 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099879149 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123878312 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.094189174 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124123223 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.125102839 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.097080733 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.125456425 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096832007 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119011404 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.099247069 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124947962 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.095695073 seconds)
  done (took 3.671414556 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.102722316 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119627034 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096882694 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118865376 seconds)
  done (took 1.425959376 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.102548995 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.132239331 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.106528332 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126528815 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.131603023 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.106109458 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118530788 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.094326314 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.120978234 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.100122761 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.116885012 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.13944558 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.107630723 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.126105719 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102475179 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114685231 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.091987303 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.132591062 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125784193 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.102114014 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.119273883 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.100468653 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.116574666 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.10921436 seconds)
  done (took 3.728390886 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.173247748 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128405075 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139840538 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095921903 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161297523 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.142241758 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088692183 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.142721072 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088662518 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132312747 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.119778263 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.135304244 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130771871 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088797391 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115057741 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088358422 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.130590842 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129649677 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091897836 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128297326 seconds)
  done (took 3.445387699 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.099109477 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118231719 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088879457 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116810753 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.100467266 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121624766 seconds)
  done (took 1.632029034 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091994216 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115083313 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090643264 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.11595094 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095038347 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115731352 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089623693 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115261061 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090884012 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115666106 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090561439 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114005179 seconds)
  done (took 2.228941759 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.508680802 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.121745926 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121493397 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089251628 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.122859662 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.090347937 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.130429116 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.0939053 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.142204908 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089335394 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116468913 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.094256926 seconds)
  done (took 2.707040474 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241134842 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126524116 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.286691161 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.36578892 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158393751 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165744856 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.281504684 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162215819 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.200336918 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150790519 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232446615 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198929844 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153942256 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193343211 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139862109 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.147229641 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19190207 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253284714 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154493255 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213759014 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207967836 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168545612 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1821744 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154605395 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113135759 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195549688 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.095652173 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131226902 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236474564 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180805416 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191807755 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163548824 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148702619 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239752298 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251905637 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198054136 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.282394591 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135885356 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.168597655 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.144846808 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267067908 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141262501 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23595258 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157488044 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107045302 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224067325 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167889575 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.178531441 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.147087652 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140822796 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200295947 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244544363 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.195171679 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140023481 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.29905081 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148868112 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.159892757 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192052883 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25500137 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228210408 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190478437 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.121230703 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189623301 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192994502 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213754663 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.153407022 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.184659799 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149805904 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18562203 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190466474 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168056709 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205733193 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.181832604 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139836399 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173225641 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174405652 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174666524 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261914891 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187919305 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.124267736 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171631006 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149936183 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131982094 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.168594996 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126074233 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216554058 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144455439 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.165630005 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210774235 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160593065 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163121133 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223716898 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186190569 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150382424 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084783955 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155447358 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156690834 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178463431 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143949585 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158914994 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158839724 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130853648 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17167383 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.098557137 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212460846 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091842578 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175697458 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212792389 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.101148195 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163623955 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154949898 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.152341172 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179243517 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200385574 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141914065 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134819375 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211936021 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181269194 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.142554816 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178416018 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.230921965 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.118128234 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150404499 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229247902 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247379244 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114547959 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231644581 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154138602 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110085905 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.13517486 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183067601 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157042742 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162987982 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134074199 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.186035612 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234037852 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.100034028 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140239495 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196669232 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135423296 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132674248 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15743327 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148084552 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.111751484 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.143928896 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.146380509 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178233259 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179968487 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15594913 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16733565 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150580886 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251717344 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141608781 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.151687002 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149579414 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.095786142 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.193836211 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227845463 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103635848 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235039586 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172930954 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225821639 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171581922 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108975121 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179371749 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130882172 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120486555 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196016967 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169130676 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163780211 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.197738924 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223061985 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.181190108 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.212118488 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167971333 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175657987 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.166501679 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157638426 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111519905 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161983658 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159288271 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.125516136 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.139950065 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.108921782 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150688763 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144039243 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134575038 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199009101 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171082051 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217442387 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160154493 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150009652 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182638828 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.103063736 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204941211 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.179838938 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147497931 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.200563651 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19373955 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214615136 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118444445 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229878903 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.121374715 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100199734 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.143833489 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171999199 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134324547 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109607308 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164190107 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20940382 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184208113 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174446294 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235071555 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177562364 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194533275 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095555887 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169116458 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185084418 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204591026 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.156312552 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139098937 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.153523793 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179251059 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156660604 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257380464 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169970126 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177372004 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235460848 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.124559067 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13298782 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151889885 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17849883 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154454322 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176398125 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148973285 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140747009 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16105346 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.103721975 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189103217 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187035721 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165739605 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187743068 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.151286481 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21279008 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101485158 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164004229 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161280481 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166172185 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.109491391 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176760175 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203826816 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148469055 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168422223 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217063896 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105029778 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.3099127 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236526643 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196376965 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139556147 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156371287 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162116523 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163871832 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172266301 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180160607 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160255529 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189642305 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160560028 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.137245853 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140066799 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150094811 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125551071 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133870555 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149947305 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.178966101 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139138357 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190148351 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155737545 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161440834 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173498902 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.151020948 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.146149611 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150764986 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219025225 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183138125 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241953234 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.152188041 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179024091 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208288839 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126933563 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131768999 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.106761107 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179213395 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138069536 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220558098 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.187903641 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201249073 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209643643 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180893629 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140075054 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.093882713 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158923594 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170347046 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231250306 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150124004 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.121113165 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233244088 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.109814957 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132678075 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167679343 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288844016 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146110981 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223321454 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.081334624 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.280581361 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126295848 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10609218 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164115197 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237939775 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136669261 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.152216246 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167882661 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16205918 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162964432 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150887166 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.219099387 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213286444 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227558472 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186409376 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.105068257 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156954121 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204372227 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194617019 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157155792 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.139138522 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208089471 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197032366 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.225649565 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.116624145 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197227657 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169250994 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15888185 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189290841 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135416159 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208878614 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135470208 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193367891 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154956465 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139758669 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178870007 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.215564635 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114617568 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217736556 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184387314 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135668699 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106553218 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193553026 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181092932 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155725716 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.100027211 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211027954 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.099129089 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222020951 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236435838 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135419699 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156453462 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14648908 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109219519 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155479054 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159372283 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140281997 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.164124273 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20459009 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.136351512 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192222887 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23183621 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173160135 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174243413 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146877113 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.693591672 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.132099557 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19760319 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148905965 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207033674 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152173119 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174557602 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162054282 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170466779 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224447222 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162285418 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.232098427 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192948263 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.178909653 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13473488 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158604803 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1580558 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.144822183 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155023497 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171437298 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161748621 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.14685494 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.181492993 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166289226 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.135080345 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113099505 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226915601 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121823163 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216590112 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181424146 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111638585 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202278808 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189020953 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135045339 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.182365982 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238296028 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113831749 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150488872 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135649314 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.152399651 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262418934 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.098991552 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219602953 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186733801 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159801033 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171550692 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147882991 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194684256 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158463956 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213845323 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117411981 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159796772 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157610796 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139463737 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.130871127 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156798708 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168918388 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.12235046 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189421799 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.139250815 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194643192 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.125602989 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145519072 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28536486 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178208716 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246567066 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.10920523 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138261129 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164159468 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151625306 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.178270154 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178761992 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.137472957 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135725539 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.137130343 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.130028862 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.11193009 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156903603 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192680151 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193760029 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208910425 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.136661389 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.278814946 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113357475 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157221893 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.115832119 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.105782631 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150395345 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147308663 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156750182 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194042896 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264289131 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.148347411 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.133379627 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150134484 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.099824776 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136427475 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1631127 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166943508 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180991118 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144473481 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081239261 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156680485 seconds)
  done (took 83.043372385 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.172130333 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.133774653 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.147836475 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.202167008 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.178192294 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270775892 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210261446 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253811058 seconds)
  done (took 2.652497716 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.100762915 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.147014127 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.157924932 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133265214 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092983617 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120629026 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.344800083 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.133326522 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.117003077 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.122769113 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.175074613 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094507516 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.550591941 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091548192 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.120655371 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.108677144 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092510905 seconds)
  done (took 3.781998784 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.250223461 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.499807824 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.060137365 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.195358505 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.159970478 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.117695654 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.718984866 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.095819115 seconds)
  done (took 12.188074771 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.122118533 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.137164714 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.124376355 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.153513582 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.141295928 seconds)
  done (took 1.779626315 seconds)
done (took 124.701667096 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.10421934 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128079632 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098623286 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.131147697 seconds)
  done (took 1.540635332 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.100885811 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071244001 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101141863 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075693395 seconds)
  done (took 1.438522503 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.189841098 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.167327619 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.392964626 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072449193 seconds)
  done (took 1.587672234 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.12212152 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132936092 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104056244 seconds)
  done (took 1.458994223 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.114219282 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129480956 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.104336331 seconds)
  done (took 1.442774709 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.114108399 seconds)
  done (took 1.208787819 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.115184746 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.138997298 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109107316 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136919602 seconds)
  done (took 1.59661399 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.105440759 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130280334 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109131368 seconds)
  done (took 1.437688665 seconds)
done (took 13.158743751 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11032006 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.423278664 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413561147 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111414676 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.722001377 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380321337 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.040984267 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147193495 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166412469 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093517293 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139757827 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.6708627 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.031633973 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.378292308 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.990493703 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.378158696 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.681416616 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121823229 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092530841 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123146217 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.023680953 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093248828 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122463101 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092798366 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.718411949 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.398573701 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123142005 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.376458731 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093481604 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127541753 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383208819 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123333804 seconds)
  done (took 16.97465787 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.101791717 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174705871 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098594547 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.123432421 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.124921953 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094591341 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123791062 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094155898 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180248253 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123212842 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110920315 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121910908 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126101401 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096186167 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.14231402 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097284722 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125280425 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093188774 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122014544 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094465366 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141306005 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121027057 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095573141 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.12110983 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094834404 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136801827 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095172567 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122349398 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.12097942 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099298217 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128238771 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095026883 seconds)
  done (took 4.834147675 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.149332681 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.188028103 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128768819 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127689643 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.169335133 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124384376 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199216575 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118642176 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.184125419 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123424497 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140212931 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.09291097 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157003453 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.122164067 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114988878 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.12109777 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096877083 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122754759 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09212952 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123576845 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.14019337 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092817073 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122238599 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093809578 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123130581 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107763382 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123385853 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121265888 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093474726 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127338333 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.101231935 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124241027 seconds)
  done (took 5.172740725 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.104045226 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.12677142 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109522045 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.139750156 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095806439 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125205696 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097257829 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125291003 seconds)
  done (took 2.025752785 seconds)
done (took 30.103670003 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.118090226 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127458658 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.10758068 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134661684 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103330183 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132865865 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091705369 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.13458169 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.134236534 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103412675 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.138363978 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092500519 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122535619 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092896484 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136009376 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098733748 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132707671 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102504447 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134798697 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.13331949 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095921069 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133346501 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.104000764 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133954328 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.105227824 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.134487471 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.137683624 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099958675 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.123268527 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095439539 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124558041 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.110368309 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.128343566 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.106530452 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127601937 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.098681325 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.123936166 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094591573 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.134345712 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.133474812 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100512869 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.133433008 seconds)
  done (took 6.044807132 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.114723138 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.14611895 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105619879 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.087786627 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.11820116 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080323382 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137750892 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079148322 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.1099806 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108713503 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.077025995 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106200257 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078343208 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101698394 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.07717779 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075650095 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109263741 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076130023 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076909848 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106140274 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080240125 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072628435 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108248389 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079417228 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075215769 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.110358513 seconds)
  done (took 3.604433559 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.107242472 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134653932 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.114550906 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184712638 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161643382 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100059426 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132706965 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.139877343 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109099894 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120554792 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096996667 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149273353 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110832674 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129513377 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092757389 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136961262 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135698447 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094610952 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128501836 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.11353729 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138944921 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103664012 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141239033 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.13289783 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092244332 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122893714 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.09772244 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135300734 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097558149 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132999062 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.09801874 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.125763038 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.12292469 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104946535 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126640679 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094378652 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142232333 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103134984 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.13124761 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.121205909 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.102227625 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122413893 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114794087 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.164356204 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.092937233 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129622058 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.124809227 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.105407889 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.122387631 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112470813 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131550151 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092387143 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125933432 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.092408103 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122005154 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107428581 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124172758 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.095558254 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132220019 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.127900566 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.10687851 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125133777 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109473193 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.125303189 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100665306 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121901538 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.09304149 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.120869609 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.144739142 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094875313 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.162668178 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.097331528 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124898546 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.101831746 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.13094458 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129301979 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094179882 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138478657 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.106245846 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.126205011 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102573559 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126501785 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.096249971 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.140725631 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.124401252 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095194845 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.122333823 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100461301 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124085426 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.09455067 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137080595 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.095382551 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.126434455 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110823367 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.121968137 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.123199367 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100144362 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127352125 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.093423443 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136549593 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.100132295 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.124451587 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.132522264 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.094715631 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.125288031 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103997797 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.128374932 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.093125081 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127917879 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.100145022 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.124971646 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.094618297 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126056533 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094179197 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132908325 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.129216076 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.098944191 seconds)
  done (took 14.90437237 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.235299485 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.216009714 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.246930276 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.264376943 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.136844094 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.14562531 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.214437344 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.126390438 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.125364318 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.161097692 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.172358625 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.182773529 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.170090566 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.180923031 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.170903592 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093398595 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.143214629 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.165471489 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.216616128 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.260353255 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.144718254 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.131637034 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.133730625 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160579037 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.137999869 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.133304655 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.111256707 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.135191289 seconds)
  done (took 5.842952624 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.115296702 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155618085 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.099202776 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145493174 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149763283 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.09347202 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.129159566 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.095466664 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.136762746 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137063077 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.094344388 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129757062 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100480009 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132699091 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123697608 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.10408114 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132584696 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094732688 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127043602 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097935743 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.134105346 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.103012885 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.128262698 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.122696587 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.104584676 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121835016 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087203778 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143499736 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123370186 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116238663 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.122248894 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.103589757 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.137398522 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.095316328 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.124512181 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.096907335 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.126386476 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.096194954 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.126325027 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091900028 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123336292 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078092809 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.123126146 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.137349686 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.10051389 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080029724 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.13099977 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.129516037 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095284083 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121412125 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.095910538 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125829737 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096928357 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130809305 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.096252773 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124919807 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097449329 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.117109365 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.10001003 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125930352 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085218576 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.122076711 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.09853568 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118785871 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102198679 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128675981 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092692565 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125527601 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098592755 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.13076754 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095953665 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.130403603 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091196344 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126785409 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096207428 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129618006 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.126385714 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093931049 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.123355892 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.095475948 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.07609045 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124860972 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074383665 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.127224992 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092239326 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.123818862 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095648222 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130788707 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.139033611 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.09614396 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.132496509 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094429078 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123137253 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096525498 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113725666 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.097434015 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.140140034 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.142498018 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094595691 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122633279 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.10771213 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.126304337 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092688985 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106686334 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102794008 seconds)
  done (took 13.049189915 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.137459561 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.154766505 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.125289347 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.112695666 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.156940299 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.158100386 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101669841 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.130649959 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.096021709 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.143043075 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094057884 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.133368392 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.094040064 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.138257362 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157765813 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104172414 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125765318 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.108583617 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129251518 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.170410608 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.113265596 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.142699534 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.110937356 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.12483455 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.129367456 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.11126298 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.162035127 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107713567 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.137262697 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.14287985 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108655353 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161690957 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.143725626 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.099157483 seconds)
  done (took 5.509289464 seconds)
done (took 50.056138376 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.226118653 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.442093877 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.19501609 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.100984384 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.238378431 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.21314206 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.232275968 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.202134252 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.871315534 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.202227678 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.443528121 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.74243211 seconds)
done (took 60.232690518 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.307192025 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.351497922 seconds)
    (2/2) benchmarking "String"...
    done (took 1.509184228 seconds)
  done (took 3.982697065 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.778958575 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.151938807 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.462590874 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.195689072 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.217801251 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.490532343 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.920465388 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.583601758 seconds)
  done (took 28.143838082 seconds)
done (took 42.337188491 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.221178451 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.271838406 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.205883275 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.176352554 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.306091528 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.226269283 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.58340994 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.221119608 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.217951163 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.178741393 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.216959891 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.218069035 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.211475734 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.590419277 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.20327013 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.201928475 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.28736839 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.697301179 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.600938493 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.205158235 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.202855911 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.217423927 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.217091234 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.217606714 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.259003153 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.200138578 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.210683588 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.209769354 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.749789692 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.202985742 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.208075668 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.716934446 seconds)
  done (took 190.774810761 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.198014185 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.183320285 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.291373708 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.251889294 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.633085094 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.403342341 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.348910022 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.722258206 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.222037041 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.213853053 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.447723672 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.204562399 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.516254509 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.178212451 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.230707135 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.265583376 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.538909142 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.512898449 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.242227601 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.35536634 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.226437821 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.618009055 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.542613676 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.385365286 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.24396675 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.234969631 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.230715508 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.229451004 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.393102817 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.465599829 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.200983141 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.263118211 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.829462904 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.055120775 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.20918885 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.241566152 seconds)
  done (took 150.453141785 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.199862773 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.199947027 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.199809589 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.235284991 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.202739261 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.787886871 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.767537835 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.710855703 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.469990706 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.204070115 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.634655295 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.491333231 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.200679383 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.297120389 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.213402828 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.201644286 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.217253796 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.246088783 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.206535018 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.203500948 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.788045254 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.219056789 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.360717893 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.382739024 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.214073997 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.237012868 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.596040088 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.201770449 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.235774939 seconds)
    (30/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.201347579 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.534339273 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.25003505 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.20187466 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.605223764 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.272779602 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.312919856 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.204554338 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.238080717 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.201769196 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.483720202 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.201304468 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.204915569 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.207190071 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.904351689 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.207722088 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.79175367 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.208262801 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.15717039 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.203825262 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.203395482 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.919556066 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.912502175 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.218477787 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.204162442 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.207810204 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.205786845 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.205273714 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.238938408 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.840960765 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.298809188 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.218795302 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.206199434 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.236468271 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.205877388 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.215661818 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.223653761 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.328454888 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.27784111 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.309824967 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.793425879 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.209156429 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.302897188 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.322754764 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.202055359 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.19891044 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.204287471 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.202909045 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.206547186 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.31802998 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.201894866 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.617472872 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.38230732 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.221550649 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.645943671 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.305656135 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.205424206 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.626754171 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.206493822 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.207757498 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.964597522 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.300812838 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.205752569 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.204879719 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.206825728 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.614357105 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.771867159 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.491498843 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.210006901 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.794856492 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.209545447 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.637835635 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.76631084 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.871273416 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.20661564 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.322568109 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.383536152 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.219983293 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.211509637 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.208084429 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.673234382 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.207578475 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.265790847 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.202819301 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.60836968 seconds)
  done (took 366.871185431 seconds)
done (took 709.223178298 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.810723536 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.801215916 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.912897441 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.799150443 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.75826191 seconds)
  done (took 10.208628118 seconds)
done (took 11.337653982 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.397535599 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.397508551 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.267166114 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.40708542 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.241448105 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.416565145 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.376677686 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.231164029 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.312202846 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.29001442 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.311282276 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.26053787 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.243370097 seconds)
  done (took 18.282252383 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.539087275 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.533101849 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.274195232 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.53396135 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.247887623 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.542512986 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.43381025 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.446952453 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.422675881 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.238178346 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.221713075 seconds)
  done (took 16.564782335 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.517270472 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.532203693 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.274857516 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.533748251 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.25036311 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.54690116 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.412566148 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.428471417 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.421690407 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.241656852 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.222322656 seconds)
  done (took 16.513472652 seconds)
done (took 52.491417014 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.220546608 seconds)
  done (took 2.353323063 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.257079732 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.418078205 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.237171987 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.226525199 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.221427896 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.223034556 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.228467051 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.22306798 seconds)
  done (took 11.168956276 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.217910196 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.221164307 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.219841017 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.217264723 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.216141591 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.217737753 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.219063166 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.220231799 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.217342362 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.219235096 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.217134131 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.221362267 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.220282471 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.219740175 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.218727378 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.218517451 seconds)
  done (took 20.634540355 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.219782225 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.215822909 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.21709037 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.217107236 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.219705762 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.217812829 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.218794144 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.218077956 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.218423645 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.218810756 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.217949037 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.216083581 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.21994453 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.218977673 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.217425058 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.22048582 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.218646458 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.217300583 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.223380335 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.218685929 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.217567736 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.218958618 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.219954756 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.220261173 seconds)
  done (took 30.384106622 seconds)
done (took 65.676038419 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.854655489 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.886354326 seconds)
  done (took 6.876776215 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.22320262 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.222251055 seconds)
  done (took 3.580471113 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.222514519 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.221902328 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.222914173 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.219777552 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.222447316 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.218648363 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.21999256 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.220222338 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.222260042 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.223324678 seconds)
  done (took 13.350971152 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.222244669 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.225025814 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.220521144 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.224238631 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.224862376 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.21807963 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.223669648 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.21797795 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.222100009 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.220917509 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.222664511 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.220378254 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.221412082 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.222548937 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.222220988 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.219859556 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.218240462 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.218686022 seconds)
  done (took 23.123218021 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.223779401 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.219254347 seconds)
  done (took 3.580859144 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.221505092 seconds)
    (2/7) benchmarking "second"...
    done (took 1.220489618 seconds)
    (3/7) benchmarking "month"...
    done (took 1.222482432 seconds)
    (4/7) benchmarking "year"...
    done (took 1.221454017 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.220850437 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.220544845 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.220095689 seconds)
  done (took 9.683026912 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.226634466 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.401964194 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.484853895 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.831895144 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.226409645 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.22973023 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.100636337 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.226376127 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.230989037 seconds)
  done (took 14.098444276 seconds)
done (took 75.429151929 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.253869371 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.232472654 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.54643655 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.238634857 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.237415564 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.561323488 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.248586073 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.346435765 seconds)
done (took 37.805516742 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.221775113 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.20046991 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.960323828 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.215599997 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.297362646 seconds)
  done (took 18.814233068 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.280871283 seconds)
    (2/2) benchmarking "read"...
    done (took 1.553608412 seconds)
  done (took 4.974818167 seconds)
done (took 31.152389988 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.225458932 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.224529406 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.224556413 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.224822632 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.223915049 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.227827492 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.224718549 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.224527 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.22606695 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.227939774 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.227955499 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.228288885 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228083241 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22385533 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223661066 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227871264 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.225358291 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.228681728 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.22462779 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.226973309 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.226034253 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.227896199 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.22531076 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.224513677 seconds)
  done (took 30.564259896 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.22964983 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.225990451 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.228204937 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.228448877 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.226445366 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.226755344 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.229516075 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.226075479 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.229089822 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.227748004 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.224632234 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.226618705 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.226839711 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.227374494 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228182186 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.226475559 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.227822316 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225582455 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227562194 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.226639441 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.229410989 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225756146 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.223872972 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.228378171 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.22584218 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.22559463 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.229911815 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.225754424 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.22944339 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.225198231 seconds)
  done (took 37.956833733 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.234594992 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.239540164 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.228966699 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.228911833 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.227540611 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.227311083 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.229527835 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.229181383 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.228698903 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.227873679 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.227681346 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.230451936 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.229825735 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.229752894 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.229878755 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.22961945 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.228822056 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.230801412 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.230458757 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.228922467 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.227765416 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.229534186 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.230040697 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.231639591 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.231170185 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.229676551 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.231981793 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.231750073 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.231710813 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.231644496 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.232479091 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.231676128 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.231570462 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.230560133 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.233392544 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.232225369 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.236552725 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.240352801 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.230697453 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.232753292 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.231289427 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.232336364 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.230525218 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.231649099 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.231726993 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.230494737 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.233765626 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.233517082 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.23244417 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.230882654 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.231892155 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.233034559 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.23247795 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.230916801 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.231378284 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.230251118 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.232943014 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.233452047 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.232131884 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.228342424 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.232175056 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.23187334 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.231212788 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.233581531 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.230003443 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.23328829 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.233494547 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.232794884 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.233681711 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.233872646 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.231862306 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.231289096 seconds)
  done (took 89.807325583 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.23526024 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.231688941 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.232093837 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.231114719 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.2320473 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.235035662 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.231684219 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234912441 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23148966 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.234421818 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235911153 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.23203443 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.231860739 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.23536119 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.234766733 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.232614671 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.232179017 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.233814409 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.231177358 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.233638253 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.233534103 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.231524548 seconds)
  done (took 28.274721344 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.234915211 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.232224615 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.232813779 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.2358137 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.231261692 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.235674074 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.235289848 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.238946082 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234807191 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.232997209 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.234174607 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235979025 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.232784279 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.231423775 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.233355562 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.231820495 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.236637147 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.235488979 seconds)
  done (took 23.365643872 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.233097711 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.231439122 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.235600398 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.234614012 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.234066841 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.236131308 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.236243697 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.235547458 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.237037658 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.235232646 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.233909546 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234409733 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.235610558 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232415557 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234563347 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.23401534 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.237519683 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235146349 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.236982005 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.237016865 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.234706232 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.237897659 seconds)
  done (took 28.324601397 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.237082271 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.238643179 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.2346888 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.23406988 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.236758257 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.238918552 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.237550018 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.233602084 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.240655592 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.236421793 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.234200375 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.235983654 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.236683213 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.234712058 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.234437811 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.23493555 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.237160315 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.235053282 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.23779533 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.234192249 seconds)
  done (took 25.87568536 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.236310871 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.241148514 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.240235596 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.24132384 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.240931406 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.242287696 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.240173396 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.23840062 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.238005469 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.240678622 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.241030668 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.238533408 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.241325418 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.240944818 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.235982787 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.239749812 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.234261483 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.239592398 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.241704089 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.238194946 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.241382986 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.242014109 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.240964405 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.242046614 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.239925888 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.243175856 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.242634605 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.243599551 seconds)
  done (took 35.87712139 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.240439436 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.242651526 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.238595424 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.237302174 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.239040116 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.237618588 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.237257374 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.236836645 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.240827927 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.237254286 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.238460343 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.240694487 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.237872386 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.240920389 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.237812651 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.241903152 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.241559335 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.237804083 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.236687279 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.237454152 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.240627741 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.241428661 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.241015374 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.235334509 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238619044 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.241231283 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.23933558 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.239367748 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.241443423 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.234986615 seconds)
  done (took 38.32854347 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.260016376 seconds)
    (2/2) benchmarking "in"...
    done (took 1.260461169 seconds)
  done (took 3.671697264 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.238216687 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.242278575 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.242374886 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.235961035 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.240736727 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.242365935 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.241458357 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.237564716 seconds)
  done (took 11.075993365 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.239891069 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.243380722 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.244051751 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.243960811 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.243022593 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.243745385 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.250684455 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.263402426 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.242837929 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.243793092 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.250649815 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.251239151 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.244345422 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.244227477 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.244846252 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.243569918 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.246305313 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.244790174 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.246355863 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.247200646 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.24435793 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.245078962 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.2425545 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.245203595 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.245906874 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.257856348 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.264485147 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.244446686 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.245474949 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.247636768 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.241119867 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.240120106 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.245654627 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.244982387 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.24241739 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.246642362 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.255814746 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.264491101 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.253957828 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.265237633 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.246680122 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.244073624 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.243479324 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.248185831 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.247850106 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.245698919 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.246816135 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.242998044 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.24271093 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.244843003 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.249149386 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.246268384 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.246658975 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.248637271 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.248136564 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.254991426 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.263604475 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.250563867 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.260726374 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.258640027 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.279814077 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.265568382 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.250989119 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.24915325 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.256814705 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.270616266 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.255980287 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.265028076 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.243696139 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.245220868 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.253660781 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.277872043 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.270676092 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.252328715 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.252430988 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.252541364 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.250745446 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.250333377 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.255198712 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.271950515 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.251041335 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.250090751 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.259864393 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.276165433 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.258221303 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.249324236 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.251853485 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.25125429 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.248857023 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.26271626 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.266335701 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.249633339 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.248967625 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.250342295 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.24928365 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.250588703 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.245606299 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.248663976 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.244663236 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.249219853 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.253078139 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.257550484 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.260890148 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.250735492 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.249481752 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.259900428 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.268944734 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.247606025 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.257816921 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.249880888 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.252953944 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.254027054 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.256840568 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.250238882 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.254973272 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.261787363 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.253614975 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.253553111 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.253798067 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.253115847 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.264203603 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.280826513 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.252965457 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.25141025 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.257866357 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.268016436 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.256708285 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.256032389 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.254270984 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.249425267 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.249885208 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.251518403 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.252860689 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.254473369 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.25298669 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.255568728 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.25280877 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.250927597 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.254281661 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.25310615 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.252795493 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.250815435 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.253232868 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.25743849 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.254563415 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.257405971 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.259978278 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.268685425 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.253783582 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.25478284 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.251562546 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.256685211 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.25394957 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.255548536 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.257158811 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.253089758 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.256482516 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.254557694 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.257248209 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.255253606 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.253500991 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.257660857 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.257661969 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.250934077 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.260576917 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.256162826 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.254603885 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.253853989 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.255318434 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.256413088 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.25471147 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.255592764 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.256598099 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.263624352 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.258087801 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.254307945 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.260807602 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.256741253 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.258045382 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.258304266 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.259464514 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.264551289 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.256245967 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.267692827 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.276113728 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.255082431 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.260999397 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.254960844 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.257796421 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.257434269 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.263535126 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.266793027 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.267577823 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.281091163 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.256341895 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.258619611 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.254296177 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.26047807 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.263648046 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.259680104 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.261641983 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.259021081 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.253788182 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.256612424 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.260043562 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.2572502 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.259807276 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.256456192 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.256634141 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.253251514 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.257372717 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.25987808 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.260714563 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.256057556 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.257316998 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.255654338 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.259426127 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.253377916 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.25570226 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.255499344 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.259597611 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.25763332 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.265899102 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.255615985 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.2592451 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.260691996 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.260675903 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.256879198 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.260855671 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.261940269 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.261022071 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.264906298 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.277447081 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.261417297 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.266197264 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.276713725 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.257642325 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.26325886 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.260468845 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.258714867 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.261131743 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.269854781 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.261137514 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.261556429 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.264415702 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.259443417 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.259280243 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.26252741 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.272812786 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.25918317 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.259922267 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.259101675 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.255522912 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.260952472 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.262065976 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.260750691 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.261876383 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.262958252 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.261751123 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.258861703 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.259667133 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.260384529 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.260491254 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.26341807 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.268434582 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.263569721 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.260928821 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.264711358 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.26204766 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.263101596 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.260447571 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.262160449 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.261019984 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.273421789 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.283474361 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.268169068 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.279895264 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.260661397 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.264826467 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.27785108 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.263459623 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.26187874 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.265066388 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.261061252 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.265403382 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.259465626 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.262993632 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.262834187 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.262811822 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.265644175 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.265267713 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.258718427 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.260742884 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.263006074 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.264818996 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.262772866 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.264296201 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.266860143 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.268406783 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.266823447 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.265355725 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.263470735 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.271178041 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.280908273 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.266948639 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.266287767 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.262510917 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.26600119 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.264882912 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.26776284 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.269532641 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.277297956 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.268374077 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.271921083 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.265268186 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.272249859 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.263625326 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.269992507 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.276010988 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.263029914 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.261794446 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.26594068 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.264039072 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.274282562 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.283548156 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.265846216 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.269346538 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.266296783 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.266016713 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.27059727 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.267226045 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.268294238 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.266337029 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.276438624 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.283421584 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.270076565 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.268389629 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.263898941 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.266920328 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.26648722 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.262363824 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.267205256 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.265977873 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.266549633 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.264003485 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.263207019 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.267213349 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.269793702 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.269474958 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.264679109 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.265394086 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.272412469 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.28573678 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.269754715 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.267947411 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.273973929 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.289376682 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.274830469 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.287777184 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.268687865 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.268393721 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.26973963 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.267729858 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.266735429 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.268834982 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.26815971 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.269734139 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.275136135 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.268202971 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.271645509 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.269480236 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.273127901 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.270930838 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.281094563 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.295569379 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.269710033 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.273428893 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.26619508 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.270724397 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.276698982 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.272835487 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.267331179 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.271188041 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.280032303 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.277998577 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.268213741 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.270990027 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.269818022 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.270764402 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.26908879 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.267450972 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.27036809 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.273222704 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.26777871 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.26940211 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.274686878 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.27141415 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.270018161 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.271622185 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.272781835 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.28169321 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.28857056 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.270428068 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.272946092 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.272519402 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.269221134 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.270111647 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.271883922 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.273473308 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.267587736 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.272708268 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.278872109 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.278895613 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.275961122 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.272454461 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.273735142 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.273034583 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.273320449 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.272399843 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.271484649 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.270604011 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.273139255 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.275015517 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.27098416 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.270728749 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.270371283 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.269066791 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.269940981 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.273034927 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.282556298 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.27247299 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.270041942 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.269586878 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.275252233 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.271287106 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.272227717 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.280206058 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.295270548 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.287332695 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.285886899 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.279256798 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.274725237 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.278186399 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.282214043 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.273338115 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.272853273 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.273660933 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.275062005 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.275685298 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.279821603 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.276619756 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.275474255 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.29474027 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.275688621 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.282945549 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.294904338 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.274597237 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.277302124 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.278912079 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.276247593 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.269136199 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.271325112 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.274307218 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.278406504 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.294379362 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.275236602 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.278681572 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.276732482 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.276547526 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.280467074 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.278680025 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.274040554 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.276712655 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.277978553 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.280108893 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.276167355 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.271380387 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.271746257 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.277630089 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.27864231 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.285812838 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.274214032 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.277278699 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.275869122 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.277230057 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.273484514 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.279440951 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.273766568 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.275184205 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.274530382 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.277436331 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.279733386 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.279439867 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.277627148 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.280556325 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.278851359 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.278844818 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.28363682 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.291063177 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.288842715 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.274400412 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.27673847 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.274950648 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.279544374 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.276604015 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.28056888 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.282464952 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.278227423 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.277336806 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.277379739 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.276605115 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.278401792 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.291832239 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.29517621 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.279057959 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.281520278 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.283436834 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.280423044 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.275169152 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.281928354 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.281097277 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.283766725 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.287994307 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.280966353 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.287785721 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.299195573 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.28000691 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.285200225 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.283880299 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.287557971 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.285892702 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.279119746 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.284354022 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.288617289 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.300602139 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.282536414 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.289272631 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.31136824 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.299198029 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.283024471 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.279417184 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.281972782 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.282760472 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.285562489 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.281986342 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.283312356 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.282294699 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.282543812 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.281535365 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.286453119 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.285446534 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.286129388 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.283432775 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.27975713 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.281336394 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.281746349 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.279920177 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.282717788 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.282673366 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.283841116 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.285686932 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.284995938 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.296998057 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.307190221 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.282561834 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.284543112 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.282536248 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.285176989 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.288717675 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.296422847 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.293417452 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.282353208 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.286583683 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.287378146 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.286517368 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.283699459 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.282896736 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.284931205 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.285563507 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.283684919 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.294655994 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.308028086 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.290822744 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.281724274 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.281371624 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.282866354 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.283246266 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.287131481 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.28699496 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.287813362 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.289638757 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.291027718 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.287416338 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.286046902 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.28904136 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.296898731 seconds)
  done (took 756.34291659 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.284678288 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.282681437 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.282767548 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.282222507 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.280362202 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.282724204 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.282150225 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.284611141 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.282252293 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.281194343 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.283208641 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.282859554 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.282026933 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.285025905 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.281897144 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.283588378 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.284871647 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.283576631 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.283558379 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.285758926 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.284506474 seconds)
  done (took 28.140986112 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.287501192 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.283668363 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.28356747 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.288983698 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.285799656 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.28758698 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.284128315 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.287413563 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.288090939 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282729243 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.286220325 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.287375871 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.283429183 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.282493628 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282662896 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.288144521 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.285465893 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.282587764 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.285675757 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.283334316 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.285250962 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.283768688 seconds)
  done (took 29.472329802 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.288296496 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.289108648 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.288793432 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.287121121 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.289124776 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.286937643 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.287624283 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.291883852 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.288552221 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.2882492 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.287450783 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.28772549 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.295531785 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.295693115 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.287893909 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.290774824 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.43401011 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.288207605 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.291399958 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.2917058 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.288323034 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.296141549 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.304165616 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.286055118 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.288543349 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.288873678 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.291260972 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.287194378 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.288145423 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.290638374 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.292730888 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.292927415 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.287574815 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.293585587 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.286663478 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.289216043 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.295258206 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.287712469 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.290186907 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.288535149 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.29928908 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.314607798 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.291842918 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.298196564 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.3081287 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.288221822 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.296766847 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.300327873 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.291512632 seconds)
  done (took 64.63694376 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.28919834 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.289596391 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.288252173 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.291192988 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.290116753 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.28908816 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.289921502 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.290418031 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.288025314 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.287443428 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.289612554 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.287484005 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.289659447 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.291833181 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.290660037 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.288888155 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.287976096 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.287666684 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.287782082 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.290621352 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.286750758 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.290435091 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.292090425 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.287218044 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.293330137 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.289261266 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.288846523 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.293486256 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.290593276 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.286409673 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.290613883 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.293997052 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.29132471 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.291893094 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.288519153 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.293563919 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.293612278 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.291528871 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.293579862 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.293874742 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.290522319 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.291636104 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.29429136 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.29424872 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.291907673 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.292268901 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.286789365 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.289484246 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.29233289 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.294746812 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.292651596 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.293679996 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.29537225 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.287644315 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.290440843 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.29338626 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.291147998 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.290413256 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.29307041 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.290662018 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.29097396 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.292883863 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.29170922 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.292774414 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.294815118 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.292189953 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.288189188 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.295211378 seconds)
  done (took 88.984341716 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.293011975 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.295846867 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.297063173 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.296570343 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.296535404 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.292820817 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.295495625 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.294951571 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.296818723 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.294860099 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.297193816 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.29207249 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.294523426 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.292564153 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.294027565 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.297552282 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.29714649 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.298212769 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.297614383 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.297698478 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.298825138 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.297854029 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.297055455 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.29480947 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.296839391 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.294630872 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.298802873 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.298715491 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.298504056 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.297511669 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.298509337 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.298927318 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.293634136 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.29356814 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.299459594 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.295746925 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.295176345 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.295614743 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.299439482 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.299422996 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.296306691 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.293517487 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.29769498 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.298594578 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.297598633 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.295728554 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.299513433 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.29937892 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.300207489 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.293150082 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.296393084 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.298964163 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.297152602 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.298994461 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.30099545 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.297608201 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292465405 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.296221609 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.297800658 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.297133472 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.298021223 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.300762401 seconds)
  done (took 81.606081747 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.298095962 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.297671574 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.292699573 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.295118142 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.297799268 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.295042573 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.296928019 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.297162774 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.298161267 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.297775188 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.297814316 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.295598061 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.295938899 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.298290195 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.297595508 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.296511801 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.295839589 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.292927419 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.299094387 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.296076171 seconds)
  done (took 27.139203041 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.2966574 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.299373686 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.295802553 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.296035461 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.298928904 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.295697133 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.297070298 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.297789339 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.296731635 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.296073402 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.299282285 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.299710957 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.298594964 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.297242131 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.300245681 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.298757543 seconds)
  done (took 21.972824963 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.300958438 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.30044907 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.299009684 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.299165545 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.301332184 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.298265054 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.30017407 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.294269358 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.296519798 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.297974521 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.299566234 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.301083632 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.299557697 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.298443334 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.3015116 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.300647137 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.297721989 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.299211657 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.301634779 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.300529626 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.298627118 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.296898927 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.300849657 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.300513249 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.298671589 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.298857202 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.298618871 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.300135988 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.299912862 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.302018516 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.296199512 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.297607616 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.299144547 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.298835009 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.297989561 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.302134162 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.305224308 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.305733502 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.30382555 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.30253089 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.302922277 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.300864571 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.301735732 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.299913194 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.299892712 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.302819618 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.301790606 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.301884909 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.301708862 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.29993197 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.305383612 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.305838997 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.304116401 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.306026057 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.305336721 seconds)
  done (took 72.741562925 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.304100711 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.306989185 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.300808927 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.304128599 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.302257408 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.299690913 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.303823985 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.305019812 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.301114578 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.302460487 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.30286061 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.307886695 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.302550445 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.300833584 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.298951 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.304251921 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.303983808 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.302596558 seconds)
  done (took 24.667719564 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.304960395 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.303152085 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.305080202 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.29740257 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.302340663 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.30634535 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.300844617 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.307032138 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.306918767 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.303287256 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.304673446 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.305210883 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.304623885 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.305705276 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.302885685 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.302428946 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.305886447 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.305626616 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.301384972 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.302937128 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.302141697 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.30582042 seconds)
  done (took 29.900914752 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.305477248 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.30348084 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.304046787 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.321542586 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.324475127 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.329970513 seconds)
  done (took 9.103381186 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316452632 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304563729 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.303823779 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304739215 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306156799 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303108149 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301869388 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302950711 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307016315 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306290553 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30398333 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306252623 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306790207 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306324468 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307043696 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310211735 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304214322 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307064487 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308946488 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309817269 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30865917 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309166962 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305534816 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305539171 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306511009 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305411725 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309281641 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310900977 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307456807 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310461559 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307423696 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305094945 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307566332 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30606952 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309654504 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312100811 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306319445 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30885133 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311608984 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306254946 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.310363048 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312015892 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311630579 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307955057 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311874231 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306374627 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307918069 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309417058 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30593206 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310664911 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312222933 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307326102 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308580943 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310201222 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310161502 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309851963 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309531971 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308026203 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313018629 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308886851 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306903825 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314003657 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306383095 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30807543 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310499558 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310006942 seconds)
  done (took 87.577597672 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3090693 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.311235988 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308371182 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311911565 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3083975 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309749316 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309983398 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311566227 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30915094 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311819007 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315245939 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314536606 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312058203 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31243646 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308663002 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311167259 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312595673 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312789801 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315800696 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313865143 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313930077 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314167853 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31573505 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312428253 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31192116 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314398576 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313796319 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313208936 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31404101 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307628475 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312456166 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314760451 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315073331 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.313216473 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312473174 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314607726 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310619728 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313215314 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313489154 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315498118 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313830881 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31544242 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31271541 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314049219 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314337384 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313531335 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314244321 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312803557 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313766287 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314464222 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315300417 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315599286 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315031154 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315261589 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316767177 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31393983 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313309621 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31377149 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313392807 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315687996 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312594319 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313822598 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314867585 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315687561 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316148092 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31521363 seconds)
  done (took 87.894296451 seconds)
done (took 1764.444228279 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.495460265 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.434145059 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.315638227 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.341890398 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.311928396 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.311220453 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.334666622 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.312793653 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.315756662 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.314953366 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.31380877 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.527303186 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.310294206 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.313516534 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.316415222 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.412848274 seconds)
  done (took 42.906302173 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.349259979 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.322333117 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.443302168 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.339294806 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.349453053 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.520568518 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.379758876 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.322028254 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.503058203 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.363834795 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.990227602 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.34577024 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.319274045 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.509840369 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.337361125 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.51749288 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.577425432 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.996264962 seconds)
  done (took 30.711526244 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.808837352 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.355257225 seconds)
  done (took 9.389416543 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.34246399 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.322726409 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.325149111 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.322342628 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.315332124 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.31118472 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.319375119 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.316943615 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.304146071 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.461794254 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.321206158 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.333632061 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.340172824 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.319763823 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.320694193 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.360164159 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.521836988 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.318794192 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.31827867 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.32627204 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.321886824 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.422587571 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.364976898 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.317725994 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.457103874 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.311718851 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.322594644 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.327068593 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.508707578 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.319479578 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.31969687 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.323542769 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.323357534 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.238318137 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.769083389 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.329983198 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.347349957 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.328720887 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.318643245 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.480243221 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.322303439 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.328808201 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.3135772 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.779966543 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.457844346 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.445946022 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.653419854 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.33910577 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.32793983 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.386721383 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.321606751 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.324551391 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.371021269 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.136072852 seconds)
  done (took 112.022091706 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.340040391 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.707821211 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.484657288 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.340198862 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.97849221 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.997036947 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.332658869 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.627001593 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.370251704 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.316026824 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.625691827 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.844568205 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.334570719 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.378603919 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.960144557 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.357622454 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.315340528 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.07117354 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.332459724 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.318283755 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.83317171 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.316906375 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.314733467 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.587309211 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.355487684 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.797251868 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.86478403 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.773084583 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.336789886 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.316333424 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.806732309 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.339587091 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.335229346 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.320781819 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.592821793 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.700506019 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.697563489 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.337284684 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.349069717 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.319883033 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.351038385 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.791040214 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.700337878 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.335394127 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.334503556 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.813833899 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.335513804 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.319398439 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.323097013 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.525339997 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.990986707 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.322924972 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.852326565 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.31710549 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.622464027 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.340929315 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.368857266 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.830052686 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.335608839 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.401462318 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.362799958 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.318431081 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.32089215 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.323567921 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.317570553 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.694004633 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.66122758 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.319409331 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.68918988 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.817777749 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.334847589 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.882658282 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.234958037 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.331960212 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.382728422 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.319698231 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.882115132 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.834282438 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.336362465 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.318950193 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.677370441 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.339146247 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.61107282 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.33648519 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.336054137 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.844386638 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.325315969 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.372722603 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.335076368 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.320458399 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.938527387 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.322898657 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.596821193 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.366425537 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.325430213 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.32192621 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.327555512 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.319690014 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.320374192 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.32884619 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.868626293 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.338323437 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.469321753 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.340628109 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.320744969 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.320625948 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.320392213 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.324129076 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.543512251 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.78199036 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.337851107 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.324375146 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.321747728 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.326270557 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.593737126 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.328195553 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.653821639 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.339715507 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.320593337 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.321059896 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.041551193 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.352642666 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.320619256 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.346437145 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.224756544 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.529898909 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.342761695 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.323572859 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.323266962 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.340450582 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.662977049 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.342667009 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.412257984 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.326702926 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.052376802 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.3716423 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.352938039 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.692304877 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.331259312 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.32407466 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.340033781 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.324922501 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.638101692 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.604907296 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.576471177 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.323650622 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.342251929 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.064935676 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.362441168 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.465235394 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.341678868 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.409881305 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.524532964 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.494573962 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.323574146 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.965995323 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.32594039 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.541738622 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.327324241 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.626456311 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.846536108 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.348326801 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.326573204 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.061702831 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.071081164 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.137161375 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.327030242 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.612518633 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.305059201 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.799639321 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.324128648 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.327654683 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.748784991 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.331383416 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.330056154 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.32623611 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.325877878 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.466599095 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.498617667 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.979799351 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.329082524 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.800719056 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.358005517 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.337108506 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.327399171 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.324210961 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.675057659 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.403089278 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.330485577 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.372652653 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.329105923 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.333783042 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.826483587 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.274422393 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.32791891 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.479793532 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.989866455 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.350100685 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.331321568 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.937928943 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.571509451 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.868677905 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.389093774 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.662500186 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.35212823 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.366212558 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.933580415 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.353776097 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.829680222 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.344606247 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.327143628 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.955204784 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.349736465 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.426414334 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.328820766 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.327378811 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.880749409 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.34597095 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.331530032 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.679010285 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.353582461 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.580332467 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.332884596 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.345782913 seconds)
  done (took 1110.73389847 seconds)
done (took 1306.987922756 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.33331741 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.327200932 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.315918288 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.333280243 seconds)
  done (took 26.550199882 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.350182515 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.336413007 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.338740537 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.336964518 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.339575885 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.336203932 seconds)
  done (took 9.279986704 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.917065387 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.329738989 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.334792921 seconds)
  done (took 19.826501615 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.557588916 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.688475338 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.689374652 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.689676932 seconds)
  done (took 10.868718706 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.335522047 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.337418629 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.335555901 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.342417209 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.343659555 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.348131194 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.335856464 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.339025863 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.345907926 seconds)
  done (took 13.305899066 seconds)
done (took 81.074149498 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.251551691 seconds)
    (2/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.345919629 seconds)
    (3/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.217597477 seconds)
    (4/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.586996658 seconds)
    (5/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.76549526 seconds)
    (6/286) benchmarking ("sort", BigInt, false)...
    done (took 6.346444089 seconds)
    (7/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.382771173 seconds)
    (8/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.312142363 seconds)
    (9/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.372180529 seconds)
    (10/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.430719084 seconds)
    (11/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.355896223 seconds)
    (12/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.31010435 seconds)
    (13/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.330743412 seconds)
    (14/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.230048456 seconds)
    (15/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.861988574 seconds)
    (16/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.342106453 seconds)
    (17/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.435317274 seconds)
    (18/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.333072349 seconds)
    (19/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.339713836 seconds)
    (20/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.328577327 seconds)
    (21/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.776730073 seconds)
    (22/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.756393861 seconds)
    (23/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.162110193 seconds)
    (24/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.084842216 seconds)
    (25/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.018825933 seconds)
    (26/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.200848104 seconds)
    (27/286) benchmarking ("sort", Float64, true)...
    done (took 6.348894027 seconds)
    (28/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.167346644 seconds)
    (29/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.859176298 seconds)
    (30/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.94377219 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 6.354685527 seconds)
    (32/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.76163676 seconds)
    (33/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.325676518 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.436839579 seconds)
    (35/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.944837054 seconds)
    (36/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.320036228 seconds)
    (37/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.330148775 seconds)
    (38/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.309762885 seconds)
    (39/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.433271706 seconds)
    (40/286) benchmarking ("sort", Float64, false)...
    done (took 5.6808665 seconds)
    (41/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.700796216 seconds)
    (42/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.246606497 seconds)
    (43/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.311300995 seconds)
    (44/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.874908034 seconds)
    (45/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.400183403 seconds)
    (46/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.466250286 seconds)
    (47/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.973460037 seconds)
    (48/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.727327203 seconds)
    (49/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.442669934 seconds)
    (50/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.586941171 seconds)
    (51/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.119321215 seconds)
    (52/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.315286178 seconds)
    (53/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.308464649 seconds)
    (54/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.428977293 seconds)
    (55/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.391278015 seconds)
    (56/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.416830679 seconds)
    (57/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.755875812 seconds)
    (58/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.403981909 seconds)
    (59/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.570992235 seconds)
    (60/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.377924037 seconds)
    (61/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.841743 seconds)
    (62/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.349169473 seconds)
    (63/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.573320504 seconds)
    (64/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.353500111 seconds)
    (65/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.710993744 seconds)
    (66/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.608770211 seconds)
    (67/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.808929271 seconds)
    (68/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.326461038 seconds)
    (69/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.424545246 seconds)
    (70/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.42311956 seconds)
    (71/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.173972111 seconds)
    (72/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.330963863 seconds)
    (73/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.35231615 seconds)
    (74/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.35850622 seconds)
    (75/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.312799747 seconds)
    (76/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.395586446 seconds)
    (77/286) benchmarking ("sort", Int64, false)...
    done (took 5.58587138 seconds)
    (78/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.735057022 seconds)
    (79/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.315198341 seconds)
    (80/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.364765867 seconds)
    (81/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.056883735 seconds)
    (82/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.768989186 seconds)
    (83/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.382773307 seconds)
    (84/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.191306343 seconds)
    (85/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.334793999 seconds)
    (86/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.33132281 seconds)
    (87/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.334382226 seconds)
    (88/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.948751615 seconds)
    (89/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.417928212 seconds)
    (90/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.91128913 seconds)
    (91/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.35335263 seconds)
    (92/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.314757622 seconds)
    (93/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.598826816 seconds)
    (94/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.020916894 seconds)
    (95/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.353412849 seconds)
    (96/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.728666691 seconds)
    (97/286) benchmarking ("sort", Float32, true)...
    done (took 6.339176793 seconds)
    (98/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.179834243 seconds)
    (99/286) benchmarking ("sort", Int8, false)...
    done (took 4.382765807 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.325283874 seconds)
    (101/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.549118568 seconds)
    (102/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.344484807 seconds)
    (103/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.917207819 seconds)
    (104/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.355773248 seconds)
    (105/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.317863914 seconds)
    (106/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.355956438 seconds)
    (107/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.005999625 seconds)
    (108/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.798988935 seconds)
    (109/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.462353578 seconds)
    (110/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 6.013731992 seconds)
    (111/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.075717626 seconds)
    (112/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.634560968 seconds)
    (113/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.308210531 seconds)
    (114/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.3549163 seconds)
    (115/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.439699135 seconds)
    (116/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.133156383 seconds)
    (117/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.316490898 seconds)
    (118/286) benchmarking ("sort", Bool, false)...
    done (took 1.878901816 seconds)
    (119/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.375849071 seconds)
    (120/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.617785954 seconds)
    (121/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.318403637 seconds)
    (122/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.365209407 seconds)
    (123/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.779618694 seconds)
    (124/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.335004339 seconds)
    (125/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.160265921 seconds)
    (126/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.172150482 seconds)
    (127/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.321289148 seconds)
    (128/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.600954331 seconds)
    (129/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.447242183 seconds)
    (130/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.425826698 seconds)
    (131/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.316457426 seconds)
    (132/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.40050115 seconds)
    (133/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.52518178 seconds)
    (134/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.440433804 seconds)
    (135/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.427522435 seconds)
    (136/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.44623803 seconds)
    (137/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.781784824 seconds)
    (138/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.317569038 seconds)
    (139/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.872196913 seconds)
    (140/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.319350542 seconds)
    (141/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.362608318 seconds)
    (142/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.324066008 seconds)
    (143/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.245473004 seconds)
    (144/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.176927889 seconds)
    (145/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.329891034 seconds)
    (146/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.365553356 seconds)
    (147/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.435945232 seconds)
    (148/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.363486315 seconds)
    (149/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.529174897 seconds)
    (150/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.355746579 seconds)
    (151/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.354023421 seconds)
    (152/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.321371493 seconds)
    (153/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.320745333 seconds)
    (154/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.330380413 seconds)
    (155/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.36798391 seconds)
    (156/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.359020248 seconds)
    (157/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.352497601 seconds)
    (158/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.403201992 seconds)
    (159/286) benchmarking ("sort", Float32, false)...
    done (took 5.359071192 seconds)
    (160/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.380386182 seconds)
    (161/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.639063055 seconds)
    (162/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.415991116 seconds)
    (163/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.318668506 seconds)
    (164/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.35453244 seconds)
    (165/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.357324977 seconds)
    (166/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.135727051 seconds)
    (167/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.354392546 seconds)
    (168/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.362739898 seconds)
    (169/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.340952923 seconds)
    (170/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.198481903 seconds)
    (171/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.926161856 seconds)
    (172/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.319545544 seconds)
    (173/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.380326207 seconds)
    (174/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.36976238 seconds)
    (175/286) benchmarking ("sort", BigInt, true)...
    done (took 6.34313594 seconds)
    (176/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.385363969 seconds)
    (177/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.402108248 seconds)
    (178/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.465721497 seconds)
    (179/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.736439349 seconds)
    (180/286) benchmarking ("sort", Int8, true)...
    done (took 6.344593938 seconds)
    (181/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.344055306 seconds)
    (182/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.454245852 seconds)
    (183/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.36514393 seconds)
    (184/286) benchmarking ("sort", Bool, true)...
    done (took 5.461596529 seconds)
    (185/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.423268673 seconds)
    (186/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.322077448 seconds)
    (187/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.015392436 seconds)
    (188/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.340634721 seconds)
    (189/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.518144811 seconds)
    (190/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.721473692 seconds)
    (191/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.691742951 seconds)
    (192/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.222938242 seconds)
    (193/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.495984313 seconds)
    (194/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.99058317 seconds)
    (195/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.545004242 seconds)
    (196/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.01112513 seconds)
    (197/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.427370017 seconds)
    (198/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.990289337 seconds)
    (199/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.34671646 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.384753049 seconds)
    (201/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.371389664 seconds)
    (202/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.026783351 seconds)
    (203/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.438365562 seconds)
    (204/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.014985698 seconds)
    (205/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.372209119 seconds)
    (206/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.82908911 seconds)
    (207/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.013309978 seconds)
    (208/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.329435089 seconds)
    (209/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.256676821 seconds)
    (210/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.424982204 seconds)
    (211/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.384936803 seconds)
    (212/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.434399059 seconds)
    (213/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.718998711 seconds)
    (214/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.364792937 seconds)
    (215/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.373308252 seconds)
    (216/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.323807424 seconds)
    (217/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.380145693 seconds)
    (218/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.370889359 seconds)
    (219/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.362912741 seconds)
    (220/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.171474833 seconds)
    (221/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.106199958 seconds)
    (222/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.899498156 seconds)
    (223/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.485418247 seconds)
    (224/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.523568341 seconds)
    (225/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.427926666 seconds)
    (226/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.122042783 seconds)
    (227/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.323471231 seconds)
    (228/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.481000992 seconds)
    (229/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.971685569 seconds)
    (230/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.356079729 seconds)
    (231/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.430704906 seconds)
    (232/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.323081988 seconds)
    (233/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.224221333 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.766164834 seconds)
    (235/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.627476499 seconds)
    (236/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.822287342 seconds)
    (237/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.441028467 seconds)
    (238/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.626707544 seconds)
    (239/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.375008402 seconds)
    (240/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.579084742 seconds)
    (241/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.361061701 seconds)
    (242/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.351978399 seconds)
    (243/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.374044861 seconds)
    (244/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.330414215 seconds)
    (245/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.73580557 seconds)
    (246/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.326907753 seconds)
    (247/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.333162178 seconds)
    (248/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.102994812 seconds)
    (249/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.628716174 seconds)
    (250/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.355007952 seconds)
    (251/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.95741071 seconds)
    (252/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.448912454 seconds)
    (253/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.581302393 seconds)
    (254/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.350313683 seconds)
    (255/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.854890484 seconds)
    (256/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.408262425 seconds)
    (257/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.331196285 seconds)
    (258/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.365873193 seconds)
    (259/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.453150303 seconds)
    (260/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.774303617 seconds)
    (261/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.17189271 seconds)
    (262/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.886237872 seconds)
    (263/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.375252356 seconds)
    (264/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.329127916 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.454227829 seconds)
    (266/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.648960522 seconds)
    (267/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.382491363 seconds)
    (268/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.883813128 seconds)
    (269/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.436966964 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.460745539 seconds)
    (271/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.03275278 seconds)
    (272/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.034293854 seconds)
    (273/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.177396325 seconds)
    (274/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.326369506 seconds)
    (275/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.371333323 seconds)
    (276/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.359930415 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.390293481 seconds)
    (278/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.760630146 seconds)
    (279/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.519550194 seconds)
    (280/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.538829357 seconds)
    (281/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.069676613 seconds)
    (282/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.346315073 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.388243442 seconds)
    (284/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.374840528 seconds)
    (285/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.02717377 seconds)
    (286/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.344963081 seconds)
  done (took 950.48649173 seconds)
done (took 951.730617896 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.381293717 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.38197478 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.36070282 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.380016525 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.477739859 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.37931917 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.368535082 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.3594246 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.407132121 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.411424275 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.363216696 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.38092809 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.364543058 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.363355384 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.360118694 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.380825207 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.48949511 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.365387045 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.383116499 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.372592966 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.379662728 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.365724777 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.408216228 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.379175475 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.363108084 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.362497125 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.367634346 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.385839453 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.477920544 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.367281363 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.363585998 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.376959967 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.490378791 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.356790707 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.357382792 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.384700518 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.377123794 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.369838665 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.364706462 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.399358044 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.932089019 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.383716309 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.368766005 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.360874027 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.361161346 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.368699846 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.369387617 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.368135824 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.380376322 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.389229458 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.920404062 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.39863467 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.371850345 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.361309618 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.372938707 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.369619227 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.365236763 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.389870134 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.38854763 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.386076132 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.475559855 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.366341592 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.364456122 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.383920876 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.377230284 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.957177504 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.373786011 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.369524463 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.929899308 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.384633159 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.96007838 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.39347225 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.363825227 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.381344794 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.40240239 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.492553408 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.358577674 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.363771971 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.378550501 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.367935915 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.374497588 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.383395053 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.371245136 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.365310648 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.38527217 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.385227452 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.372925498 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.37125393 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.372147719 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.389881534 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.379028699 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.384092421 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.365522882 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.361296014 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.373974485 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.367769997 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.374926803 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.372105947 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.370764142 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.377607469 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 3.009505014 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.415163256 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.363133832 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.360879143 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.362164881 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.386534171 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 3.006830614 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.397231289 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.388570103 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.414409505 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.370324718 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.482249624 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.378826024 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.39303974 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.376184179 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.369171712 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.3611472 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.485303157 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 3.027700529 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.411852084 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.367342321 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.374490458 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.393467207 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.373711898 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.366759378 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.502144535 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.369073401 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.390223174 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.496731569 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.379950203 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.407845459 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.374553598 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.371819371 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.395389626 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.39075721 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.405321794 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.373599374 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.389212112 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.391539524 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.366238309 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.384777022 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.37700505 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.367632858 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.377288729 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.367064314 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.3929106 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.389374867 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.391777904 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.387146253 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.495528819 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.36671587 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.485638764 seconds)
done (took 232.669748484 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.427787484 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.362831408 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.456201356 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.36583581 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.469889544 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.466407075 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.361090606 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.36290021 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.365316934 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.747749569 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.365814453 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.363860014 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.357594957 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.365523904 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.44827213 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.36752368 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.365982334 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.707875439 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.368368697 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.441759456 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.361603265 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.362428494 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.36906985 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.745078488 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.366667327 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.366175592 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.438627161 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.368031166 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.712093447 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.363590992 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.365750841 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.714249924 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.460428142 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.386920461 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.377791204 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.375308086 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.470524125 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.388151448 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.449442642 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.448193001 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.458515937 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.408905373 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.366997034 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.365170245 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.37343565 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.371213662 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.369324879 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.396639603 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.366522214 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.366754813 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.708783452 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.376832608 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.368097884 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.366233098 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.367616312 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.399979958 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.370922438 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.368098586 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.463506574 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.372203477 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.435822156 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.751244844 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.750572546 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.372715302 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.369694415 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.369405675 seconds)
  done (took 150.7567491 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.432786578 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.444329526 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.491783941 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.393497177 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.421589727 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.501097576 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.393153123 seconds)
  done (took 11.351197285 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.377491905 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.373209019 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.422936299 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.422614355 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.369953404 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.556196362 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.370141047 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.380350785 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.368585151 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.425960179 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.373944792 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.373905761 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.380790571 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.363014644 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.418512375 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.384581379 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.488570609 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.375123128 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.372540648 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.539478491 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.372530351 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.38187129 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.423859283 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.388440091 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.376028176 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.376950966 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.196167021 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.373530772 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.377042084 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.370258909 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.372665673 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.45023267 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.374587172 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.367155774 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.370708683 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.490279763 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.375324513 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.373787472 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.375122763 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.372197391 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.374541503 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.3731761 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.37404296 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.371731842 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.376368193 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.395428808 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.372847245 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.375344548 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.375679004 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.375181027 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.423762279 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.373079759 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.368206382 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.372606638 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.434077869 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.385895741 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.374332934 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.377940275 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.376321741 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.371028104 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.536529513 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.42287127 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.375052522 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.42126502 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.377153417 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.373391705 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.37408932 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.374819982 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.428382606 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.37381526 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.422046227 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.374218709 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.559850333 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.39591382 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.375316304 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.377284707 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.377616916 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.376446667 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.37081134 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.379639219 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.372018067 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.377706334 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.381070995 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.374340889 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.372822298 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.549199299 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.484723748 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.374631714 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.38948701 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.381532455 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.376135835 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.427896589 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.373683846 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.373901873 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.428962157 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.490919442 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.427570358 seconds)
  done (took 157.618210083 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.381910777 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.385575198 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.37556676 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.392934961 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.378934305 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.37428193 seconds)
  done (took 9.568511729 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.379184717 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.37921488 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.377735664 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.378374719 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.377275317 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.386167274 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.379793729 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.382853709 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.38222589 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.382985685 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.377872944 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.384076308 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.384622694 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.381172313 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.385257558 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.382404999 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.377083786 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.378379927 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.3784729 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.376579059 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.480851536 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.37844373 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.377834106 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.381976593 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.382099688 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.379879853 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.385870597 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.377982586 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.377121515 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.383201738 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.396368396 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.379649392 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.379367571 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.386571508 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.384977412 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.385553564 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.385925636 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.385159326 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.377506802 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.379087777 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.383151475 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.381595899 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.380637108 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.382010892 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.383916519 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.386763797 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.389611954 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.393271381 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.38180592 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.385926777 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.389247537 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.386345404 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.38488226 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.388516398 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.384801706 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.402477104 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.392105343 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.386659715 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.380784681 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.387444004 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.384827011 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.381168677 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.385474113 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.386193883 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.378277006 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.384930132 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.389290406 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.389208419 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.383806259 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.384271461 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.385995363 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.379621622 seconds)
  done (took 101.984880802 seconds)
done (took 432.552200192 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.41400007 seconds)
  done (took 7.69679897 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.584720787 seconds)
  done (took 7.873478665 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.647352271 seconds)
  done (took 24.938483678 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.399216835 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.500308372 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.40884919 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.383056473 seconds)
  done (took 26.980163019 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.600129685 seconds)
  done (took 7.886835445 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.390529699 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.37612987 seconds)
  done (took 14.052595574 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.602343822 seconds)
  done (took 7.887038273 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.417744842 seconds)
  done (took 7.713149119 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.396072995 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.394977594 seconds)
  done (took 14.090140988 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.358822481 seconds)
  done (took 7.643230726 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.041819413 seconds)
  done (took 12.327606519 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.37946521 seconds)
  done (took 7.669261759 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.440058516 seconds)
  done (took 7.727888174 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.27082072 seconds)
  done (took 10.559422453 seconds)
done (took 166.330068904 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.374094509 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.375309807 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.371806693 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.377786831 seconds)
  done (took 26.782145211 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.416261492 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.417107569 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.417802934 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.42935139 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.422232866 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.419183723 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.408901456 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.411792634 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.428113488 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.421951835 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.4188051 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.41872766 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.419351726 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.40950287 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.419936078 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.421084689 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.428863721 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.418587793 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.41303837 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.42012096 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.387513703 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.429470908 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.4240364 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.384745651 seconds)
  done (took 35.291219849 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.912067873 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.457392705 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.541467162 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.43847911 seconds)
  done (took 7.636005856 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.440013324 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.439591523 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.450415553 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.490779721 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.515773494 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.448035719 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.413550668 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.409031143 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.397377881 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.440246201 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.516719321 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.454102004 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.526842655 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.385057824 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.610306944 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.386588651 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.385330469 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.438895234 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.491073225 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.503383896 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.390282484 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.439420393 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.442462337 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.458016055 seconds)
  done (took 36.164599534 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.389870568 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.407340435 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.388753899 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.385967227 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.394208816 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.388486268 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.38894689 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.390269476 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.387556484 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.393479953 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.386829049 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.401514237 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.385330373 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.386580009 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.393094649 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.390991948 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.393387629 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.385773586 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.389406372 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.395342514 seconds)
  done (took 29.113246526 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.380899776 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.234446246 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.736089671 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.661304246 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.383666846 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.380321487 seconds)
  done (took 28.065886513 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.467971133 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.633663429 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.38710199 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.804859489 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.91087195 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.416647482 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.390124857 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.663289871 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.040633249 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.027899945 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.464859352 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.474460972 seconds)
  done (took 20.974478088 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.394070702 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.389796235 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.399452046 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.405081464 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.452431217 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.414949548 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.395507345 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.384433251 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.462113617 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.478919627 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.418690096 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.454128852 seconds)
  done (took 38.34213255 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470171544 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.435467305 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.45652988 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.453244484 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.108643273 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.595888371 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.462254653 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.139241853 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.408619285 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658626758 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393753293 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476513009 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.644064908 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386316899 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.396021488 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.47535509 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.632786364 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936936261 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395541839 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.857816358 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420076071 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.390509129 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.928444596 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.652756318 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.617543847 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.370611237 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.650558212 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.163360721 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.713778675 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.409685264 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401196745 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.388771923 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663134734 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088248169 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500357361 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.622894901 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.430786532 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.938585832 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.391084239 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.841021009 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398453915 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.390029067 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403384196 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389781981 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.32425499 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.394128826 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.157993772 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.416380719 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.100497491 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.387826231 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.683955094 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492283322 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.394681734 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.96180223 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.473820663 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.418247469 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.394858743 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.487174864 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97504732 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.141096078 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.40968982 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.331205281 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.401316495 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.827854344 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069141875 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.415864746 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.394437513 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.393822764 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.325022851 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.81928605 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.41480651 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.529935123 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.416956376 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.04007296 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.159505628 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.418154932 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.323459353 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013718317 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.402188899 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.332801572 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.621307479 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.169039158 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.330931802 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.351679885 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.326181477 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.181875151 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407014467 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.913738754 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420096081 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.164120794 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.651238001 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431648082 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418732031 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.618386651 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.276098997 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391155929 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.392395559 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.530986133 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413096225 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.143486081 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.345991281 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.394497293 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.651796973 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.606714388 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.409607997 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.482066841 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.933398299 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.432167043 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.41420581 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.401484597 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.636820675 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.052881723 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.426703479 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.147841939 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421715304 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.181494993 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.227199566 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420729888 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.407762071 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.408401496 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.693024137 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.255522296 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.294026636 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460736486 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.39918174 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.395084713 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.874404668 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.252250368 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.276313214 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.619232655 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.418842661 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.414307847 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.394658834 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.36250948 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.407436481 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408689609 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.177120542 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.619679061 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.410841692 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677430414 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.331353408 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.532403421 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.41060732 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.62027995 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.699885476 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.421559947 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.657469083 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408434932 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.413699044 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.415400325 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417282461 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49820173 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418393311 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.394407582 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.662675774 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.400208055 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.405964998 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.915867789 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.182915417 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408262385 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.40233079 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399341558 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.047922695 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392776968 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.398675221 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.293550987 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.412805222 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465447184 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.405902109 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.638393815 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.889907248 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.429358672 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.403421005 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.399718739 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629568411 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.409839963 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.850637136 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.48105116 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.917307246 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.070666052 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.43888966 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.333542685 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.111338198 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.095175724 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404293796 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.604187022 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.404522785 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.63794253 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.433517278 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.417934657 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.06817058 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.422088072 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.8713601 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.412525189 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.414120378 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.416131571 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402030988 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.897446936 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.186920234 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.414317355 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.421458056 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543589848 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.414985911 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.33772145 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.919001475 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.410568392 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.403436193 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.178225035 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436308837 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.882220115 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.26404834 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.685957319 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.402965221 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.720195201 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.992617363 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.442015664 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.399462438 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.400925996 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41526534 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.427600134 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430444645 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.414942858 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.867363023 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.858692788 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970649873 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.196593888 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004514649 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.816493361 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.420173763 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.307203005 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.163996261 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.357275575 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.063001143 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671718386 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.18865691 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.380198353 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923198325 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.736724714 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.29514279 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.705855147 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.640666988 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.793071841 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.422272936 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.702615386 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.624149233 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439574148 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.405351522 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.339533613 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.686507895 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.006013791 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.424390895 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.505018118 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.169630367 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.427635893 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.183832545 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.429605601 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.302126583 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858682356 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.052729925 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.80153705 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.405510551 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.411412187 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.269136105 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.427309131 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.933235173 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.079915017 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.436251709 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.928233363 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.364555095 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.651451441 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.437817775 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.404634282 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.172140505 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.409242104 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.672581151 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.700966001 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.347278486 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.417217737 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.010570759 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.289392002 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.414642137 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40773668 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.239237666 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.422578279 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.73802541 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.416219238 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.913943025 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.435248279 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.342497224 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.340644452 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.09824667 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.408384067 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377461976 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96435617 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.421095289 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421646817 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.409737082 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.266172113 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.667170139 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.421069393 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.062225114 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.654855703 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.405605151 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43161841 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.412616476 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.409177657 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.39767284 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.308517888 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.643015305 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.420984203 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.63494142 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.561926095 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.322833117 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.419846682 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.61956548 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.764168307 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.42250807 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.675707497 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.138697492 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.42234637 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.18160104 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449035716 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.41910936 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.42965254 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.41231542 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.427722534 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499433371 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.656037692 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.445650632 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.422550428 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858555728 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.438115594 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.411727965 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.421311688 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500442754 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.206464782 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.933303264 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.189121792 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.057144776 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.233026131 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.083275152 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.72705719 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.420459605 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41567296 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.343555236 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.561185203 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.940194764 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684476559 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.530717731 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.424481665 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431915331 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.40937395 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.430409706 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.63113346 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686795148 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.287205095 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.426415246 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.083990693 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.292835766 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.422634626 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.62460039 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977053707 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050735431 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.544692959 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.426632897 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.172337843 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.705717664 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.50001055 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.413240382 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.946280763 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.409520143 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.241099796 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.415961734 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412052788 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.563730744 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.710024273 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.126641091 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.440990713 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.565272533 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.186267363 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.922216223 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.676400908 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.006422442 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.668416185 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.101508217 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.210272417 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.677553255 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483234953 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.661433607 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.554632183 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.563032177 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.409555528 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.301011687 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.412562141 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.264192984 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.121900249 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.423928998 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.073193907 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.703559605 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.41467492 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.415869239 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441997325 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.426475727 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.638163289 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.223884391 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.647381435 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.422831621 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.424798385 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.406063089 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.085488443 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.740369156 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.360259893 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.417956338 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.689759135 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.675838225 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.440889937 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.867331161 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.126956659 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047194941 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.398670626 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438053295 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.424820885 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.210810288 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.083420906 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.953091527 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002022743 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.084627087 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.426536201 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.697826375 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.420488981 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.429290577 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.699771067 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.420818941 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.415863423 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.673940062 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.10612151 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.321669931 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.447808842 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.971399749 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.361098129 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.644997702 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.416622825 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.353397017 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.425336331 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.882884536 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.439306709 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.537156693 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.428414466 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.41421435 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.455511212 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.181452762 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.701972972 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.421558253 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.406169468 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.42427853 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.432619889 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.520931066 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029024871 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.440905978 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.095125926 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.769053421 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.675616884 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.43135415 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.405045674 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.425111145 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421230068 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.101388858 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.397051146 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.442782939 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05362982 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.426704223 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.440019266 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.423659383 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.634834176 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629311976 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.426620319 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.680838133 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.453508466 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.440566804 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.321363481 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.191151025 seconds)
  done (took 1707.962575483 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.448360527 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.434621482 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.466158932 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.528394407 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.481684086 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.477212957 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.464194312 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.540035267 seconds)
  done (took 53.169486358 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.425062464 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.587587446 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.45404546 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.42058966 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.436901519 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.431120819 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.953008027 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.450996899 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.439482454 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.429837597 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.436511968 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.430692984 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.160560954 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.437335938 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.425266575 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.423080939 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.437765097 seconds)
  done (took 67.117031677 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.333254871 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.641755293 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.079532445 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.482011514 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.467884064 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.443971981 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.009558313 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.439833397 seconds)
  done (took 56.226764582 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.438515628 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.439166427 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.440310998 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.441669882 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.439094899 seconds)
  done (took 8.527570954 seconds)
done (took 2116.662623591 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.426107608 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.428562124 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.42672592 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.42923992 seconds)
  done (took 7.039124604 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.403600513 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.14391074 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.403317132 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.415212133 seconds)
  done (took 18.692448784 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.44033101 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.429952219 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.235320686 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.121590265 seconds)
  done (took 5.68528464 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.173666365 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.183001981 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.167965286 seconds)
  done (took 7.854365488 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.423999765 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.429706426 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.42630646 seconds)
  done (took 20.610302962 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.72155845 seconds)
  done (took 3.050472165 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.572587106 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.620375498 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.796769749 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.762863093 seconds)
  done (took 8.082977825 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.820597813 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.802844731 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.61547756 seconds)
  done (took 6.568389883 seconds)
done (took 91.78355641 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.665732711 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.448252837 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.627257984 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.634870349 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.650790357 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.628427992 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.75648749 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.604146641 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.394731349 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.139938768 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.636410522 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.650476219 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.70302311 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.446831959 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.705722713 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.448686898 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.710809824 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.710373302 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.331071986 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.440637506 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.757993225 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.27992853 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.471725841 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.295874405 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.699922586 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.582079349 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.871933329 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.447601303 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.424085858 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.914330828 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.580870412 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.424424104 seconds)
  done (took 199.414695393 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.440932109 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.424154479 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.431683494 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.424862596 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.445269186 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.445128263 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.427413334 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.443516353 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.46119726 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.424582123 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.446135462 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.447293153 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.427930469 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.446182043 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.448155694 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.442337683 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.44197049 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.425065913 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.426049507 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.429430517 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.443806094 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.445905494 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.426413913 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.4264078 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.458967584 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.425108623 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.45054233 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.425317923 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.460393663 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.443790877 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.426553958 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.443158921 seconds)
  done (took 207.357229992 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.427315095 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.454309276 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.428699003 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.437297074 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.441976906 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.427097677 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.428675397 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.44510948 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.428456476 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.42713938 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.456908066 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.429835971 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.432592246 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.425904957 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.430170394 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.428317252 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.445556295 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.44087824 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.428099186 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.43093845 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.42753872 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.426976334 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.446740096 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.430183464 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.436309041 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.427706061 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.428343893 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.432316351 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.427615809 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.463674511 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.429881637 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.429222363 seconds)
  done (took 207.237713576 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.627654837 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.43735043 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.438821307 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.374453145 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.438517079 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.436081533 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.433327533 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.636081453 seconds)
  done (took 15.157763716 seconds)
done (took 630.498158176 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.859624923 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.568810577 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.65549921 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.46041268 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.30310774 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.475167734 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.460540206 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.658403998 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.402298974 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.666665245 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.771313871 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.478850707 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.926399094 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.457700628 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.732586909 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.569820017 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.400522909 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.526449087 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.814602151 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.088813889 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.743902661 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.068444877 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.682129621 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.391530033 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.004674815 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.025892865 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.287655741 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.384243438 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.483582814 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.819484779 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.261545492 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.590280802 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.537834911 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.53688745 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.593907556 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.576672146 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.561690655 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.573822084 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.688155147 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.779562588 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.08019421 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.213695596 seconds)
  done (took 98.499948194 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.42705053 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.425207653 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.423388249 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.425365259 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.428919899 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.42531854 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.426333112 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.425194706 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.424340731 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.424279933 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.424535932 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.428741543 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.425920554 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.425132646 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.425708744 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.424518173 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.425331774 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.430929529 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.42395384 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.426078832 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.426543482 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.429111083 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.427465986 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.426457018 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.425391636 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.42783642 seconds)
  done (took 38.423596974 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.444108959 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.715682197 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.910600777 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.459547406 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.445879846 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.446833964 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.533560544 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.452462598 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.448524661 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.449911271 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.615075206 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.450384436 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.485680702 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.931304878 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.454802975 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.445818454 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.445302039 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.446167274 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.724379062 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.462897699 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.561336294 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.453978828 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.535678007 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.464595629 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.471737233 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.449932276 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.450184885 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.031931186 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.46628966 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.618796834 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.362663362 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.541980012 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.01378603 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.93359251 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.362597294 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.454587505 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.448192854 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.620694061 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.456049828 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.446860132 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.539853921 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.457186814 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.911820812 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.159565119 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.470742514 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.450271511 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.056347365 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.646970335 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.743966583 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.46512567 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.941548353 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.457898331 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.449166559 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.450930005 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.739306114 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.464241795 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.449605443 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.098854841 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.484188988 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.539100566 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.458095387 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.448158145 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.729668445 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.456165547 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.728682927 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.45866563 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.457271028 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.470810322 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.917962282 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.460815871 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.185258842 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.478245181 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.452135836 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.619550909 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.734624024 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.101849747 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.476722479 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.73343759 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.026306539 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.558888104 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.462381679 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.025065057 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.565054655 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.463114187 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.453954066 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.452253863 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.451377155 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.501241905 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.541175919 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.10827162 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.18720626 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.133528829 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.573129988 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.472400235 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.453985095 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.10327711 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.483105242 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.450508207 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.910672073 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.188871479 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.4771099 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.46260417 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.185275635 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.478759675 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.544830384 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.465608448 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.920766433 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.458985736 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.503564295 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.452212892 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.458293446 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.474034698 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.544331187 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.464869365 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.452995176 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.152758164 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.655895213 seconds)
  done (took 192.323819324 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.445200932 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.466307458 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.457643892 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.446908694 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.445371692 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.455029375 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.444408772 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.445601359 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.455520679 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.446177463 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.446816744 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.449270036 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.451033218 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.477191046 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.457187704 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.451365648 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.106495266 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.44658191 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.446008221 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.448419278 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.278089803 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.457641147 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.450593556 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.445832463 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.449673513 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.44909863 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.459475331 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.469671152 seconds)
  done (took 155.503420024 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.4538325 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.128501461 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.484390646 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.610990838 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.484177218 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.45383735 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.608805373 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.530481657 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.479656017 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.456186224 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.455973339 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.815061375 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.463656216 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.073421267 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.684728866 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.637360882 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.081533451 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.483051935 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.451717019 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.454347977 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.612613543 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.467729885 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.817791025 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.13952757 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.483524201 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.094619412 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.440951434 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.458414848 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.454064589 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.102924297 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.473424094 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.821247542 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.556522758 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.533670655 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.120972353 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.059292892 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.090858565 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.629959867 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.464352888 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.456274438 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.456175322 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.440713656 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.134570838 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.485582515 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.459209756 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.123741181 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.486248694 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.456730975 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.463068178 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.456161971 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.526906837 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.553936104 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.85030375 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.149982582 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.575293187 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.476401432 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.613397969 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.869119149 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.459889491 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.043641048 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.44261286 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.141266244 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.484534562 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.441159048 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.459743682 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.463583312 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.63796577 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.623413603 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.050149209 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.47708115 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.043419062 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.653511809 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.465576043 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.456423059 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.46120111 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.140409241 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.070338517 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.654684366 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.624989319 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.688925906 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.452589143 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.458920055 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.445019795 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.549438571 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.467631732 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.14418711 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.067602052 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.476107013 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.460571341 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.463149385 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.462084959 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.662604606 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.169565049 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.572397773 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.041309514 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.845508926 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.834553193 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.467952049 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.52736437 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.486922602 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.82797451 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.467083417 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.527875499 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.939551497 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.829791555 seconds)
  done (took 176.13899761 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.736583759 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.759995766 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.553583373 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.626668148 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.132368471 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.067509297 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.837690683 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.603357247 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.588000462 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.743316977 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.7228438 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.549314637 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.699955427 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.551916556 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.237243014 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.552746431 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.587094574 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.621873179 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.631600437 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.53046239 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.188632334 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.783355633 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.676417008 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.491887694 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.555881492 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.328194509 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.073312265 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.054701706 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.668831577 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.899755915 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.031298908 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.686578103 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.512155459 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.230854803 seconds)
  done (took 70.878120838 seconds)
done (took 733.106179206 seconds)
SAVING RESULT...
DONE!
