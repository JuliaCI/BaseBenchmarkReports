cset: moving following pidspec: 3456
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.341967219 seconds)
loading group "string"... done (took 0.487714957 seconds)
loading group "linalg"... done (took 7.885044969 seconds)
loading group "parallel"... done (took 0.173501041 seconds)
loading group "find"... done (took 1.299214573 seconds)
loading group "tuple"... done (took 2.010998317 seconds)
loading group "dates"... done (took 1.445249323 seconds)
loading group "micro"... done (took 0.25014112 seconds)
loading group "io"... done (took 0.683499486 seconds)
loading group "scalar"... done (took 41.606693151 seconds)
loading group "sparse"... done (took 13.034825152 seconds)
loading group "broadcast"... done (took 1.05804877 seconds)
loading group "union"... done (took 14.207663429 seconds)
loading group "simd"... done (took 4.857517411 seconds)
loading group "random"... done (took 9.769328955 seconds)
loading group "problem"... done (took 2.006595045 seconds)
loading group "array"... done (took 22.883852158 seconds)
loading group "misc"... done (took 1.470662477 seconds)
loading group "sort"... done (took 3.66285296 seconds)
loading group "collection"... done (took 19.855191414 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.548008129 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.148041243 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.158525535 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.159434044 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.213294106 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.146663464 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.163131714 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.116864045 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.99009843 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.196269673 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.16055976 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.523410315 seconds)
done (took 5.257086672 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.293117649 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.097317656 seconds)
    (2/2) benchmarking "String"...
    done (took 0.109485959 seconds)
  done (took 0.885899888 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.080635151 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.150097387 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.098011775 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.096152693 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.083487259 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.098958317 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.082054726 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.096771898 seconds)
  done (took 1.384387211 seconds)
done (took 3.32869925 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.746827837 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.288653918 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.226011955 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.48566336 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.183651245 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.220293765 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.685800502 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.37033807 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.27511727 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.101918262 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.153375739 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.408403562 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136917322 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.667024329 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.094308191 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.129601617 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.188780693 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.498254506 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.086056527 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.113694565 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.11963654 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.144110885 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.132635833 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094816951 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.185430201 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.086935256 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.203693941 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.112034822 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.084392484 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.292409905 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.204069367 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.698211066 seconds)
  done (took 11.134664636 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.119591231 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.141104752 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.100482504 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.157690617 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.139152948 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.087404085 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.103831969 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.083443515 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.12736744 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.180948928 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.136146263 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.145311469 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.079901501 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.10232177 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.122047419 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248830848 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.110733172 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.124874806 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.103613433 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.092721838 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.141196318 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.11685929 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.112999333 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.098076819 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169978025 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.223466713 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113447209 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127925122 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.098388162 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.116588448 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.146354521 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.149049582 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.098550492 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.084240262 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.177364267 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.12659691 seconds)
  done (took 5.301409519 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.193445472 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.123746857 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.17501613 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.165244998 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.145737167 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.161916354 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119371866 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.253279654 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.132192838 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.182355156 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.150176545 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.116922831 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084988997 seconds)
    (14/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.145395075 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.104887842 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.099233816 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.733053699 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.168267212 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.138003493 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.120668501 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.107989105 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.089716312 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.724812748 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.108329194 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.082309752 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102215107 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.06697938 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165695118 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102354854 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.207926454 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.104783397 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103840712 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135566308 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.193795097 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.131197627 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.138412416 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081714518 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.098965536 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.179767503 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.10795352 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.080340887 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.099642671 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.126051928 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136103621 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.124531529 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.101707994 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.102066793 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.213479658 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.098600959 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100391422 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.010907484 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.184132278 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.096878725 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.099255119 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.344160977 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.100762861 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10113667 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.09664092 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.291595319 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.139817264 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.097196318 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.08252102 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.100144466 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098412057 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.085205968 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.753258646 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10236133 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.045983679 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085139198 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.108701817 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10003431 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084437515 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106659616 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.090047419 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.118530966 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.079563694 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.099784621 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.101264425 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.083215913 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.098359324 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.085263138 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.111196081 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105318941 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.082970166 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167559579 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.084198891 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.116371893 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128877493 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.102173683 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.08250365 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135647911 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101537529 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.085495309 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.139569482 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100252962 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.093686195 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102275659 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.146411827 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.09881045 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.216611936 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.083183384 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.12872646 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102483261 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132712189 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.096596507 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102329474 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103642753 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.082147187 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.097938375 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.15180763 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.098122304 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.083052828 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.102611801 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.114135189 seconds)
  done (took 24.337203212 seconds)
done (took 41.450808951 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.351147079 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.106095659 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.107391702 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.106928819 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.104734741 seconds)
  done (took 1.525532845 seconds)
done (took 2.248491598 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.291734643 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.179478387 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098126203 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.175718423 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.096074393 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.182025445 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.165212524 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.114671305 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.207282069 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.081406558 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.186066065 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081659438 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096896972 seconds)
  done (took 2.704609551 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.100299498 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118663951 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085423983 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113717403 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.095596107 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.09897337 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.11255171 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103788195 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112748771 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.104129825 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080902854 seconds)
  done (took 1.845966753 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097912158 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117290946 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085051581 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112971092 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079459017 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.114462428 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113365175 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104101456 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113602089 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.104229715 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081366393 seconds)
  done (took 1.846957945 seconds)
done (took 7.112873507 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.098446953 seconds)
  done (took 0.8175242 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.034049032 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.139144352 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.119789711 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.159933808 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.348470135 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.188868124 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.57098367 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.132775389 seconds)
  done (took 15.619171644 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.137436192 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.088161814 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.103093678 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.104359753 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.106153231 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.103560025 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.091615869 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.104056453 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.105643007 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.088135416 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.106230375 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.086382599 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.102638079 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.101759103 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.089734591 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.105154769 seconds)
  done (took 2.405582465 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.140885825 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.139803214 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.093968352 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.112150615 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.109007715 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.091249538 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.110005767 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.108491516 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.089589498 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.106328306 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.110756103 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.109568019 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.091494192 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.099262004 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.110834019 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.096621595 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.106376756 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.109392754 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.095358554 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.110272317 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.110646998 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.083772526 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.106835544 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.110790578 seconds)
  done (took 3.362295468 seconds)
done (took 22.931882137 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.169697017 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.11408272 seconds)
  done (took 1.009609966 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.108519217 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.123433327 seconds)
  done (took 0.964431254 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.11289177 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.098873649 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.141277216 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.119933544 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.099987661 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.083575357 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.13689295 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.099916962 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.083607462 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.099570407 seconds)
  done (took 1.812077704 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.091491005 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.11809963 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.111045693 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.107152216 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.114511766 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.104127321 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.113922688 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.090950343 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.121909995 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.100239758 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.094565038 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.118824682 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.109429723 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.122335393 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.098842564 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.109203858 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.111752806 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.106811884 seconds)
  done (took 2.676262182 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.083972938 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.102945123 seconds)
  done (took 0.921862575 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.089534981 seconds)
    (2/7) benchmarking "second"...
    done (took 0.100021274 seconds)
    (3/7) benchmarking "month"...
    done (took 0.088754382 seconds)
    (4/7) benchmarking "year"...
    done (took 0.104303866 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.100147191 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.085148584 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.100112562 seconds)
  done (took 1.403014236 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.489840455 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.137830088 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.262530542 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.105600618 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.126048777 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.332005056 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.082486718 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.105892731 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.105790023 seconds)
  done (took 2.522153022 seconds)
done (took 12.03981931 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.096349302 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.120783779 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.136400619 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.478760042 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.125172667 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.083726038 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.165515772 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.265793169 seconds)
done (took 2.215247851 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.155887033 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.334148971 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.119556302 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084270413 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.084485928 seconds)
  done (took 1.364244744 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082514798 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102508164 seconds)
  done (took 0.92963244 seconds)
done (took 3.193415942 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083966901 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.132972858 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.101475708 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.081989416 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.100639915 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.080936165 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.097832434 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.084813604 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.099265559 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.0843282 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.100084339 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.084613023 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100021393 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096951524 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081545515 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099090858 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.081997396 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.09927485 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08202304 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.096797329 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081674314 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099504239 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.081217012 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.096900515 seconds)
  done (took 3.002724634 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.113961394 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.101748893 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.108102255 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.092573394 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.105023138 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.106913803 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.091545097 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.100501186 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.105806287 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.087423972 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104937633 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.1043457 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.086494461 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.104033285 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10177341 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.088768037 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.106463627 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084427171 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103609607 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.104987702 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.090462941 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10091595 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.105550614 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090581464 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.105163925 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104030681 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.087849374 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.101274493 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106756919 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.088895422 seconds)
  done (took 3.728066961 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.089334219 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.097397527 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08374856 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.105822685 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.0818898 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.103255659 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.08157302 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.100123648 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.098845814 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.08169358 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.100298244 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.081788462 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.097444408 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.083848333 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.099974062 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.102118414 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.095807693 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.098361323 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.081682701 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.098735551 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.084524817 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.098380627 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.085148993 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.098347637 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.097860268 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.082460565 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.097657157 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.082146664 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.099496818 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.081735203 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.101871256 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.085142356 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.097800688 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.104653845 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.08522766 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.09716288 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.085574368 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.096822919 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.082681899 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.097998367 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.081358043 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.097116453 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.081139715 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.105556839 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.100853072 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.084442219 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.098960058 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.083028651 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.098721273 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.084967369 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.098542803 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.097745263 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.083810371 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.099287737 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.085920822 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.09722182 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.083486129 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.097313437 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.099074144 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.081669378 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.097342051 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.081127048 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.1003103 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.082243176 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.113867102 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.089260343 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.097637756 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.099494416 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.087880207 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.100403148 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.084524404 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.112539865 seconds)
  done (took 7.440141253 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.088414866 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.109297938 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.085009025 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.101039071 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096162207 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.082738791 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.102917861 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082174841 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100293681 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117374705 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082675939 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.100833577 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084120535 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102491848 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098968988 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085234737 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.109633182 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.079996547 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.100215705 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102856567 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.083200135 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.102915256 seconds)
  done (took 2.850134255 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.22116937 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.109643206 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.148142972 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.126734769 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.118443651 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098685884 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.10644265 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.107253879 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090767758 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104363237 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104382305 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090231077 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108727195 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104136202 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088175308 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.106223194 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089450322 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.106553947 seconds)
  done (took 2.781710033 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.097066662 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.102076344 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.125185497 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.085408713 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.103176077 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.088448567 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109087544 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.117570963 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.103682317 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.085317009 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.112771587 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08783048 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.105095617 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101976893 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087707864 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.101523799 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.103869443 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085973263 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112529071 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108413642 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.091715596 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112537354 seconds)
  done (took 2.985108681 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10274124 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103847267 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.123331937 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089151276 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.101435536 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.08679182 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.110439318 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.101698189 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.094112752 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.103646583 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101407645 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086806173 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.107937189 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.084374536 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.107922931 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102346121 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.088298867 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.102109989 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103223201 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.08453856 seconds)
  done (took 2.740032599 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.124542298 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103907084 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.209011291 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110206878 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.104122365 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.103658258 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.128088789 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.087360972 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10358273 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.130390838 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.087273393 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.104080458 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127318707 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.12292261 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.086745844 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12723921 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126768032 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.127056457 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.086853765 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103671958 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12988159 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087312824 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.127214937 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.103705127 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.086082264 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103256761 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103153723 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.12320221 seconds)
  done (took 3.927442666 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085608398 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101820155 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082789658 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.098925744 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.082467265 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.09880773 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.082833748 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.099060182 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08424422 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099374294 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.100872165 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.084936711 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.100715979 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.084912555 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101341461 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.08496807 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103448265 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.083063223 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098703119 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082735647 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.101895131 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101444132 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.084869755 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.098929331 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082853048 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.101425791 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08271071 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099268736 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085780882 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099448753 seconds)
  done (took 3.538323582 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.095884397 seconds)
    (2/2) benchmarking "in"...
    done (took 0.110165971 seconds)
  done (took 0.96617003 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.08406538 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118646217 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081869413 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.106132577 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.108478528 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086531063 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112425974 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108227643 seconds)
  done (took 1.566901177 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.104830317 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.121079082 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.092010816 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.122304119 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.115989173 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.119081122 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.147544835 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.108451967 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.108587655 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.08369297 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.119159575 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083539259 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.109574956 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102962565 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090860941 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108437312 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.086014652 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.118732275 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.109050351 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.085081398 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104705696 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114520325 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088245481 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.100274274 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086879903 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.113806925 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.11192887 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.088366967 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106832315 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.112390304 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.091622319 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095999825 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.08586804 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.107743505 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.102809943 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.099206884 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116045276 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089261548 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.111775624 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108018569 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112105436 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.10149488 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.108171465 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.09261068 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113377739 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.107839268 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.091726275 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.101113605 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083997306 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.104812072 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.08465594 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103397149 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.095830024 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093722771 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.107057353 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117001264 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.086697025 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.103450472 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.08894133 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.106221459 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091531875 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.105858127 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104596888 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.085289739 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110340313 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.0894832 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111437517 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.101010998 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.080480718 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.102957109 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.094426353 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.126035436 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.112384869 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.091330532 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109886172 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.102773303 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088947875 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108614386 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109829204 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.095489963 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.107415009 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.123754921 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094555368 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102977046 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088625363 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.117345464 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.100155927 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.088726729 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.099528956 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118720127 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.084813226 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.102534744 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.083769465 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.111969253 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088945549 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.10341849 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.09973224 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093394761 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.097012714 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.090912963 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109282912 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102769091 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.096583053 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.113081022 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.114551095 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.094382883 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.114095872 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084454136 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.106845558 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.099267529 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091796095 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.104719098 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092551549 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.097294302 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106230933 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.088654691 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.108396335 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.094078464 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.102180517 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.107018751 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.0948698 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.110427261 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.085241783 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.099750297 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.106270158 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.09098463 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.111723499 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.110694846 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.084771271 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.101077568 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.084119706 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.107996976 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.089993761 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.108271603 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.113373528 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089828192 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.097878686 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.087434717 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.114035408 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.111862509 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.085907886 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.103741925 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.10672033 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.086593856 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.103363972 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.092548648 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.106034638 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.101857096 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.091392332 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.104805986 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.084652898 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.11336168 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.105707199 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.085095324 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.106116636 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.095927535 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.106024051 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.108763196 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085709022 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.109722786 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091872911 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.103003686 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102240484 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.084986042 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.113671189 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.088659648 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.102958028 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.099519247 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.099601858 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.099893994 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.089846453 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.102665637 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.105562276 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.09195328 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.103838874 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.085459966 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.105327101 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.134191388 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099518284 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109827507 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.109236731 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.096481031 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.106303759 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.087749824 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.107655927 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10838849 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.093082774 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.111102849 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.091528999 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.114879259 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.106186921 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.082876189 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109889931 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110934773 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.086345581 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.104259641 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.086823226 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.108546219 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.110549727 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.090882018 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.10902189 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084195227 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104495507 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.112109941 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.089279567 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.108476444 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084681888 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.109865153 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.102027536 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.098636435 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109927094 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.113264417 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090331658 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.102560838 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.09494704 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102287411 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.109398162 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.084959431 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.100659072 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.085764158 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.10968932 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.085299174 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.10692398 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.096422313 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095000312 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.112368847 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.086087124 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.103148301 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.108136313 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095630031 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.105721017 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089600435 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.10918825 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.109556339 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101313311 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.103798836 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.107218174 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096409862 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.107687158 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.079769147 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.11095932 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.10163501 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.086695585 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.103069252 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.084766815 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10669513 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.118842392 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091867052 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.097992803 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.089421065 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.103288615 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.101091083 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.085094734 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.111574773 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.091486813 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.10661774 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112368848 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092628589 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.109004603 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090361133 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.108544993 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.109096662 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.092530102 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107554487 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.091863234 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.106719362 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.103669365 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089135353 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.102303579 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.087557783 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.106265174 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.1078131 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.086761792 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.11016329 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.088888615 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104533138 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.106600358 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.093223199 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107419211 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.087959102 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.104022358 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089744695 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106166566 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.103562388 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.089034261 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.102335464 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094189878 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.108729029 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111892193 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.087586595 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.099784193 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.093305517 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.107609156 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.114425509 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.092306249 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.111145452 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.104531694 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.091005214 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.106856873 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096522688 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.101836971 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.113703887 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093381058 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10494269 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.089809916 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.104948113 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.105335786 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.086882254 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.105653426 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.092369263 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.105170737 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.086128272 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.111464122 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.107197491 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.08697217 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.106280049 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.091938592 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.104518466 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.105399791 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.081092002 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.103362098 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087104002 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.109700167 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111447563 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.093060185 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.107867771 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.086083632 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111053245 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.102953111 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.084670472 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.119498735 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.119782765 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.091823578 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113439982 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085672804 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.106763528 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11424024 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.082022336 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.102659501 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.087611689 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.10268996 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112382493 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.09266302 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.113028002 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.086641193 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.104914154 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.08420985 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.11001323 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.103582581 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.089826843 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.105566294 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090571266 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.107280929 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085185085 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.109877003 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.107484201 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092353233 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112964328 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.103682158 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.08914464 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.109360292 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.08472679 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.102718253 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.085654227 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.108991026 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.109906161 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.08461111 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.100681488 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.091204304 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.10660601 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.087699636 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.104656745 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.106621953 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094363943 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104856007 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.089612246 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.116112532 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.100100404 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.090699348 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.105692004 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.090517573 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.103905694 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.10817018 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091087927 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111201013 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.095363395 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.109173448 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105585989 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088366813 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.105966056 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.08993491 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.108581483 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.10927008 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.086842417 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.109737133 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095035789 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.106353447 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.107323329 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086850683 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.105224608 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.092601362 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.110335241 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.106722502 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101858448 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.108380987 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.088285656 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.112266587 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.10899564 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091119621 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110447205 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.105652671 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09407916 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.103386574 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.096836137 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.105891374 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.109577829 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.089075258 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.102125064 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087577345 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.105613923 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084930485 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.111455273 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.10962648 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.086530493 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.104559395 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.088324167 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.107266846 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.114155705 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096250615 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.107556507 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089468754 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.104156384 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.101970166 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.093136218 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.102428943 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.088986306 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.107933803 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111481195 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.090335049 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.106321979 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.086664127 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.113172506 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110606933 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.092250659 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.10290394 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.092540278 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.111474215 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.106786796 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.089077777 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.105056422 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089555129 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.112064206 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.106325289 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.086816587 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113605562 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.091659137 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.110451239 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.105667044 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.088049469 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.105447749 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.086703745 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.110722212 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.106456386 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094296986 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.107845616 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086549486 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116742214 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.10419986 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.087793989 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.11453544 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086346145 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.113185168 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.103937663 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.08825238 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110428131 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.09270734 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.105073913 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.108410462 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.08562402 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.10770576 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.087167368 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.104802548 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114018873 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.095232687 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.108576147 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087377241 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105269438 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.0856031 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.105114595 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.103323901 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093202917 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.106720522 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.098290775 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.105425191 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.104417135 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.085653411 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104654534 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091014982 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.109376725 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.102503198 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.087421006 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.10362095 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.090408604 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.112998975 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085733007 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.109863789 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108134263 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.091116632 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.105821835 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.095994597 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.102476712 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.110320561 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098623481 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.110513357 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087307037 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.111976143 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113919655 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.092388176 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.10470331 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.111338149 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.090531103 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.105384822 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.093706755 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.10818033 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120284279 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091467773 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.1050537 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.08599985 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.108718325 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.104455531 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.095833523 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.112128504 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.093387891 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.112362761 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.107698142 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102921527 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108455425 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110944658 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.091427909 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.108295204 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.086739704 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10673573 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.103406265 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.08638328 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.106756386 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.092863099 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.112059055 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.119653531 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.087427567 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115643971 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.11442363 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.093013439 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.101335652 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.08727149 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.105341608 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.08524321 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.11239281 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.103311515 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.087028778 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.103766384 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.087596388 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.107160812 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093444591 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.109582952 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.110989922 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.088583395 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.100636747 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.088655734 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.10905382 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106426908 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.085595669 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.109624837 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.094073771 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.112695182 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.116568313 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.088445337 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.108284757 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.089172778 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106896015 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.085196935 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.113141847 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105206092 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.090388986 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.105196806 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088238772 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.111529902 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109910123 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099353379 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.108699985 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.107908505 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.101208082 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.112916477 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.084888549 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.103970014 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.11143509 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.088846132 seconds)
  done (took 60.872639254 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.154164394 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093556097 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102380743 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08309076 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12181724 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105510658 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08312934 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107072123 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106301597 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090561056 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.101940829 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084037621 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117357418 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.132244374 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121515894 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110298779 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084412142 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106502885 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083949974 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107970152 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.117057976 seconds)
  done (took 3.0300125 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.110571033 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.121432936 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.119345837 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.124527599 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094025957 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.120231302 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.118840513 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119362241 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.123362386 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095425085 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.124320645 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120577138 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.114154219 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.114781629 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096610546 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118064883 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.125225691 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.112487007 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.103017552 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.11995434 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.118747311 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.119320083 seconds)
  done (took 3.34700271 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.0964982 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.10908861 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.092430644 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.100732261 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.087101859 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.101894053 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.114853226 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.086816955 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.109855028 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.086829382 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.105684211 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.085812052 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.111632362 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.101121809 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.087070414 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.104200808 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.161955328 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.09076878 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.111362297 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.108189894 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.085435508 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.109867312 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.084849742 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.106497142 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.085155273 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.119822504 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.107053047 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.089537291 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.106306304 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.08578712 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.111091571 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.103840112 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.089594741 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.106771971 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.087151285 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.105706686 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.086929024 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.111382508 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.103756498 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.089897645 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.107008697 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.08773322 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.111501052 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.088927067 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.108695385 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.084419818 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.109119244 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.106471261 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.08369761 seconds)
  done (took 5.733333608 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.121778046 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162181636 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.090055995 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.130596215 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.126954531 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.120238025 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.11126503 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.149189836 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.086442742 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.110491428 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.12897723 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.125909279 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.092202112 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.117901285 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.114654978 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.092433727 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.114295759 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.106086574 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.0971882 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.10702175 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.115698135 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.095476491 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.125233169 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.123153899 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.117226715 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.091389839 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.108312771 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.116902757 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.123142378 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.098335014 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.117123971 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.11863522 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.124872297 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.093333331 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.107137566 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.112529085 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.128772372 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.093151396 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.114829743 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.085296874 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.114251588 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.116315673 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.113978311 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.109053581 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.112244785 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.113451118 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.091745475 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.104790904 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.122837839 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.093976641 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.121297996 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.126183616 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.115862023 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.092258093 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.117158783 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.125257612 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.111276512 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.090711912 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.116358361 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.122274721 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.085851235 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.116154297 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.124963045 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.11238309 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.101808026 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.12447929 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.114257835 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.115147255 seconds)
  done (took 8.622760128 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.120874336 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.119695267 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130921044 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.131612078 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.118593949 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.100725678 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.119125999 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.11916726 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.118769051 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107545414 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119675521 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.16677896 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.113396652 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.123464296 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.100492901 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.1198104 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.119785705 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119132658 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.100612825 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119110531 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.120180835 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.130396031 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.099170195 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.130488264 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129447146 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.114454496 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.118056368 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.100505422 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13057786 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120365865 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.129562041 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.118466747 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.100162816 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.130703148 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.128848061 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.119240939 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108655761 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099583389 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.119756065 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.119113678 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.093505348 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.130893814 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.120417017 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.113077248 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.100392718 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119902968 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.130880619 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.13012031 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.12317864 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.125618946 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.099336608 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.130871022 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120123635 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.119857254 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.130740246 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.134724237 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130286326 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.131037378 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099518103 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.130109788 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.130436328 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.136722483 seconds)
  done (took 8.263611568 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.14013278 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103140955 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.128873616 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.103597957 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086362194 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.117256571 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105488371 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.088278044 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.123404615 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.12235173 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.125001045 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097521282 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.119765209 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.125837986 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.115838246 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100350821 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.117175577 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.116976581 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.121685292 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097274793 seconds)
  done (took 3.086533432 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.099033899 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.129270237 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.10862896 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.097143293 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.112635805 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.115319198 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.091441335 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112404108 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088890382 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112084048 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.122247336 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.120727851 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089912564 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.116723517 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.121262351 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.096732568 seconds)
  done (took 2.56926094 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.101833309 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.130591288 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.129053303 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.10832974 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.088068023 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.10520501 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.091595288 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.10510306 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.083992381 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.124999955 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.110871912 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.114049793 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.09210055 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.105748006 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.085807278 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.114612919 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.103904295 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.088316193 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.110531212 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.108917125 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.121421639 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.107622836 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.092355863 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.112480671 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.108451472 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.094736146 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.110397815 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.106872387 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.087636324 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.112528214 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.108689175 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.09738892 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.105049406 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.087432338 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.107809038 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.105274338 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.092316647 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.112146596 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.095762672 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.112967128 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.106678446 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.089675187 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.111353442 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.109811937 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.084957847 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.112236697 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.084733785 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.115802766 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.106037865 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.090718271 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.111480786 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.091679784 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.110597192 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.119262747 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.093055333 seconds)
  done (took 6.557604263 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105878024 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.113775309 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08337343 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10756057 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.111790293 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.092372931 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.113090609 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091430317 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.112007578 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.105964254 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091590828 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.113788605 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090298824 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.113834104 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110661381 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093239686 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.104690716 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.089841759 seconds)
  done (took 2.684615001 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.095073916 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108700058 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.096464489 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.110365096 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.108448302 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092405983 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103812921 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.087888938 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10803356 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088566633 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109661182 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.110132117 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087976606 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.111560019 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090101131 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110320329 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.110442291 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088061926 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.108802582 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08629353 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111246652 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.086727155 seconds)
  done (took 3.052761502 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.125594287 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.129645616 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.116143291 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.221851696 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.106673304 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.138262142 seconds)
  done (took 1.680355923 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115292633 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148785427 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109496963 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093908286 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124027014 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113855543 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093944837 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115134058 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126745709 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127600901 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114513305 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107279266 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127398211 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12725202 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123091507 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121932826 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09546084 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116210622 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110107742 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134937829 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095985424 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126572564 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115875439 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094283276 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116452356 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127157642 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127175877 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127976319 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094405693 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127347702 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12341673 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114303809 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126136687 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108222597 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114011119 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126660755 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11546166 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135180945 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103020309 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126708092 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.113367378 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122849253 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107478939 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121530251 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126829849 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114914107 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121355153 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095703652 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116347331 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142099159 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122470867 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125626094 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10188917 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126888841 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127841727 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142109998 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128508004 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125410371 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122848232 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128326302 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106262323 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12321856 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1253874 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127826 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122545722 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126564976 seconds)
  done (took 8.704805387 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131018821 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111689707 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11638148 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129408329 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126413533 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096181043 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115861582 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11365322 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095420268 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11122816 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.16041291 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115829692 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126285937 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10624885 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116750558 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115981353 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114563963 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10732404 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111811207 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.143394163 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115723541 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126954845 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126476376 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106177096 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129639287 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123345493 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11651016 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094154177 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115934462 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115992748 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121542224 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09592674 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127472108 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.111044247 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126950905 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09551864 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116295902 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122537871 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114710241 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102940773 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12608603 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13487597 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116273964 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114294797 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128189385 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096410859 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116193939 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111170066 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09623062 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112277103 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128554782 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128567675 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12891492 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106448895 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116313064 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115755 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114730731 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096709106 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117016425 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122081487 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12751228 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096266902 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141676147 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116793142 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115234488 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127337005 seconds)
  done (took 8.573197274 seconds)
done (took 163.044211628 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.105772233 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.143552145 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.122930518 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.152019617 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.109721899 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.12367145 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.142619823 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.124237749 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.091129856 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.109222536 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.089523535 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.112387626 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.15551525 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.11066485 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.108769503 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.093081146 seconds)
  done (took 2.74061035 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.206384516 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.278563346 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.127665395 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.088940599 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.115229043 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.089933491 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.109291292 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.096301071 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.112795518 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.108119724 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.090399479 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.111030727 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.08881929 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.11067332 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.091097936 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.11105256 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.108728807 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.090557036 seconds)
  done (took 2.98903848 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.118871303 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.168180819 seconds)
  done (took 1.143585637 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.124985351 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.188381208 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.308095341 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.158604588 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.144313552 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.132075304 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.139425138 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.136678625 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.231875882 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.108218317 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.129515051 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.122949319 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.146637583 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.119804732 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.099789203 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.122384537 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.148929737 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.09797208 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.120364099 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.120901013 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.142227775 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.090357069 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.120758833 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.097098191 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.193468138 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.125326772 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.110323411 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.089319355 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.122116468 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.117543237 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.095835971 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.132217966 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.125615202 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.172837775 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.127537047 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.18761275 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.103213946 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.1165953 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.119092835 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.095809521 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.125393657 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.123627645 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.109317284 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.122713017 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.110375895 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.102856415 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.111521887 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.087904638 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.118938326 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.123404735 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.117538936 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.096352519 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.186234693 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.10300803 seconds)
  done (took 7.87765445 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.839285402 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.158755336 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116054577 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.937493534 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121215981 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.131667507 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.827739958 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.137785973 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.243802388 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.815861907 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13550444 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.102668089 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.244580354 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.26846562 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.003427923 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.328430094 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.701444118 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.129689787 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.142892191 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.162985088 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.098733927 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.142454262 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.134632998 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.437343639 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.119977524 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113871476 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.099120286 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.124291359 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.169576532 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.115996284 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.095558048 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.210616581 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.257876211 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.21797638 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118719552 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092862741 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11492633 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.18056436 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.278262789 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.229074579 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.185916 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112621153 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092139286 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125564072 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134903457 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089624502 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.196096093 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.185351754 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.202732747 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.096248774 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.124694458 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.123391151 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.103232554 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.197208692 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.125281646 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.335584244 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.329932883 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092834945 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124435892 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.131185861 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.274912523 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.107054337 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.23874453 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.142015578 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.227526346 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.09217583 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.789610515 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.200334035 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.09311814 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121616936 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120348778 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097924875 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.124480611 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.176241989 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.416070061 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127640297 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.117534816 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092512739 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.241278436 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.0938113 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11482835 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.171405496 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120208369 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121917592 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.106175593 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.125978429 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.201503685 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.243773044 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125875233 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.10101094 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.119868906 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127262723 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.096564461 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.242658526 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.234470817 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.172957896 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.21875923 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124817246 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.195307829 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.179306552 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124458636 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.183707684 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122695377 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.128774645 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104297096 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.231168733 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.151274672 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.129814914 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.120615487 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119624692 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.155550307 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.09725565 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.122195763 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.182128909 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.495277836 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.178202972 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.112224028 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.096432682 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125039842 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.171004343 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122121642 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.27756565 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123257686 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.179890763 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121183714 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.09003341 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123436244 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.173624967 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127323631 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124515985 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124383721 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100912785 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.267891976 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.233286335 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105675323 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.252900506 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.18984471 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.12291458 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.182857558 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124446217 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.177288394 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124505522 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123632384 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098429915 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.785461887 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.127633256 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121722709 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099212336 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.195903722 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116337192 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127367755 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.093018342 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.112061712 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.812400185 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.095913668 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.126346102 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.12922423 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099908263 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12290342 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120965508 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.096345993 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.195546187 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.24578553 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.123652228 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.100782347 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.115842319 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.170386767 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.120028729 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.093324657 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.11657067 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.092809693 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123010407 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.119237723 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128267301 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.181031995 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.173442379 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.234970523 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.568009759 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.114240878 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.095126209 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.24282955 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116235581 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.304210726 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099899509 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.24066773 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.197361697 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.126626494 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.32789845 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.17766898 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.195491339 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.115742129 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.186645953 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090252788 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.121386579 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.196589665 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.094122434 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12294478 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.171841415 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.129799994 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.127256653 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.974288304 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093551674 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.25568373 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.091061262 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.180720569 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120362662 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.1251035 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.311966185 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.09275499 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.132653577 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.197671974 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09616033 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.11571172 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.869980745 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.116514156 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125820435 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099743184 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.237053523 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.196091216 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122189181 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.101261608 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.126599174 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.172329736 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.239459164 seconds)
  done (took 45.837556925 seconds)
done (took 61.440089421 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.291986746 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.219801516 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.26486546 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.173050569 seconds)
  done (took 1.904945445 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.184953218 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.151998242 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.150971657 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.089802968 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.157962672 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.109665933 seconds)
  done (took 1.723777159 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.38189002 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.286014892 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.24686626 seconds)
  done (took 1.790816966 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.256222781 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.276734574 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.335240373 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.432000017 seconds)
  done (took 2.284358426 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.243841901 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.147473708 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.131260935 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.127218753 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.226254776 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.272208075 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.164045108 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.222960182 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.141683346 seconds)
  done (took 2.601180842 seconds)
done (took 11.188572289 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.160480392 seconds)
    (2/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.163836124 seconds)
    (3/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.257852774 seconds)
    (4/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.154402607 seconds)
    (5/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.25190167 seconds)
    (6/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.121358119 seconds)
    (7/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.251197773 seconds)
    (8/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.098104041 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.119664515 seconds)
    (10/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.208345775 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.10516703 seconds)
    (12/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.128145102 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.096723389 seconds)
    (14/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.125725699 seconds)
    (15/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.143168481 seconds)
    (16/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.223799508 seconds)
    (17/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.156033305 seconds)
    (18/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.093549777 seconds)
    (19/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.142678196 seconds)
    (20/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.289574562 seconds)
    (21/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.176608071 seconds)
    (22/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.144443418 seconds)
    (23/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.141071934 seconds)
    (24/286) benchmarking ("sort", Float32, true)...
    done (took 0.246150996 seconds)
    (25/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.218114844 seconds)
    (26/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.123225029 seconds)
    (27/286) benchmarking ("sort", Int64, true)...
    done (took 0.239220814 seconds)
    (28/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.234192996 seconds)
    (29/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.200824978 seconds)
    (30/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.123580494 seconds)
    (31/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.199518884 seconds)
    (32/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.233659855 seconds)
    (33/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.235599224 seconds)
    (34/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.141693732 seconds)
    (35/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.179417831 seconds)
    (36/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.136695924 seconds)
    (37/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.12820634 seconds)
    (38/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.120291585 seconds)
    (39/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.107077076 seconds)
    (40/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.152126259 seconds)
    (41/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.126781369 seconds)
    (42/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.098081407 seconds)
    (43/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.176346554 seconds)
    (44/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.136770898 seconds)
    (45/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.089534108 seconds)
    (46/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.21687027 seconds)
    (47/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.116993879 seconds)
    (48/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.084046409 seconds)
    (49/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.149231377 seconds)
    (50/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.103052248 seconds)
    (51/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.120002388 seconds)
    (52/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.09748747 seconds)
    (53/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.117589339 seconds)
    (54/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.142155534 seconds)
    (55/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.088471481 seconds)
    (56/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.202085786 seconds)
    (57/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.17459197 seconds)
    (58/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.174255931 seconds)
    (59/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.165450407 seconds)
    (60/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.108816054 seconds)
    (61/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.090637351 seconds)
    (62/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.143109151 seconds)
    (63/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.139484808 seconds)
    (64/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.199712959 seconds)
    (65/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.080202051 seconds)
    (66/286) benchmarking ("sort", Int64, false)...
    done (took 0.089608079 seconds)
    (67/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.126419618 seconds)
    (68/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.081232866 seconds)
    (69/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.128916031 seconds)
    (70/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.068177324 seconds)
    (71/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.124909714 seconds)
    (72/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.069403994 seconds)
    (73/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.156041643 seconds)
    (74/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.110145985 seconds)
    (75/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.097296008 seconds)
    (76/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.127975835 seconds)
    (77/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.091213973 seconds)
    (78/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.114466655 seconds)
    (79/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.113069687 seconds)
    (80/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.17395508 seconds)
    (81/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.179702846 seconds)
    (82/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.174708084 seconds)
    (83/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.21713523 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.100370021 seconds)
    (85/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.151448162 seconds)
    (86/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.147878374 seconds)
    (87/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.106090169 seconds)
    (88/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.157447359 seconds)
    (89/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.072815621 seconds)
    (90/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.122942677 seconds)
    (91/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.115844471 seconds)
    (92/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.091623866 seconds)
    (93/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.118290028 seconds)
    (94/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.097167485 seconds)
    (95/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.115612416 seconds)
    (96/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.098150279 seconds)
    (97/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.131246612 seconds)
    (98/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.191104494 seconds)
    (99/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.103385541 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.114334631 seconds)
    (101/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.134871183 seconds)
    (102/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.192159865 seconds)
    (103/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.125412994 seconds)
    (104/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.188961878 seconds)
    (105/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.08699508 seconds)
    (106/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.12294643 seconds)
    (107/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.117774056 seconds)
    (108/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.102178043 seconds)
    (109/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.151043407 seconds)
    (110/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.183990171 seconds)
    (111/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.147872832 seconds)
    (112/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.159296913 seconds)
    (113/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.162437398 seconds)
    (114/286) benchmarking ("sort", Bool, false)...
    done (took 0.192878224 seconds)
    (115/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.124284064 seconds)
    (116/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.150137342 seconds)
    (117/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.098786864 seconds)
    (118/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.12061653 seconds)
    (119/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.091420962 seconds)
    (120/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.1210759 seconds)
    (121/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.11970501 seconds)
    (122/286) benchmarking ("sort", Int8, false)...
    done (took 0.202201864 seconds)
    (123/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.072356079 seconds)
    (124/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.186784096 seconds)
    (125/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.096287205 seconds)
    (126/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.196879785 seconds)
    (127/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.122826747 seconds)
    (128/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.086472663 seconds)
    (129/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.094007913 seconds)
    (130/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.110131435 seconds)
    (131/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.112392152 seconds)
    (132/286) benchmarking ("sort", BigInt, true)...
    done (took 0.248825152 seconds)
    (133/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.08897061 seconds)
    (134/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.095043771 seconds)
    (135/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.09772318 seconds)
    (136/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.096843409 seconds)
    (137/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.096317046 seconds)
    (138/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.181296487 seconds)
    (139/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.175105282 seconds)
    (140/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.132021433 seconds)
    (141/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.114182049 seconds)
    (142/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.069712761 seconds)
    (143/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.096468857 seconds)
    (144/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.099868918 seconds)
    (145/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.094264507 seconds)
    (146/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.12513379 seconds)
    (147/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.09487953 seconds)
    (148/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.099672902 seconds)
    (149/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.125129684 seconds)
    (150/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.207512531 seconds)
    (151/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.069982478 seconds)
    (152/286) benchmarking ("sort", Float32, false)...
    done (took 0.187342892 seconds)
    (153/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.069680833 seconds)
    (154/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.114631259 seconds)
    (155/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.111683788 seconds)
    (156/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.169906397 seconds)
    (157/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.113932831 seconds)
    (158/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.100014391 seconds)
    (159/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.170545961 seconds)
    (160/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.172883681 seconds)
    (161/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.089417849 seconds)
    (162/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.121099742 seconds)
    (163/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.187923475 seconds)
    (164/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.095770349 seconds)
    (165/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.113925675 seconds)
    (166/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.187890788 seconds)
    (167/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.099362359 seconds)
    (168/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.121856943 seconds)
    (169/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.204848256 seconds)
    (170/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.099501786 seconds)
    (171/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.123646067 seconds)
    (172/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.091906654 seconds)
    (173/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.095855605 seconds)
    (174/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.071222837 seconds)
    (175/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.170348605 seconds)
    (176/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.088410093 seconds)
    (177/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.363187994 seconds)
    (178/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.101854116 seconds)
    (179/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.070288091 seconds)
    (180/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.07261241 seconds)
    (181/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.114388242 seconds)
    (182/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.069029931 seconds)
    (183/286) benchmarking ("sort", BigInt, false)...
    done (took 0.229806354 seconds)
    (184/286) benchmarking ("sort", Bool, true)...
    done (took 0.259447042 seconds)
    (185/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.080147073 seconds)
    (186/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.088506016 seconds)
    (187/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.144879358 seconds)
    (188/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.093129854 seconds)
    (189/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.072388605 seconds)
    (190/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.068957257 seconds)
    (191/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.096295746 seconds)
    (192/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.070446434 seconds)
    (193/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.11824539 seconds)
    (194/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.085192279 seconds)
    (195/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.089154662 seconds)
    (196/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.122365024 seconds)
    (197/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.070924566 seconds)
    (198/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.119046302 seconds)
    (199/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.120377426 seconds)
    (200/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.070769741 seconds)
    (201/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.098276608 seconds)
    (202/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.123320713 seconds)
    (203/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.113748237 seconds)
    (204/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.093933037 seconds)
    (205/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.116097522 seconds)
    (206/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.097038261 seconds)
    (207/286) benchmarking ("sort", Float64, true)...
    done (took 0.244954879 seconds)
    (208/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.122139931 seconds)
    (209/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.095484323 seconds)
    (210/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.121841625 seconds)
    (211/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.069530091 seconds)
    (212/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.122750362 seconds)
    (213/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.071665889 seconds)
    (214/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.168572415 seconds)
    (215/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.112812125 seconds)
    (216/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.069950855 seconds)
    (217/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.114262281 seconds)
    (218/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.080552427 seconds)
    (219/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.141469834 seconds)
    (220/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.090135077 seconds)
    (221/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.14161663 seconds)
    (222/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.187961726 seconds)
    (223/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.069465614 seconds)
    (224/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.097507913 seconds)
    (225/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.070464704 seconds)
    (226/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.124446999 seconds)
    (227/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.091058173 seconds)
    (228/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.094153869 seconds)
    (229/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.07326526 seconds)
    (230/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.11386684 seconds)
    (231/286) benchmarking ("sort", Int8, true)...
    done (took 0.23496961 seconds)
    (232/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.091117771 seconds)
    (233/286) benchmarking ("sort", Float64, false)...
    done (took 0.184271251 seconds)
    (234/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.141211848 seconds)
    (235/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.0964686 seconds)
    (236/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.093688216 seconds)
    (237/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.0935659 seconds)
    (238/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.11506998 seconds)
    (239/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.072683674 seconds)
    (240/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.123828226 seconds)
    (241/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.090718093 seconds)
    (242/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.120438334 seconds)
    (243/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.113914004 seconds)
    (244/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.093699673 seconds)
    (245/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.070060301 seconds)
    (246/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.131788147 seconds)
    (247/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.141266428 seconds)
    (248/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.090694297 seconds)
    (249/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.123862517 seconds)
    (250/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.111724301 seconds)
    (251/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.070701532 seconds)
    (252/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.078236149 seconds)
    (253/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.09435556 seconds)
    (254/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.097020206 seconds)
    (255/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.142876624 seconds)
    (256/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.097495622 seconds)
    (257/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.17670051 seconds)
    (258/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.092884918 seconds)
    (259/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.090041837 seconds)
    (260/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.139980175 seconds)
    (261/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.160246236 seconds)
    (262/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.071901097 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.088446803 seconds)
    (264/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.101815709 seconds)
    (265/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.098642029 seconds)
    (266/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.094511952 seconds)
    (267/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.070453307 seconds)
    (268/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.111186187 seconds)
    (269/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.071388912 seconds)
    (270/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.11899132 seconds)
    (271/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.071900088 seconds)
    (272/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.113988823 seconds)
    (273/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.110058982 seconds)
    (274/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.112885943 seconds)
    (275/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.069719279 seconds)
    (276/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.094169121 seconds)
    (277/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.070916058 seconds)
    (278/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.089008924 seconds)
    (279/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.190215632 seconds)
    (280/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.092765445 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.098255675 seconds)
    (282/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.101321849 seconds)
    (283/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.074559692 seconds)
    (284/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.166195775 seconds)
    (285/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.097529539 seconds)
    (286/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.117080095 seconds)
  done (took 37.610235071 seconds)
done (took 38.497338623 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.105408887 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.155287504 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.122967873 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.119932277 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.127942519 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.094095211 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.122802117 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.125816115 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.103255125 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.130312051 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.124858497 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.072710658 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.124483971 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.101103086 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.124767302 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.144985062 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.104008537 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.121566551 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.098813527 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.112752821 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.120852714 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.091178421 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.114945086 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.073047403 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.123825381 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.098855897 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.120822696 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.100373142 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.115174627 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.112415314 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.096166236 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.121267951 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.090313317 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.128418922 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.095332935 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.123517718 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.125126354 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.101164307 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.115908708 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.089280504 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.123016043 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.088991652 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.122184012 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.120759802 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.09797988 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.118047357 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.099621357 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.12759589 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.145963027 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095457103 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.122459391 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.100174274 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.123584465 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.119411701 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.095357324 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.122968563 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.095730975 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.14707736 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.122922316 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096271948 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.121207568 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.099261499 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.119770021 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.121572597 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.101091842 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.12399478 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.101680846 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.12051573 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.124592871 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.098165411 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.112620068 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.101206373 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.117177203 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.089920271 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.124381473 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.10092632 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.11442747 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.119280733 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.099014906 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.119418272 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.090826875 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.117169767 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.09225374 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.120761265 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092693038 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.096559994 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.094342297 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.120880703 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.090488133 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.124045208 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.119618604 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.097992844 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.11565836 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.102913547 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.114893142 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.095170427 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.115203018 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.113696272 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.093912505 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.117366159 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.092113624 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.11597973 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.100407648 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.115963903 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.097160994 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.127818822 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.112240054 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.098646024 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.112737127 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.091211623 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.130733874 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.100784739 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.115114794 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.119231791 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.09131677 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.120875105 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.090650515 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.113781914 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.090770696 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.11415321 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.096627351 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.115135119 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09208039 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.12246578 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.127617837 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.091480611 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.117211579 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093618939 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.114434673 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.096333113 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.115801024 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.090032447 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.117886549 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.080273962 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117437383 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.112490468 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.09989721 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115693884 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.100559718 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.116618781 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.100191531 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.11976506 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.118782028 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.097863482 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.112617016 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.077647795 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11818366 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094554741 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.116317218 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.092164223 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.115730068 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.091276024 seconds)
done (took 17.616658125 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.092328748 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.190289011 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.160935707 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.14929809 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.135289315 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.091864873 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.126398719 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.147643077 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.093689994 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.148742187 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.139068507 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.134168902 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.131019823 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.114856533 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.09022924 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.120061681 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.092236151 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.108640417 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.152988778 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.135889437 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.173145522 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.089674605 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.151925385 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.140397183 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.124325977 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.119961081 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.116397432 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.095723752 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.119618545 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.130788179 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.112450288 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.11899423 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.092347914 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.139343247 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.131802379 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.099890045 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.115319778 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.121665161 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.092624505 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.113899318 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.147292555 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.115013656 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.120888308 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.096706387 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.119210142 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.122637634 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.094828732 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.123433976 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.101839038 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.120564711 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.12986763 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.164029313 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.094788782 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.133630421 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.113661358 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.102909922 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.13203156 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.122912412 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.092990629 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.121825687 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.091987578 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.118452354 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.107784487 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.14741741 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.120386052 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.131819792 seconds)
  done (took 9.003458501 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.110768927 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.145949035 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.133412516 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.112420954 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.116251493 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.090966586 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.117422224 seconds)
  done (took 1.773014411 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.093277072 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.141535085 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.134954755 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.142792363 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.139569168 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.118053656 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122640419 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.116320725 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.113223385 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.117043758 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.117428612 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.159223241 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.118148326 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.09960097 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.14562117 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.11609106 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119943125 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.117066118 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119435524 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.121602531 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11991226 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.110480582 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.120529892 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.115868057 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112010496 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.116784195 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.166056791 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09926635 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114792952 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.096302515 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11560576 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.156687781 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.110993474 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.126442758 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116312204 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.112861577 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.135985918 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090636502 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.134358219 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.122426334 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.110991565 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.118157257 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.094526423 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.115819267 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.097323603 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.1314482 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.12044314 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.095305815 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.120591318 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.116863163 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.118647011 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.135160574 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.094759172 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.12132389 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.095303989 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121142059 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.102304743 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.119476835 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.140452398 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.092035358 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.137396897 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.112373012 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.137036808 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.137317392 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.096138401 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136365348 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.134069188 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.096514762 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.119760754 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.097635899 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.138979672 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.090130153 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.120569062 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.130760066 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.096067606 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.148243028 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.145653072 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096017151 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.131161821 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.093096742 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.119615057 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.093179462 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.144376378 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121304466 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.093396215 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122722236 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095761237 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.117124693 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.091267879 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.121651633 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.114480403 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.095651549 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.121052563 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.094668512 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.120252173 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.112840485 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.120274403 seconds)
  done (took 12.375696156 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.095398538 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.118880273 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.097611214 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.119127548 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.093697607 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.119836666 seconds)
  done (took 1.605777786 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.122269945 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.122022931 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.133688332 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.101094612 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.160731162 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.137284095 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.112833239 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.128157253 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.137031317 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.105657601 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.138788138 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.13773936 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.143918355 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.100832764 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.137228892 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.098985737 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.139525226 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.128790204 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.106419795 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.126528513 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.141577605 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.100009237 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.126973139 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.139486717 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.097339273 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.12638807 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.13027878 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.106854928 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.13197723 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.127079001 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.100809269 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.123346512 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.123873597 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.103942679 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.139210281 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.124903101 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100817405 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.123367078 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.129118009 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.098114587 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.139060338 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124391909 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.106837685 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.124801746 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.127903773 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.10112992 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.124173092 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.129999817 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.113209693 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.124246789 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121729569 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.100303329 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.121823341 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.098480641 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.127152366 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.127100821 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.098859086 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.139532848 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.125420589 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.101526088 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.122768504 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.122415896 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.103847948 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.122582016 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.133746774 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.09891001 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.126001101 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.12541497 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.103245667 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.125833813 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.099354978 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.122594979 seconds)
  done (took 9.660243429 seconds)
done (took 35.363610717 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.693370926 seconds)
  done (took 1.649971684 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.851318951 seconds)
  done (took 1.810429503 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.449060467 seconds)
  done (took 17.438808608 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.511895861 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.587756227 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.009450432 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.175649651 seconds)
  done (took 3.243400764 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.957879548 seconds)
  done (took 1.939517027 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.288294996 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.26368335 seconds)
  done (took 1.515496954 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.786642015 seconds)
  done (took 1.756303849 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.492530942 seconds)
  done (took 2.464408357 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.33480233 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.190772328 seconds)
  done (took 1.504216984 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.572019001 seconds)
  done (took 1.545920296 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.949173524 seconds)
  done (took 10.926021495 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.277717516 seconds)
  done (took 1.263630273 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.311543335 seconds)
  done (took 1.289557869 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.385422674 seconds)
  done (took 4.365467203 seconds)
done (took 53.679176844 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.10446254 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.130253149 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.107885322 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.12940847 seconds)
  done (took 1.445521375 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.110158369 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.125020169 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.108244391 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.125790699 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.134350357 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.101031361 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.128041177 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.131087812 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.100152774 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.126157641 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.100168069 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.124745742 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.128310649 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.102098622 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.122892822 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.128119767 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.106549522 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.125003952 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.104057053 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.126141723 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.122752326 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.103455883 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.12929031 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.098201858 seconds)
  done (took 3.794557778 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.106065726 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.122628048 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.100665147 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.122924681 seconds)
  done (took 1.441765548 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.104762211 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.135356236 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.111148073 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.130381516 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.135111491 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.110906065 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.122310061 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.096125585 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.124250591 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.127890327 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.096194711 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.144658111 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.135602193 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.105464122 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.130885758 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.092247794 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.121345744 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.135136981 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.105812873 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.130565368 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.097631616 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.12968849 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.094205144 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.139268846 seconds)
  done (took 3.84210834 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.178206003 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.132790952 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.14414458 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.099961733 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.167032222 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.146933532 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.091699227 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.146277095 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.117622004 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.110007468 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.123742564 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.16456276 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.107959487 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.118306664 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.092794582 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.117606003 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.131956202 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.106803103 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.120725628 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.106853396 seconds)
  done (took 3.517039824 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.103030803 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.120757963 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.093381684 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.120292149 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.102859349 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.125802327 seconds)
  done (took 1.661451662 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.101064301 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.118049302 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.09774165 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.120358886 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.0979803 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.118503515 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.0927813 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.119204276 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.118428375 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.092930393 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.1197058 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.093662387 seconds)
  done (took 2.281119251 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.525135943 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.126054801 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.124749541 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.093935577 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.130848935 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.093872233 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.135891931 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.096645796 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.14833842 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.118034383 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.094478772 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.122831438 seconds)
  done (took 2.806528332 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234820998 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129996408 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.292063443 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.363469162 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17885651 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195613435 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.283639276 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172654891 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.209426985 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161436596 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235933125 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18578128 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16010085 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211333347 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145114245 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.14882509 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199608036 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.274719568 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159511921 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223417043 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174563834 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197456522 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188769615 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156502455 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118121666 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178755981 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.126601494 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135329112 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192497186 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184898599 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223477448 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169068105 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162673518 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.455806077 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239997086 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227685668 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.290709709 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142132102 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.170952703 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.175885097 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241771375 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146056325 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241229709 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168164551 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110911304 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238308071 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.315560553 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.213303907 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.152202323 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121745077 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233517334 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204472321 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.22738144 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117859766 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.334548222 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156881586 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.166874548 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198896587 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24526771 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209386097 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224817488 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.099376281 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.222758771 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204322004 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194931856 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.162869734 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.187302594 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154390562 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205794924 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200987148 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18325158 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175188427 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.212822502 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118398603 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199370195 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178555967 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17604617 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26605899 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192748697 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.125775472 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173852292 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156323887 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112674828 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.201450947 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12980434 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221050286 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146928417 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.167410881 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216876711 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163425991 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163618115 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218385284 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179766038 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151610971 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.08722118 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160088178 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.159782787 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179796873 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142266349 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163242163 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156376092 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.136322837 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174935119 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.102597228 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217170417 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.094740379 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.355406248 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189114122 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.13214381 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168526441 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154081929 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.12874717 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214969921 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205532398 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146815519 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138115466 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217710409 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188016281 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.145787042 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183318115 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.235020429 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.120688387 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155637927 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235080812 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219877042 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146680085 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23505025 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154330398 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113346287 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.136938993 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190291938 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16298957 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.165071145 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140960769 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.190455296 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236583557 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.102340154 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143905934 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229725244 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112219203 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137813369 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1517867 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153976107 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.139587001 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.119500455 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.151230495 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181499309 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210050144 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160223221 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171704495 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149528825 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222608068 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145848077 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.155391113 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153255171 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.09813461 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.230108099 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207146278 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136979509 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207068605 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.173495439 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235887781 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173853001 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138765545 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18203255 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13514822 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.097301135 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228226255 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169789293 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165587 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.200289477 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234846221 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.189926767 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.1890117 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171615107 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209256331 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.172534821 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128540248 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.142317254 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167131284 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161484613 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.128028956 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.144749135 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.112948231 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152879018 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148414238 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14107455 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202736264 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179344436 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.223545663 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166029036 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156637463 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189109803 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.133791994 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178986408 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.40207273 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154445029 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.203515854 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201026313 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2216769 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146763733 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209809563 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.125554495 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102753535 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.150022023 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172031271 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141117532 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141128347 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167334405 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189853567 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.353978227 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180144767 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243525518 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185844567 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199389732 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.126856079 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.147221833 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211290249 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185747492 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.159285553 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142888501 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.154486173 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186237238 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158469131 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242782198 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174231498 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17980862 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202495826 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.155299712 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137930132 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153807781 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177187362 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159919653 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179542465 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152391743 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143709661 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.310059688 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.136075203 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16879568 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187062427 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168013068 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2103874 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.128520954 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221894453 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105360523 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193496051 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164181713 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167680318 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.084775742 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.3271148 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228035303 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150078831 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.312224741 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188234903 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136447331 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.317990224 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234956218 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.33186935 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143358562 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162160675 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165074583 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1702219 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.315589379 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.2092042 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164604322 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193258237 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161396304 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.113047607 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143957831 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154575806 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158035314 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.137298504 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.152681813 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.185170788 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140751658 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191141966 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152818614 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161907106 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178764331 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.154008656 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.122690776 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158459152 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251881021 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191392098 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196397608 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.153319681 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.184354715 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237876866 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102718757 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137148442 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.138559711 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183632368 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141145201 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200059986 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.221995319 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209034159 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18943432 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204000532 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117318952 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.125895014 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16498332 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175715487 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238140528 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123363634 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.154170281 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233391656 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.112736291 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138173904 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168770315 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296718851 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147846057 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194636405 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.111584367 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.291969943 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130562926 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10970146 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168846049 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219605971 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.114463067 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.182207006 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173994422 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156654791 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169807894 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157160822 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.224850539 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220772642 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208038112 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217413832 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.10941653 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163369703 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.343957549 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192938041 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16551959 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.142085784 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192491195 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20178657 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.227326324 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.120053888 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201415496 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174146947 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164602117 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197495047 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142883365 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209299592 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14069301 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202488327 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15873546 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150455593 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20840314 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.19577454 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144655448 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189472722 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18963197 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14067935 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138682653 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166604149 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18508621 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156132233 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.132309413 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187036316 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.101185627 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229954755 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.27214775 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113231199 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160318083 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151755587 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142406412 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162433416 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164810522 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14411151 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.144216408 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226894497 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.112337969 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222525244 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210447511 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20390262 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312721807 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148649848 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.716401747 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.108055034 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230993211 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152771422 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18521306 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153896979 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180580917 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165350374 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173980588 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202859131 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164774299 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.237714058 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230383731 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.187439638 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13679599 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166017824 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15268769 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.122861318 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160444458 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174343965 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163812041 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.152116931 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.214280175 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164124296 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.110929847 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145209297 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206113204 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15294497 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187058836 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.211266703 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11659371 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180717687 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22680375 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138537981 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.18900702 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193052942 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147751802 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154905334 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.142549753 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.157680945 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24567193 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.130778096 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18927764 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221090862 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16541473 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173615981 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.153298547 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201460685 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164298762 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19469233 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148741342 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.162633579 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162825366 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14722345 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.135555024 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160149075 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174248407 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.154638787 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168523527 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.144545724 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226678609 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.101295212 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151225624 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294421892 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177108145 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248618563 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.140057677 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112230365 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165102448 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152616817 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.186334149 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214596407 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.114072117 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141352062 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.142282509 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.159464712 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.116362671 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163731473 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202983398 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.345424804 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210589723 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.143953362 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.287952652 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145213709 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13292654 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.120066659 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.137679415 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155638682 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123924999 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158286244 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.227543553 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274084047 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.150614941 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.111742516 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157340466 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.130400289 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112633575 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169714571 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166192959 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214206578 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11889233 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.111937042 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162940518 seconds)
  done (took 87.185546156 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.187048707 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.154919921 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.165599083 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.225721327 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199323775 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.317058733 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.232073663 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.278454749 seconds)
  done (took 2.836407981 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.098888045 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.155554244 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.162147604 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.140298367 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.096303765 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.122315864 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.39133485 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.109736488 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.121335498 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.15548684 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.154051385 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.122927481 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.651753398 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.125841754 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.12343499 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.160844986 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.121572565 seconds)
  done (took 4.089192023 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.178154472 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.493656898 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.004550232 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.198018477 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.163134142 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.120350397 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.706444732 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.122497947 seconds)
  done (took 12.065646981 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.129606234 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.151298559 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.167852568 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.141645821 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.155588906 seconds)
  done (took 1.830357801 seconds)
done (took 129.773735566 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.102196422 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.132366794 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.102909097 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.134328777 seconds)
  done (took 1.542622467 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.100683953 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.074565488 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.103918791 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.07785754 seconds)
  done (took 1.440374861 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.199197101 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.174275376 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.403654787 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.074971031 seconds)
  done (took 1.595140341 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.120404793 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.137826493 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.136467803 seconds)
  done (took 1.48735235 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.110982975 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.133132849 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.107158026 seconds)
  done (took 1.433669613 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.111611381 seconds)
  done (took 1.200430713 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.116190255 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.146209759 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.117437413 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.143891531 seconds)
  done (took 1.61221147 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.103301109 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.132545464 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.117045982 seconds)
  done (took 1.442162007 seconds)
done (took 13.212236263 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.111547341 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.434379145 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.423076753 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.114443966 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.73998033 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.413023552 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.046056559 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.151748246 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.176548814 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.126282029 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115791661 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.715107485 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.028876559 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.355818422 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.015806293 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.448417711 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.708426651 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123925588 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.096629348 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.126881666 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.030028743 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.125023767 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12489148 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.096838657 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.707911736 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.403173727 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.127225182 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.474501206 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097381323 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.133205724 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.384625936 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.126618101 seconds)
  done (took 17.380311302 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103379194 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.184990595 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.135778973 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.099068923 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.133020471 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.097598848 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.128950378 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.124131015 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.190390772 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.098672712 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.146542858 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.096591686 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.131682772 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.126403418 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.119400931 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.12475832 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.098338707 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.125033437 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123452719 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098989883 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.144597987 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096652116 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.126798757 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.096659717 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.126966543 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.140544888 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.099754797 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.125591236 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097873924 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.133655967 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127760848 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.10014894 seconds)
  done (took 4.99351066 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.150699818 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.19473662 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.137233411 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.15985598 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.179704381 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.099859438 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.20626588 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.152345686 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.192969676 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.09877663 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.144441235 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.125993294 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.13335701 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.127804038 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.148211957 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097096992 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.127389629 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123633025 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.098039999 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.125982476 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.118036665 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.125728275 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.125711331 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.098970387 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.126919857 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.113806335 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.127846401 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124963302 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09709354 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.133917683 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100681684 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.127965751 seconds)
  done (took 5.342400842 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.102381847 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.130810691 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.115764737 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.144230455 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.126451442 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.101912337 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.130005658 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.100362562 seconds)
  done (took 2.045257293 seconds)
done (took 30.854625322 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.115723959 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.131091663 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.111532165 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.138057263 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.134870342 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.111071988 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.124842078 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.109267367 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.138579641 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.10578135 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.142179042 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.123432161 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.099509062 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.123836944 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.111359459 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.130754041 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.111485407 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.13534481 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.140262088 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.111623378 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.127801149 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.11014671 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.135994632 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.138753252 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.112493937 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.140314479 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.141194731 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.105501207 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.12668668 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.099251415 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.129834232 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.110292034 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.128910433 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.113100549 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.13087054 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.128913458 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.099472049 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.129394501 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.111464027 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.138267153 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.131956318 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.110203586 seconds)
  done (took 6.236565561 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.115148751 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.146401672 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.111235666 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.113079913 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.092282801 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.084240601 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.144438128 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.08184406 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.113994855 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.114341496 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.10625046 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.080699968 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.109500727 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.077223337 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078773269 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.10730886 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.082408364 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.077941498 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.108125893 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.079489753 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.110558646 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.076025924 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081797898 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.110456862 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.077928857 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.08368112 seconds)
  done (took 3.670636223 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.105113128 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.146140691 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.118379405 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.181442471 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162131997 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.134587989 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.110293722 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.146741536 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.114880169 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.126494662 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.099872316 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.156958112 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.144861159 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.104672255 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.129744901 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.14123804 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.112309152 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.128992499 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.108262877 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.147105803 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.141838381 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.109227215 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.145875881 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.108156902 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.126896984 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099387254 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.132946568 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.140976853 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.105335605 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.136525933 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.131536859 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.101784845 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.128178553 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.10948909 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.132624981 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.098942998 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.148113995 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.141429892 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.106133353 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.128296347 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.105290198 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.130190495 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.148058927 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.138026551 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.126149656 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.134008616 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.099824647 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.13742703 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.097533321 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.14550771 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.135367193 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.097974825 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.129784571 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.099451191 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.12836763 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.114706805 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.128319928 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.099525313 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.135501368 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.132367908 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.110426289 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.131687025 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.114310708 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.128266113 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.134052978 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.099523456 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.127392393 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.096329725 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.150152147 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103055576 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.169031298 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.128218243 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.09861387 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.136947439 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.134404031 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.103295048 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.127395736 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.113725619 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.137641436 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.129743764 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.108800134 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.129439851 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.101579678 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.146050706 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.09957032 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.129292897 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.127098952 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.104786912 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.129659407 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.098635033 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.141618194 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.096614241 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.129553221 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.140632552 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.097780476 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.128185238 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.104189682 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.132086519 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.125533501 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111990572 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.133739896 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.097517961 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.137596422 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.126471013 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.099610594 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.137534033 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.103086223 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.127021257 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.101916201 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.134223367 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.126697263 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.10127214 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.130205401 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.099426333 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.137334903 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.104741616 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.132491341 seconds)
  done (took 15.556288947 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.24113571 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.227022121 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.195018098 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.308103975 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.140441843 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.152858633 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.22502733 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.134373923 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.128417677 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.169344267 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.178329709 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.192115905 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.178782759 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.189518335 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.179051388 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.128022584 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.118204358 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.175361525 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.226918681 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.306602606 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.148569225 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.106105138 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.169353577 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.167079972 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.142631442 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.137695985 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.115001848 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.139470016 seconds)
  done (took 6.041171983 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.115598876 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.161389581 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.132823731 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.12011426 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.156084695 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.128301035 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.102173571 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.130166789 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.111708322 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.142439662 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.127232589 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.105209899 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.135396833 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.135804707 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.099486657 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.137898486 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.108536274 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.130374073 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.100638336 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.132699463 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.137833585 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.108110984 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.13206566 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.096599031 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.137568943 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.096873399 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.120563113 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.149685252 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.127270783 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.12084123 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.126256201 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.106889094 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.141421585 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.099014611 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.126971391 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.129305087 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.100263331 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.129161912 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.099812951 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.125976797 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.097195848 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.111052616 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.096395928 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.143154613 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.13334176 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.084759058 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.134336974 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.103849608 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.129001121 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.095077015 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.130932898 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.100351735 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.131161038 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.105765599 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.130552365 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.128780401 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.101948789 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.11843531 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.104438615 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.130166562 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.087820897 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.126179075 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.104222269 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.122890809 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.107094831 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.133382809 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.096651384 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.13008631 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.130719174 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.10530729 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.129276158 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.104665219 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.126295295 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.100725611 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.131388378 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.102733744 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.131193766 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.12624671 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.09803437 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.128141134 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.079121284 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.126925763 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.077354857 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.130526449 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.096850192 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.126222441 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.100321405 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.13506637 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.143755106 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.099014148 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.13715482 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.09965093 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.127889655 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.100951505 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.116888685 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.100618344 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.145310196 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.149356246 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.097481027 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.126462629 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.142251822 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.100976302 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.126330592 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.079399836 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.136623014 seconds)
  done (took 13.588183822 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.136748815 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.159803473 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.12921268 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.116310143 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.163525825 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.164310579 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.105177917 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.136801926 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.099086777 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.14714611 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.128723216 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.108116263 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.129010951 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.113047607 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.16383568 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.139075898 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.100605075 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.143141153 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.13126829 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.146583576 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.147379872 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.147531808 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.115555441 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.128860174 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.103823027 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.144535857 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.167353814 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.112704425 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.142359109 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.147149972 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.113045865 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.166053862 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.148274261 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.101942664 seconds)
  done (took 5.673822857 seconds)
done (took 51.867169308 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.204397314 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.430554595 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.190689917 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.07662384 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.264658632 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.23072077 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.205680578 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.192295438 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.744443243 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.196230057 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.450265333 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.72908948 seconds)
done (took 60.034661131 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.318555432 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.346892289 seconds)
    (2/2) benchmarking "String"...
    done (took 1.482853855 seconds)
  done (took 3.954573252 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.742868755 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.118339981 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.45154379 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.192333883 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.194355783 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.479702624 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.868852808 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.557898737 seconds)
  done (took 27.978437006 seconds)
done (took 42.113173698 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.211676902 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.223009544 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.239163294 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.171931609 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.325089156 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.214635174 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.451463133 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.277617717 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.210342903 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.175486174 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.214899264 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.207339068 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.198378934 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.308470258 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.209006213 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.194100618 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.198701288 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.806456258 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.591841165 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.201005593 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.226550426 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.249634391 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.212061056 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.19466447 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.240511763 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.194358053 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.214647835 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.200166628 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.703560441 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.201337454 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.201162804 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.462800459 seconds)
  done (took 190.048589182 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.194316895 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.097144624 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.182591472 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.217442414 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.535622144 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.394842125 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.337809106 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.644828757 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.217489465 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.198311777 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.384018222 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.195987349 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.45822126 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.166162652 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.225725991 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.277489536 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.410410479 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.488397804 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.233429964 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.317585405 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.215635446 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.243386992 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.174061261 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.379852815 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.204908129 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.252849786 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.236600332 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.19913715 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.388968487 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.340003865 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.248957356 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.211253319 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.812071689 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.049041147 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.200452073 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.215928644 seconds)
  done (took 148.672025031 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.198125344 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.196753733 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.197577856 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.229355848 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.197642397 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.75033544 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.750350619 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.74434127 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.38132783 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.564705712 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.486214825 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.201246431 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.292013184 seconds)
    (14/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.198482357 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.213786283 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.198917951 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.214564789 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.242115839 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.198010923 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.198029415 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.766078188 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.21408084 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.219314819 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.37544801 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.214796813 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.230963386 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.587331837 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.198582898 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.230698236 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.529477084 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.248223016 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.199619729 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.589434421 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.41280774 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.312249704 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.200455872 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.231353891 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.199967697 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.478191319 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.19907801 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.198681394 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.199205557 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.20199545 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.882122881 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.202797394 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.752385608 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.200241318 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.155303581 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.199865701 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.200479677 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.747794047 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.913811791 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.220385616 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.200023216 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.202318317 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.200706572 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.200792373 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.232579874 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.621034455 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.295990783 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.218455539 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.200404522 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.205188247 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.232589374 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.201663343 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.556603432 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.204689687 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.141832923 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.27943555 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.307028599 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.770373866 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.204878373 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.300384986 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.322339524 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.201885896 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.200819729 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.201303916 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.202003857 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.201483342 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.311689482 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.201962866 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.614129882 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.375878213 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.218818771 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.57427485 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.302061419 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.202243401 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.612530464 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.205185716 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.202271354 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.950094852 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.29945033 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.203775931 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.202971294 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.20254399 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.618167737 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.758286125 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.460564691 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.205930049 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.624983302 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.206167702 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.637433065 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.750145302 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.883887265 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.207440801 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.315461297 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.377464348 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.22143822 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.203117449 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.572034739 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.207015621 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.261335557 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.203670813 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.601156313 seconds)
  done (took 366.595438556 seconds)
done (took 706.435285676 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.841131103 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.829942322 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.935873352 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.822407889 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.783946419 seconds)
  done (took 10.338522205 seconds)
done (took 11.465737149 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.38886777 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.388390807 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.264530932 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.390780145 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.238215418 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.406064269 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.368086899 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.225467579 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.304712189 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.286338926 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.304781441 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.258697619 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.23930778 seconds)
  done (took 18.191635546 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.545562906 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.535418404 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.269269415 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.523685914 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.245087735 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.523084404 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.416367558 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.415780717 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.424295276 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.238588709 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.218263476 seconds)
  done (took 16.484546544 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.531553004 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.526057885 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.272195885 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.555123325 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.247195904 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.530219684 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.40101746 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.423868032 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.415861242 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.237107304 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.219267815 seconds)
  done (took 16.487584017 seconds)
done (took 52.291995384 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.215844966 seconds)
  done (took 2.344133859 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.253743743 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.417381867 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.232449789 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.222602329 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.215899433 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.221554144 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.223110117 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.216322443 seconds)
  done (took 11.133216477 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.213908594 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.212662865 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.212096067 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.214210763 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.2155855 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.212232022 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.215144246 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.215263219 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.215096574 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.212431063 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.214764245 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.212101691 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.212696196 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.212130928 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.214860772 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.215517868 seconds)
  done (took 20.550939628 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.214913992 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.212945743 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.213638916 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.21359853 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.212808698 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.213443756 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.214122748 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.213150833 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.213685064 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.213767865 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.21353081 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.213445588 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.214068479 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.213219104 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.213710899 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.214572301 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.213678859 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.214238083 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.218360496 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.214312432 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.214804141 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.214509107 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.215447302 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.21437397 seconds)
  done (took 30.270676635 seconds)
done (took 65.42900412 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.838753435 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.859762006 seconds)
  done (took 6.830547152 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.274904493 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.27930892 seconds)
  done (took 3.687445533 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.21793725 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.21598089 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.218438938 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.216934384 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.216896612 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.217127229 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.216671445 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.217418734 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.216386977 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.217078607 seconds)
  done (took 13.302316927 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.21772952 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.216695465 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.215245059 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.217300213 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.217730882 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.214766623 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.217580145 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.217210562 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.217769015 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.215062251 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.218051532 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.215671182 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.217871452 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.215008916 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.218118326 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.215933419 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.216461621 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.216086267 seconds)
  done (took 23.03284784 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.218376277 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.240045264 seconds)
  done (took 3.591442719 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.346509243 seconds)
    (2/7) benchmarking "second"...
    done (took 1.257907331 seconds)
    (3/7) benchmarking "month"...
    done (took 1.326790597 seconds)
    (4/7) benchmarking "year"...
    done (took 1.314281889 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.258630272 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.237345908 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.258118168 seconds)
  done (took 10.132572612 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.220508808 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.396541109 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.501108446 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.833189788 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.220819833 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.22335163 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.104882647 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.223267168 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.226184491 seconds)
  done (took 14.083423323 seconds)
done (took 75.794098923 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.214035544 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.230180037 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.495884267 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.236272589 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.233094651 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.513075467 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.265540718 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.346971564 seconds)
done (took 37.671128261 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.212396088 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.191186842 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.026762316 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.199452281 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.284799333 seconds)
  done (took 18.83638335 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.25175371 seconds)
    (2/2) benchmarking "read"...
    done (took 1.553579087 seconds)
  done (took 4.94042408 seconds)
done (took 31.126596276 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.220885309 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.218527484 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.220935483 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.217896681 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.220631732 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.21872095 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.218317154 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.222171369 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.22066908 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.221229823 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.222233158 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.222236802 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222398515 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.219566338 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220078769 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222237359 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.220000032 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.22214524 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219323494 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.219126945 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220318902 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.222409289 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.220006981 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.219975051 seconds)
  done (took 30.42820396 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.222616749 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.220784421 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.222977023 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.223874039 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.220185257 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.222521245 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.222906139 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.220116253 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.222105273 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.222623352 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.219534817 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.220818133 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.224295485 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.220364703 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222257213 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.220866718 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.223675998 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219796798 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223055179 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.221109288 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.222239425 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221294121 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.221347319 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.223793881 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.221334737 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.22183279 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.223758775 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.222567161 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.223350592 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.220957603 seconds)
  done (took 37.795809126 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.229918587 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.231668718 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.224488726 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.224327551 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.223344108 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.224179481 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.223986686 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.225265033 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.223344263 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.224628341 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.224668091 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.224265854 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.224889263 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.223854096 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.224451667 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.224991832 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.225579338 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.224810639 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.225521045 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.226123135 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.2254604 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.227537739 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.226111259 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.225432146 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.225311777 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.22591405 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.225897374 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.225507396 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.226106945 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.226157784 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.225403024 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.225530605 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.226147403 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.225729164 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.225681888 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.226280817 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.2311207 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.233692986 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.225534619 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.226976553 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.226291227 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.22642937 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.225710755 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.227309274 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.226199603 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.22567289 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.227659868 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.227248093 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.225972219 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.227061147 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.226765322 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.227588656 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.228742303 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.227227091 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.226552128 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.229072586 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.22715401 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.226852371 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.22738551 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.227103011 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.228515084 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.227608558 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.227952522 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.228385543 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.228579968 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.228581696 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.228998053 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.228067672 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.227836939 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.228595992 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.228098561 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.228630973 seconds)
  done (took 89.455789397 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.228325257 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.225866969 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.227457486 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.226206438 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.226427097 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.229520419 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.225571402 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23021362 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226222571 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.229578088 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228767039 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.226672409 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227166659 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.230522991 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.228549492 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.226737398 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.228950119 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.226628474 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.229124493 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.229571726 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.229944098 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.22699757 seconds)
  done (took 28.157712556 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230558493 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.232257717 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.231866884 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.231355295 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.229268582 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.23163002 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.230801909 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.232160467 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229432743 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.227602694 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227660467 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230098677 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.229934347 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227911907 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.227107384 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.230845664 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.231041574 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.23087509 seconds)
  done (took 23.286233576 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.22872931 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.228386343 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.230686718 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.227172008 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.228325858 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.230872886 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.228139143 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.230422305 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.231379851 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.229089414 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.230995518 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231838293 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.231698166 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22848403 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230956352 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.228999379 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.2314315 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229230744 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.232435636 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.22911984 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.230100137 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.232278291 seconds)
  done (took 28.206051965 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.232539756 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.232438497 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.229796834 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.231336343 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.230299136 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.233387368 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.232612052 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.23016151 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.234248604 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.232991562 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.229909527 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.23473403 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.231488377 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.231494605 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.231403467 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.230999576 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.233739064 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.232385566 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.234383424 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.23072662 seconds)
  done (took 25.787116725 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.234557645 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.235896951 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.235253794 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.235856777 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.235927498 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.235510101 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.236398291 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.235724222 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.235957994 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.236858399 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.235678326 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.234908363 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.236357985 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.236153136 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.235621578 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.234993292 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.23593419 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.235890984 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.235616261 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.236403401 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.236255733 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.235813068 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.236723717 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.235657443 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.236134432 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.236658707 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.236244206 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.236434743 seconds)
  done (took 35.754470139 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.236272901 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.235675935 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.232691921 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.233161781 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.233827032 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.232798749 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.233097378 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.233402804 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.236397449 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.233554381 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.237679494 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.236287882 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.236107575 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.236639899 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.236359612 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.237365863 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236144694 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.234263498 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.235035269 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.234426754 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.237897242 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.236896171 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.236459904 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.234918113 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.236389897 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.237545342 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.235670712 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.235598599 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.238206268 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.234831412 seconds)
  done (took 38.215533881 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.256584595 seconds)
    (2/2) benchmarking "in"...
    done (took 1.256871501 seconds)
  done (took 3.665030889 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.237165191 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.23896487 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.239437673 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.236551874 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.235845164 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.239638003 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.238376388 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.23547976 seconds)
  done (took 11.052885798 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.2384605 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.240089624 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.238934837 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.239093235 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.240911789 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.239733097 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.245863601 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.259097227 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.239906465 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.241727703 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.247168603 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.248516589 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.243151664 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.240302606 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.238422514 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.241113858 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.239664514 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.24006987 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.241346089 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.240612187 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.240899389 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.241592345 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.24293857 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.238274416 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.242097755 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.25115783 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.264098376 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.239892279 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.241703609 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.243408056 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.240473967 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.237440688 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.241835392 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.241804027 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.241018274 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.241903557 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.248650124 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.262899239 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.247652681 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.261687567 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.241700377 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.238017385 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.242414333 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.24229818 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.243108359 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.241451793 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.242794265 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.239641556 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.241662291 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.246453811 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.246876064 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.241598645 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.239610763 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.244862132 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.242927242 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.250170949 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.26232822 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.250348745 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.252268477 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.253464075 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.275622952 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.26784022 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.245119843 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.243083475 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.253304293 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.267496276 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.249785374 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.260565399 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.240070388 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.243775456 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.25008891 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.276212474 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.270749989 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.243994458 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.244223072 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.244489828 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.244156535 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.244170923 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.250733735 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.26708965 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.243745692 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.245686177 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.255911774 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.269093197 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.245845773 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.245123905 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.244605166 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.24528058 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.247252003 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.257229896 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.26488941 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.245377272 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.24402242 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.245042118 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.24669281 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.246104113 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.245271691 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.245963786 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.243556026 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.246033666 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.245271085 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.250556431 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.255754123 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.245814255 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.246443678 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.25338442 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.265338647 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.245763262 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.253472364 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.265372663 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.246349853 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.250161355 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.252853609 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.242786028 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.251147198 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.257010217 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.246538985 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.248462359 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.246916453 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.248029808 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.256927653 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.276156071 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.24718817 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.24740979 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.253088197 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.26014666 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.249953516 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.251418878 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.246721703 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.245254993 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.244256269 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.249314174 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.248764475 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.250287911 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.249127032 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.249780855 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.245172208 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.24897771 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.249368385 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.249034119 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.249750523 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.248469266 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.250319857 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.250354179 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.249531001 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.249950923 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.255084485 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.269701321 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.249089855 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.249954511 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.247609758 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.249499347 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.249716276 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.248656562 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.248585673 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.249958912 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.2493061 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.250010509 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.249863106 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.251106066 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.249944532 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.25009566 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.255283477 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.249898515 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.252930471 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.249845365 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.247031097 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.249904125 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.251283963 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.250349639 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.250548071 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.249250234 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.254975439 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.259872905 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.251168698 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.251823356 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.253081994 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.250974369 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.251203236 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.251626922 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.254613224 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.259759762 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.250503633 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.258179606 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.271184645 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.251400344 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.251066426 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.251775512 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.253150028 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.251258408 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.255262123 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.260428611 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.264440297 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.278248655 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.252444656 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.256486818 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.253244947 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.255813873 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.256772265 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.251851597 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.253595269 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.252575119 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.2535706 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.252599274 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.254432665 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.253845872 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.252038584 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.252502983 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.252077109 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.254384511 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.25378866 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.253337047 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.254181496 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.249532297 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.25329873 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.253960179 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.25359193 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.250352253 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.252053516 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.252530255 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.253430681 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.253500892 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.260783503 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.271131181 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.254503691 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.255206277 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.255411379 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.252771527 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.254904298 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.255187785 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.253386821 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.262199938 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.273571027 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.254520646 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.261789513 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.272840337 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.254142536 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.257954259 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.255410473 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.252227434 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.258565804 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.263244611 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.255724788 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.255685532 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.25652411 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.255115189 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.256444388 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.261911357 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.271478124 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.25479228 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.256354566 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.256434956 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.253461018 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.256598066 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.256808503 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.257207337 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.257762729 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.255763499 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.257144566 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.256695754 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.256157405 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.257097825 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.256563066 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.261006331 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.264511792 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.261966494 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.277569936 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.258272671 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.259101756 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.261762872 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.256439333 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.257605494 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.257427041 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.270616301 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.284811926 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.264095167 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.277253596 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.258367237 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.263134917 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.278807408 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.262008585 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.257377973 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.257218908 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.257237325 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.257383878 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.254505561 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.258181278 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.25819153 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.260349388 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.259403194 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.261813048 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.257987496 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.257680263 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.258301356 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.259465625 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.259132418 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.258211166 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.258365003 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.260359261 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.260032119 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.257225153 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.259406655 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.26562811 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.279307404 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.260363301 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.260239725 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.259125605 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.259658518 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.260301915 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.260547936 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.263072348 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.268370414 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.264111751 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.269221355 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.261298833 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.270905195 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.281673143 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.265069495 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.269754998 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.257475264 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.260033978 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.260106239 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.260203089 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.267991495 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.280547612 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.263103023 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.26634222 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.261345701 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.262071035 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.261151386 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.261377551 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.262275266 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.260431257 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.268981021 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.283308085 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.265334701 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.262776203 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.259182457 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.261361458 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.262513542 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.260962992 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.264839245 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.261854295 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.262187762 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.261332099 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.26248255 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.262350559 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.26263922 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.262473013 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.258768496 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.263282832 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.268155798 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.283670042 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.267586385 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.263056174 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.268934493 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.284072621 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.270258868 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.283578226 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.263556223 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.263244093 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.263684849 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.263814011 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.263039322 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.265888333 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.263291101 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.264243105 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.26802158 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.263563574 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.264545517 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.263673982 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.263966845 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.263805614 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.273348618 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.288842274 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.265143538 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.269221725 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.260723173 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.265336461 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.268329284 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.264586282 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.26359396 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.267268801 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.275513507 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.272901919 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.264208138 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.265441762 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.265268813 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.264726017 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.266309512 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.264796133 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.265664605 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.265983505 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.265741903 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.265735355 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.268240084 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.265333431 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.265815827 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.267199142 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.267434163 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.276716991 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.287153394 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.266851237 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.265708999 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.267340286 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.266185375 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.266433306 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.266537855 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.266649795 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266788092 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.267396733 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.273499949 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.274261702 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.269302819 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.265873602 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.266210094 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.266785349 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.267750306 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.266453307 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.267589115 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.267653684 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.267812262 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.268625666 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.2681467 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.266483026 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.26649924 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.267837205 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.267259593 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.269986368 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.275867256 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.267748532 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.263903523 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.266816432 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.266959151 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.266672864 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.268050084 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.274336065 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.291934686 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.280336558 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.277126873 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.272954388 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.267916804 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.271108348 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.277881053 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.267642597 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.268734095 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.268706459 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.270003494 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.268744994 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.273010043 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.269505742 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.275864184 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.289935958 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.268894958 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.276572505 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.290430013 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.268857665 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.271629847 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.273852341 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.269407014 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.267359991 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.269946636 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.269045286 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.276069474 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.289543598 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.270214389 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.271170671 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.268798961 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.2721035 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.27506973 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.271126247 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.270698256 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.266209164 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.26982813 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.270044309 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.270732214 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.267852794 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.269875377 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.270154355 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.273790051 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.278361451 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.269026741 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.273628831 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.27180471 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.272029705 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.272647087 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.272711431 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.269713895 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.26856363 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.271436382 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.271967657 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.271847197 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.274394205 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.271822083 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.27371148 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.273133504 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.272015268 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.274778239 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.283069659 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.279534349 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.2698493 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.271714967 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.272876313 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.275259521 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.272375756 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.272616483 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.273143332 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.273934581 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.273141175 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.273088774 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.273835286 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.275444375 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.288587792 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.29471926 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.27286756 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.273837201 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.275572207 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.274062798 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.270416153 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.273252988 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.275114858 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.276668943 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.282508336 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.273715912 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.279896551 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.293550736 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.274640053 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.27835495 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.276859192 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.28218535 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.277959929 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.273572663 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.27393727 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.278532591 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.293570861 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.296573265 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.286433185 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.305862538 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.295339469 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.275301848 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.27471322 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.273861904 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.275628151 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.27709621 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.276182355 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.275204083 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.275622368 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.276914598 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.276388232 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.281659585 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.276484191 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.276247419 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.274918456 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.275442542 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.276508078 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.27347585 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.277299308 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.276044529 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.276870575 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.277000664 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.276770915 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.276181997 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.28876477 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.30592825 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.276942141 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.276755468 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.274033215 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.279403907 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.2799308 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.288465721 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.286317521 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.277309703 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.277139787 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.277588389 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.27823298 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.276421991 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.277524251 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.277846731 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.277878365 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.274960869 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.290924651 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.30514683 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.282135687 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.297755492 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.278914549 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.279302375 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.278377318 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.278382037 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.278452864 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.278869536 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.280624005 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.283133361 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.276933087 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.27820173 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.281010583 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.286670121 seconds)
  done (took 753.483134648 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.275416737 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.275340803 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.274954759 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.276630128 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.276269954 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275351902 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.276532809 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.275837063 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.275415016 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.276524352 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.276237668 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.276645687 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.276093748 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.277022073 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.276219125 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.277151605 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.277142192 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.277016425 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.27618842 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.276854251 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.276213923 seconds)
  done (took 27.989239959 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.279773958 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.276987057 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.276686829 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.280215032 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.278191411 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.280146366 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.277774816 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279820509 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.281305145 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.277479208 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.280028819 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280326952 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.278085826 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.278010684 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.277243147 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.280929535 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.281297858 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.279182178 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.280999186 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.27903815 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.281262117 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.279041787 seconds)
  done (took 29.333322136 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.281346815 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.281920501 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.281035127 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.279131153 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.281108966 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.279038965 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.283015608 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.281920282 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.282843982 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.281538728 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.280960891 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.283435676 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.28914838 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.287521947 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.284379113 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.282318257 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.426444035 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.283049429 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.283968914 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.282322188 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.27976645 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.288355508 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.301005404 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.280508642 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.28245616 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.28390557 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.283685489 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.28291043 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.283591455 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.285129761 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.288635826 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.283267211 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.283796236 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.284998128 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.282839773 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.284279003 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.287784305 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.284201491 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.280513674 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.283457407 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.294178644 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.305717493 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.284359205 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.289952718 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.305866762 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.283625087 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.287674389 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.293706022 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.282099392 seconds)
  done (took 64.311091622 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.284369442 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.284407425 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.2819162 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.287535985 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.283393087 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.284054248 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.289655314 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.283720249 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.281741494 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.281688637 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.285429336 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.282802126 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.281632011 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.284438023 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.28515271 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.282961767 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.282713061 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.283226883 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.282357567 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.282269612 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.282474947 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.285943193 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.286429895 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.283425943 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.285601539 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.283618786 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.284084536 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.286407859 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.2834784 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.283257945 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.285658581 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.28614795 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.28663297 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.283990649 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.283279333 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.286769115 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.286650742 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.284470847 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.286358648 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.283879425 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.286041194 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.286590347 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.286729563 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.287312354 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.285981506 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.285499601 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.283417678 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.283780312 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.284831095 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.287534263 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.28699511 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.285402008 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.287095731 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.285202924 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.287295122 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.288023154 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.284816312 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.28563512 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.288543631 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.286272085 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.284601597 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.287848905 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.284928308 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.287698081 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.288049374 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.286045387 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.285626287 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.288714789 seconds)
  done (took 88.586441331 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.288201793 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.288768432 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.288475075 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.288616659 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.288637117 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.289033855 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.288894807 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.288511163 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.28877298 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.288933185 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.28955563 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.289298886 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.289051191 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.288730188 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.289144467 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.289530814 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.288494993 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.28906066 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.289557157 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.288840757 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.288846294 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.290419177 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.290046214 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.29023878 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.290751715 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.290810588 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.29021098 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.290085768 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.289579781 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.290799309 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.292053899 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.29148689 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.290666949 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.291044585 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.291283845 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.291593025 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.290527266 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.290427031 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.290365829 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.291062373 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.291283939 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.291732001 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.29126612 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.291743253 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.291355918 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.290521836 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.293849929 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.292328842 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.290973813 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.291400332 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.291154893 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.292071529 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.292571876 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.291400253 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.292419882 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.292578604 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292495041 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.292538869 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.292168806 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.293097993 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.292528448 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.292066894 seconds)
  done (took 81.212863192 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.29288543 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.292352303 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.2905442 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.289769062 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.292682372 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.293011618 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.292963238 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.292662651 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.292383681 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.292428112 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.292773577 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.291772193 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.294680834 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.293064806 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.291302505 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.29267892 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.29137842 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.293236084 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.292642714 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.291339095 seconds)
  done (took 27.048560185 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.290277068 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.293887807 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.291188308 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.291046433 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.293668404 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.291172075 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.292710196 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.293215222 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.291625776 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.293556935 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.29469406 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.294077915 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.291611491 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.291959387 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.295117338 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.292341044 seconds)
  done (took 21.884422714 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.291846562 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.294406385 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.29387183 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.294286847 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.29200923 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.292980172 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.295379254 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.292425764 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.292518258 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.295356804 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.295134194 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.294816589 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.295264734 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.295217115 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.292585955 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.29563402 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.292973919 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.293301664 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.296488975 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.296342141 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.293424325 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.293324376 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.29586643 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.296174077 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.294677586 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.294254244 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.29338692 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.294107543 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.294707628 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.297633082 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.293872973 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.294957916 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.293156062 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.293242326 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.296690373 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.294361967 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.297358447 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.297417949 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.298301957 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.298032024 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.297674192 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.295176411 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.298456414 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.297701147 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.295703907 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.297373365 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.295200438 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.295439673 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.294641434 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.294522174 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.296681935 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.297640681 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.298933506 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.297453767 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.29775695 seconds)
  done (took 72.443294837 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.297565448 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.298282342 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.295821204 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.297634765 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.297672416 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.295853803 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.297268083 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.297642594 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.296818486 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.298819015 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.296616446 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.299600903 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.295356808 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.299217103 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.298118123 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.298454593 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.296131858 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.295567837 seconds)
  done (took 24.558568554 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.296717408 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.296700584 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.299532989 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.2974451 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.296649672 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.299524177 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.297512324 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.299774264 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.299924557 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.297702862 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.296953342 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.300058573 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.298941015 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.300127707 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.298655247 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.298236689 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.300619234 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.300773044 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.29820617 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.296949434 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.301596722 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.300425409 seconds)
  done (took 29.780899976 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.299181509 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.299536779 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.299928843 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.317484728 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.321489009 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.322795959 seconds)
  done (took 9.069903367 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308578138 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300968283 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.298097294 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302922302 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300817321 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298017586 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298118999 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30001524 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302063173 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29923156 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299253809 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301740876 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301801841 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299183459 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303274894 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301183755 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299604147 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299734228 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299840152 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.3024572 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299986934 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301553449 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29968052 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299636116 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300582334 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299720901 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302509257 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299547492 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299554445 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302689524 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302664344 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300392299 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303383042 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300853547 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303126689 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303145571 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303050157 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303321819 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303255222 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300755812 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.302646406 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302589352 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303528671 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300326568 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303356136 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301735076 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301240678 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301176844 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300193362 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304409348 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30397037 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301213032 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30427304 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303559721 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304544893 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304005124 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302404073 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302121985 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305127851 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302642181 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304643195 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305180755 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302659109 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301331999 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305641399 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302926208 seconds)
  done (took 87.158951454 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303116989 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.303949255 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304506498 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304373636 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30360779 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302729634 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302908978 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303307734 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302351416 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303371036 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30599293 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302681559 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30402683 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302609986 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302811717 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303512178 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304123517 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303984025 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303092952 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306426804 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304193116 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302234465 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303999806 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304070398 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303745447 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306695968 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305328671 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303647036 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303926384 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304070569 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304614959 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304064629 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303185652 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.304567524 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305727206 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303556999 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304612245 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305731563 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305023903 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306682082 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305042278 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307061026 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304864326 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304988214 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305107053 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304897169 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305126756 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304792057 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305825594 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305290228 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305786501 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305191604 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305654419 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305078307 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30611829 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305059361 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306018618 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306102364 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306170462 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308254092 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306769615 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30659 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309182268 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306351345 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307872903 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307587782 seconds)
  done (took 87.33465727 seconds)
done (took 1757.138217607 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.471495892 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.424887404 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.306915684 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.338000726 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.307348819 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.325465423 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.326025343 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.307506047 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.307677211 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.308271299 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.307763885 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.493228062 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.352454273 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.306948961 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.308144185 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.403409684 seconds)
  done (took 42.813940449 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.337665999 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.313232649 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.434657563 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.331916584 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.336981019 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.504170426 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.366567429 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.313468003 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.492447097 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.358007374 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.963113339 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.337879557 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.313545464 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.48205788 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.33092777 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.507265273 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.571769486 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.968247909 seconds)
  done (took 30.482168369 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.79046879 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.322507657 seconds)
  done (took 9.331397954 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.332172619 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.31369897 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.314007755 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.311791685 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.305706686 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.304430308 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.31302812 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.315561402 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.247147581 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.451660481 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.333920814 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.323901384 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.335708769 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.313955692 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.311205265 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.353192562 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.458608438 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.31246894 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.311476646 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.320358008 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.314671843 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.429912685 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.35729828 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.31242503 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.447568881 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.275270628 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.321008452 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.322182964 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.437374016 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.313120503 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.314082154 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.314315456 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.316351238 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.265066054 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.821957314 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.32442843 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.33834338 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.323831024 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.310992576 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.480927423 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.31567516 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.321161726 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.319350805 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.804963926 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.47209565 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.436452009 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.643134147 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.340078365 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.316253687 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.378298141 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.315477922 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.316453133 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.3607587 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.107116692 seconds)
  done (took 111.600053497 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.338568476 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.697139085 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.479933567 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.330073511 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.128302942 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.123232549 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.328268589 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.620202526 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.377429573 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.310532755 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.618566702 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.842978003 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.329244866 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.381765849 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.733223976 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.335788495 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.30848217 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.054169167 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.327104028 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.311465934 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.818979676 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.315368622 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.315111601 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.48607125 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.349044996 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.784172537 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.855509527 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.83401722 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.332442481 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.309822732 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.801063482 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.331263274 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.325582171 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.312453839 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.583477145 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.689725866 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.679909939 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.33192322 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.314698908 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.314061754 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.323066881 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.780429488 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.688579294 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.329455768 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.311652736 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.804491603 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.330023883 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.313346286 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.312270821 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.521956363 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.955537401 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.313923054 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.765701136 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.312450959 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.604315643 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.391437975 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.366397602 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.814428232 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.330178609 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.519370229 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.375745236 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.313086733 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.317726592 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.315892403 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.312040085 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.678172678 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.430777891 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.315072099 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.678792326 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.813297352 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.330678367 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.872501796 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.216395154 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.339664435 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.429650646 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.321328757 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.896101232 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.823491576 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.356876797 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.313103539 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.667619298 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.333011555 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.606560212 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.334065852 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.336456224 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.829740445 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.320012213 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.337489657 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.313988405 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.313762189 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.094553658 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.318181846 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.611767366 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.343065786 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.31464602 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.315612085 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.326607913 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.314095516 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.335990588 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.318010999 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.86897727 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.331010795 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.444458731 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.333836696 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.315768749 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.316682591 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.316792729 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.315350018 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.542133411 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.778815056 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.342038639 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.316831052 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.316024428 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.32160772 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.498170851 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.318173259 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.642664939 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.335309748 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.315501701 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.337647624 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.111899023 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.363800295 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.317333554 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.323562606 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.218805352 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.524849844 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.336065802 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.31645463 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.316613464 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.334979093 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.619573944 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.33829394 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.404131129 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.320006293 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.041182243 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.361324911 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.321253715 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.619039472 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.325458631 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.268281743 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.339611195 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.318356936 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.605180444 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.593410105 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.358961943 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.316680997 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.337737709 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.050009768 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.36383564 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.456686142 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.337952081 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.319873204 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.517774832 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.666549564 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.319256454 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.92383075 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.319815855 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.540966094 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.320079191 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.6197413 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.831437886 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.335787661 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.32621274 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.046651562 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.056812133 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.151605273 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.324315666 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.603209057 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.266417532 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.800129899 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.318977353 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.319950138 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.911060542 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.322660557 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.324169417 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.319922172 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.320106091 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.660969785 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.492337028 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.965052883 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.320182708 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.790433097 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.375170319 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.321258785 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.327893937 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.323594406 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.66530386 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.396332235 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.323479404 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.332726945 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.320664991 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.327708467 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.811981588 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.248486785 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.326938599 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.473610662 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.978099834 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.337501258 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.321992663 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.939618516 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.555466442 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.891334291 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.394098588 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.648725579 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.341628878 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.359658127 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.067612504 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.350673361 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.814070569 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.345320709 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.322071308 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.947636408 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.340128831 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.679284957 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.322635263 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.322956594 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.90270088 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.340105158 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.325885458 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.710521056 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.344596774 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.601110367 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.32463311 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.339313431 seconds)
  done (took 1109.787650512 seconds)
done (took 1305.234364053 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.323238586 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.327148278 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.30799414 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.329429051 seconds)
  done (took 26.524029042 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.335547949 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.330046577 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.331724289 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.329532325 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.333223543 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.329670749 seconds)
  done (took 9.226653472 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.390785143 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.3301545 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.328534221 seconds)
  done (took 19.286997781 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.548185614 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.676446796 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.678382127 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.677404218 seconds)
  done (took 10.818640266 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.331729322 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.331441283 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.330904116 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.334012045 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.337268451 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.338346155 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.335044314 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.333434117 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.337613929 seconds)
  done (took 13.246203509 seconds)
done (took 80.340374891 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.777454613 seconds)
    (2/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.415273152 seconds)
    (3/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.290373001 seconds)
    (4/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.744992522 seconds)
    (5/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.526214042 seconds)
    (6/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.425657261 seconds)
    (7/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.325564797 seconds)
    (8/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.352965122 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.609704943 seconds)
    (10/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.278115896 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.371351346 seconds)
    (12/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.445839558 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.351580524 seconds)
    (14/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.413625027 seconds)
    (15/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.053372109 seconds)
    (16/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.435464825 seconds)
    (17/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.990048713 seconds)
    (18/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.475071873 seconds)
    (19/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.952320036 seconds)
    (20/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.138461785 seconds)
    (21/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.635482449 seconds)
    (22/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.341178986 seconds)
    (23/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.89034085 seconds)
    (24/286) benchmarking ("sort", Float32, true)...
    done (took 6.329134651 seconds)
    (25/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.307681814 seconds)
    (26/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.451823429 seconds)
    (27/286) benchmarking ("sort", Int64, true)...
    done (took 6.3257663 seconds)
    (28/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.269397021 seconds)
    (29/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.190711583 seconds)
    (30/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.459743329 seconds)
    (31/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.305501109 seconds)
    (32/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.305302763 seconds)
    (33/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.328807411 seconds)
    (34/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.416751138 seconds)
    (35/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.58412579 seconds)
    (36/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.343238049 seconds)
    (37/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.413866696 seconds)
    (38/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.353589477 seconds)
    (39/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.061705114 seconds)
    (40/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.010030901 seconds)
    (41/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.331918013 seconds)
    (42/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.498303777 seconds)
    (43/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.306040973 seconds)
    (44/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.607173593 seconds)
    (45/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.410821217 seconds)
    (46/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.335323222 seconds)
    (47/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.394197888 seconds)
    (48/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.339632898 seconds)
    (49/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.995765249 seconds)
    (50/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.333979199 seconds)
    (51/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.442551318 seconds)
    (52/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.354299405 seconds)
    (53/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.393003431 seconds)
    (54/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.329942508 seconds)
    (55/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.749062764 seconds)
    (56/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.330042159 seconds)
    (57/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.279546065 seconds)
    (58/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.667511867 seconds)
    (59/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.796701848 seconds)
    (60/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.091728466 seconds)
    (61/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.339633025 seconds)
    (62/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.916701025 seconds)
    (63/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.046526023 seconds)
    (64/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.300785427 seconds)
    (65/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.749258178 seconds)
    (66/286) benchmarking ("sort", Int64, false)...
    done (took 5.562623187 seconds)
    (67/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.337885224 seconds)
    (68/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.307852146 seconds)
    (69/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.793017949 seconds)
    (70/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.188578046 seconds)
    (71/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.432645789 seconds)
    (72/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.312599843 seconds)
    (73/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.03399971 seconds)
    (74/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.321214544 seconds)
    (75/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.114929313 seconds)
    (76/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.453587526 seconds)
    (77/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.457840806 seconds)
    (78/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.356621769 seconds)
    (79/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.34836162 seconds)
    (80/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.82166181 seconds)
    (81/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.318160108 seconds)
    (82/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.367263838 seconds)
    (83/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.964410741 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.763621335 seconds)
    (85/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.741472822 seconds)
    (86/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.995398806 seconds)
    (87/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.353741842 seconds)
    (88/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.876171028 seconds)
    (89/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.329061708 seconds)
    (90/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.417739468 seconds)
    (91/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.348630476 seconds)
    (92/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.24788206 seconds)
    (93/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.220691173 seconds)
    (94/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.83958505 seconds)
    (95/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.395153084 seconds)
    (96/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.544831725 seconds)
    (97/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.88335152 seconds)
    (98/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.979995624 seconds)
    (99/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.373235591 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.695759102 seconds)
    (101/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.380326484 seconds)
    (102/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.330823303 seconds)
    (103/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.331584281 seconds)
    (104/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.72408976 seconds)
    (105/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.043357839 seconds)
    (106/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.435437808 seconds)
    (107/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.308202095 seconds)
    (108/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.712254043 seconds)
    (109/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.799725916 seconds)
    (110/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.113461981 seconds)
    (111/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.953546857 seconds)
    (112/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.151924946 seconds)
    (113/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.311705569 seconds)
    (114/286) benchmarking ("sort", Bool, false)...
    done (took 1.856825269 seconds)
    (115/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.373828258 seconds)
    (116/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.311128145 seconds)
    (117/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.637184601 seconds)
    (118/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.359265488 seconds)
    (119/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.331912325 seconds)
    (120/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.194086078 seconds)
    (121/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.593872837 seconds)
    (122/286) benchmarking ("sort", Int8, false)...
    done (took 4.395968268 seconds)
    (123/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.311809809 seconds)
    (124/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.83634419 seconds)
    (125/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.359170464 seconds)
    (126/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.348546682 seconds)
    (127/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.443341663 seconds)
    (128/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.423339381 seconds)
    (129/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.350178399 seconds)
    (130/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.737704448 seconds)
    (131/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.442768301 seconds)
    (132/286) benchmarking ("sort", BigInt, true)...
    done (took 6.33468513 seconds)
    (133/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.189227518 seconds)
    (134/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.317077811 seconds)
    (135/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.361157148 seconds)
    (136/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.316279287 seconds)
    (137/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.846622965 seconds)
    (138/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.572017739 seconds)
    (139/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.594095323 seconds)
    (140/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.724512312 seconds)
    (141/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.112928668 seconds)
    (142/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.313121956 seconds)
    (143/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.33568001 seconds)
    (144/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.360141404 seconds)
    (145/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.313370568 seconds)
    (146/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.53757117 seconds)
    (147/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.31591903 seconds)
    (148/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.349997509 seconds)
    (149/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.354262658 seconds)
    (150/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.415055677 seconds)
    (151/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.617180571 seconds)
    (152/286) benchmarking ("sort", Float32, false)...
    done (took 5.375830958 seconds)
    (153/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.313971346 seconds)
    (154/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.205664159 seconds)
    (155/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.318637578 seconds)
    (156/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.313748086 seconds)
    (157/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.835808072 seconds)
    (158/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.420086797 seconds)
    (159/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.335130054 seconds)
    (160/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.315344651 seconds)
    (161/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.988034733 seconds)
    (162/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.361900478 seconds)
    (163/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.314212359 seconds)
    (164/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.370529413 seconds)
    (165/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.762754905 seconds)
    (166/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.331767952 seconds)
    (167/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.380028474 seconds)
    (168/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.475886624 seconds)
    (169/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.557802202 seconds)
    (170/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.382043453 seconds)
    (171/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.377214971 seconds)
    (172/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.4359373 seconds)
    (173/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.315596366 seconds)
    (174/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.325261416 seconds)
    (175/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.314943096 seconds)
    (176/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.935159031 seconds)
    (177/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.358087033 seconds)
    (178/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.71019183 seconds)
    (179/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.02073571 seconds)
    (180/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.320468458 seconds)
    (181/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.020004589 seconds)
    (182/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.521275643 seconds)
    (183/286) benchmarking ("sort", BigInt, false)...
    done (took 6.355460262 seconds)
    (184/286) benchmarking ("sort", Bool, true)...
    done (took 5.367931003 seconds)
    (185/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.813315982 seconds)
    (186/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.395590114 seconds)
    (187/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.211339394 seconds)
    (188/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.341261689 seconds)
    (189/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.353117826 seconds)
    (190/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.223597928 seconds)
    (191/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.315699023 seconds)
    (192/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.194433203 seconds)
    (193/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.445432062 seconds)
    (194/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.869381712 seconds)
    (195/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.188224957 seconds)
    (196/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.348817821 seconds)
    (197/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.858747586 seconds)
    (198/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.559761396 seconds)
    (199/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.573003575 seconds)
    (200/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.32958897 seconds)
    (201/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.007091801 seconds)
    (202/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.363992286 seconds)
    (203/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.38729254 seconds)
    (204/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.447169053 seconds)
    (205/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.231303865 seconds)
    (206/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.363282715 seconds)
    (207/286) benchmarking ("sort", Float64, true)...
    done (took 6.337989607 seconds)
    (208/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.380625117 seconds)
    (209/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.36452884 seconds)
    (210/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.441885904 seconds)
    (211/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.317657586 seconds)
    (212/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.347548534 seconds)
    (213/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.317217479 seconds)
    (214/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.335155551 seconds)
    (215/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.385583161 seconds)
    (216/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.609582095 seconds)
    (217/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.401426782 seconds)
    (218/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.332940329 seconds)
    (219/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.362041937 seconds)
    (220/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.339654679 seconds)
    (221/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.389773576 seconds)
    (222/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.441453291 seconds)
    (223/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.863015567 seconds)
    (224/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.318982568 seconds)
    (225/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.570992538 seconds)
    (226/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.404462305 seconds)
    (227/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.707102349 seconds)
    (228/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.568887813 seconds)
    (229/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.318491176 seconds)
    (230/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.341105579 seconds)
    (231/286) benchmarking ("sort", Int8, true)...
    done (took 6.340136031 seconds)
    (232/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.581172071 seconds)
    (233/286) benchmarking ("sort", Float64, false)...
    done (took 5.68253861 seconds)
    (234/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.357820338 seconds)
    (235/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.367945274 seconds)
    (236/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.430863834 seconds)
    (237/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.421908387 seconds)
    (238/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.369856242 seconds)
    (239/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.502484647 seconds)
    (240/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.745077539 seconds)
    (241/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.352873749 seconds)
    (242/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.471298812 seconds)
    (243/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.399671661 seconds)
    (244/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.405318579 seconds)
    (245/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.32148315 seconds)
    (246/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.844824687 seconds)
    (247/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.922408153 seconds)
    (248/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.341896796 seconds)
    (249/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.393305424 seconds)
    (250/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.61475838 seconds)
    (251/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.758985023 seconds)
    (252/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.149674457 seconds)
    (253/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.320398912 seconds)
    (254/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.157738141 seconds)
    (255/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.215008098 seconds)
    (256/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.452186387 seconds)
    (257/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.764314998 seconds)
    (258/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.154663879 seconds)
    (259/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.44558311 seconds)
    (260/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.358064658 seconds)
    (261/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.432013988 seconds)
    (262/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.119168702 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.476961864 seconds)
    (264/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.718752885 seconds)
    (265/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.15454354 seconds)
    (266/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.320726226 seconds)
    (267/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.100203115 seconds)
    (268/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.194752002 seconds)
    (269/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.324787601 seconds)
    (270/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.388762259 seconds)
    (271/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.321800068 seconds)
    (272/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.366421483 seconds)
    (273/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.024198736 seconds)
    (274/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.336112822 seconds)
    (275/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.609289155 seconds)
    (276/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.608297619 seconds)
    (277/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.891958601 seconds)
    (278/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.276703554 seconds)
    (279/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.438867413 seconds)
    (280/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.879514445 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.388528032 seconds)
    (282/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.959246995 seconds)
    (283/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.364559121 seconds)
    (284/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.365504936 seconds)
    (285/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.369521639 seconds)
    (286/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.43003021 seconds)
  done (took 949.249110562 seconds)
done (took 950.489825378 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.377340813 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.372996336 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.355778242 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.377504322 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.465956826 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.379327222 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.365241302 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.357254779 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.404761508 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.403967708 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.354388773 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.378295309 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.35718499 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.356102081 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.355378687 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.370898321 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.468534641 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.356419403 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.374179815 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.366240709 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.372808337 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.355152454 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.405161008 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.378667124 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.360473939 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.359808625 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.358193116 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.376227361 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.46823057 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.359787475 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.358708316 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.367088643 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.467896464 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.355631731 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.352445066 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.375260687 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.368576419 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.368101954 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.36305905 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.388429608 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.908165156 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.375965943 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.359037974 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.359048052 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.358205233 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.362248442 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.358466864 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.364750824 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.371074377 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.373819243 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.896167717 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.391956686 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.362275909 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.360348172 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.369235502 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.357255761 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.363500078 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.375765192 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.378029054 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.377986701 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.459727026 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.366158722 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.361615361 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.377294074 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.366358157 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.940223539 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.37457388 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.363151396 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.911731728 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.383329263 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.937084322 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.386968853 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.36230106 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.373148008 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.391039297 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.4730226 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.354962853 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.359825112 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.367118729 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.358145591 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.372284078 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.373648407 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.36517549 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.361557672 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.375257257 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.384588598 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.371129923 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.361915653 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.371443136 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.379272312 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.368462285 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.372264555 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.365316634 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.357382446 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.370426023 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.365960729 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.364995211 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.363484941 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.366387886 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.37201566 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.912258365 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.399028973 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.358936241 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.358564195 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.360392691 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.374392701 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.913546409 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.381154689 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.384009328 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.409066792 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.364735496 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.463005337 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.365707071 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.381774658 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.372088127 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.365577979 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.357308021 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.465887163 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.907278288 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.396379495 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.366721756 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.360800043 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.38101555 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.365028073 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.357984688 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.479392304 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.364492539 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.378248916 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.484466273 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.374228693 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.395853504 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.361824458 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.366837547 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.391452291 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.380497884 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.39419981 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.367384859 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.379888558 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.379828257 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.361886395 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.375671625 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.375546524 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.365504696 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.370504312 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.358229549 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.392197524 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.377165936 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.378603251 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.386867107 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.483735742 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.363846735 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.464931667 seconds)
done (took 231.172126648 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.429349959 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.359424118 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.451999888 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.360915566 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.468920727 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.468478015 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.358806737 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.358124378 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.359211609 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.738562175 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.359080652 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.359911245 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.362119802 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.359159256 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.456189422 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.361293332 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.359581341 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.701572532 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.362477252 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.437497547 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.36268753 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.361567852 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.36206157 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.742144552 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.361018432 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.360754202 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.433493497 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.362746433 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.708614457 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.358010655 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.364093033 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.710550118 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.452032983 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.380868576 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.372958937 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.369239187 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.466324845 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.382559125 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.445618259 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.452548704 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.450212795 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.401768217 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.358937285 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.360376636 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.365643929 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.364189215 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.36173713 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.390766088 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.364919003 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.361777166 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.704686043 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.374910124 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.363222231 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.361578587 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.362084941 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.39333307 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.362352795 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.364905519 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.462368403 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.368438013 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.428233151 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.746430587 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.743738362 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.365478865 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.35763686 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.36358498 seconds)
  done (took 150.452314788 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.431753287 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.442336279 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.482654044 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.384341015 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.415423796 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.48723761 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.384133427 seconds)
  done (took 11.296052218 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.371273759 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.366437865 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.415910637 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.415858807 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.367266583 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.543859116 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.370155698 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.378351493 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.364430907 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.417156977 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.368397952 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.368081126 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.373840074 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.359590794 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.415442356 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.379178269 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.48119995 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.366517414 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.367971725 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.517756652 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.36615325 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.374002046 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.418631788 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.37908322 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.369813592 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.373240304 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.18978994 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.368447058 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.365859447 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.368974158 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.364659204 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.441818089 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.368775151 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.363372849 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.365353117 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.482120949 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.369405105 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.365494306 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.36884599 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.365869621 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.369440478 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.368320286 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.369540381 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.365956808 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.368326765 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.391349894 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.369208565 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.368689901 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.368857351 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.368901651 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.418347499 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.370460938 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.367010612 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.36634115 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.422858482 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.375903121 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.369587468 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.367581763 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.369574101 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.366452175 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.520582275 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.418707003 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.370067034 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.417660163 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.370746102 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.370257339 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.370036323 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.369907124 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.423859613 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.371121107 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.417517114 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.368216449 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.549259889 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.394304505 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.373219761 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.372368206 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.374285454 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.370263081 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.372614273 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.376925164 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.368112906 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.371476742 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.37650354 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.369614053 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.368806227 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.536178105 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.478401414 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.36956892 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.383449665 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.37837691 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.370721183 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.424579381 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.371183874 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.368426881 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.423293085 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.486979765 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.425057511 seconds)
  done (took 157.056068684 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.375935722 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.379944168 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.375744252 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.393788273 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.39285172 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.371947128 seconds)
  done (took 9.56529986 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.374251111 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.37428457 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.372403022 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.371431335 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.372621159 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.373309179 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.371785709 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.373962304 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.377237858 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.371646868 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.37410337 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.374107599 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.375052535 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.374062312 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.373341796 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.372779548 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.373894833 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.371305593 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.372856762 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.373771268 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.468202747 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.375491147 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.373608186 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.375440426 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.381040119 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.374315989 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.381793166 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.373955523 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.374369086 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.382297596 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.397870141 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.376490491 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.37499876 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.382197212 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.379975757 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.376408017 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.37903275 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.377338251 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.372692166 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.375872205 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.377557221 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.375482522 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.374214984 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.377741221 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.37632567 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.381731197 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.382889333 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.383692286 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.376950511 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.378036192 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.378317196 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.375804474 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.376947235 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.378111899 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.378870717 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.398559308 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.383298746 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.37763938 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.376101824 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.378365768 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.379058246 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.377556569 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.378725994 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.381596568 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.383636798 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.37910656 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.378423605 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.38240401 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.377895186 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.376573338 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.378888382 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.375572405 seconds)
  done (took 101.534322569 seconds)
done (took 431.169711664 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.533638858 seconds)
  done (took 7.814771777 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.779783843 seconds)
  done (took 8.06225252 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.538227649 seconds)
  done (took 24.827449452 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.427691707 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.463712138 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.404591038 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.374494021 seconds)
  done (took 26.952247073 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.980212448 seconds)
  done (took 8.260925804 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.369689318 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.403951558 seconds)
  done (took 14.056317783 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.551503863 seconds)
  done (took 7.832568419 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.561989222 seconds)
  done (took 7.851832605 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.374325398 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.392345053 seconds)
  done (took 14.061846519 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.349964949 seconds)
  done (took 7.632276935 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.915309342 seconds)
  done (took 12.19823214 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.374858551 seconds)
  done (took 7.658401102 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.435136012 seconds)
  done (took 7.715986901 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.249031537 seconds)
  done (took 10.529383885 seconds)
done (took 166.736089195 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.370681207 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.373190863 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.373283428 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.372587166 seconds)
  done (took 26.770681034 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.412424915 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.411870011 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.413890662 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.423537015 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.416413375 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.413038539 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.404746711 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.40680486 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.424787347 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.416403688 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.414358982 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.41563892 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.413593874 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.406172082 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.415958149 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.416310974 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.424612871 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.416039357 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.406692134 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.416249162 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.381531254 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.424876225 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.418108817 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.381063204 seconds)
  done (took 35.177556526 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.90392691 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.45277651 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.534681517 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.433225448 seconds)
  done (took 7.606742294 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.431747618 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.434024192 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.45082945 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.487558678 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.515223394 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.444221505 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.408624973 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.404109797 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.389853661 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.435339561 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.510221044 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.452120738 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.526131483 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.382617883 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.600269028 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.381177293 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.381957565 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.434107163 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.485166904 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.500795733 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.382576321 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.434439441 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.441610446 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.452145334 seconds)
  done (took 36.051009231 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.382573977 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.399911252 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.380942016 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.380736438 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.388482648 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.381687411 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.382504969 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.383650305 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.381723181 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.388702095 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.381468755 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.39476044 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.381900669 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.38212894 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.387856161 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.383772134 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.388166891 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.381964092 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.38277131 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.389913455 seconds)
  done (took 28.993389267 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.376398679 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.23002509 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.727880636 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.633617817 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.376438463 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.380376446 seconds)
  done (took 28.011212632 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.46050526 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.636014179 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.386097168 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.786906611 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.879502342 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.402774235 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.387289025 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.654659224 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.026541473 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.016244057 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.449448794 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.459433593 seconds)
  done (took 20.835443568 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.392576615 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.381607698 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.393161084 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.400648767 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.44462496 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.408928983 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.391595661 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.383570941 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.448489974 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.468978664 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.408199587 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.446329461 seconds)
  done (took 38.257336829 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466596501 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.43709757 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.488369749 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.384241645 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.129515713 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.592547536 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.413137283 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.180627083 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.407414607 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.657748467 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380508765 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471909849 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.6386075 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385416568 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.384603007 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.466632539 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.629208055 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913162948 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389510242 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.823371965 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405422912 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.379615004 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.886749123 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.649740204 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.615775647 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.364695583 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.75408346 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.16053923 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.704727308 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.398094481 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392724678 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382098352 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656473933 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.525794618 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481020956 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.622055781 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40979297 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.938483637 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.40183762 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.770275281 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386379022 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.39142325 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392513401 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382194726 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.322330721 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.39725522 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.671650366 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.394232602 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.094496945 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.383562053 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.681295684 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484779411 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.386823894 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.957145089 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.402918584 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.393230158 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.387149107 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.481165797 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97574383 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.134053175 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.394190938 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.322367813 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.382938017 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.775096928 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.079045919 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.415809714 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.387379798 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.388317958 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319161577 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.769943339 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.402654952 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.528737987 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.409877534 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.029722012 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.204331434 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.417924643 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.322447556 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988041752 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.388908261 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.327078102 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.613627473 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.160489781 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.325369945 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.33337609 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.319703479 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.160424993 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397573269 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 5.024504581 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408065436 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.190575338 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.653197591 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423746773 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40998537 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.610576206 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.264116656 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387033889 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.385569961 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.528840689 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408085634 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.188629506 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.346771428 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.390347778 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.643719834 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.600576143 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.389491151 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.477038416 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.351751075 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390677061 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.404482766 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.386791498 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.657606927 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.041694355 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.423175836 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.158600556 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407284857 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.165668805 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.202610219 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407349718 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.392934261 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.391596026 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676648 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.2284166 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.305898159 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45526312 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.391283115 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.389199305 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.804060081 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.243788302 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.271737256 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.614475516 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.424724477 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.40257662 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.390052398 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.356536222 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.390002189 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402203265 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.169914116 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.612193225 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38854177 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684475891 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.32318951 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.527883796 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.40642678 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.612790313 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.73261395 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.414001547 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.65105889 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404499428 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.397574757 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.406406017 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408526548 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488857731 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411636621 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.388850027 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.652681521 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.394731946 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.392670078 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.759524146 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.174338689 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394741418 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.39593142 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392110661 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.024028239 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381035404 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.399586178 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.461728684 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.404810455 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45841245 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.396702045 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.643524108 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.875509589 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416515928 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.399473249 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.389631446 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.633201541 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.401870617 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.703200884 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.47088098 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.902886109 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.043035316 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424486139 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.327330337 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.10622262 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.087138739 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393636955 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.594346583 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.392512508 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.629730143 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.430596033 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.404250923 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.02571747 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414564856 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.707662786 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.399433311 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.405203999 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.729446035 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41524996 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.810809176 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.191769475 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.407272027 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.40846083 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537696763 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.407215199 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.328910161 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.910987711 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.399336382 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.394500955 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.172100422 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428377285 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.740791012 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.842448136 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.683216302 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398993609 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.692412385 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.804157002 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.430884923 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.402104472 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.399974028 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396950494 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.423029809 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421918106 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.404750545 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.71232309 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.844365568 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963908288 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.203985998 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.998968318 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.79744064 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.433521914 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.292721463 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.155921283 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.351625426 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.057310118 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.651797198 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.175484261 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.373503232 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.346178651 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.757324201 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.264295958 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.692804448 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.626702052 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.77747734 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.42194924 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.69657624 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.613352161 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431536534 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.402128394 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.327322553 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.693920376 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.542282592 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.412479647 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.481227079 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.61045198 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.405329016 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.178028608 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.400697497 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.216698523 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.251064912 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.032492767 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.792435215 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.397748997 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.418581751 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.793029842 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.431931488 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.927288227 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074433733 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.432730286 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.912730397 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.360721495 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.644961077 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.433013859 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.393765677 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.143048633 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.423076503 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.656900141 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.695042628 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335976456 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.413236901 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989959126 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.27478596 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.40356058 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.868534042 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215989803 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.405082558 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.724932887 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.416191293 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.833178246 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420075549 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.333645091 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.334052865 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.093738808 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.402984961 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372287605 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937620537 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.411431883 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408396404 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.400157255 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268982821 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.658441753 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.414240963 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.050542483 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.649461437 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.399682172 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446435668 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.404881411 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.409274539 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.382835726 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.299658418 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.637525346 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.476803735 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.647434514 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.458511811 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.306982284 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.439888392 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.615979368 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.30464851 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.410739388 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.660998525 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.135442421 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.421227497 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.167133201 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447313176 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.403060427 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.42519863 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.413947514 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425508001 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493367626 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.647569497 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.435794693 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.413541189 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.218969007 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412365299 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.408672035 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.415281054 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497298387 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.227901098 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.842312529 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.195398906 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.059453595 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.22222854 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.078556307 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.723985492 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.406665759 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410321065 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.337306869 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.553867175 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.933655287 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676956031 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.524137709 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.416443179 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429137111 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.420946558 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.410674176 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.61847094 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678328724 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.28150332 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404207278 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.071174656 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.300129795 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.415986037 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.616153152 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971643736 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992371119 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.70153235 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.405092549 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.178063499 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.700072133 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.49691173 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.405462034 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.999398419 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.40902792 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.208215481 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.4115309 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406079171 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.574284009 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.702736483 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.526051463 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.417124623 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.565929002 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.178801969 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.922934219 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.667030906 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.007289672 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.655554915 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.086120004 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.222911859 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.670217885 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476385097 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.654002256 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.537680626 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.553501445 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.408612729 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.290773178 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.408662497 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.259324664 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.117189353 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.41734619 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.052597008 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.690768691 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.41127209 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.413803096 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431545232 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.417813865 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.631826652 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.189123531 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.635674508 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.418552375 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.415171202 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.400551807 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.06942067 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.724827742 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.344605308 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.412598433 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.662567502 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.667251775 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.433644778 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.861115953 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.121530639 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994453844 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.384355239 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430414142 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.419228458 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.197304778 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.05551602 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.907254458 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950810141 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.070973445 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.413134392 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682476519 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.415244088 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.420542607 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.687125468 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.413103493 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.412036546 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.659125901 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.070764898 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.279255186 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.432867556 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.97302527 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.349134079 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.638740782 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.453645783 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.371001209 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.420065921 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.859613794 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.430669613 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.532130261 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.421560818 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.422727093 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409482859 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.165767314 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.694236349 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.416453948 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.407376102 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.405009505 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.428804516 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.504921683 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.530029748 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418809721 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.083771927 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.762557961 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.669234124 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.421491319 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.391625614 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.416313376 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413275043 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.138174547 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.391117491 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.432271981 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001285036 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.421171789 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.422570248 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.415638052 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.629063731 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.625102318 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.419318579 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.665435098 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.438786802 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.446404004 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.318322289 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.19029927 seconds)
  done (took 1721.070735229 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.468199623 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.457067514 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.447168362 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.42608488 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.481446149 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.430089288 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.518215279 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.441874383 seconds)
  done (took 52.988484701 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.415332161 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.575143067 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.445910099 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.426969114 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.422157267 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.417377756 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.909963028 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.432403141 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.422562258 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.423793847 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.413151918 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.425492078 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.103073637 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.42397082 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.419788032 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.419988916 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.422713159 seconds)
  done (took 66.850483092 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.917032778 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.448925217 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.818814872 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.448378619 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.435388818 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.433631676 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.953769617 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.438379165 seconds)
  done (took 55.215858486 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.425436567 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.425800962 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.425796097 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.426450564 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.426756457 seconds)
  done (took 8.45140407 seconds)
done (took 2127.564950028 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.41806738 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.422235032 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.419484283 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.421605888 seconds)
  done (took 7.003490593 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.392759647 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.107576229 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.398782495 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.414105533 seconds)
  done (took 18.634565244 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.419723975 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.453600086 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.191356201 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.120788193 seconds)
  done (took 5.63658742 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.167133282 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.178035423 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.164299662 seconds)
  done (took 7.831754482 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.417307787 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.41896208 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.418332833 seconds)
  done (took 20.576792201 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.71967041 seconds)
  done (took 3.041991062 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.563441122 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.615153664 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.801020372 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.758463876 seconds)
  done (took 8.060949814 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.806203479 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.807316044 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.615071648 seconds)
  done (took 6.551347868 seconds)
done (took 91.534238672 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.630638305 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.440136233 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.637199406 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.643208623 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.69680728 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.633188402 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.906833012 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.605923027 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.110313142 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.096893232 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.602311922 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.708677879 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.643939814 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.44599268 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.643133847 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.821071478 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.661723761 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.684653938 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.33155241 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.422969681 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.916860233 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.240108158 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.427916957 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.264617487 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.662697651 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.58093644 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.822246464 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.821176778 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.418200205 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.847160167 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.582700591 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.418590279 seconds)
  done (took 199.694620601 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.418498276 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.417803128 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.418585209 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.432973258 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.425782296 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.419275717 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.417347926 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.438070577 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.419490747 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.425152246 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.432236191 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.418827485 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.438310052 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.437980338 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.4398463 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.439446869 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.434632535 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.418648343 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.420147653 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.427198864 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.420336715 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.431524108 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.419879514 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.439385061 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.42093301 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.439429862 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.443035303 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.421209151 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.45729054 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.419594223 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.441002407 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.438989211 seconds)
  done (took 207.058620202 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.427403814 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.420507867 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.422282143 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.449635631 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.420200625 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.422050566 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.43832072 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.420814862 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.422549538 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.421752412 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.42152963 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.420902439 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.421676663 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.45364988 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.420529769 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.420595489 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.437165749 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.422325812 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.431290864 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.421357483 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.441517625 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.431885835 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.422963439 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.422912776 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.441047798 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.441421457 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.439765277 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.422861952 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.4224264 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.4232813 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.442383041 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.44202975 seconds)
  done (took 207.057789029 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.626614818 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.429514265 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.430870879 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.382911516 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.431030367 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.430643699 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.430516608 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.622314834 seconds)
  done (took 15.112041889 seconds)
done (took 630.248507577 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.924917072 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.618107235 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.648073563 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.454029478 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.325085405 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.469950737 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.450089127 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.635266097 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.408720908 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.646031753 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.773298796 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.469642955 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.927578169 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.449250061 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.722000731 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.556951624 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.381557514 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.511285546 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.791199569 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.04290294 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.72920305 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.001132686 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.659290388 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.411350946 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.949667504 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.997366608 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.227952834 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.368566759 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.469248144 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.795910438 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.206491823 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.475167012 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.521043897 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.520255033 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.576165351 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.55780953 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.46211188 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.517480418 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.663288545 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.760347234 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.106669531 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.206346553 seconds)
  done (took 97.718396777 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.412774417 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.414909501 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.412335829 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.414196058 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.414828473 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.413783192 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.413192478 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.413296723 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.41406519 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.413044859 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.412765431 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.414345616 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.413746056 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.414858888 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.413554074 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.413871443 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.414316328 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.416094824 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.412923231 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.413762395 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.414626919 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.414432185 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.416123365 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.414176712 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.41390668 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.415979963 seconds)
  done (took 38.09901142 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.435983647 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.698378783 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.873686413 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.441934854 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.435444568 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.439700601 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.523833353 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.437321719 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.438355372 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.438830345 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.602488167 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.439629938 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.476297641 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.904101511 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.438971768 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.437785494 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.437006003 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.436346221 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.708744408 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.446713028 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.546644915 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.43798874 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.524242307 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.448097293 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.46193945 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.436952164 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.441809493 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.016633499 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.460378244 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.598988315 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.341453237 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.524216544 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.975448185 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.907371216 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.336841563 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.441158666 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.438117451 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.6022462 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.438746674 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.43754013 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.52404794 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.43809982 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.898660669 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.147332276 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.461447091 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.437788176 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.041677923 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.627993285 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.714526734 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.446591714 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.919702189 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.441315861 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.440259194 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.441166243 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.713635124 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.445439696 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.439334137 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.084628626 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.464153673 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.526031202 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.440709323 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.439298087 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.709626924 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.440591998 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.698830357 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.441942829 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.448730625 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.46019887 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.897073135 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.445346509 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.167656987 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.463188435 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.441529668 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.601368794 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.698970671 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.089122127 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.469107276 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.714727075 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.985514403 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.545235521 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.444377547 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.01285964 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.550902567 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.444621059 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.443522596 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.44172453 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.441006353 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.490358544 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.526264636 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.091312701 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.168732111 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.096946464 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.549287652 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.448727393 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.441616915 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.084628316 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.462692401 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.441736052 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.884136805 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.156963231 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.463207774 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.451321251 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.163924061 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.463155918 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.529817561 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.448759908 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.894852034 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.443209256 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.494525765 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.442435397 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.450505954 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.467243191 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.531241972 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.446369196 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.442372054 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.128184006 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.634920461 seconds)
  done (took 190.417460704 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.453977214 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.43548874 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.451817609 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.436360525 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.438133624 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.4452398 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.43765014 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.436707901 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.443059538 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.436732523 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.437607534 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.437866896 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.436953742 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.441727426 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.448312512 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.443885121 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.049590155 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.438695169 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.4392338 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.435588151 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.27263402 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.442556027 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.43761718 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.437511558 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.440372282 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.437027057 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.438923236 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.442332105 seconds)
  done (took 155.115674956 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.445503837 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.110975532 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.468520671 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.592289898 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.469246104 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.442734937 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.595336491 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.511079497 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.466209462 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.443288712 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.443164939 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.803252186 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.448559994 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.046572857 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.667887047 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.619436624 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.055596436 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.467722683 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.443727067 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.444165782 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.594716416 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.449492942 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.80302312 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.117463199 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.469825318 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.114653123 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.430329507 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.44635123 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.445282882 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.117738486 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.466916728 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.802889082 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.537431428 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.51493564 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.134590298 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.054601771 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.052444014 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.620347241 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.449349431 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.444258942 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.445591376 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.429065552 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.108858587 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.472101216 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.44841349 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.095164819 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.471080377 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.449042313 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.45274731 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.445569921 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.515627676 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.533267409 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.824988606 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.116483351 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.558160215 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.461861778 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.600103468 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.831392818 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.45322591 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.028884092 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.431230177 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.114645681 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.472879373 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.429480932 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.448246705 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.453175512 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.619696176 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.603143194 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.029368968 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.469373733 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.030877968 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.643629404 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.448461515 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.447018706 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.451442735 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.11281582 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.053408448 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.643828724 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.607192638 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.672029434 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.432765085 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.449399539 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.430592512 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.540233034 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.451362944 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.116666617 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.05064832 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.471520391 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.452588103 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.451745641 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.451169814 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.653049813 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.132010443 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.562450438 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.018747818 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.824674468 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.807829785 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.454540073 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.51651854 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.467680206 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.805937038 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.454405521 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.51527456 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.8913705 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.805540639 seconds)
  done (took 174.531281611 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.715240484 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.753593193 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.551845917 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.608484948 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.075573174 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.043930901 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.790860495 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.606141434 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.569861013 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.728442164 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.694056638 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.559939772 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.68261127 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.531831685 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.215814496 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.547739125 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.569994618 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.605807429 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.621139532 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.525747962 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.175224167 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.756365944 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.660281463 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.414249363 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.550932848 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.263462256 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.062579579 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.979936952 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.645466381 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.867357474 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.021669469 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.655306011 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.504031375 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.196796522 seconds)
  done (took 70.103435866 seconds)
done (took 727.316295462 seconds)
SAVING RESULT...
DONE!
