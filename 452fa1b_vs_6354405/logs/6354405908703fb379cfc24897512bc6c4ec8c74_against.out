cset: moving following pidspec: 27901
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.33895598 seconds)
loading group "string"... done (took 0.485499397 seconds)
loading group "linalg"... done (took 8.0431767 seconds)
loading group "parallel"... done (took 0.174033016 seconds)
loading group "find"... done (took 1.302300258 seconds)
loading group "tuple"... done (took 1.983075934 seconds)
loading group "dates"... done (took 1.341083999 seconds)
loading group "micro"... done (took 0.253930743 seconds)
loading group "io"... done (took 0.682959342 seconds)
loading group "scalar"... done (took 41.611158358 seconds)
loading group "sparse"... done (took 12.695696412 seconds)
loading group "broadcast"... done (took 1.132079363 seconds)
loading group "union"... done (took 14.185337753 seconds)
loading group "simd"... done (took 4.850903689 seconds)
loading group "random"... done (took 9.797176552 seconds)
loading group "problem"... done (took 1.991555896 seconds)
loading group "array"... done (took 22.838861463 seconds)
loading group "misc"... done (took 1.483289664 seconds)
loading group "sort"... done (took 3.646042222 seconds)
loading group "collection"... done (took 19.833760663 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.548508958 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.147997614 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.1592645 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.159421595 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.215907299 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.145971235 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.161835071 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.116694259 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.974068286 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.190885651 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.161578946 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.522447131 seconds)
done (took 5.224594966 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.259569626 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.097668202 seconds)
    (2/2) benchmarking "String"...
    done (took 0.110704432 seconds)
  done (took 0.872025512 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.081127492 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.151226485 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.097707938 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.097348044 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.082827942 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.09981141 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.082351145 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.096615586 seconds)
  done (took 1.373383911 seconds)
done (took 3.2573068 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.745928142 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.292353723 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.226681948 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.485012763 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.183414803 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.220661712 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.691087766 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.423571159 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.271319777 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100524208 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.151909254 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.414812872 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.138393645 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.667891454 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.094472594 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.129795207 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.203227631 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.552541604 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.08804022 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.113615974 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.119631624 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.144189286 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.130178928 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.095376086 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.187948557 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.100282054 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.19070154 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.112324622 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.083835937 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.294097792 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.206196838 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.695178485 seconds)
  done (took 11.256552775 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.119141933 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.14174767 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.101385927 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.159902964 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.14129493 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.087415963 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.104869883 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084037766 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.126866137 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.183090057 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.138129922 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.146503408 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.097495673 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.086256241 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.123753145 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.250770316 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.12585444 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.108297301 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.103827084 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.108621585 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.125697466 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.116572935 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.114507742 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.112676919 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168908104 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.207002333 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.114141668 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.128509453 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.098095998 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.1175815 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.1465498 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146590118 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.097841626 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.084281297 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.178163915 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.12758487 seconds)
  done (took 5.305098599 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.193286739 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.126124852 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.174928298 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.164578521 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.146982722 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.163206812 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119190458 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.254276298 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.113095656 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.182947886 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.148120414 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.116868022 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084498538 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.103694018 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.082862919 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.749577714 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.169697467 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.139442984 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.120102659 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104785144 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.092665645 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.782716317 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103774728 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.08359601 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101434705 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.067739972 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165479481 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102069365 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.216297111 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.105339589 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104080278 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137896496 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.20943834 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.117941342 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.139199371 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10006393 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.082745045 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.182238755 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.108774922 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.099567872 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.111502571 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.139022526 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.138842568 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.101625524 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.098349845 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.216271195 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.09795496 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.102010122 seconds)
    (49/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.147472936 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.000799688 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.183304014 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.09831239 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.099778273 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.346233224 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.102158158 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102566871 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.09810978 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.267642692 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.139087345 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.10183043 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.080254315 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.100307251 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099095719 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.085912121 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.41119423 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.098030182 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.035819915 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085380855 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.109904375 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100471485 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084609652 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.107549496 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.090978435 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.118192823 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.100167049 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.085583843 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.099845679 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.082925651 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.102833592 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.110517323 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.089852022 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.099574379 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.153837573 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.094246948 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.102055172 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131986632 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.101803416 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.098605049 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117591226 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101419357 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.103688 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.123564734 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103550143 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.098196992 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.093776937 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102435361 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.145516763 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.098793727 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.191676835 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.083065582 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.129663774 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.103531298 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132350435 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111756791 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085377653 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.105523539 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.081920476 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.097911035 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163265531 seconds)
    (110/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.081308977 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.098888846 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.085618119 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.100566693 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.114322301 seconds)
  done (took 24.016601809 seconds)
done (took 41.243066328 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.350351108 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.106584819 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.106396626 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.105983519 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.105654492 seconds)
  done (took 1.518571597 seconds)
done (took 2.23643196 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.287698213 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.179086735 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096393653 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.172931361 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.095729329 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.181560298 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.179006119 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.098766442 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.205272211 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.079528019 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.184206497 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080322885 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.098556033 seconds)
  done (took 2.683175247 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098155206 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.119199977 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087322288 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113854895 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.096492616 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097727525 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.112227467 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105438134 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112525529 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.104383901 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080010818 seconds)
  done (took 1.841772382 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097527321 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116026138 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085255146 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113587803 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079288627 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113264862 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.112292247 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103770137 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113465319 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.105171503 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080209495 seconds)
  done (took 1.837849617 seconds)
done (took 7.071922989 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.098488869 seconds)
  done (took 0.810833966 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.024377425 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.820986212 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.119379119 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.16042094 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.332643907 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.189439472 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.603121847 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.132949115 seconds)
  done (took 15.318221105 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.134431573 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.086828992 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.102733252 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.087645524 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.119770823 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.104952772 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.087281892 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.104568854 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.101200555 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.090256566 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.102002965 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.103577733 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.085280377 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.105065894 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.089044946 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.103845766 seconds)
  done (took 2.387427355 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.138989084 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.139362083 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.093136683 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.110377306 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.107183118 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.090605837 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.109357161 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.108117094 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.088775834 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.105733059 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.110044442 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.108745563 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.090586347 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.097870076 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.108877686 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.095443537 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.104774096 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.109675773 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.110101892 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.094997068 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.10960036 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.098800965 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.090509076 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.109258793 seconds)
  done (took 3.336920313 seconds)
done (took 22.572491562 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.166235856 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111548453 seconds)
  done (took 0.999060139 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.105115766 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.122657498 seconds)
  done (took 0.952837054 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.111401031 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096699982 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.138823299 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.118766123 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.098498295 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.082752672 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.136064738 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.098705882 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.083476531 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.098917021 seconds)
  done (took 1.791793411 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.090152052 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.116668581 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.109147084 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.121049846 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.097083116 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.103257491 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.113599332 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.090470217 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.119893531 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.100126846 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.09447058 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.118805827 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.107356452 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.119970693 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.114005435 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.092310362 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.110471518 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.105216429 seconds)
  done (took 2.654098182 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.084054751 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.104530048 seconds)
  done (took 0.915642628 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.088295976 seconds)
    (2/7) benchmarking "second"...
    done (took 0.098869146 seconds)
    (3/7) benchmarking "month"...
    done (took 0.088038297 seconds)
    (4/7) benchmarking "year"...
    done (took 0.102988424 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.099837382 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.084837282 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.099659836 seconds)
  done (took 1.389405339 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.488387165 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.137398347 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.260489992 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.104978328 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.125205078 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.329502264 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.083421502 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.10538797 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.104875043 seconds)
  done (took 2.504960858 seconds)
done (took 11.934249368 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.096401584 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.120807334 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.135008708 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.475725045 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.124222201 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.084427026 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.164072468 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.267020972 seconds)
done (took 2.200677277 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.154802222 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.332720438 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.119989328 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083019041 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.083317202 seconds)
  done (took 1.354377812 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08322197 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101675572 seconds)
  done (took 0.92120609 seconds)
done (took 3.166919251 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084323327 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.099150204 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.08050477 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.098725634 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.081299322 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.096323752 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.083320209 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.098389796 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.083238074 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.098613217 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098287479 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080648987 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097445089 seconds)
    (14/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.134939157 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082870201 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.098660788 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080201652 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.098121309 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.081268462 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098220297 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082908692 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.09626518 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.095737839 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.083331098 seconds)
  done (took 2.981182182 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.11283434 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.100042892 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.106343329 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089962562 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.103745422 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.105012005 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.089278703 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.099585869 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.105824837 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.086373649 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103822953 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.104216638 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.085863066 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.103286918 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102109821 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.087747626 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.105666342 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099469102 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086636383 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.106364432 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.105543409 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084747667 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.104186161 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105069408 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.087663768 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104558839 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.103290367 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.084527346 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106097752 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.103505009 seconds)
  done (took 3.71267141 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.088135342 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.095945398 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081118328 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.104212864 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.081047169 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.101918847 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.096500049 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.081725887 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.09824628 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.081048975 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.098728285 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.081462268 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.097742511 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082975451 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.098433647 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.10042812 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.095025232 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.097310021 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.08121372 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.097953665 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.083823904 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.096443741 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.09978453 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.080972118 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.096895199 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.080967278 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.097206402 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.081535526 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097248925 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.096712371 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.084365375 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.101069256 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.081032379 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.105073268 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.085572401 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.097341393 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.085151671 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.097621414 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.097031907 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.08120705 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.096119026 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.080739895 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.097058688 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.088650376 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.101151664 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083627641 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.096923691 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.098968856 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.082210896 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.100053264 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.080737227 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.097140691 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.084010335 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.098951863 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.101240166 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.081221674 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.097964811 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.081377867 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.099556316 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.08168602 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.096872752 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.095856325 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.082945481 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.097737449 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.098126639 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.10417658 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.081428604 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.098462996 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.100686328 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.084708741 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.100170246 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.095927134 seconds)
  done (took 7.37487313 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.086648765 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107607577 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083781597 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099274749 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09562687 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.08092054 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101773 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082345428 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100782689 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.115687603 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081861821 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.099565004 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099553219 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.086280203 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097578135 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.083385893 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.107585313 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095279419 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.082216458 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100681535 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.083882137 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101264247 seconds)
  done (took 2.819143417 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.218006173 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.107700375 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.145853392 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.124507827 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.117431769 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098814677 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.103127317 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.106886647 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088915535 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10297052 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103233318 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088922878 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.106731407 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103031521 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086581893 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.104100362 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104402547 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088119813 seconds)
  done (took 2.744259235 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.097557295 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.100754579 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.122584853 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.085368033 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.101573567 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.087225074 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106663143 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.115704619 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.102965093 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.085064895 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.111235287 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103156867 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.086964131 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101095602 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086752728 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102138269 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.102967505 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084784213 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110932854 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107595053 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.090885844 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111509319 seconds)
  done (took 2.953277079 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101761309 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103849362 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.122252363 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087892492 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.10002436 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.086269322 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.107685728 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.10090645 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.094007979 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.10328267 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100599849 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085828813 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.108303804 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100216417 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.09061589 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100378932 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.086796599 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.100654209 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102827164 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083570318 seconds)
  done (took 2.717226388 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.124532447 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101393325 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.10194248 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.218108066 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102674672 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.102630717 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12651311 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.086928873 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102389617 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129526074 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.087193408 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102554082 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127379634 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121825793 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.087348596 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125787218 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125422536 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126126068 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087118711 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102569779 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128863477 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102207376 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109293005 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102225731 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.101735001 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086017766 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102368473 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.12191515 seconds)
  done (took 3.897598421 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084607735 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100418367 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081462094 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.097950152 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.081716343 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.098068855 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.081679207 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098206564 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084300993 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096550723 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.099979132 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.084944828 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.099500755 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.083941587 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100412234 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.084074454 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102300779 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.082135926 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098007926 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098196765 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.084606726 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100537635 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.08441448 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097499386 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08255661 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.101028206 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082108916 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097294807 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099353349 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.082484263 seconds)
  done (took 3.501883157 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.094570775 seconds)
    (2/2) benchmarking "in"...
    done (took 0.108683261 seconds)
  done (took 0.958776659 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.082705154 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117842176 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082075448 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104274992 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.105956956 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084985303 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110064899 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106881434 seconds)
  done (took 1.548593411 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.103203312 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.120031744 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.090344776 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.11979681 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.116049412 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.118293268 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.163113438 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.089559608 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.107507948 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082109837 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.117976386 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.100603567 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.089962316 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101782365 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.09116876 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107185056 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.102371299 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.100935375 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.108911713 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.084128872 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103016217 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112553398 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087413394 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.097656016 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.102720594 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.095333911 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.111216505 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.10236947 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08789284 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110876305 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090676209 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094535617 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.101400941 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.089824206 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.102672998 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.098199655 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113801876 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105280124 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.094051219 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106969333 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.127956185 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.083629704 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.107795942 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106887016 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096068112 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.106572034 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.090511171 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.100515013 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098481354 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087389847 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.099673272 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.0849205 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.096157304 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109484369 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.090393907 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117239629 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.08384425 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.10579806 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.104213712 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088706541 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.108006148 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087288624 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104184551 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.10087832 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093081719 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.105571264 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108876971 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.083360377 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095941305 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.086270404 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.110297425 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124343511 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.094190221 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.106918186 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10768141 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.086435265 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105420752 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092237699 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109923898 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.110595902 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.091086149 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.123286539 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.10996354 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086221406 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.105411037 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.115501989 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.083846241 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.104859898 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.08336227 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11799682 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.100838925 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.086485631 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.099600841 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.11109406 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088073154 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.103533499 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.08258777 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109757311 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.07857094 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.106753798 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107536508 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086698036 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.111863789 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.111486626 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.095433432 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109702605 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.112621338 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085516012 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.105122416 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.082515169 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108777822 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.103348244 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092985569 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.095929517 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088873664 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.104560858 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.106625033 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.092964082 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.100260648 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.090711974 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109772535 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.109489783 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.084738695 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.098274722 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.089209914 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.106029685 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.110903702 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092985857 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100390644 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.100429142 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.083977786 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.107768745 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.090065773 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.108497829 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.113276916 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089429767 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.096803806 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.08698355 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.112245263 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.110498954 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.085852017 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.102060202 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.106456719 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.086873718 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.102073383 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.091718463 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.105270292 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.084054834 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.106473522 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.103725445 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.084458221 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111926605 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.105587118 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.084577853 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.105556682 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.095045407 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.105551032 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.107160638 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084135647 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.108170796 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106766488 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084612155 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102386108 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.084441643 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.112114073 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.088210506 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.100824685 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.098975554 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.098326917 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.099829499 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.089163139 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.101127855 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.104837274 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.091198768 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.103886436 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.085949061 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.103753192 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.133537132 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.097727715 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106986353 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.108222976 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.095551315 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.106038917 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.104719012 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.089541887 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10876692 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.091310896 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.109798486 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.108305862 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.096794872 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.105094207 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.099727052 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092754087 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110797689 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.086323117 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.105246265 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.085832246 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.107492757 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.110612095 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.091220902 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.107056759 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100009861 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086865273 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.111385497 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.105286033 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.089742276 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.102132413 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.090779773 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.10202959 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.115326595 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.092400775 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.112371328 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105991169 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.083941137 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11160461 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084218959 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.109150465 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.101199317 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.083113061 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.101900721 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.091792489 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.102260755 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.089358072 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.096196421 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110576185 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09416448 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.102379239 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.085499559 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.107099588 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111833295 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.087696699 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106391465 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.105228662 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.091702557 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117350469 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.086033415 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.106569716 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.112627862 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.090704745 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.096673088 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.108363358 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.084529386 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.103269735 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.085222104 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.101550483 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090273048 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.117932825 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.10741573 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.079314181 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.105118342 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.101094502 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.084338972 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.102009446 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.093714341 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.106886005 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.104995082 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095557192 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108945281 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.092311706 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107254407 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.106550829 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.092121328 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.108405992 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106230769 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.091431247 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.105055548 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.0862896 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.105724103 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.101885176 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.08672949 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.105233862 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.090412629 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.103207074 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09186747 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.104863593 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102926562 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.089418426 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.108162077 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088219928 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.103788286 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.102545435 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089340453 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104247515 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.086903783 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.105285643 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.101823082 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094348501 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.107043426 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095091571 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.103714387 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.099907721 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.091371151 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.106355158 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.113219318 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.09174704 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.108149722 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087855208 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.107459085 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.106336332 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095613433 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.100408642 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.09653986 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109099696 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104306493 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.09022005 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.104044078 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.08817655 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.102521389 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.105175804 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.091873974 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.10407893 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.086305093 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.109232175 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.10603844 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.086829247 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105627091 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.091659563 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.10422573 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.104542447 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.08093943 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.102722092 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085460652 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.107815165 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111097757 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.092592649 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.105847514 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.085120539 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108990678 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.10311965 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.083491642 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.118130084 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.117941473 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.090731786 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113102229 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.102433641 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.088098215 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113787154 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.080117479 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.102105638 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.086683678 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.101128706 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111185451 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.092063893 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.111712826 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.086070261 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.102107934 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.100924088 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.091698418 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.102242424 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.088499298 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.105171503 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106591147 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.089259825 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10313665 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.091396636 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.106620183 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108890233 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093851075 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.103216136 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.088979633 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.109276651 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.100228463 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.085063167 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.102427423 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.089505471 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.108640241 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.083574693 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.100734593 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.10665295 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.088150115 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.104121423 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.086338736 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.105648302 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.1109993 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086297228 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.107195945 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09519651 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.09855154 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.105948811 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.086870499 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.108198823 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.085452197 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.108097171 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106274286 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.091590307 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.110917435 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.091131476 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104347429 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103798627 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.087185453 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.106727776 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.090683054 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.109888118 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.103567082 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.091654385 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111920562 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.087186257 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.106593047 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103471985 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.087073237 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.108831223 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.091205444 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.106380957 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.117236742 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.089911348 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.105583366 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110200114 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.091247941 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.1082215 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109288129 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.087453924 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109706287 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.085608436 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.112696566 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.104354276 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.093288298 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.105254298 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.084834074 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103985412 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.086200246 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102956026 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.109810513 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.092604073 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.103962749 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.085472882 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.105931076 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.106946769 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.095799967 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112558337 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.106805392 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090415752 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.102508167 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.084614658 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110441843 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.08427385 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.106321394 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.107308456 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093915312 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.107466238 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.087738773 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.103396373 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.112775257 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093466785 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.109879625 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.103189602 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.092581853 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.11004515 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.089524635 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.105375689 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.103918641 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089431157 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.110381012 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.088728416 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.103805692 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113158636 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.091330465 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.110154057 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.088633286 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.103974883 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.104848652 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.086170832 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.111285643 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.089310343 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11096655 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.107846687 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087763243 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11470975 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.103374515 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.087729839 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.113847587 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08673951 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.112217784 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.103480653 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.088278221 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110794614 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.093360306 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.103761137 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.103625015 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.084350433 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.107447246 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.085737393 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.103398203 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115433313 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.095106122 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.106844901 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085482736 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103605878 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.103561572 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.085836826 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.103850593 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.092529244 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.10712121 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.114514136 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.086280176 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.104396862 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.085980661 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105589153 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092227408 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.108616497 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.101773616 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.085829656 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.103446394 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.090181569 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.112155934 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103794093 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.091888383 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109130725 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.090187411 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.106115437 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.114988032 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.084293261 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.10928638 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098365427 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.110134182 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105411263 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.093251595 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114042699 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.11045798 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.086268062 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.111502337 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.090315652 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.105851531 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.110643418 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.088969093 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120541832 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108373186 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.086654495 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.103667885 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.09086051 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.104725757 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.111802453 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093157093 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.110860471 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.092523699 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.107367443 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.120492382 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090103628 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111488576 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.107586985 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.090636742 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.104784769 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088069374 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.104642894 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.085648721 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.107179666 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.110685931 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093328952 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.117897436 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.1049875 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097130806 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.113546822 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.110864485 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.084323603 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.105171839 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.087390714 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.104158836 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.092581745 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.103902106 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.104625277 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.085533342 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.104720503 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.087862892 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110953253 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.107848509 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.094053391 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.106140027 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.08156354 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.10741838 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.108605367 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087787662 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.102348654 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.092460584 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.111313629 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.093382649 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.118005159 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.107063581 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.089064688 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.108104897 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087526365 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.10394405 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.112663182 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086441748 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.108007746 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.086493542 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.106745025 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.111805051 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091470472 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.117723136 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.107898815 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.090148167 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.118768114 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.095325396 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.102919159 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.103618599 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.093649056 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.107070702 seconds)
  done (took 60.495132765 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.152195719 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093108927 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101717837 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082315808 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119874271 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105975608 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083471573 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106202834 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105680579 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090715861 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.101408487 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083371859 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114868983 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.130585458 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11972535 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.11093054 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082691643 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106345515 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083625609 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105557366 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11705449 seconds)
  done (took 3.006407692 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.111444104 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.120379106 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.120182723 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.124618126 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112336121 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.100832564 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.11916577 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120735368 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.124119513 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11416167 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.105183355 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120026284 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.115566644 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.11521797 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096928067 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117614734 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.12463754 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.113446598 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.101333745 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.118640451 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.11753308 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.119128392 seconds)
  done (took 3.341613687 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.09629064 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.109533124 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.09085776 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.100417974 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.086595672 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.100803784 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.115399375 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.084845177 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.110713432 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.086325154 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.10472858 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.086296979 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.110889502 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.101270802 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.086870085 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.10374494 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.158974902 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.110791741 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.09186744 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.107807082 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.084860975 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.108679899 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.104171262 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.08691102 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.105457504 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.099337942 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.108216335 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.088241687 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.106796839 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.104881023 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.091787386 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.104628376 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.088731039 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.10703843 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.086524264 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.105918991 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.106957346 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.090461316 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.104240951 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.088133422 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.107390399 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.08569088 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.110608956 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.107975031 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.088186831 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.104176514 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.088707715 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.107108647 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.082722685 seconds)
  done (took 5.710743779 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.121702094 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159968693 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.09013971 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.130381649 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.125817256 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.121449123 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.111609626 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.149628598 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.085953928 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.109933045 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.129463427 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.125342142 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.092388589 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.116763782 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.115025422 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.091364518 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.112720366 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.106444463 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.115973969 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087861828 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.116202738 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.114100801 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.104697715 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.12276864 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.114918077 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.109953036 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.087754624 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.115499502 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.122370437 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.116554008 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.09639931 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.117805304 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.126388935 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.113159989 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.088987024 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.113060737 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.126891433 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.111506913 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.094161903 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.105499513 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.095164185 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.11686773 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.115681082 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.128115342 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.092531477 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.113649571 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.111224914 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.085636427 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.122471199 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.11378666 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.120759865 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.124388197 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.09720118 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.11113336 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.116967146 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.126068378 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.092203036 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.110323028 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.095988938 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.121365997 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.106018177 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.114815921 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.105850984 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.112220515 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.119881968 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.124619322 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.09415261 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.115133907 seconds)
  done (took 8.598410649 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119335693 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.118384342 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128659481 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.130770888 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.118532479 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.099988267 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.118912863 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.119600291 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.119537701 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105790377 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118061801 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.166801097 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.113901131 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.123465832 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.099157582 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.118753573 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.118613225 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119249467 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099714436 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118995218 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.119031835 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.129634724 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.118467222 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.129287038 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129203235 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.09415934 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.119260288 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119180525 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.130503318 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.098797842 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.130048165 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.11902602 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.118888263 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.130197689 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.129601857 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.099634314 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110724376 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118195604 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.099542389 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.118845539 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.112278859 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.129753159 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.099992128 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.112311372 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119435781 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119484313 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.12990427 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.110763155 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.122048228 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.125751515 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.120012544 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.130260673 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118651767 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099687189 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.129460368 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.136120751 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129670509 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.129920912 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120450983 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.129340371 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.130546 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.1349424 seconds)
  done (took 8.253445178 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.139875219 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104038323 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.12994861 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.103367364 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085915166 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.116288672 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105528809 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.086226264 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.121242182 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.121920767 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.124510576 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09650309 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.119283976 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.125612475 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.116584901 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11930608 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096257838 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.116128572 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.123357995 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.116597682 seconds)
  done (took 3.092279961 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.097028311 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.129495021 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.109179822 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.097436189 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.113454388 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.116312251 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.090995587 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112516839 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108465584 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091627524 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.121252869 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.121863903 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089622897 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.116286104 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.12079266 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11593946 seconds)
  done (took 2.577366042 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.101334177 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.13034666 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.128149414 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.109629056 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.086500319 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.105677902 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.090666147 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.105437169 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.10444988 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.104159544 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.109440102 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.114350661 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.091503894 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.106785665 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.085206234 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.115135222 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.105413997 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086696807 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.111617916 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.129405815 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.100314172 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.108371003 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.113279728 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.090144888 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.109712581 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.113645478 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.089616849 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.107383394 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.08815083 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.111048586 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.109047834 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.097532544 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.104943963 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.107010649 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.087094969 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.106569347 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.090566986 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.111370397 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.115177739 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.091841306 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.107324089 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.10825063 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.092447046 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.111588696 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.084284274 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.112318762 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.104820391 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.095731451 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.107448836 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.109257827 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.091433442 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.112054789 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.090116871 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.120457748 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.112927564 seconds)
  done (took 6.563280369 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103866973 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.114017582 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083971052 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.107502489 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.112166222 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.091028517 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.113113062 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.0914041 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110260991 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.107135875 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091321852 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.113528788 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111502319 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.09328198 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111568222 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092960576 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.103576642 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110483722 seconds)
  done (took 2.695426864 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.094541716 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109306844 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09669638 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.109688318 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.109012846 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092108496 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104983094 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.087906664 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107470577 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.090056879 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108805712 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.111781055 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087285771 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.111991231 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089334417 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109158603 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.111948697 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087549302 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.108361684 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084618377 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111774608 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108240511 seconds)
  done (took 3.064407813 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.125046985 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.129708791 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.116705499 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.220962945 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.107313314 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.136485791 seconds)
  done (took 1.669759952 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114176096 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.147684472 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110359305 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092688136 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123864834 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117768101 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09510298 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114321384 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126752735 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128652028 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114235527 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106442101 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124773208 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125515557 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122621513 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122255835 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095257722 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115809293 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109939178 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134416692 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095351105 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124982683 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116111341 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114045503 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09479346 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125672745 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125699566 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128872599 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115094068 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127116974 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102435454 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115334828 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126680525 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127733759 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093426612 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127064849 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115368521 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135476243 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121775443 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125746196 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.093030491 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122892474 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126243831 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121759193 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106025225 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11611363 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121670754 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114495818 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095225542 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142634548 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122715797 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126387147 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122971297 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125632929 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105801555 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.162159358 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127649312 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106223289 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122535081 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12872402 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126172935 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122425196 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125612802 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127485337 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102542466 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126625269 seconds)
  done (took 8.683643261 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130197085 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110891581 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115182978 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129037057 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125526166 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094835942 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114751472 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11493537 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094811963 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110673779 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.159748239 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11578128 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127066204 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125149178 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095158972 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114939723 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116005227 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12560837 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090910595 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142679504 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115847706 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127004383 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126969285 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125318671 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127562398 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102211845 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115561331 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115128347 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095688714 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114553091 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12207234 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115754924 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125696291 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090990411 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125903259 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115099214 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095272313 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120319045 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115988503 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122457866 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126593 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134867107 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095112251 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1150581 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128754595 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1155939 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095593666 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11164923 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11506832 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091358962 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12766837 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128686556 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127922529 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126819359 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116021179 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096716602 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115713714 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116268814 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095245445 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122114944 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126599696 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115210181 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144028371 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115596127 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095356366 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127069464 seconds)
  done (took 8.538549977 seconds)
done (took 162.234328207 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.104661058 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.143756131 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.123986409 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.152446396 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.110766922 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.123227756 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.143485714 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.123930032 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.089374334 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.110216636 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.089305153 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.112093051 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.155434481 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.109506828 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.110426964 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.091611442 seconds)
  done (took 2.734910873 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.206526625 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.276352225 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.127547988 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.087986627 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.114772348 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.08897343 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.109442825 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.117272986 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089910958 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.109087849 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.089443031 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.110219522 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.089595499 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.110781752 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109772634 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088756561 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.109796411 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.089407895 seconds)
  done (took 2.975854573 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.118044412 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.159431343 seconds)
  done (took 1.128901363 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.123804453 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.188294372 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.30459907 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.159098033 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.144946424 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.13324366 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.16027569 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.115182869 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.231518461 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.129410854 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.107792691 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.121600988 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.14658689 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.120476223 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.09837787 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.122591393 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.147430864 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.118427717 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.098468934 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.121011914 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.143038463 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.089750537 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.119955672 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.118212343 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.194977195 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.124617787 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.089024121 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.110134533 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.100990517 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.118692138 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.116660482 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.130895116 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.102882504 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.193662791 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.106559692 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.189501049 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.122399117 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.095511703 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.119360101 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.115576856 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.103257605 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.124715428 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.130059069 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.121860024 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.091484999 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.122834868 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.088728425 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.109859955 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.118149674 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.101964403 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.118589964 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.116932394 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.164952349 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.123308997 seconds)
  done (took 7.8787086 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.82938145 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156173452 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116752492 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.934133261 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120007592 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.130575929 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.825758245 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.138481046 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.244396788 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.811518413 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.136075767 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.125568228 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.240711316 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.245540967 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.008786455 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.329762521 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.701650188 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.130348073 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.144953501 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.162554525 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122150925 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.142872272 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.113726017 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.460240052 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.097253302 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.115654485 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.121346833 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103064255 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.191110291 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.094145618 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.118526168 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.189711984 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.282893931 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.197310835 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119232619 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.114138473 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092143349 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.20277623 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.279708766 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.230719913 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.185491216 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091154448 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.114445941 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125355 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.113946282 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110640768 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.175344557 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.208215423 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.183911192 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.118265362 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.123928584 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101572968 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12415575 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.176545015 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.125651097 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.336567504 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.334438374 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.114835872 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123184975 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.108194414 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.280187204 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128687617 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.241627258 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.143195735 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.229148888 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092879399 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.794958309 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.179134859 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.114038513 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122043381 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.101113331 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11929289 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123328801 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.174945192 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.417099109 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128905622 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.096856847 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114023368 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.238457314 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.093712959 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113652208 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.172844489 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120286803 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122765629 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.105938361 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.125064524 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.180654051 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.268161977 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126426998 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.101744009 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.118451616 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12757687 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.098213647 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.242869405 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.237829039 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.17457139 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.241929596 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.103501327 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.198777262 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.178454321 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124768831 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.183809859 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121765934 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129490959 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103886287 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.230922508 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.173205508 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.107550237 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.119532854 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120933542 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.155158143 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.096076303 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.122083768 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.181712158 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.494920027 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.179624602 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.111586128 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.118269504 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101663701 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.193437099 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101054712 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.278255468 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125051696 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.18023474 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122155836 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.112093918 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.101327917 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.196306669 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10501983 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122838563 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125019798 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122685587 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.245215547 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.232482157 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127495438 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230700963 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.18840109 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121626079 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.205877231 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101151552 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.199304524 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.103002592 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124216382 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119885142 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.785181029 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.105742194 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121114228 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.119779239 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.19572748 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093401125 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.128541932 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.115216865 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.090827392 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.80912914 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.11855502 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.105155186 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.129059858 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12322952 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122778083 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.099358667 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.119202116 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.173990278 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245433155 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.124269515 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122136707 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.09394632 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.192838912 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.09876629 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.116391128 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.11590714 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.094297162 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123767441 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.097460583 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128701333 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.199417787 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.172468376 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.236917466 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.569324161 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093693796 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.115771403 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244117319 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115286637 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.300960863 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100195583 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.243307151 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.195428537 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.104061868 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.329677359 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.197244766 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.195585695 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.097002529 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.205561304 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090871878 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120564768 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.196541148 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.09350381 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122059537 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.17248847 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.129250305 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.126940132 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.971590244 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093445951 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.259135442 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.090107571 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.20326678 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.09807134 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125903899 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.311308942 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114972244 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.109814538 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.198711681 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096506979 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.116153613 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.8819437 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.093982635 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.126425678 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.12272593 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.235368092 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.174083272 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123613698 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100274326 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.123964977 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.175070466 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.241161827 seconds)
  done (took 45.899836294 seconds)
done (took 61.463632465 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.283543954 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.215086126 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.258380101 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169271064 seconds)
  done (took 1.878904417 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.181647616 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.151353458 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.149012979 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.088088767 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.157205015 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.10854202 seconds)
  done (took 1.713625385 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.371079482 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.279795078 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.242192333 seconds)
  done (took 1.773433962 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.254779378 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.273987439 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.333249761 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.424558348 seconds)
  done (took 2.266585376 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.24077689 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.145838439 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.130750114 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.150287513 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.201152383 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.266355309 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.161430883 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.215351439 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.142470759 seconds)
  done (took 2.576411178 seconds)
done (took 11.091796847 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.158818015 seconds)
    (2/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.268670925 seconds)
    (3/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.235518793 seconds)
    (4/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.244382393 seconds)
    (5/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.247481591 seconds)
    (6/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.2206935 seconds)
    (7/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.240449229 seconds)
    (8/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.10981527 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.117423242 seconds)
    (10/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.185547256 seconds)
    (11/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.264490799 seconds)
    (12/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.133492083 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.103723444 seconds)
    (14/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.138594434 seconds)
    (15/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.200502985 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.121214974 seconds)
    (17/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.104175331 seconds)
    (18/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.118634911 seconds)
    (19/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.207906465 seconds)
    (20/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.15049645 seconds)
    (21/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.097945864 seconds)
    (22/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.207100982 seconds)
    (23/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.125278817 seconds)
    (24/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.212328614 seconds)
    (25/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.19382134 seconds)
    (26/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.149570421 seconds)
    (27/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.126404153 seconds)
    (28/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.182507817 seconds)
    (29/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.175348374 seconds)
    (30/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.118439145 seconds)
    (31/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.18668861 seconds)
    (32/286) benchmarking ("sort", Float32, true)...
    done (took 0.243495441 seconds)
    (33/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.123982232 seconds)
    (34/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.144663442 seconds)
    (35/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.189769208 seconds)
    (36/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.097884206 seconds)
    (37/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.070306246 seconds)
    (38/286) benchmarking ("sort", Int64, true)...
    done (took 0.261521254 seconds)
    (39/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.090498505 seconds)
    (40/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.192628541 seconds)
    (41/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.122737968 seconds)
    (42/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.09023933 seconds)
    (43/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.131025351 seconds)
    (44/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.186653878 seconds)
    (45/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.174518814 seconds)
    (46/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.111170584 seconds)
    (47/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.120146984 seconds)
    (48/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.101122653 seconds)
    (49/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.091696682 seconds)
    (50/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.094885675 seconds)
    (51/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.176507175 seconds)
    (52/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.120923165 seconds)
    (53/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.128546346 seconds)
    (54/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.113972013 seconds)
    (55/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.092638212 seconds)
    (56/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.089483407 seconds)
    (57/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.17237135 seconds)
    (58/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.122110397 seconds)
    (59/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.255496874 seconds)
    (60/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.091613554 seconds)
    (61/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.114571085 seconds)
    (62/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.097846862 seconds)
    (63/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.111910257 seconds)
    (64/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.097750634 seconds)
    (65/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.13988581 seconds)
    (66/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.188988205 seconds)
    (67/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.06945295 seconds)
    (68/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.193486951 seconds)
    (69/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.125566626 seconds)
    (70/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.068925574 seconds)
    (71/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.119481692 seconds)
    (72/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.069422454 seconds)
    (73/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.139296815 seconds)
    (74/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.127144647 seconds)
    (75/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.150333345 seconds)
    (76/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.142684923 seconds)
    (77/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.125216231 seconds)
    (78/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.185513409 seconds)
    (79/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.127459426 seconds)
    (80/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.090051209 seconds)
    (81/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.125634881 seconds)
    (82/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.069925487 seconds)
    (83/286) benchmarking ("sort", BigInt, true)...
    done (took 0.270548962 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.11632077 seconds)
    (85/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.112416412 seconds)
    (86/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.190531236 seconds)
    (87/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.111961775 seconds)
    (88/286) benchmarking ("sort", Int64, false)...
    done (took 0.112395827 seconds)
    (89/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.160304118 seconds)
    (90/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.099577857 seconds)
    (91/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.124966362 seconds)
    (92/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.136958845 seconds)
    (93/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.119128838 seconds)
    (94/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.118925965 seconds)
    (95/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.125949867 seconds)
    (96/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.176689204 seconds)
    (97/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.22550906 seconds)
    (98/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.096037777 seconds)
    (99/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.093168012 seconds)
    (100/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.068657643 seconds)
    (101/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.140528972 seconds)
    (102/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.122688442 seconds)
    (103/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.15311569 seconds)
    (104/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.186378426 seconds)
    (105/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.18826135 seconds)
    (106/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.096020673 seconds)
    (107/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.112594744 seconds)
    (108/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.090582842 seconds)
    (109/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.136865627 seconds)
    (110/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.095015704 seconds)
    (111/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.116522293 seconds)
    (112/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.095831365 seconds)
    (113/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.073404811 seconds)
    (114/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.09501142 seconds)
    (115/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.105785368 seconds)
    (116/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.121296989 seconds)
    (117/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.14039767 seconds)
    (118/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.071005202 seconds)
    (119/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.18327246 seconds)
    (120/286) benchmarking ("sort", Int8, false)...
    done (took 0.201764971 seconds)
    (121/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.159392945 seconds)
    (122/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.096696745 seconds)
    (123/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.176962291 seconds)
    (124/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.187114945 seconds)
    (125/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.123716944 seconds)
    (126/286) benchmarking ("sort", Bool, false)...
    done (took 0.216153555 seconds)
    (127/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.099867163 seconds)
    (128/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.120820652 seconds)
    (129/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.10013719 seconds)
    (130/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.093591167 seconds)
    (131/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.096538925 seconds)
    (132/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.094649104 seconds)
    (133/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.161569892 seconds)
    (134/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.117974311 seconds)
    (135/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.14039276 seconds)
    (136/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.09813236 seconds)
    (137/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.117420161 seconds)
    (138/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.175673307 seconds)
    (139/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.092950993 seconds)
    (140/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.095247088 seconds)
    (141/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.072313629 seconds)
    (142/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.153316274 seconds)
    (143/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.102380387 seconds)
    (144/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.119507267 seconds)
    (145/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.1462286 seconds)
    (146/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.099036189 seconds)
    (147/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.071107555 seconds)
    (148/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.188627615 seconds)
    (149/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.112693614 seconds)
    (150/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.070699252 seconds)
    (151/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.156277589 seconds)
    (152/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.07000473 seconds)
    (153/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.174554029 seconds)
    (154/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.125940908 seconds)
    (155/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.102453672 seconds)
    (156/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.111560928 seconds)
    (157/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.093259783 seconds)
    (158/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.120337479 seconds)
    (159/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.069952316 seconds)
    (160/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.091433185 seconds)
    (161/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.147989934 seconds)
    (162/286) benchmarking ("sort", BigInt, false)...
    done (took 0.253155158 seconds)
    (163/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.100148801 seconds)
    (164/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.093363479 seconds)
    (165/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.170471161 seconds)
    (166/286) benchmarking ("sort", Int8, true)...
    done (took 0.235068863 seconds)
    (167/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.077709531 seconds)
    (168/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.123142161 seconds)
    (169/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.098795294 seconds)
    (170/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.094295533 seconds)
    (171/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.119381113 seconds)
    (172/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.193910056 seconds)
    (173/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.137396326 seconds)
    (174/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.093430073 seconds)
    (175/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.093069034 seconds)
    (176/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.300399093 seconds)
    (177/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.113277099 seconds)
    (178/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.077879854 seconds)
    (179/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.08005107 seconds)
    (180/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.113333029 seconds)
    (181/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.123427996 seconds)
    (182/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.078879586 seconds)
    (183/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.112392883 seconds)
    (184/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.096197514 seconds)
    (185/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.072618962 seconds)
    (186/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.092358018 seconds)
    (187/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.070288047 seconds)
    (188/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.124131819 seconds)
    (189/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.099973801 seconds)
    (190/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.139601607 seconds)
    (191/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.116474963 seconds)
    (192/286) benchmarking ("sort", Bool, true)...
    done (took 0.237628013 seconds)
    (193/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.069026422 seconds)
    (194/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.112591999 seconds)
    (195/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.070033454 seconds)
    (196/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.113702612 seconds)
    (197/286) benchmarking ("sort", Float64, false)...
    done (took 0.182526966 seconds)
    (198/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.068683593 seconds)
    (199/286) benchmarking ("sort", Float64, true)...
    done (took 0.243820099 seconds)
    (200/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.11318827 seconds)
    (201/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.070060786 seconds)
    (202/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.128555326 seconds)
    (203/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.099333926 seconds)
    (204/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.121630301 seconds)
    (205/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.079152152 seconds)
    (206/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.113205117 seconds)
    (207/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.095692722 seconds)
    (208/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.136846031 seconds)
    (209/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.072311214 seconds)
    (210/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.101850713 seconds)
    (211/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.08920137 seconds)
    (212/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.114240009 seconds)
    (213/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.151999021 seconds)
    (214/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.092750631 seconds)
    (215/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.091201159 seconds)
    (216/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.11842377 seconds)
    (217/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.071933042 seconds)
    (218/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.09410474 seconds)
    (219/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.088604477 seconds)
    (220/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.13881208 seconds)
    (221/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.154890969 seconds)
    (222/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.07124296 seconds)
    (223/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.248497356 seconds)
    (224/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.11515381 seconds)
    (225/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.088668354 seconds)
    (226/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.139473947 seconds)
    (227/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.096115908 seconds)
    (228/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.12014605 seconds)
    (229/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.115305282 seconds)
    (230/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.097446215 seconds)
    (231/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.118635462 seconds)
    (232/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.094845816 seconds)
    (233/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.101689257 seconds)
    (234/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.102114054 seconds)
    (235/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.11363782 seconds)
    (236/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.089639965 seconds)
    (237/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.129122557 seconds)
    (238/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.113121043 seconds)
    (239/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.069000669 seconds)
    (240/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.119400385 seconds)
    (241/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.069786755 seconds)
    (242/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.081509569 seconds)
    (243/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.091910032 seconds)
    (244/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.144130034 seconds)
    (245/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.102410317 seconds)
    (246/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.10437322 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.122548022 seconds)
    (248/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.072680975 seconds)
    (249/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.095859208 seconds)
    (250/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.090726684 seconds)
    (251/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.092852411 seconds)
    (252/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.069139904 seconds)
    (253/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.184447766 seconds)
    (254/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.140053555 seconds)
    (255/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.089329816 seconds)
    (256/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.094472111 seconds)
    (257/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.117290207 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.121752631 seconds)
    (259/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.097955314 seconds)
    (260/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.122363478 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.111646244 seconds)
    (262/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.092412706 seconds)
    (263/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.07345322 seconds)
    (264/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.092507889 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.089181255 seconds)
    (266/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.115632753 seconds)
    (267/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.141531068 seconds)
    (268/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.099017396 seconds)
    (269/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.119562139 seconds)
    (270/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.090589341 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.119155113 seconds)
    (272/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.090142315 seconds)
    (273/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.114922971 seconds)
    (274/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.070704513 seconds)
    (275/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.095328582 seconds)
    (276/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.089848059 seconds)
    (277/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.119372209 seconds)
    (278/286) benchmarking ("sort", Float32, false)...
    done (took 0.186591939 seconds)
    (279/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.089611415 seconds)
    (280/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.114089409 seconds)
    (281/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.096773417 seconds)
    (282/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.113752823 seconds)
    (283/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.193008568 seconds)
    (284/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.104345953 seconds)
    (285/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.116669627 seconds)
    (286/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.069811258 seconds)
  done (took 37.475844447 seconds)
done (took 38.360759621 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.106748532 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.155267141 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.124212159 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.119896144 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.127139357 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.116920205 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.098147335 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.126330849 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.104068992 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.129154052 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.125243789 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.071317971 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.124386184 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.100945427 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.123814275 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.146541007 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.104553788 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.120401822 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.122615708 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.089762009 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.122392117 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.089644762 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.115216877 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.071609594 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.125118644 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.098314863 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.119822084 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.12335979 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.089929146 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.113128645 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.096408773 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.122097936 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.09056263 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.126706018 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.119670986 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.099233988 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.124781204 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.100292743 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.115120385 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.113493452 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.098595626 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.113056497 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.096299743 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.121460455 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.096596201 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.118845228 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.124107933 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.103792662 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.145420366 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.118546309 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.098674002 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.124790329 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.09970479 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.121558204 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.094095672 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.121545276 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.119743661 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.12243137 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.122755879 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11884493 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.098207448 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.122412998 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.095264643 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.122253191 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.122610862 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.101591395 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.126061523 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.096673384 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.123490287 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.119482373 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.090670265 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.123169376 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.093956995 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.113532955 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.099935154 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.125796413 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.089900643 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.119385912 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.120426729 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.095797066 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.113797926 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092765168 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.115662811 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.097468939 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116135633 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.072633166 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.118155249 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.097043048 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.112382619 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.123900903 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.096784983 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.120885751 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.093009139 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.126380129 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.091353944 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.118593815 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.114413685 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.090090031 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.116845652 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.094031369 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.114014822 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093006592 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.123769432 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.092353946 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.11981118 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.128111571 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.090902564 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.120139872 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.089467046 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.11405657 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.130235233 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.102056604 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.113787266 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095676359 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.1131915 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.09822566 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.113119071 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.089857073 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.112363973 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.113554693 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.096836502 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.114441571 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092977662 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.121762804 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.105604385 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.114615657 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.094402368 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.116340675 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.113653842 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.096629514 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.113947871 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.090509662 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.11595804 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.080252698 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117520308 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.090244787 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.122157048 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093709175 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.123303103 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.116243859 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.100170576 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.118796521 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.09714238 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.119434162 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.089751054 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.099781456 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096310448 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.117859633 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.092991544 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.114037915 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.115908343 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.090642497 seconds)
done (took 17.608147639 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.091495163 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.189178777 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.159248884 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.149928265 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.136331426 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.091623303 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.12564682 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.147064486 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.093015455 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.147708177 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.138025148 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.135236936 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.130015029 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.113205439 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.115200477 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.095181613 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.117058272 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.10717316 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.15172654 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.137190217 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.169689516 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.114742599 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.127761949 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.138940034 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.12404573 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.142007029 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.091815818 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.118725298 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.094574508 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.131839692 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.135244853 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.09477758 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.115930441 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.113741317 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.131160194 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.123572424 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.090744046 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.122258888 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.091306952 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.115252456 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.14617792 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.136893907 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.095887735 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.121972621 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.095415453 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.124267795 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.093528222 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.12407356 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.125523039 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.095476817 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.129259743 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.161323094 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.118580282 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.108157532 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.113597265 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.126529834 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.108283729 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.122291699 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.092246735 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.123051729 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.115710656 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.09407945 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.130774005 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.145661003 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.095317246 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.131251574 seconds)
  done (took 8.967643079 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.108440265 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.145550018 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.13387515 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.110112958 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.114905748 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.092342036 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.115888385 seconds)
  done (took 1.764975849 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.092109087 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.141927016 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.135749228 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.142088701 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.139551736 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.118561266 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.121471902 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.116270215 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.112052263 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.116817174 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.141213208 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.133432424 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.118128048 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.124381394 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.120147691 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.115807326 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.143889851 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.091398126 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119926407 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.119564479 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120010586 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136200363 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.094657535 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.117155618 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112275655 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.115554068 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.165224362 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097579821 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114733684 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.119997145 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090961979 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.156270659 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.135760886 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.099728038 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116326331 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.111854049 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.134736836 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114831421 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.108968362 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.122652287 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.133755346 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.092565516 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.118364063 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.089916855 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.121246665 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.105871209 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.121424908 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.093700375 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.120092345 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.141007107 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.093276589 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.134684999 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.093729951 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.120973436 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.118144642 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096037232 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.12672517 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.093892984 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.141332777 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114328736 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.112801928 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.136454101 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.135077848 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.112303528 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.119682064 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.110363509 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.134130386 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.119975674 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094237584 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.121458098 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.111848217 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.114915035 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.09539084 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.12983228 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119472243 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.120139429 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.145617494 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.12180331 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.103261488 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.119840044 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.093340353 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.117388299 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.144385362 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097180066 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117608171 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.097371232 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.120522698 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.091265921 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.114902964 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.119934727 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.091161502 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.118199796 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.096670782 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.117595215 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.095727472 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.137694147 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.117550821 seconds)
  done (took 12.339692014 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.093222069 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.118066862 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.098854874 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.118851688 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.093925879 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.117933198 seconds)
  done (took 1.596488056 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.120727999 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.120918062 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.133011918 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.10001852 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.160212271 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.136831132 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.111740981 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.126897452 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.136804321 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.106940602 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.136278438 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.135837096 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.143965708 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.100036675 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.135928942 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.123609856 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.112257546 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.129074719 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.131221265 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100247226 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.140549292 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.124577397 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.100381255 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.139402382 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.121737717 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.099701424 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.130076986 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.131718324 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.106122872 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.127374188 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.12425636 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.097334207 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.125311213 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.127251524 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.113272844 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.125643639 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124374066 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.0981624 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.129467257 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.121822285 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.113642058 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125744425 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.131197954 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.098655478 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.128313989 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.125044977 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.09868368 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.128375867 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.137749149 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.098819814 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.123128755 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.100343355 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.121638888 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.123013903 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.10012012 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.127176592 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.122273834 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.112935999 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.124986784 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.125555748 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.096988123 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.12304527 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.127435247 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.097882715 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.133605515 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.122701058 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.100815076 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124871678 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125442576 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.100552573 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.12390591 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.121702208 seconds)
  done (took 9.637694582 seconds)
done (took 35.248762428 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.703996422 seconds)
  done (took 1.658928484 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.841499169 seconds)
  done (took 1.799501598 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.405473789 seconds)
  done (took 18.394357267 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.503170794 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.585398211 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.022252535 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179984474 seconds)
  done (took 3.248421046 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.956268342 seconds)
  done (took 1.933453332 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.287121531 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.26169213 seconds)
  done (took 1.515125647 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.7854663 seconds)
  done (took 1.756857892 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.510864154 seconds)
  done (took 2.481246205 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.330307349 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.191873735 seconds)
  done (took 1.504695191 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.566326996 seconds)
  done (took 1.542933231 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.221423812 seconds)
  done (took 11.197889997 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.276804945 seconds)
  done (took 1.262777417 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.309892455 seconds)
  done (took 1.287438686 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.523776951 seconds)
  done (took 4.501355775 seconds)
done (took 55.046681952 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.102448803 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.130886437 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.105774745 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.127518423 seconds)
  done (took 1.437191091 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.108686701 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.125417626 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.108774322 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.124045249 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.134649094 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.101341676 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.126874382 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.131910404 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.099249977 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.126081974 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.099828179 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.123989084 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.128631001 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.10291873 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.122425442 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.129223341 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.104955198 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.124505219 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.129760628 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.101379192 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.12257171 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.102372434 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.129163389 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.123651512 seconds)
  done (took 3.812020194 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.104661168 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.123372413 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.100272913 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.122669544 seconds)
  done (took 1.430321354 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.104152785 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.135887188 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.110973181 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.129052638 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.136023144 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.110480149 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.121258468 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.096684202 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.124385802 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.129551194 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.095327021 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.144753936 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.136536485 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.104381128 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.131393913 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.092984894 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.121256259 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.136502208 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.104806193 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.130120754 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.098240988 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.128355645 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.119771063 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.113708295 seconds)
  done (took 3.839164687 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.179456464 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.131191282 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.143685623 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.099225369 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.165954036 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.145175452 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.092806114 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.145129211 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.117635545 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.108556028 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.122636669 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.165221888 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.107651422 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.117140775 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.117312941 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.09196996 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.131582231 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.106566942 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.121007281 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.131217361 seconds)
  done (took 3.529942603 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.102094153 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.121382258 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.091758629 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.120707362 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.104034394 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.125561172 seconds)
  done (took 1.651309093 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.101247707 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.119419978 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.097515233 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.120785908 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.098889097 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.117544546 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.09256095 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.118952311 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.118123889 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.092702515 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.120917334 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.092982018 seconds)
  done (took 2.278014346 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.516208875 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.12240701 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.124770374 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.092380814 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.127503165 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.118054608 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.109343292 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.121807417 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.146864198 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.092406521 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.118351839 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.095147875 seconds)
  done (took 2.776951548 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234672272 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129894362 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.289641576 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.363326093 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203154241 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170912482 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.285323037 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1689823 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.207874873 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161663778 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232658048 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18424756 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158726305 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2101101 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143851973 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.147447834 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197711163 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.273276255 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159457503 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.245413333 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17351857 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170919751 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186138503 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155465816 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143800814 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177743284 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.099905499 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133471994 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190427148 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206134854 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195444975 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166780359 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160926501 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.459610586 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264329918 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199765409 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.289324978 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138488518 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.173547124 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.173488275 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265146595 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143514528 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211098273 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165474917 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135043572 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20867965 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.345360102 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.184188365 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.150162823 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147407818 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203221808 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226650613 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.201352701 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142079117 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.332163029 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156300173 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.166298921 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198818956 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215091641 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233594674 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198138523 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.123897388 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195368959 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225473058 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192062839 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.161736241 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.186800082 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154660845 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17852494 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.224205144 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18085332 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174956717 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.209183167 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118737591 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171813619 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200871204 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174163246 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265240023 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190092801 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.124945266 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172531004 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154573998 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112007714 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.200088216 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128172605 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220158561 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145273418 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.16756405 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21612587 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161818216 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163295554 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217068387 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179574753 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151215146 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.086630721 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159768885 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.158807803 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177158781 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14221005 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161978956 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156147657 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.136079733 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175035979 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.128801832 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190669135 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.093931167 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.359341202 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187884732 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.130048312 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167940851 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154184168 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.154007907 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187704225 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202898237 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145255557 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138276698 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216232469 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212536595 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.119685049 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.205843821 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.207381612 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.147633147 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154033887 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207810639 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244017386 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144725775 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205990527 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15287417 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139555242 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.109467507 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215893652 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161397518 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.164837636 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114133217 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.215654611 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207512186 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.128634713 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142512951 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202814568 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137775097 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13604007 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150696754 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126533516 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.139010219 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.145915444 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.152007341 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180934967 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183418422 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159117921 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169444702 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149670913 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244192429 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146184301 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.153029663 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124571364 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.125232636 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.228938993 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206728996 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135591884 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207999859 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.173314656 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234444788 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17401127 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139397947 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180428891 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10811173 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.125626159 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200321467 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.193459859 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164082825 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.19942518 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23188477 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.187272789 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.188327106 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171177628 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207155006 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.145469192 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153450426 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.141577574 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165177934 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161138758 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.127646913 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.117006362 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.13795023 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153612234 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147713618 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14013982 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20196046 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177728462 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.223260557 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164096138 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155648435 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188031312 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.1338017 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177669129 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.405728097 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153393835 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.201484969 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224952467 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192617856 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145194692 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208647603 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.124684709 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129599157 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.122135159 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.197263919 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11348011 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139725503 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167166894 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188955868 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.357529781 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177366765 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243586272 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18357986 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196534708 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.126277431 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.172573839 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183116351 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183997535 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.182467533 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143508403 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.125656885 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183114975 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156415074 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240550488 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172405169 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179611632 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228991313 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.153415885 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110072286 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152893729 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174944465 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159309015 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.205178773 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12358009 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141420715 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.34426518 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.108161277 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16764367 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21341695 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166349488 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183294576 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.154202074 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191670175 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130960463 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167902287 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162749184 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168228259 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.111224889 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.333767209 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224868055 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122305596 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.343382767 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187753882 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135636865 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.318204003 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208811527 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.363706807 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14123702 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161283165 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165792192 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167456424 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.32045591 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182191838 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163949994 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218883631 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159322006 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.113757135 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142652577 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154504358 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157935296 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.109931728 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.15191715 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.209687168 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.113589947 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215250512 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151639334 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160870916 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176891356 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.12901454 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.148466855 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155965061 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2475134 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190772803 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194156877 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.153392691 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.18079436 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236713686 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104035777 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135710908 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.138159864 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180824301 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141367641 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198383542 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.220382778 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207704514 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21494093 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176036454 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115374568 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.124704636 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163710099 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175377717 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238532324 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150202816 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.126530264 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231185743 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.112774931 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135288902 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167131369 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.321690047 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122437544 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217982737 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.083778415 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.29109591 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12971603 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13741579 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167860495 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191018144 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.141657601 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.155959595 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198879417 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129649383 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16890244 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154977031 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.225023998 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218523956 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234653781 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188077566 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.136769689 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163217953 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.319901436 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217608491 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165462378 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.112998136 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191748793 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22747758 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.198275614 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.148575497 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174294454 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174436969 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16348009 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222093612 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114109902 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235931571 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111364422 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229530262 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159157881 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149339102 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180216841 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.220575114 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117357371 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215273915 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19153983 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139524395 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110786662 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16580355 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210294387 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153743898 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.103733085 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210894383 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.102168356 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22665322 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243327111 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14010723 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159818145 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150038897 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14187161 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160209898 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165470229 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142157822 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.142344962 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227047115 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.113075167 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218115394 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21070126 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176894644 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.344263775 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146967386 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.712666663 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.108282988 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228567476 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150588993 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18412604 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154666517 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17879951 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164747054 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172029747 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203242334 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163949578 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.236049274 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230244642 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.185122197 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136645703 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165529457 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152252728 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.149368575 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130873326 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199688493 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163990438 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.123624353 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.212899024 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162255074 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.111437646 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144673843 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232688618 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126397398 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213681679 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183148418 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115590195 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205109992 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196625207 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13850464 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.188301222 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190728075 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146270935 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1536776 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.143314011 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.157618508 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272797727 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.101361803 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216331687 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193110258 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165135478 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173499413 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.153026712 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199019873 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161547578 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220352366 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149257131 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.162472116 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161983926 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117542567 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.134551263 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160299335 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173157988 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.156959184 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168148342 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.170437665 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200691536 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.128470633 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149804164 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296641832 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179599664 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246749381 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.111763241 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139115278 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165113951 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149904634 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.184104931 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186083646 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.141010657 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1406308 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.140255279 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.135436494 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.140821437 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162189191 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203469506 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.320662546 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238637303 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.142596388 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.284795679 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116727338 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160844968 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.118834363 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.110974647 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156587905 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151903731 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157576692 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.227528654 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271539305 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.125523803 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.138729794 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155587548 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.129909553 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114124277 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170308765 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166280951 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212860171 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119619942 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.111204954 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16227016 seconds)
  done (took 86.870446709 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.180162343 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.138435417 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.154858909 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.207885555 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.183982278 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.298038101 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.214748806 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.263011312 seconds)
  done (took 2.721444297 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.097261228 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.157384131 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.161877095 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.140108944 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.095398396 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.122723031 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.391687559 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.135845034 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.095623751 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.154844384 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.152350718 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.122191754 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.648548873 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.123368849 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.123526766 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.159835766 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.120399771 seconds)
  done (took 4.075388998 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.166934979 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.499310639 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.977723007 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.198617056 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.163055843 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.120643914 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.719936782 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.123347518 seconds)
  done (took 12.052827679 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.127346218 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.149042622 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.167290559 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.140184231 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.153910756 seconds)
  done (took 1.824010864 seconds)
done (took 129.270281743 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.10138059 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.132117364 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.10341878 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.133949176 seconds)
  done (took 1.543684405 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.099734929 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.073638579 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.103988163 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.077035133 seconds)
  done (took 1.439161455 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.197433498 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.174539818 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.401772191 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.074724697 seconds)
  done (took 1.592327683 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.119943269 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.136864191 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.136612587 seconds)
  done (took 1.487089021 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.111210186 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.133291841 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.106322177 seconds)
  done (took 1.433532079 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.110895282 seconds)
  done (took 1.201659024 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.114718842 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.144844353 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.116272034 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.143131105 seconds)
  done (took 1.609608936 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.102118116 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.131134786 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.115924773 seconds)
  done (took 1.440544008 seconds)
done (took 13.203038828 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11051213 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.429358965 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.42167892 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11368096 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.730924616 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.412397618 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.026930432 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.150671564 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.174417218 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124982435 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115059377 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.705428929 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.082142344 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.352986284 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.069989316 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.468074198 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.678182993 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.124068688 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.096264541 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124846535 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.011101183 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.123125331 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.125022346 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09595518 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.705849966 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.429057822 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098755603 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.46853286 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096323155 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.133717276 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383770616 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125672346 seconds)
  done (took 17.39018208 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.101440758 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.184764521 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.134688398 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.099153748 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.131896258 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.099156635 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.12748241 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.125827908 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.189552321 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.098401586 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.146708969 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.096085945 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.130045957 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.127353554 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.11903439 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.124579392 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125163319 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.096536527 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123894323 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097578008 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.144076599 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096420607 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.125820707 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.123914996 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.098016442 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.139578045 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.12622607 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.096253659 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.124692493 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.105828215 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127220293 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098780697 seconds)
  done (took 4.980534175 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.14944228 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.194404224 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.136659416 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.1592567 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.178312723 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098739711 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.205651642 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.151490481 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.192490536 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12605577 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.116321054 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.125088947 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.160259738 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.099726456 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.146626758 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09702883 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.126325916 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.124153758 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.096732175 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.125734951 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.116944812 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.123546161 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12548203 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.096524356 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.126470056 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.14032364 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.099700505 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.1248004 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097809415 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.133033182 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128187013 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.099264243 seconds)
  done (took 5.323083167 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.099803816 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.12991204 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.114082845 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.142037061 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.127637154 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.100265265 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.129242705 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.099644347 seconds)
  done (took 2.04209249 seconds)
done (took 30.828184512 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.114223763 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.131408068 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.111342678 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.138371606 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.134169947 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.110128583 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.123663458 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.10858724 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.138528537 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.105130093 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.141348652 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.124027439 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.098235555 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.123862879 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.110702318 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.130409608 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.137809963 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.10737185 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.140562878 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.110325513 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.126137936 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.136419847 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.107080369 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.139177475 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.111690022 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.139738107 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.14139642 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.103565688 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.12641265 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.098903406 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.129968107 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.110174658 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.128080886 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.140150723 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.102189435 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.129891208 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.098626654 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.129705096 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.138992655 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.108612286 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.131709796 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.108865891 seconds)
  done (took 6.215210387 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.113786757 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.146650588 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.110111511 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.113595254 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.090884335 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083708921 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.142588299 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.082465133 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.11296607 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.113904242 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.105160587 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.080286763 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.109229214 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.075427929 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078936017 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.107426378 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.082274574 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.077960428 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.106846333 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.079729667 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.110712882 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.075108346 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081855665 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.108822962 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.077572628 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.111179299 seconds)
  done (took 3.687506437 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.104310445 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.145184035 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.117132798 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.17930339 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161093093 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.133889075 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.108535813 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.145143673 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.113592776 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.124914899 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.128514758 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.12591737 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.1423011 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.104795833 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.128845041 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.140991306 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.111909174 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.126663693 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.106337165 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.145342914 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.141418967 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.107866841 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.144935147 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.136438779 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.0961582 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.127411011 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.103391579 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.138903446 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.104468557 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.134926316 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.132098847 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.101200808 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.127379784 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.13707548 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.102387017 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.126760823 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.116853065 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.140263205 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.135271104 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.097528697 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.132664256 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.099076151 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.147412534 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.165805946 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.097556707 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.1326548 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.100097831 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.136721152 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.126209069 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115276837 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.134649644 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.097003862 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.128312072 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.126008534 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.098076551 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.140722637 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.098240011 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.127968519 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.10628487 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.130754192 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.137398923 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.100744289 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.142804695 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.097037533 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.133691814 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.125890268 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.09672924 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.123491941 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.11960317 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131406725 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.16741872 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.096903061 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.127095005 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.106544042 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.133212045 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131947037 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.096640305 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.14289349 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.106121063 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.129139489 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.138054079 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.099996688 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.128902907 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.115087405 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.128115427 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.126998609 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.09852896 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.132585571 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.100241141 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.126794475 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.11097797 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.12458838 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.128721966 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110620299 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.125453502 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.09815044 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.132113245 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.131211735 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.09576437 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139731967 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.102606609 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.126565208 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.136682022 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.097830835 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.127894276 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.107468817 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.13021597 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.097203862 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.130150052 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.132619042 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.097083857 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.129022001 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.099772905 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.127644053 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.13528567 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.103856167 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.131617264 seconds)
  done (took 15.449258247 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.237828891 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.22493453 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.195317619 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.305863827 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.139094959 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.152491938 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.22297498 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.162740821 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.097421436 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.16582665 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.175865027 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.189413344 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.17580214 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.188261178 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.17853461 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.1259795 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.116182581 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.172407414 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.254549039 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.271922509 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.146742196 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.134481607 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.166357604 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.165697426 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.110751813 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.13698077 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.145880165 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.109313962 seconds)
  done (took 5.986015438 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.114288176 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.159115054 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.131787592 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.119689967 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.154800376 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.127366861 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.101165771 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.128531746 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.109616589 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.140237492 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.125939955 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.103027467 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.133792321 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.135468584 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.098784798 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.136548377 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.107293337 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.128168563 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.128711958 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.102217934 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.13668555 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.106211473 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.129668906 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.096686036 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.135982739 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.12605254 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.091770219 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.149267336 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.1271636 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.119720121 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.12453142 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.105857592 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.14079277 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.127798724 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.097507937 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.128666259 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.099626832 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.129159108 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.099518008 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.124337244 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.125470114 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.08134117 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.096553392 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.142223637 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.133013212 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.083930732 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.134624583 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.104070006 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.126790558 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.12464044 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.100362715 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.130341099 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.100067281 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.135271457 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.099923141 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.127057515 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.100607936 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.117742892 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.104579561 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.128321987 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.087817759 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.12578573 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.131136993 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.09226011 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.136049713 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.103197726 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.125994295 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.099729962 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.13066646 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.133028827 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.099894149 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.134137167 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.095885838 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.130567283 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.100733149 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.132054375 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.09983951 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.126032871 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.125944071 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.097495139 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.107165847 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.097339802 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.077145137 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.129388752 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.125421562 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.096218479 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.12895613 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.104367509 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.143701479 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.128458613 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.106819891 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.128044634 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.096547165 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.129881678 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.086521457 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.130151471 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.144418329 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.117550806 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.127342056 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.125021411 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.11341769 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.129884095 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.096467372 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.108262664 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.106225673 seconds)
  done (took 13.503094478 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.136444676 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.158523382 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.129333879 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.115844457 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.160993594 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.162345528 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.104864572 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.134792544 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.128451376 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.117358827 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.128085271 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.107519136 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.12804558 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.112820653 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.162087515 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.136925584 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.099506041 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.142785448 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.131621994 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.174450859 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.117073353 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.146332924 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.11663827 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.127075585 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.132949416 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.115262777 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.165607382 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.141701459 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.111419212 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.146668745 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.112033387 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.164198524 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.147713459 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.101837209 seconds)
  done (took 5.65344181 seconds)
done (took 51.593118686 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.215026957 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.423232605 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.194276744 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.032546792 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.234591952 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.23098537 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.207448543 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.204235617 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.355750977 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.195752326 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.444339606 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.775412993 seconds)
done (took 58.632896557 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.21212536 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.351189851 seconds)
    (2/2) benchmarking "String"...
    done (took 1.492317189 seconds)
  done (took 3.96413735 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.749939149 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.145104103 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.457318415 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.221376106 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.198749301 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.487192788 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.917063987 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.594537692 seconds)
  done (took 28.141923391 seconds)
done (took 42.192394751 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.211855798 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.26740082 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.243317867 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.185012412 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.315945281 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.225958989 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.620041705 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.246028177 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.22882138 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.181842821 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.204245417 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.214016024 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.21878046 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.592797911 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.201357978 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.205882324 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.297313903 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.764635032 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.605892215 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.202197146 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.243173053 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.266106906 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.218861851 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.218979717 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.2177802 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.205780651 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.203801525 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.203719245 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.831881696 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.20513927 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.227554941 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.777427777 seconds)
  done (took 191.175431462 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.203117892 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.391961258 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.45502625 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.254656754 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.647519921 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.404227853 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.355414543 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.829460293 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.223516786 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.222396113 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.437575636 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.202513187 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.496842716 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.169865826 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.233606891 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.286256874 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.560820346 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.512777355 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.237916645 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.362430375 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.212453237 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.335930667 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.257418555 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.409823842 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.242006138 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.26437434 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.217078071 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.209705954 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.394291956 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.501352253 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.230387265 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.26075937 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.831880932 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.058148521 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.21664723 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.216852878 seconds)
  done (took 150.472747112 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.204654801 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.202901573 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.203169826 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.239418479 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.204060038 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.793270359 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.797320236 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.718937579 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.512920107 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.596951945 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.516896921 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.205439432 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.301880974 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.217776342 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.206597106 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.221237663 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.246977827 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.207997996 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.206141167 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.794678019 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.221547419 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.315385098 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.386373428 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.22189817 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.239534914 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.598080247 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.204603943 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.240228704 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.540307943 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.254834469 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.20449858 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.615972123 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.203882463 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.323276404 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.205326819 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.241080913 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.205283337 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.490895795 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.203872048 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.205506057 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.208488909 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.907418455 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.209819719 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.791872768 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.208851219 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.193138334 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.209172936 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.206052237 seconds)
    (49/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.207737508 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.445296089 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.947814518 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.226058182 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.204108068 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.208241725 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.204602596 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.205250287 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.238593772 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.372459342 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.302682503 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.220216429 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.205989756 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.207949569 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.237879298 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.205861739 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.35293042 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.206751347 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.586146087 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.281183156 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.310277795 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.775439634 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.206828814 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.302483573 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.323024536 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.202094883 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.204550422 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.203937095 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.205061057 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.315248107 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.204238902 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.601262172 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.37511248 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.220108226 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.552277428 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.302761743 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.202939405 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.624256152 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.206719748 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.205555325 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.014026426 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.304115414 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.203155699 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.20503151 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.205711391 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.205760149 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.604157091 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.77655653 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.480578774 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.207948993 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.348988522 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.209366331 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.624956332 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.777403036 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.897782148 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.20892951 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.319068814 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.377391679 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.222618805 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.205276785 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.581419859 seconds)
    (110/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.209013265 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.205256606 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.206152246 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.267627952 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.601895138 seconds)
  done (took 366.870176444 seconds)
done (took 709.64557397 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.834996165 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.826783867 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.938877943 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.820681113 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.783538239 seconds)
  done (took 10.332140153 seconds)
done (took 11.46136314 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.398765689 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.398636289 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.269119279 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.402183406 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.241352555 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.4200558 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.378018766 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.230006577 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.309928564 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.286883154 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.309935739 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.263484642 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.241425753 seconds)
  done (took 18.278591679 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.538822191 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.528946969 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.273158018 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.533441664 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.248588426 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.512680817 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.411211028 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.433069469 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.423833104 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.23709597 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.221682251 seconds)
  done (took 16.490720918 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.540513861 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.535294693 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.276476693 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.542533709 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.250719715 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.536996118 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.438248074 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.430831483 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.427583238 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.240867458 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.223100333 seconds)
  done (took 16.572720086 seconds)
done (took 52.473621047 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.218210159 seconds)
  done (took 2.348773723 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.254610647 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.41576421 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.237354519 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.22373183 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.218375918 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.221251303 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.224205308 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.21737019 seconds)
  done (took 11.143339622 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.215445896 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.214440401 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.215913945 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.215267829 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.218523435 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.219218588 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.216414929 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.220834479 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.215265199 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.217532922 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.21629698 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.21848077 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.215487346 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.217766447 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.218971414 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.217797081 seconds)
  done (took 20.60951467 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.218154225 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.216192575 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.214474122 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.21711184 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.219345808 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.21653412 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.217608496 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.216799963 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.216821728 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.216582271 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.216778014 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.215585317 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.218962846 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.217356547 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.216224844 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.221060309 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.216872204 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.216718581 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.223099612 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.217490892 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.216723442 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.217662382 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.218351632 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.219097994 seconds)
  done (took 30.354854307 seconds)
done (took 65.589897356 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.821362975 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.77879941 seconds)
  done (took 6.730828745 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.277015453 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.282431104 seconds)
  done (took 3.693155659 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.21977848 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.220125398 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.221451904 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.221418728 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.220531108 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.220382572 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.220003484 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.219983136 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.220005693 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.221840256 seconds)
  done (took 13.337516069 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.219919803 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.221861998 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.218418272 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.22283866 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.222630017 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.218217591 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.221934443 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.220696426 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.221690149 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.220130568 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.223401154 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.218366318 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.221817996 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.219092441 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.222787214 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.22146421 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.219831999 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.218753284 seconds)
  done (took 23.107818385 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.221769521 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.243930481 seconds)
  done (took 3.600312669 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.350189841 seconds)
    (2/7) benchmarking "second"...
    done (took 1.260706178 seconds)
    (3/7) benchmarking "month"...
    done (took 1.330491927 seconds)
    (4/7) benchmarking "year"...
    done (took 1.317951141 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.261415378 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.241252192 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.262573723 seconds)
  done (took 10.159197075 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.221759934 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.394857309 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.505066186 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.819001763 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.22592706 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.224908608 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.09547039 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.226989391 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.226670882 seconds)
  done (took 14.075472424 seconds)
done (took 75.839970969 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.224604404 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.232299476 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.469730587 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.22488213 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.226829007 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.514728359 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.226609504 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.336260772 seconds)
done (took 37.594035152 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.219640108 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.190855825 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.969703221 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.213232095 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.283830516 seconds)
  done (took 18.793015111 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.242271047 seconds)
    (2/2) benchmarking "read"...
    done (took 1.550357557 seconds)
  done (took 4.925798028 seconds)
done (took 31.074699419 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222862553 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.2218276 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.218901586 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.222673298 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.220341688 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.217335006 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.22285827 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.221872894 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.223147842 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 1.220042762 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224601582 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.218371368 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21853798 seconds)
    (14/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.217507706 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218160345 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.218045433 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215541125 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.216051982 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.217912293 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.21703893 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.219474158 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.217827901 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.217662871 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.221739858 seconds)
  done (took 30.403472398 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.222925189 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.216500825 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.223274616 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.221759711 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.218025285 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.220603206 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.219943863 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.218154859 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.222356866 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.222279077 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.21866182 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.217036083 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.221642847 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.220118073 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223370114 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.220435706 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.221634604 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220009199 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22278259 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.216560857 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.222061522 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220161022 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.219007598 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.223108304 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.217322158 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.217075049 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.22428723 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.220646117 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.222226405 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.217622752 seconds)
  done (took 37.746691979 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.225134116 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.229202596 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.223619311 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.224488546 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.222390734 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.223055488 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.222150758 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.222125912 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.222068137 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.222354348 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.22205067 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.224183928 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.219318102 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.221316896 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.222325781 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.224125233 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.221080822 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.220430985 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.221455847 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.222450717 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.221691761 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.222679833 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.223019833 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.22264538 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.223693965 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.22190544 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.220973609 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.21978473 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.223886187 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.220400819 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.221421507 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.221180257 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.218807942 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.222089258 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.221372415 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.223203152 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.224900559 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.227904526 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.221086714 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.221267358 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.220451859 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.22319459 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.220933703 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.221341509 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.221281459 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.221878594 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.222936231 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.220993594 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.223097346 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.220809442 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.222176424 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.223262609 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.223333059 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.223234056 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.220900272 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.219857379 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.222701615 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.222753804 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.22448683 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.223937417 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.224298707 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.224058388 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.223711342 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.222196681 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.221633591 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.222261476 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.222256693 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.224895609 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.222558912 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.221580471 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.223853961 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.223166962 seconds)
  done (took 89.156285689 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.222620404 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.220338265 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.220977914 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.22176872 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.221924023 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.221771339 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.22120575 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222816038 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220343005 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.22346511 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225322533 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.223481367 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221887908 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.224907746 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.22469657 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.222089792 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.225367454 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.221495558 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.22290801 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.225861941 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.227061892 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.221911536 seconds)
  done (took 28.041382636 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.225081086 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.228389191 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.222234197 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.231141311 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.224572037 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.226505476 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.225735132 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.227967613 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226250821 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.223530381 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222441363 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225596841 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.226267361 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223740423 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.223060365 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.224596684 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.226375621 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.225770738 seconds)
  done (took 23.198361506 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.223362792 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.22575283 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.226236496 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.224281526 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.224103553 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.227803494 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.224596663 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.227459562 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.228078009 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.224167215 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.226963425 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227709627 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.226450146 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222736944 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226984452 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.223625577 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.227455748 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224491733 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.227256948 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.22476733 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.224766929 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.228073234 seconds)
  done (took 28.105833383 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.227981543 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.230094265 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.222731762 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.225121109 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.22535376 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.228291094 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.227828729 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.225645659 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.228360944 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.228360024 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.223934936 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.228599919 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.226011191 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.226555655 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.224810116 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.225237115 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.22805002 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.226939738 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.228004951 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.225138557 seconds)
  done (took 25.675083176 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.229105477 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.229589692 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.228014831 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.230325514 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.230036631 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.230036743 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.230822718 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.22864711 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.229581164 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.230596251 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.22915013 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.230156223 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.229746125 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.228225577 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.230242189 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.228971725 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.230085529 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.230165564 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.229699494 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.229160713 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.230416473 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.230743051 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.23034633 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.23032469 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.231013018 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.23215393 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.229303565 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.231949722 seconds)
  done (took 35.581671403 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230035324 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.231038502 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.229695809 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.229878708 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.227204165 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.228433696 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.229691702 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.228271222 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.231215171 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.22779275 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.231178457 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.232578227 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.230816446 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.23062494 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.231111139 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.232956043 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232012714 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.230573105 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.228368897 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228627646 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.232102019 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231065779 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.233324409 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.230098148 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228934134 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.233278165 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.229180963 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.228368155 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.233901339 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.231600174 seconds)
  done (took 38.061227533 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.251581779 seconds)
    (2/2) benchmarking "in"...
    done (took 1.250706463 seconds)
  done (took 3.649089739 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.230134549 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.233351265 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.232194961 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.229428986 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.230077204 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.232601241 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.23208871 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.23057868 seconds)
  done (took 10.995807419 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.231750507 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.232525117 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.231491926 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.232644307 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.232695517 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.233760841 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.241557054 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.252750573 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.233440359 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.234384019 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.238575811 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.241493655 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.235558155 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.231257708 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.232290098 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.234099462 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.235425376 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.233626753 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.234947622 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.233053449 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.233762531 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.233215402 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.235436921 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.232707425 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.235574438 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.242458455 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.25658275 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.233774997 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.234693687 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.24015722 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.237081687 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.231749081 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.234102008 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.236204374 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.234272558 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.234196997 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.241236112 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.255035591 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.242635394 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.255021472 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.231840147 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.229567145 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.234641433 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.235558946 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.235928974 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.237097847 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.237032585 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.230648632 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.232805092 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.238690267 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.241534498 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.234070553 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.230931939 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.239609853 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.236986881 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.241475079 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.25398343 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.236587358 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.246321304 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.247870769 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.265181867 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.262443682 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.237508887 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.237512796 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.246200967 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.264205374 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.241678856 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.25150767 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.232317456 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.235433351 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.244088052 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.265975887 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.263811006 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.238837761 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.235074549 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.233847915 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.236328057 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.237837938 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.243129344 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.259029263 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.237260123 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.236557346 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.241922954 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.26275363 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.236320424 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.235352012 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.23721415 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.237039354 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.236628533 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.244956026 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.258508175 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.237637081 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.235620554 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.236028368 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.236337968 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.237031709 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.235856143 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.238081259 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.236872706 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.238989192 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.237635662 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.2418956 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.242800325 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.239049147 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.237133608 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.243740593 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.256860004 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.236281367 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.24508787 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.257061683 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.236291932 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.240942889 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.246393095 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.234891604 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.24304385 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.244490135 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.238512385 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.238098136 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.23752857 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.237049009 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.250071813 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.267389649 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.238538559 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.237610774 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.241308406 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.252148033 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.239486484 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.238459191 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.24089835 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.236389884 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.236781808 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.24202336 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.240192229 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.238432284 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.240180585 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.23952023 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.237238067 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.239093811 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.239519842 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.235962275 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.240136589 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.239266271 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.241493896 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.238262976 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.240243824 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.240699834 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.246650896 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.259632395 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.239295998 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.240009043 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.235123326 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.241141305 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.240655924 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.242262219 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.239180159 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.239905581 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.239355921 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.238993452 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.239934631 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.240652967 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.239341613 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.241236598 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.245038541 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.241327512 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.241409116 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.239542805 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.237742765 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.24058077 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.24042584 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.239858899 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.241189304 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.239531967 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.24632018 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.248423074 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.239657494 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.241056516 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.238935852 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.241970789 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.241482916 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.242263575 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.245132479 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.250744439 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.240071108 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.246749001 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.261520454 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.243967946 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.242219989 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.241431714 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.241163243 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.242418585 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.240931805 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.250653224 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.254282887 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.271621662 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.243097349 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.248459574 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.241105279 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.24740326 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.24556011 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.242466687 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.243674356 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.242651493 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.242480983 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.242369589 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.243673759 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.244592263 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.241410601 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.244906725 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.240166447 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.244894592 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.240085776 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.244307977 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.241592153 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.239626661 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.245726039 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.245024769 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.244443989 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.242187083 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.241413227 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.244119358 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.242881954 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.246228009 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.249340843 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.262921693 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.241527731 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.246591442 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.244084342 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.242542459 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.245939651 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.246472689 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.243983337 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.253777313 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.264114882 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.246103026 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.253381619 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.264052774 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.245767635 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.247227319 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.247681171 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.240765738 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.250422291 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.254409487 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.244852961 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.244021609 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.246241478 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.246097466 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.246857714 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.254563994 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.264347851 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.243968592 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.244699585 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.245426607 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.244035107 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.243297787 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.244550072 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.245644118 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.247727568 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.24479263 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.245059887 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.248096269 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.247341184 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.247505654 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.248056448 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.249353243 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.255169528 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.251440465 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.267156821 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.248813847 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.248768668 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.251916379 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.245965643 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.249226381 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.246358693 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.261373049 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.276055525 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.25363874 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.268838741 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.24610684 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.254486836 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.267753591 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.250376398 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.250927461 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.249583154 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.249724995 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.246838141 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.242951472 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.247700831 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.248324347 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.247739811 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.249122178 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.251712382 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.248890799 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.248692326 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.250353412 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.249962692 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.248480401 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.249195617 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.250873365 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.252722986 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.248168604 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.249573797 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.249263901 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.257293056 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.26931178 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.249797866 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.247094216 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.24879812 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.24714304 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.24963744 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.249246671 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.254365441 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.255738405 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.25283527 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.257808818 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.251280972 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.26037204 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.270082172 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.252480556 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.259606937 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.247974623 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.250526733 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.250078488 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.25209459 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.257780563 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.270581443 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.251118332 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.255703827 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.252243818 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.250279681 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.249206349 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.254507175 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.251313249 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.250922152 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.257246757 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.273538717 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.253986636 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.255398955 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.248739067 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.252315916 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.251734143 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.250217516 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.253634699 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.25069145 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.250341055 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.252484449 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.250547192 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.251175428 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.251441158 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.252857161 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.249264454 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.250111457 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.261333618 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.272500227 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.25764497 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.253176015 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.257579303 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.271973422 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.258665534 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.272354149 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.253310007 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.253298892 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.251682401 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.255127128 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.253445171 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.251458602 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.254834063 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.255048636 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.256772212 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.25263094 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.253068024 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.252125559 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.252829545 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.253309668 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.263310802 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.27654788 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.255215261 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.257337009 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.252472832 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.252703215 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.258616327 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.252968589 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.250520223 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.255250643 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.265553483 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.259966033 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.251823644 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.252768717 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.254255825 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.25236983 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.252723104 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.25426515 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.253812409 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.254584304 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.252277951 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.253611296 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.256847186 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.254259459 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.255226392 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.255901393 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.254475101 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.262972538 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.272351914 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.255419193 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.253712928 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.254958758 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.254837066 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.255276154 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.254078006 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.254305873 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.254435317 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.255086482 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.261960119 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.261240534 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.257065143 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.25481608 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.255386439 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.25347902 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.255627206 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.254597127 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.255450619 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.25691542 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.253851888 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.256203506 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.254932879 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.253916789 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.253809295 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.256453771 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.254818467 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.258684721 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.261770788 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.254643764 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.252505406 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.255346769 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.255926348 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.253669882 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.255844975 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.262628165 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.278092087 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.266182188 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.264017444 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.258936738 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.255947346 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.259178129 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.263377284 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.255204821 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.25594424 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.258056875 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.257001087 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.255641749 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.260839665 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.258946692 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.262765844 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.275014849 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.255746296 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.265134287 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.280013422 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.258418391 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.257849624 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.259431969 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.258119052 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.254476575 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.258392821 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.257170091 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.264642805 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.276955778 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.258815068 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.259353684 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.257986496 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.259242343 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.263547285 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.25730501 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.259283421 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.254696707 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.258119453 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.257705981 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.259095488 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.254621436 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.255720789 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.257249525 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.263176012 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.26560776 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.25746807 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.261078429 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.261779939 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.25949832 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.258561717 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.259094003 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.256159348 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.257614578 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.259777828 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.260553967 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.258672216 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.262948787 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.259078462 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.261695368 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.260290961 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.260458828 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.263594127 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.27115874 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.269228672 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.258434993 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.257946468 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.260840405 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.261609212 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.260989312 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.261237143 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.261368382 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.261903184 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.259545132 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.259911742 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.261215152 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.264069709 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.279464405 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.282640002 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.261185417 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.261400207 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.263547807 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.261771181 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.258872555 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.262447668 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.263840144 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.264614204 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.269258604 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.262329852 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.270471159 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.284208963 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.265374581 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.266180947 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.265752876 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.269341264 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.264428523 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.261853055 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.263210399 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.26778771 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.278965985 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.28177131 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.27444571 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.295280782 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.281926702 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.264086855 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.263552467 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.262133257 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.263022494 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.263729194 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.262707517 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.26280944 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.263952984 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.264435215 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.263050664 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.268956657 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.264200902 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.265891171 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.263175861 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.262128068 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.264030555 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.260043695 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.26331739 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.26328201 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.263642908 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.263497936 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.266624497 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.263370204 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.27531037 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.29212043 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.265450151 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.263873387 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.261803387 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.269274797 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.268295956 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.274308025 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.271865511 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.264222636 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.264369822 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.266182948 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.264943156 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.264476168 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.263892399 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.264228237 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.262974646 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.262004975 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.275964803 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.290843077 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.270287351 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.285488602 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.267136327 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.265343719 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.268234054 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.26668701 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.266699517 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.266327404 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.268233465 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.270105773 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.265032509 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.264652918 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.269089584 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.273352445 seconds)
  done (took 747.292602282 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.264682543 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.264424723 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.26391025 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.263631581 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.263861229 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.264145731 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.264111719 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.264233944 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.263265716 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.26389514 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.263681584 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.26487658 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.263847775 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.264882705 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.265403059 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.264108906 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.265124599 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.265670925 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.26499005 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.26637108 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.266610397 seconds)
  done (took 27.733918006 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.267228859 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.266309619 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.266328513 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.267602163 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.264823696 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.26829605 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.26425375 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.26830704 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.268714807 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.265246043 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.269218409 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.26902017 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.267386353 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.266632722 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.2668461 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.270408771 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.269932124 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.266550558 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.268482045 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.267642719 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.270674408 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.266710103 seconds)
  done (took 29.068003333 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.271586344 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.271305856 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.269113608 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.268342553 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.270916632 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.26704414 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.270525086 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.270916529 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.272453654 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.271871546 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.270004384 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.271445128 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.277980867 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.276310852 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.272258678 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.268930461 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.415014087 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.272888128 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.272242065 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.272232342 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.267989515 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.277517213 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.287058608 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.269861133 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.268946509 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.27189067 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.273042936 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.270859642 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.274695072 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.272453406 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.277890965 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.272356389 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.271180214 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.274138979 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.271859437 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.273588839 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.276728947 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.271458678 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.270086686 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.272205038 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.281411291 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.297569507 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.27454047 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.280446242 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.292852664 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.273034016 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.277024288 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.279444056 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.270999418 seconds)
  done (took 63.752752533 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.273239434 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.274445635 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.27121922 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.273144053 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.273000003 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.273283581 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.272727131 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.272759651 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.271905341 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.271907989 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.273822118 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.271017307 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.271025828 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.274124393 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.274860582 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.26936483 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.270583935 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.270978394 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.272145896 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.271912079 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.270348373 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.27352586 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.274918499 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.272147684 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.273702421 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.271523787 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.270963022 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.275366322 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.271220904 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.273585171 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.274485178 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.274780571 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.273427052 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.271003812 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.271770874 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.273944139 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.275797652 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.271300421 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.275331241 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.271770383 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.27517177 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.275237134 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.275627829 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.274997499 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.27369607 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.273191994 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.273125712 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.272695055 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.274166733 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.27603347 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.27574289 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.272524679 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.276083244 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.274116187 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.27320918 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.275552167 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.273365154 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.272387683 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.277067832 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.275541058 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.275559731 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.27816667 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.274226031 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.276836858 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.275476509 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.274735963 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.275555358 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.277283422 seconds)
  done (took 87.791075696 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.276816186 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.278711447 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.277701724 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.27716743 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.278719459 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.27825923 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.277278285 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.278127105 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.278891055 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.278272251 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.278262581 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.277868451 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.276243511 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.277913812 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.278099727 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.277756759 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.279272851 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.27933584 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.277608367 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.278507892 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.279092335 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.278220888 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.278150348 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.27856977 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.27813934 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.278498098 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.278232193 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.280019976 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.277992679 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.277161442 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.279610174 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.278080502 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.278322671 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.278883916 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.28048935 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.279953824 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.279241267 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.280817269 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.280023957 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.280396816 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.279441314 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.278212102 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.28224775 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.281305136 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.28102837 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.279919925 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.28054953 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.279589657 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.28029244 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.281120372 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.279896143 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.280787844 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.279905436 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.280893689 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.281120918 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.280106568 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.281903985 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.281598198 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.281355167 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.280638168 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.280766754 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.28308465 seconds)
  done (took 80.501000378 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.282520128 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.28244912 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.279482068 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.278569493 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.281643904 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.279897908 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.281332391 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.281152979 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.282703568 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.284064191 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.282715909 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.279466517 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.280683248 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282769791 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.280948591 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281396213 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.281795355 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.281873897 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.283385841 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.283497939 seconds)
  done (took 26.822802839 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.281307132 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.285589504 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.281633727 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.281033128 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.284092268 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.282562859 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.284148245 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.283382166 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.281276852 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282646864 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.284483863 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.283393986 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280577221 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.280899441 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.282404317 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.280508151 seconds)
  done (took 21.713265877 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.282481804 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.283988138 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.283295391 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.283026433 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.282552299 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.281419697 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.283457917 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.282861188 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.281169635 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.286799687 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.284741169 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.286014657 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.285004285 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.287470344 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.282026589 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.285330031 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.282917009 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.28348432 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.289125007 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.285074118 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.284080088 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.284526933 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.287063878 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.28505485 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.284600505 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.283707153 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.282597511 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.282088033 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.28358114 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.286344318 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.283378997 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.282442298 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.281355207 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.284693194 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.28481116 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.281526735 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.287859208 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.287295775 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.285479434 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.286742984 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.286193642 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.283710326 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.286827782 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.286071448 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.282768851 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.287025112 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.286297035 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.286757909 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.286426692 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.286332096 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.287677838 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.289393838 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.286517366 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.288622082 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.288912041 seconds)
  done (took 71.866228773 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.287074881 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.287045338 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.286659248 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.287972064 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.288937186 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.28539992 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.287274283 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.28628625 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.284907955 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.288229599 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.286549062 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.289680527 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.284243848 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.28788794 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.287184861 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.287673629 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.286350937 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.286451291 seconds)
  done (took 24.3621195 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.287471104 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.287638163 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.28899398 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.284995371 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.286614626 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.291542945 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.285979837 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.288527103 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.288962795 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.287755438 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284402669 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.290030559 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.288456166 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.289969259 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.287170368 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288391955 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.290782043 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.289632784 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.287366357 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.286384629 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.291024915 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.289233365 seconds)
  done (took 29.537532407 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.288434015 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.290158619 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.290242807 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.306989188 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.309926599 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.313994096 seconds)
  done (took 8.997916554 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297503197 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28939633 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.287993601 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292386334 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291243673 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28779422 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287884554 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28923841 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290967156 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290967857 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28953079 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290574131 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292294189 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288722155 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292717453 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293430619 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288689642 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289072647 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288602681 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292645724 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290608959 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292364225 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288284451 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289697125 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290077443 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290375718 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292989008 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287750518 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289737346 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292993782 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292038049 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291282895 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292397126 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291051751 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292855621 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294439835 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29148788 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292556175 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29238925 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290516078 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.293146319 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293054735 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292740742 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290424296 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295905938 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291737384 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289292592 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290886806 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29132561 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293639486 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29111903 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291881973 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292838865 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293335104 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292980817 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294088749 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291211386 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290171884 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294359372 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292480906 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293061683 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292673968 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292003964 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291395635 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294315778 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293524047 seconds)
  done (took 86.467197573 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290768617 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.294572285 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29378411 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292466522 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291715171 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291393842 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29337565 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294524968 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294607643 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292211014 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296979749 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292262384 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293029353 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29222736 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291929095 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294378842 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295226141 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293732078 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291945573 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296951192 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294756747 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294496061 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295834106 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295859688 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296319125 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297031506 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294043197 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293504873 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295558584 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295272529 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295657371 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294226467 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2936571 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.295047241 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293673369 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296667436 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29571799 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293669699 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294917784 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297617036 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294837203 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296811669 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295445447 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295429768 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297028881 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29647385 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295588551 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294978467 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296987642 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297829529 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2954025 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295387159 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297024753 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295616426 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296087792 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297379578 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2944781 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296738097 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2958959 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298947703 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296197803 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294567824 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299508364 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295600952 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297108571 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296737655 seconds)
  done (took 86.680871597 seconds)
done (took 1744.339238913 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.462129219 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.416772125 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.299646474 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.296904039 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.295357438 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.292956402 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.300513446 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.295957745 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.296964393 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.296819704 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.293943934 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.482553241 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.350512287 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.295524044 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.294929862 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.390670328 seconds)
  done (took 42.574098464 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.325295729 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.306785746 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.418384156 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.320682984 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.326037343 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.48912198 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.357128198 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.307572682 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.475123828 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.343372254 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.863810183 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.32550696 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.303334344 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.409665634 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.321075557 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.490603452 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.546151131 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.864077427 seconds)
  done (took 30.001419877 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.752875938 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.30909374 seconds)
  done (took 9.270794744 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.319461943 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.300840881 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.301258094 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.298517761 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.291397622 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.291507385 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.298906642 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.311164036 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.96987179 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.423415727 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.318628917 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.309539256 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.3182297 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.300348615 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.297497339 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.33780484 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.441802756 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.298054075 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.297635966 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.305095646 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.300295142 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.399805098 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.357508566 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.297935448 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.423376305 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.991637548 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.303644186 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.306486602 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.441308874 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.299621467 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.298971289 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.299483024 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.301637365 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.191262261 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.81208691 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.294178711 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.326454747 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.308990185 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.29821125 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.44509108 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.304856913 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.307416232 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.305138938 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.796183208 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.43238524 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.414751986 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.483527522 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.318227119 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.303929862 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.362688337 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.302200449 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.304582401 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.345919512 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.088143633 seconds)
  done (took 110.01861503 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.327772262 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.685663885 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.465171432 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.314848865 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.065797275 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.021275557 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.311217733 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.581031265 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.362718083 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.296832416 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.592965564 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.805036176 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.311775613 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.336062908 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.789206039 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.341222527 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.30363869 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.185940636 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.312673124 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.298169238 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.788909631 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.297942918 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.296899265 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.460286982 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.333749009 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.751573638 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.707975525 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.70699699 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.319314862 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.297470443 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.776465319 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.316223904 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.314286846 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.300611152 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.560176966 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.656071154 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.646294545 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.31527902 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.317741595 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.299179585 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.329370453 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.745774344 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.653699551 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.314805073 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.29791206 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.751068943 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.315995242 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.308667327 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.305424688 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.505827556 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.943034918 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.298172713 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.703007848 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.297746739 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.58827136 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.325503738 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.321184841 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.78133787 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.315120804 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.435838314 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.335613487 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.300023221 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.30703484 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.298217941 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.302218491 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.644311845 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.419693047 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.301886479 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.642596418 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.778964839 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.314343834 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.847589738 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.223594073 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.326662216 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.404167156 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.302685533 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.977036206 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.791084519 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.338580155 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.30014655 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.631542198 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.317309498 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.577788013 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.316628572 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.29965532 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.817021585 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.30072476 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.361139178 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.300202121 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.307405865 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.062237013 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.300741248 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.583063633 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.3284436 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.299635042 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.301552094 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.314706375 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.300211078 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.301325841 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.301351773 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.833639668 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.321416809 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.270572587 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.320190317 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.302136292 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.302798841 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.302702825 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.303648062 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.525483984 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.755376214 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.324524177 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.301085847 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.302073608 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.307162313 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.462237406 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.303848007 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.60978364 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.319176455 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.303259073 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.303204414 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.095988184 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.343117244 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.30340069 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.304880075 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.192372751 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.50808003 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.320321882 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.31820658 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.303515457 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.317611066 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.566962364 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.324152092 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.384881169 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.303505563 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.015944759 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.35461917 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.313929663 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.601267037 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.312060067 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.236084949 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.321650297 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.305023201 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.590960422 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.568116241 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.344646349 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.305954923 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.321812753 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.022955682 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.34393159 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.44096152 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.323221085 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.326173673 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.500765306 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.659847721 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.302822475 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.897902132 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.304926262 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.524274647 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.304797393 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.622257946 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.81331056 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.323467192 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.312933907 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.022493809 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.00405797 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.082754183 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.305676836 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.580711584 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.252759228 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.786463377 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.305842886 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.30512251 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.891178371 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.307715051 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.311628016 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.306871964 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.305710642 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.59308107 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.478285981 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.536776032 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.312109715 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.769306993 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.362247668 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.3156903 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.310306171 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.308295428 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.653044094 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.3578654 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.307737006 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.340227641 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.310538066 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.308725206 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.79194926 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.265100773 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.308401391 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.457159539 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.94998395 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.326099268 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.307919121 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.9096402 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.528139928 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.874421719 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.385369292 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.630173791 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.334202022 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.346200435 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.018484377 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.384519388 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.798504671 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.329176426 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.308351259 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.918289617 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.326395775 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.65960711 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.308412675 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.30709336 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.87160776 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.327324189 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.313637603 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.570629439 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.327650718 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.561847014 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.309776147 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.35368748 seconds)
  done (took 1104.82848938 seconds)
done (took 1297.902768278 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.310715544 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.308129182 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.291849453 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.312692505 seconds)
  done (took 26.446135652 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.319696694 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.316822408 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.316719697 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.31517146 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.317410378 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.316404655 seconds)
  done (took 9.12502298 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.350269289 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.310900753 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.313490485 seconds)
  done (took 19.199169801 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.522277361 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.601246331 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.647085344 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.488977996 seconds)
  done (took 10.48240685 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.319566409 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.31893233 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.319585595 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.320379439 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.323509698 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.324309035 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.322286114 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.319106495 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.323224975 seconds)
  done (took 13.114992908 seconds)
done (took 79.592094086 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.441296806 seconds)
    (2/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.308232346 seconds)
    (3/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.318786251 seconds)
    (4/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.827667421 seconds)
    (5/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.732390048 seconds)
    (6/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.681382391 seconds)
    (7/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.569030268 seconds)
    (8/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.786601231 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.592223063 seconds)
    (10/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.308412937 seconds)
    (11/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.427226613 seconds)
    (12/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.191426823 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.372499374 seconds)
    (14/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.969183542 seconds)
    (15/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.933674834 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.341810499 seconds)
    (17/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.398943589 seconds)
    (18/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.37610198 seconds)
    (19/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.347774045 seconds)
    (20/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.495940664 seconds)
    (21/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.357202752 seconds)
    (22/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.326252487 seconds)
    (23/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.318352073 seconds)
    (24/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.298796839 seconds)
    (25/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.537959553 seconds)
    (26/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.406864958 seconds)
    (27/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.32070705 seconds)
    (28/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.096961059 seconds)
    (29/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.171266045 seconds)
    (30/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.366437026 seconds)
    (31/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.298632863 seconds)
    (32/286) benchmarking ("sort", Float32, true)...
    done (took 6.317757762 seconds)
    (33/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.340953126 seconds)
    (34/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.312944432 seconds)
    (35/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.110793049 seconds)
    (36/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.361035508 seconds)
    (37/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.292386055 seconds)
    (38/286) benchmarking ("sort", Int64, true)...
    done (took 6.352438055 seconds)
    (39/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.419877746 seconds)
    (40/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.32931039 seconds)
    (41/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.463895944 seconds)
    (42/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.331265564 seconds)
    (43/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.443534216 seconds)
    (44/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.415374664 seconds)
    (45/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.963807291 seconds)
    (46/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.985056323 seconds)
    (47/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.732609157 seconds)
    (48/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.324644417 seconds)
    (49/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.532088275 seconds)
    (50/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.575897757 seconds)
    (51/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.047682282 seconds)
    (52/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.443515882 seconds)
    (53/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.635894805 seconds)
    (54/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.575453677 seconds)
    (55/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.384107561 seconds)
    (56/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.320786332 seconds)
    (57/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.300205955 seconds)
    (58/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.753999884 seconds)
    (59/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.934972237 seconds)
    (60/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.37801077 seconds)
    (61/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.33158944 seconds)
    (62/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.349203476 seconds)
    (63/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.733447836 seconds)
    (64/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.317015572 seconds)
    (65/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.229758947 seconds)
    (66/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.311210074 seconds)
    (67/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.83135485 seconds)
    (68/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.299106821 seconds)
    (69/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.329344633 seconds)
    (70/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.928931349 seconds)
    (71/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.347267397 seconds)
    (72/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.184062581 seconds)
    (73/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.322519563 seconds)
    (74/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.328619034 seconds)
    (75/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.700922251 seconds)
    (76/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.784382644 seconds)
    (77/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.525545599 seconds)
    (78/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.764369393 seconds)
    (79/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.322040667 seconds)
    (80/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.789354441 seconds)
    (81/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.417589247 seconds)
    (82/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.966688058 seconds)
    (83/286) benchmarking ("sort", BigInt, true)...
    done (took 6.320614059 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.735489091 seconds)
    (85/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.416685002 seconds)
    (86/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.295975715 seconds)
    (87/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.37196454 seconds)
    (88/286) benchmarking ("sort", Int64, false)...
    done (took 5.568825904 seconds)
    (89/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.632177697 seconds)
    (90/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.441796606 seconds)
    (91/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.342657247 seconds)
    (92/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.657307509 seconds)
    (93/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.139657118 seconds)
    (94/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.136875784 seconds)
    (95/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.963145807 seconds)
    (96/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.301219915 seconds)
    (97/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.313037161 seconds)
    (98/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.416347235 seconds)
    (99/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.315977087 seconds)
    (100/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.943881242 seconds)
    (101/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.294134283 seconds)
    (102/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.324469008 seconds)
    (103/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.355697531 seconds)
    (104/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.348513448 seconds)
    (105/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.337462901 seconds)
    (106/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.345505077 seconds)
    (107/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.737508291 seconds)
    (108/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.338343179 seconds)
    (109/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.771751302 seconds)
    (110/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.439120248 seconds)
    (111/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.300856747 seconds)
    (112/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.300884149 seconds)
    (113/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.324970551 seconds)
    (114/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.333857386 seconds)
    (115/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.609130991 seconds)
    (116/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.534849769 seconds)
    (117/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.320589117 seconds)
    (118/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.303194316 seconds)
    (119/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.142996318 seconds)
    (120/286) benchmarking ("sort", Int8, false)...
    done (took 4.365837428 seconds)
    (121/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.154727875 seconds)
    (122/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.351930403 seconds)
    (123/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.31473754 seconds)
    (124/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.547829355 seconds)
    (125/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.643634652 seconds)
    (126/286) benchmarking ("sort", Bool, false)...
    done (took 1.843776281 seconds)
    (127/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.360946882 seconds)
    (128/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.597255348 seconds)
    (129/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.321556608 seconds)
    (130/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.226104317 seconds)
    (131/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.407315705 seconds)
    (132/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.299930405 seconds)
    (133/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.302140425 seconds)
    (134/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.111648645 seconds)
    (135/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.340246044 seconds)
    (136/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.581155341 seconds)
    (137/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.384972457 seconds)
    (138/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.299061321 seconds)
    (139/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.409999884 seconds)
    (140/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.299284614 seconds)
    (141/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.333292559 seconds)
    (142/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.840949705 seconds)
    (143/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.450891762 seconds)
    (144/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.200193493 seconds)
    (145/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.167157424 seconds)
    (146/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.455106275 seconds)
    (147/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.300295402 seconds)
    (148/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.305762694 seconds)
    (149/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.32847603 seconds)
    (150/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.302072574 seconds)
    (151/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.697503483 seconds)
    (152/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.922161605 seconds)
    (153/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.305643791 seconds)
    (154/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.326569399 seconds)
    (155/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.327339047 seconds)
    (156/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.128693902 seconds)
    (157/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.391707816 seconds)
    (158/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.348963748 seconds)
    (159/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.139102444 seconds)
    (160/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.719879767 seconds)
    (161/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.345345735 seconds)
    (162/286) benchmarking ("sort", BigInt, false)...
    done (took 6.325694385 seconds)
    (163/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.368425384 seconds)
    (164/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.302207033 seconds)
    (165/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.322645425 seconds)
    (166/286) benchmarking ("sort", Int8, true)...
    done (took 6.325022707 seconds)
    (167/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.733627582 seconds)
    (168/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.338000346 seconds)
    (169/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.349383652 seconds)
    (170/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.729851371 seconds)
    (171/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.014017509 seconds)
    (172/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.845054497 seconds)
    (173/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.842876257 seconds)
    (174/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.38937988 seconds)
    (175/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.814819563 seconds)
    (176/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.818484771 seconds)
    (177/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.196072155 seconds)
    (178/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.697361462 seconds)
    (179/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.31264302 seconds)
    (180/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.373367873 seconds)
    (181/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.337478439 seconds)
    (182/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.649895909 seconds)
    (183/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.250647823 seconds)
    (184/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.350242929 seconds)
    (185/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.30305819 seconds)
    (186/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.303018377 seconds)
    (187/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.305234108 seconds)
    (188/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.368757456 seconds)
    (189/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.382944374 seconds)
    (190/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.339509286 seconds)
    (191/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.360360554 seconds)
    (192/286) benchmarking ("sort", Bool, true)...
    done (took 5.35245216 seconds)
    (193/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.240935277 seconds)
    (194/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.387091455 seconds)
    (195/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.339455251 seconds)
    (196/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.943528406 seconds)
    (197/286) benchmarking ("sort", Float64, false)...
    done (took 5.623690624 seconds)
    (198/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.94303372 seconds)
    (199/286) benchmarking ("sort", Float64, true)...
    done (took 6.342690404 seconds)
    (200/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.158115406 seconds)
    (201/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.1048797 seconds)
    (202/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.78796072 seconds)
    (203/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.954442928 seconds)
    (204/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.534148498 seconds)
    (205/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.506622689 seconds)
    (206/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.560057458 seconds)
    (207/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.451391476 seconds)
    (208/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.829259666 seconds)
    (209/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.30492998 seconds)
    (210/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.677940881 seconds)
    (211/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.012743626 seconds)
    (212/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.325604305 seconds)
    (213/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.34203217 seconds)
    (214/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.579802986 seconds)
    (215/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.270831649 seconds)
    (216/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.349040021 seconds)
    (217/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.303195046 seconds)
    (218/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.32806946 seconds)
    (219/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.371506987 seconds)
    (220/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.780438486 seconds)
    (221/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.51572273 seconds)
    (222/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.326506317 seconds)
    (223/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.385387286 seconds)
    (224/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.936797024 seconds)
    (225/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.121087184 seconds)
    (226/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.356179118 seconds)
    (227/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.796123607 seconds)
    (228/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.41240405 seconds)
    (229/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.41009018 seconds)
    (230/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.413038275 seconds)
    (231/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.341716679 seconds)
    (232/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.344279075 seconds)
    (233/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.114651778 seconds)
    (234/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.417165261 seconds)
    (235/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.359905164 seconds)
    (236/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.821249507 seconds)
    (237/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.044889811 seconds)
    (238/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.561476292 seconds)
    (239/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.588631336 seconds)
    (240/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.355863903 seconds)
    (241/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.284277347 seconds)
    (242/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.310492567 seconds)
    (243/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.51373924 seconds)
    (244/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.34504997 seconds)
    (245/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.962027051 seconds)
    (246/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.495683848 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.707830831 seconds)
    (248/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.306067301 seconds)
    (249/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.306332475 seconds)
    (250/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.350386087 seconds)
    (251/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.581048496 seconds)
    (252/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.736502341 seconds)
    (253/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.429440903 seconds)
    (254/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.186550581 seconds)
    (255/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.450742924 seconds)
    (256/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.306866 seconds)
    (257/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.411736741 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.410479803 seconds)
    (259/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.355400622 seconds)
    (260/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.351963353 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.41069728 seconds)
    (262/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.453825139 seconds)
    (263/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.307036824 seconds)
    (264/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.354325935 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.455878977 seconds)
    (266/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.453529727 seconds)
    (267/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.863999516 seconds)
    (268/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.134091528 seconds)
    (269/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.356053376 seconds)
    (270/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.684585777 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.386245534 seconds)
    (272/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.209556754 seconds)
    (273/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.464043008 seconds)
    (274/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.598484164 seconds)
    (275/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.314634997 seconds)
    (276/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.754289726 seconds)
    (277/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.37165438 seconds)
    (278/286) benchmarking ("sort", Float32, false)...
    done (took 5.330756054 seconds)
    (279/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.101583434 seconds)
    (280/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.341117704 seconds)
    (281/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.46530505 seconds)
    (282/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.384933069 seconds)
    (283/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.425311016 seconds)
    (284/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.785893212 seconds)
    (285/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.439184787 seconds)
    (286/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.178847747 seconds)
  done (took 939.15333105 seconds)
done (took 940.381247439 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.363534966 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.358983641 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.340444789 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.362763911 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.45367859 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.367853163 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.351523171 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.343526054 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.388883148 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.391074332 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.339831787 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.370257241 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.342571927 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.341715744 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.3415157 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.355789054 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.400606212 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.342077951 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.357471068 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.350948042 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.357757046 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.341025482 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.390891356 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.368454253 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.345868297 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.345659628 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.344617568 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.361598925 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.454177335 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.346022734 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.346557079 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.353991619 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.401950486 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.341954265 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.337136184 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.361141822 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.354900172 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.353612546 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.348648241 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.374447705 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.814755206 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.359940164 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.345325699 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.343904848 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.343826271 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.347720735 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.343437757 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.350684089 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.35713153 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.358557022 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.803695887 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.376667663 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.347749657 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.345000471 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.355496817 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.3453197 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.348694432 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.361828752 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.364557134 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.362999148 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.390821667 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.350513397 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.346604937 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.362111584 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.352952947 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.842200747 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.357714994 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.349610597 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.817442358 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.36570443 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.843986983 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.369865063 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.346817603 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.360469286 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.379123899 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.405422932 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.341265426 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.345662731 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.353449386 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.344957984 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.3560173 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.359583562 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.352643017 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.347382414 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.362134948 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.374538105 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.356906922 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.348541963 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.35733875 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.368475145 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.353035581 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.358497909 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.348868827 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.34173643 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.356965409 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.35047632 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.350449338 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.349688663 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.35224755 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.357559362 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.818072501 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.380906972 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.344417321 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.343840224 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.347455514 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.362278867 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.81793216 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.364690416 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.370289181 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.394905028 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.351546316 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.396236607 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.352095225 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.367438909 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.357090336 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.35059921 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.343402959 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.398415022 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.809014296 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.380165099 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.349701601 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.347226937 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.366950894 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.350153954 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.345274699 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.454869599 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.354057409 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.364245317 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.469320423 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.358975851 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.37959821 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.346640428 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.352364981 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.373034728 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.367307273 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.381842285 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.353838892 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.368540565 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.364967405 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.347042509 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.36160332 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.361508053 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.351318719 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.357434571 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.345174449 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.375112124 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.365054355 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.364405785 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.370177221 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.472456646 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.34821044 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.441310984 seconds)
done (took 228.013163022 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.410238733 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.347801605 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.434511524 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.347813267 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.447306216 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.448032022 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.344012396 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.345272781 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.344583152 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.727540484 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.344814627 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.34620885 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.340741824 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.345005926 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.429935209 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.347504634 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.345030576 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.714771529 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.349538675 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.419531655 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.343842133 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.346863346 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.350530393 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.73383208 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.343741816 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.341745084 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.420049079 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.349172538 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.695759915 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.34853918 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.343821411 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.697124769 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.437046459 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.367518254 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.357423015 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.355761651 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.450276712 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.36891827 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.431114956 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.431227273 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.435959703 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.387932633 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.351047927 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.346566507 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.3510921 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.351378238 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.3487336 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.375774641 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.342822277 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.347344483 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.717602061 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.359426896 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.357778893 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.349472448 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.347506248 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.371512786 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.348473103 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.352601703 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.440487351 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.353640009 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.414470036 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.735658712 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.730161947 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.350965074 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.34971607 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.349365048 seconds)
  done (took 149.515679116 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.419172985 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.424505987 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.464715801 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.371323678 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.402953364 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.472417764 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.372584247 seconds)
  done (took 11.183425419 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.356507385 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.352485573 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.401603523 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.400635767 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.352350482 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.53061841 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.352604782 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.363703898 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.350394413 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.404941534 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.352884218 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.355064476 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.359103312 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.353253154 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.398700576 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.36337093 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.466348826 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.352789532 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.353922822 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.504160123 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.349828289 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.359119534 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.403261663 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.362962747 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.354723486 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.359605062 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.183919006 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.353571841 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.350574299 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.353038788 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.349902397 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.429880728 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.354261613 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.353702881 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.350513773 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.467856761 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.354804595 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.35120496 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.354042937 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.349170515 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.353919852 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.353355772 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.354961535 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.353072981 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.354536291 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.376766698 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.354320594 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.356355178 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.354002138 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.356024828 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.405040368 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.355093471 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.352308753 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.353382036 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.40846471 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.360858393 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.355475493 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.35262984 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.35521722 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.352785343 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.505030543 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.402353627 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.353743831 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.40433618 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.356377697 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.357230571 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.35540474 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.35645232 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.410554995 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.356868488 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.40426657 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.353856529 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.536680157 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.379547686 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.357357909 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.358552576 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.358589606 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.357392653 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.351924241 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.361055775 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.356080962 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.357834377 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.361430021 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.353992295 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.353095233 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.526590622 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.461553975 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.353317403 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.369396998 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.363145934 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.354420013 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.410572166 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.357007056 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.353939176 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.412850653 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.471210428 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.408894104 seconds)
  done (took 155.652012882 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.362720717 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.365977302 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.359636432 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.380207588 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.37666607 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.357913223 seconds)
  done (took 9.463806582 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.362164256 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.358380431 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.359545965 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.359364492 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.359776704 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.359395553 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.359644724 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.36030166 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.361864221 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.35963068 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.359762756 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.360844565 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.361948084 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.360315609 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.360347537 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.359453885 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.360135394 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.359154348 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.361431183 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.359991987 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.455398092 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.361021673 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.360606739 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.362088344 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.36505824 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.359677614 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.366376409 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.360136873 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.360550327 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.365844497 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.380885391 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.360297076 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.362349508 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.367306074 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.364279093 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.361787069 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.364862993 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.36232751 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.358787279 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.362338313 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.363229735 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.36123742 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.36218812 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.363360964 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.364596984 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.36691796 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.36639203 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.368943393 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.362701887 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.363891498 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.363758887 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.361418302 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.363010303 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.365902725 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.365118624 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.383202698 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.368734024 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.364702842 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.363684762 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.363246844 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.363454996 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.362854415 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.36448213 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.365794196 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.370482093 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.365101584 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.365776403 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.367481168 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.363697807 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.363844505 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.364433258 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.360704816 seconds)
  done (took 100.514756493 seconds)
done (took 427.583616894 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.372165564 seconds)
  done (took 7.638647855 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.496299447 seconds)
  done (took 7.766248921 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.367263052 seconds)
  done (took 23.641528646 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.358158381 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.499656292 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.365247483 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.362905054 seconds)
  done (took 26.85393085 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.409402896 seconds)
  done (took 7.676789617 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.356803318 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.357155805 seconds)
  done (took 13.983805316 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.383616939 seconds)
  done (took 7.649258898 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.461103149 seconds)
  done (took 7.735946948 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.372236138 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.372878028 seconds)
  done (took 14.026055025 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.347653633 seconds)
  done (took 7.615337193 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.053968931 seconds)
  done (took 12.322921046 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.358534629 seconds)
  done (took 7.628342777 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.425197099 seconds)
  done (took 7.693147125 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.814274547 seconds)
  done (took 10.08201867 seconds)
done (took 163.583593091 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.357588745 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.363266198 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.361631775 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.362680959 seconds)
  done (took 26.712875414 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.397708196 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.399381691 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.399560477 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.410834539 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.402223372 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.416007939 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.401337784 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.390380059 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.410908491 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.402342586 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.402195589 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.402000567 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.40069019 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.393990109 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.403613386 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.402324315 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.410002058 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.40184343 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.393601584 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.403667376 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.367258388 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.411143096 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.405662759 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.368182534 seconds)
  done (took 34.867524052 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.886723007 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.437643984 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.521338795 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.418027296 seconds)
  done (took 7.534695348 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.418614329 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.420200801 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.432397236 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.470395571 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.499042914 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.431189138 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.393071659 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.388651345 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.373683841 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.421061269 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.495954675 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.436933503 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.504989972 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.368073803 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.596260696 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.367696528 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.368591808 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.418971391 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.470601332 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.484380333 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.369567796 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.419573183 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.424638954 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.437278948 seconds)
  done (took 35.683498479 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.368766969 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.387902949 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.366887186 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.365992006 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.375141863 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.368326036 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.368318997 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.370121224 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.370192158 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.374490682 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.366291589 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.38188045 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.368929157 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.367224625 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.372647738 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.369101126 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.375325196 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.369670804 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.369175681 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.37645202 seconds)
  done (took 28.704495714 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.363751799 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.218205021 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.714619128 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.619845619 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.364343783 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.365177975 seconds)
  done (took 27.919210705 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.443234391 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.599438014 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.370461154 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.739568587 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.833822622 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.387825184 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.370235019 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.62046634 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.952409886 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.950550428 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.43318166 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.443681382 seconds)
  done (took 20.419652144 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.373847481 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.367473338 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.382916672 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.383791741 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.427219357 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.392453175 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.37756921 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.366474738 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.43013045 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.448222151 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.393168297 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.429525444 seconds)
  done (took 38.050214665 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454205612 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.414946116 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.417507389 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.4199504 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.087577884 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.57816554 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.444992351 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.134668316 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.393589159 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.639834723 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36782098 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461307697 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.62474218 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371250793 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.370356723 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.358772296 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.615478463 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884170893 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373493983 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.56221554 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396021525 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.372028754 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.648375579 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.619138903 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.601328475 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.345865387 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.627629621 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.144989932 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.662416468 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.381034488 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378184882 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.368380085 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.641431598 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.366405048 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469985393 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.594979328 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398380287 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.002881708 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.36336342 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.584244643 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382588769 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.374546467 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379374995 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369071139 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.302313497 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.372489726 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.562581715 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.379236882 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.080028157 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.370918968 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.636540107 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467316395 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.373682969 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.940128454 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.462274013 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.396495451 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.374455728 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.465214339 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964386116 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.821414755 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.376012571 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.306818249 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.371389869 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.601121416 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000661242 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.394402648 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.374635192 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.374783168 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.306189299 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.870342568 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.391548221 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51937456 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.396575216 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.020437996 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.100109199 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.406437474 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.305283548 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959863825 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.380833917 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.308812329 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.598280071 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.148607279 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.308489868 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.317889789 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.307114152 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.109002054 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383608566 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.978869326 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.397650414 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.160849945 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.623890304 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412652748 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395910502 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.59610683 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.292797288 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373690146 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.389403434 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504294836 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395281174 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.143738742 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.329812004 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.377111076 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629173064 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.585284258 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.389002328 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.373414857 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.358041427 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384647048 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.390887522 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.381578215 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.604906236 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.9931438 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.408952355 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.840474049 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396147309 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.151611002 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.152209493 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390489052 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.380211539 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.376338243 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649561452 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.165068741 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.262982837 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442771618 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.37950361 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.375629842 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.609419787 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.229891296 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.258200608 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.58610404 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.400282387 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.388382331 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.375954944 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.321659168 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.381660562 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379443005 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.154998686 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.598805074 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382812162 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652386198 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.310123036 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.524276641 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.386226103 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.597481667 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.58461089 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.39820841 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.635423889 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38348976 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.380367047 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.407280939 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395118157 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475254803 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396721632 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.38637442 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.634300127 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.37964272 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.379431143 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.611640289 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.160541842 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380125189 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.382976557 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380317664 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.999293114 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373178275 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.382428067 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.266934471 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.391268948 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444936325 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.382567753 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.607755647 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.720409626 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401049548 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.401086819 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.378854524 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.602057646 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.387030319 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.570617556 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.460512715 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.894323094 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.005036168 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.411723359 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.312910122 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.090257897 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.072001429 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380386148 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.580365223 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.380292894 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.608231235 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.415277922 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.392080637 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.981402231 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401736699 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.608187814 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.388252334 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.391403738 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.668613263 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399351053 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.705763885 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.880502273 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397763562 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.393024369 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.522815728 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.394007662 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.313992915 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.896409739 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.385373282 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.380045871 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.158137527 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415676996 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.622820601 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.709411047 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.667842013 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38335231 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.666635038 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.710310695 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.417706781 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.396404756 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382264162 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391327664 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.390116522 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388304578 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.392895306 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.602751047 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.823913717 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951873392 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.14033925 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949117746 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.775399198 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.419025621 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.28660853 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.156596745 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.340067909 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.038860033 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.623516337 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.185293069 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.350364217 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31710978 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.597949732 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.209576724 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.655657572 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.612063045 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.744891694 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.407918911 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.658947579 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.595081192 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417044224 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.390409032 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.3155174 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.66176184 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.502811176 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.399623407 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.46442233 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.575546502 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.386460807 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.182204396 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.417047422 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.158736655 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.128298114 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.932440829 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.771611617 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.384719437 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.388113124 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.825331187 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.417958648 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.91150855 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045709693 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.407569016 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.907262246 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.343015825 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.616135765 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.419585288 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.379926822 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.071603816 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.403585251 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.643528918 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.656236996 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.321637239 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.386626691 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94907952 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.270667797 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.391200174 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386144479 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.163530782 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.851842805 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.683179053 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.395995578 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.736302175 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409933589 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.320056679 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320296557 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.083552986 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.389460763 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361394056 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898914262 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.412070562 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413641615 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.396440538 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.233599312 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.640541029 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.400394296 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.991927093 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.631543602 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.384916547 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43065636 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.389696788 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.385958214 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.369305009 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.26839161 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.621019497 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390919857 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.614754989 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.423459047 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.288368186 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.419109685 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.602021512 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.268852851 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.394743004 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.631901899 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.119354618 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.402957134 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.125808181 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432270923 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.387394868 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.402310124 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.391732516 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.411807613 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479313874 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.618049292 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.420009643 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.398654931 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.10807228 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393639167 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.39284857 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.401984836 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48120457 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.877508895 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.732969039 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.181137873 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.999637273 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.173758885 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.019148637 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.679733083 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.390161834 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398187585 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.324180508 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538251491 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.914687305 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663460788 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.519941773 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.401527427 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416143577 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.39854168 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.406734291 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.604378582 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663206865 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.260656687 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406313959 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.05143423 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.272266324 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.400206762 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.600783927 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903761278 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9791909 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.773839745 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.392192521 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.171128625 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.688158868 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.481593062 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389845322 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.980763103 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.39617229 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.174240853 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.401843438 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395657871 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.541433456 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.660684104 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.383662259 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.404646968 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.548413884 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.164289678 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.648859924 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.649960384 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.852443502 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.62413099 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.021788237 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.151939354 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.658527845 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461103396 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.624552153 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.516883491 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.541043795 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.400493357 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.291824656 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.391880133 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.236052292 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.103660134 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.402740192 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.004746653 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.675259521 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.396192038 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.405068255 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420246253 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.402502071 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.616137171 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.149544851 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.621457647 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.403523974 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.396410958 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.963670648 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.00626485 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.688622767 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.329685604 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.396674886 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.634255864 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.652485909 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.420085838 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.845634451 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.106172431 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989921222 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.36988192 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415518575 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.411612202 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.133921335 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.012028358 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.7641855 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946025038 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.057311751 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.407237153 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.67323243 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.399110726 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.394818266 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.694570566 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.397711029 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.408525863 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.631250212 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.02819751 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.230326362 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.399872159 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.682495224 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.336456307 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.622242947 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.436678599 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.336846874 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.405406627 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.841192874 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.420651522 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.525871025 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.407351151 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.409701664 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413171315 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.156629063 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.676033587 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.40185311 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.372945748 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.379180692 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.409456293 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.495839703 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.512695884 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407054606 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.069181386 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.745349566 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.651731598 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.411583547 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.379600886 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.400953602 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397169012 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.104555932 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.36771126 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.413994813 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98615525 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.414650543 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.411388132 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.401138767 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.612233581 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.608214362 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.397401718 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.635994369 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424157888 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.415483015 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.296543651 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.165796369 seconds)
  done (took 1706.315119402 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.44555697 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.433630019 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.426984809 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.45039958 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.426352574 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.537174767 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.453498544 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.534230919 seconds)
  done (took 53.0139251 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.412914727 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.560820246 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.430480783 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.399949321 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.412198953 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.404063848 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.88330941 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.425506156 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.407553052 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.408123552 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.398970652 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.408478971 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.051120451 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.407771648 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.410946468 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.419801983 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.410369533 seconds)
  done (took 66.563387376 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.798323016 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.554698495 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.63101787 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.466479279 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.444293125 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.414698 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.592562137 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.426311477 seconds)
  done (took 54.637084766 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.41133525 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.411153965 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.411808064 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.411285173 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.411012947 seconds)
  done (took 8.363950019 seconds)
done (took 2110.05745592 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.404415923 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.407655609 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.405201694 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.407656427 seconds)
  done (took 6.932056791 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.379180384 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.064981646 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.384619326 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.397902225 seconds)
  done (took 18.534147349 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.410583553 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.402043253 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.119181398 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.032742184 seconds)
  done (took 5.461384136 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.151730753 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.163718353 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.14846552 seconds)
  done (took 7.772436393 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.400233183 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.404927559 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.404824635 seconds)
  done (took 20.518960271 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.708817319 seconds)
  done (took 3.018159831 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.548305856 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.598225191 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.719745652 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.72527932 seconds)
  done (took 7.901579161 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.79409112 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.774561109 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.596123374 seconds)
  done (took 6.47402286 seconds)
done (took 90.735515672 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.371605582 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.407544898 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.608249288 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.37971958 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.635708477 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.606793148 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.59752009 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.350264051 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.85425699 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.839871952 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.342589115 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.633826141 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.762602888 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.406655373 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.757474679 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.78409993 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.631612479 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.423132252 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.031772477 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.261674909 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.617569329 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.978443696 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.168058802 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.003433103 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.634765854 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.561167455 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.56080455 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.781543678 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.199147069 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.578894543 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.562046418 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.404613677 seconds)
  done (took 195.047813366 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.403673205 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.404710318 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.421559648 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.403639208 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.417518329 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.404772026 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.405088822 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.420473089 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.424102125 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.404373166 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.404130104 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.404610675 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.404926995 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.414034041 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.406814871 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.404876741 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.426215744 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.404176282 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.421448928 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.403976791 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.422589272 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.405137931 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.421655201 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.405437869 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.407212686 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.405914454 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.413756636 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.408193598 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.40479201 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.405594609 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.423717301 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.405173397 seconds)
  done (took 206.446034503 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.405956145 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.422759683 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.41590256 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.413894245 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.405919892 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.430261322 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.405943066 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.406389088 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.417194311 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.417191319 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.405874265 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.405411641 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.405664522 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.423313893 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.409449519 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.422755878 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.407565057 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.418016889 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.415353865 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.414986145 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.418456969 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.40740465 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.407159554 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.407559056 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.411441088 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.40718346 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.424588133 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.407710663 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.407268837 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.410774504 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.408537178 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.407901769 seconds)
  done (took 206.509731794 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.609570731 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.415462608 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.415263919 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.37307911 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.415237693 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.415364088 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.411902965 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.604931078 seconds)
  done (took 14.97501231 seconds)
done (took 624.290824676 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.811051982 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.526387381 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.625085737 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.438558835 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.278051481 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.455219111 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.435683027 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.607959795 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.368772106 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.618010934 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.748976643 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.454774083 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.861684802 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.435070273 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.694816036 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.534863944 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.34666969 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.469682235 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.764146706 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.036237042 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.699728522 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.90712454 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.629696975 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.364859803 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.879767847 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.901606143 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.203690714 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.333411733 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.452363339 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.765548674 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.187065963 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.479072255 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.482371924 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.499453369 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.555812066 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.536373242 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.44498318 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.498238133 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.638278423 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.703882346 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.050780812 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.174436101 seconds)
  done (took 96.217191771 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.398836906 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.398563453 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.398786616 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.398991217 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.400885944 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.4004995 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.397592323 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.398285044 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.398258611 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.398668921 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.399321457 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.400688438 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.398810851 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.400487411 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.398808224 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.398661734 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.400480376 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.402638184 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.398080543 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.399305369 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.399758454 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.399685479 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.401392219 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.399470592 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.401296251 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.400336183 seconds)
  done (took 37.706971966 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.421031355 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.667618479 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.846451175 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.428719955 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.420910813 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.425256032 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.502973769 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.424662509 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.423654811 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.424394579 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.577524264 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.426161648 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.455475717 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.871997883 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.426310004 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.422276819 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.421408468 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.421904124 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.678311986 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.429946355 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.522624651 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.424315792 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.50223274 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.431842077 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.442408967 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.421963254 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.427185775 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.991567502 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.442269123 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.576884358 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.253377989 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.5031893 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.945021584 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.871600163 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.25505102 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.427380423 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.424227949 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.57935199 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.42335226 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.42295249 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.503274279 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.422969914 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.853525156 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.107231645 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.441050625 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.423599539 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.01240943 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.597623719 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.681978349 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.433734507 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.879419862 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.425612153 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.425310115 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.42482624 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.686462413 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.434252389 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.422874423 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.040170625 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.446236649 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.504813001 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.428009894 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.426067201 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.68585283 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.425555161 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.674878308 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.427393091 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.433675277 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.447317018 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.857325943 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.428082559 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.133394244 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.443493412 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.426246255 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.579947047 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.675694518 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.047953502 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.447173137 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.690999892 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.960243561 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.521439535 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.4285071 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.986331597 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.526983635 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.430184681 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.427626855 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.428915355 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.426931467 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.476673414 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.5028464 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.066363387 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.143904622 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.06555263 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.526323416 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.434330645 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.428083422 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.042045821 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.445137494 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.429007923 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.853204969 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.134406616 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.444408591 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.435108672 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.134698519 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.447463121 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.509261654 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.434355157 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.860587636 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.429682689 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.48005822 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.427696693 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.434725151 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.453861566 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.508068487 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.431599798 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.429275225 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.103082551 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.605301672 seconds)
  done (took 187.830626773 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.421989453 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.440199387 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.423446979 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.439868969 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.420893725 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.430511163 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.421642923 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.424331179 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.428911774 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.424211963 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.42262312 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.42327191 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.424200703 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.425804853 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.454498997 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.429385722 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.034973078 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.422817526 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.424470727 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.424602053 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.228776317 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.427023598 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.422867178 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.423881786 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.424072984 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.423953485 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.438088475 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.425202579 seconds)
  done (took 154.705147169 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.430172628 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.014618652 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.44880726 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.567908343 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.454014133 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.430692872 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.565527399 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.488948789 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.449012827 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.429582796 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.430013517 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.744649946 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.434140583 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.963796087 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.629921129 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.58228216 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.964791518 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.448949125 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.430043769 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.430377677 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.570460609 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.433874919 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.745243922 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.018894392 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.450813959 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.017788499 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.413452785 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.43371249 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.431871623 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.02071882 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.447643494 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.745535145 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.511239502 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.492870433 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.039019615 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.983663738 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.981303549 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.584090287 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.432369173 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.431256243 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.431037301 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.414298398 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.04830378 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.456193656 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.433005323 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.032549287 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.454893479 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.434950418 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.438307216 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.43213858 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.49339394 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.512249728 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.768556871 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.05179425 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.534763466 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.444885199 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.569621107 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.816364132 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.437648015 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.968898221 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.414177758 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.050836969 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.458101388 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.414159311 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.434464458 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.43863596 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.589670988 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.568479628 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.970312751 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.451430994 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.970722554 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.606837481 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.433510069 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.435465245 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.437938729 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.028429954 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.989573533 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.605583985 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.573681531 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.638033431 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.417708766 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.432900038 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.418474715 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.515221783 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.433869096 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.02917069 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.988999525 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.453371199 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.43745926 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.437324439 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.436452713 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.621088332 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.048600235 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.53445322 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.958294286 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.771705844 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.755011496 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.438232737 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.495537047 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.452785653 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.755064747 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.438582845 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.49413842 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.884125021 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.755967941 seconds)
  done (took 170.946297359 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.685921902 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.642950273 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.527674988 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.590361531 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.044103708 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.005393169 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.774401151 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.576098814 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.546973497 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.700210071 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.675583771 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.547515288 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.658623321 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.515064445 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.198607977 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.529606078 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.546631825 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.589240111 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.602452638 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.45523335 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.108128255 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.726526547 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.629796168 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.40147188 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.536279783 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.250199578 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.008688395 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.953232599 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.617749958 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.818030534 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.99726129 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.564791943 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.425452802 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.161086474 seconds)
  done (took 68.948043621 seconds)
done (took 717.671929959 seconds)
SAVING RESULT...
DONE!
