cset: moving following pidspec: 12710
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.886531356 seconds)
loading group "string"... done (took 0.582685484 seconds)
loading group "linalg"... done (took 9.092122674 seconds)
loading group "parallel"... done (took 0.175591343 seconds)
loading group "find"... done (took 1.45132225 seconds)
loading group "tuple"... done (took 2.130626321 seconds)
loading group "dates"... done (took 1.424639465 seconds)
loading group "micro"... done (took 0.227223948 seconds)
loading group "io"... done (took 0.610031979 seconds)
loading group "scalar"... done (took 44.41284413 seconds)
loading group "sparse"... done (took 13.714713231 seconds)
loading group "broadcast"... done (took 1.12094611 seconds)
loading group "union"... done (took 12.423004636 seconds)
loading group "simd"... done (took 2.619680359 seconds)
loading group "random"... done (took 10.513633679 seconds)
loading group "problem"... done (took 1835.395552287 seconds)
loading group "array"... done (took 26.556111956 seconds)
loading group "misc"... done (took 1.148270617 seconds)
loading group "sort"... done (took 3.924765455 seconds)
loading group "collection"... done (took 19.462570417 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.675316718 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.136829634 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.165982962 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.347070895 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.193403914 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.161254604 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.162347901 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.557364739 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.009340927 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.213075235 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.144900162 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.558379888 seconds)
done (took 6.035188255 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.27203073 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.443657024 seconds)
    (2/2) benchmarking "String"...
    done (took 0.129007746 seconds)
  done (took 1.230791 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076216673 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.181238588 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095139487 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.109368221 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.111141973 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.109470606 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.09390753 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.110439961 seconds)
  done (took 1.469350777 seconds)
done (took 3.715100423 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.488291186 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.855278666 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.499031633 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.129946712 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.158672482 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.148392416 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.305446733 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.162413909 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.118166378 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.085997426 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.169941414 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.36919428 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.478280048 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.956615219 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.084335655 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.127754607 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.089937236 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.704856784 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.085835894 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.130304368 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.525809318 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.112272277 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.118531761 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.140138279 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.18911664 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.130922242 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.165381409 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.096831376 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.681054621 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.102751325 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.185846062 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.099225871 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.161877568 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.242395021 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.096023224 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.093405556 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.677997309 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.183524344 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.1124411 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.103629707 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.6798096 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.080478011 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.187527276 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.100633448 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.109427633 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.18417171 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.114312606 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.07912309 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.102808461 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.091226003 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.159114368 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.467711281 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.107101178 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.14767009 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.108786935 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.68842734 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.097111677 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.155911258 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.141906713 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.093959974 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.097761966 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.106116083 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.154129472 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.112041498 seconds)
  done (took 19.498392349 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.118612091 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.139949567 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.093913897 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141754994 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.138128758 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.096600846 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084283531 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.094250928 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.107577013 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.183407257 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.135688761 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.143395131 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.09123728 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.079639873 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.117591677 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.249098535 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107047386 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.12108295 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.080745194 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.106259302 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.138654788 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095650349 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108811378 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.109544074 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168731315 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.204045476 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.107382964 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123366385 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.09324608 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098059097 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142086727 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.159522942 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.075504836 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.094258102 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.181919192 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.119535637 seconds)
  done (took 5.118226023 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.16295663 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.199538143 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.117252041 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.189959935 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.098927705 seconds)
    (6/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.173792596 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.146858352 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.163671815 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118442668 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.264695597 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.19502663 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163653369 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128038128 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.11070057 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079084184 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.096103013 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.078296309 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.679839797 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.180735389 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.148922648 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.125424022 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102656558 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083163606 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.375511559 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100170432 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.081525912 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102793298 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.074782501 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.175413087 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103432739 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.295522183 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.118768375 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088262557 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134381294 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.211138695 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.117606674 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140889175 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101966568 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.08235293 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.228762231 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.08334028 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.108229707 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.077971756 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.1265462 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131345057 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.116188535 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.10027945 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.110145327 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.226719082 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.099758921 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.118102041 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.110873931 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.199061164 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.095288428 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097320795 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.352255819 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.115090532 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085392614 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.099626831 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.320380308 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133835889 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082650615 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.076690787 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103752709 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.094330182 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.399867752 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08991945 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.351341068 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.095541276 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.15672716 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099894435 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105229304 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085755312 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102127784 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.09963491 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.097674408 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077916768 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.09689408 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.07861337 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.101169285 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.113546247 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084880903 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.094769118 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.146353062 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.117462113 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.098611006 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125976927 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.099875198 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.08017024 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127065475 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080946945 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.099848537 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.146314096 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.083092446 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104901487 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.113712687 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098732801 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.126431313 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096136328 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.217832478 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082130468 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123032566 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099429555 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112363258 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.121256959 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097138894 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083952962 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095834551 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.079120436 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.162322001 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082072737 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.078031884 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.100900318 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109706174 seconds)
  done (took 24.127622342 seconds)
done (took 49.401599311 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.458290085 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.095141822 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.112567006 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.113032371 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.112080487 seconds)
  done (took 1.625591908 seconds)
done (took 2.328520661 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.352774443 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.180936307 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.11866219 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.179375953 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086412104 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.203401955 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.169214942 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.118580327 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.196333011 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.101418374 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.175778268 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.099921552 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087409423 seconds)
  done (took 2.806475941 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095510085 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118303565 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081186964 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109333355 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075390691 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109320567 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091573896 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.12975461 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.091642322 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.101635866 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.074890453 seconds)
  done (took 1.780938027 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092301308 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112468589 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081332412 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.105734086 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075479319 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088959055 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.107739329 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11473076 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.090262243 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.10284322 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.075343488 seconds)
  done (took 1.752811713 seconds)
done (took 7.035898639 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.046542488 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.541857431 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.119524134 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.165568054 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.33807046 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.207517366 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.526824564 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.132138922 seconds)
  done (took 11.969424354 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.131273223 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.097082747 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.081596387 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.09923682 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.080090539 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.098770901 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.082799929 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.098300299 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.082097894 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.09576374 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.080111298 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.096685587 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.082898439 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.096884762 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.079997501 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.097782611 seconds)
  done (took 2.24892686 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.117949587 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116897781 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.103421819 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.1066748 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.084706239 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.101113196 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.08669323 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.102064564 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.082599947 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.100425362 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.105230297 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.089704654 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104312801 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.082221171 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.103441272 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.090580825 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.099400641 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.10245392 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.087971561 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.102808133 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.089246744 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.100995211 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.103924844 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.089358182 seconds)
  done (took 3.169620364 seconds)
done (took 18.091266507 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.169831669 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084924833 seconds)
  done (took 0.965132318 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.102177883 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.119501991 seconds)
  done (took 0.936711578 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.108928322 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096618282 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.136550877 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.113838895 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.08122207 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097137364 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.113919744 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.09851405 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.080429487 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.097840463 seconds)
  done (took 1.740942939 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.087404207 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.101275396 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.090203771 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.119655771 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.108506501 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.083391042 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.102493812 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.08470306 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.103146937 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079503063 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.106080217 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.117104837 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.08760879 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.11832927 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.08592319 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.103542093 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.107419986 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.084877092 seconds)
  done (took 2.489710825 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.082990045 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.083671104 seconds)
  done (took 0.881780494 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.085832904 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095860021 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083011169 seconds)
    (4/7) benchmarking "year"...
    done (took 0.099508042 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.079473505 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.096148665 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079640078 seconds)
  done (took 1.335303647 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.511882769 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.255955093 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.335305034 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.09986545 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.152300189 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.367044715 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.136719501 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.113234802 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.113244421 seconds)
  done (took 2.843557585 seconds)
done (took 11.911177278 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.094926736 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.190338144 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.54395377 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.118646999 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.078878152 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.158984207 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.264445606 seconds)
done (took 2.16732441 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.351888913 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.123487939 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.088103035 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.079151287 seconds)
  done (took 1.358483977 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082003455 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102846088 seconds)
  done (took 0.905292188 seconds)
done (took 2.991367207 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081519348 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.131910099 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.07805372 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.095139981 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.078494662 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.094101364 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.076180564 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.078490442 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.094211958 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.078992881 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.095081169 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.078608921 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.09509699 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078374756 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075519806 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093189516 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078146629 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.093765005 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075719656 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094260826 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078275574 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.092817481 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.076446039 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.195708384 seconds)
  done (took 2.944503953 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100655862 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097140373 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.084855169 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.101440118 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.082465325 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.10163106 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101020401 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.079323555 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.101848921 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.081160327 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099954558 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.082926113 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098542503 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.082736326 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097690578 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.099393614 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.084712128 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096204109 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080967499 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100731595 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.085033005 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09618794 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.083604724 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101045256 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.099532029 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083092269 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.097639963 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.080510389 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102380912 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.08357191 seconds)
  done (took 3.490281964 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.090253435 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.075602378 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.094530678 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.08791081 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.094664863 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.081410512 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.09321576 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.077031202 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.095043586 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.076891489 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.096256681 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.076579041 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.094076379 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.078945445 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078239006 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.102426387 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.112254101 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.07751654 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.076352109 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.095623354 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.082134778 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.094662614 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.079749233 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.094836704 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.077355651 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.094065033 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.077527734 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.076531532 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.094874376 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.076544947 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099754518 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083280574 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.093415274 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.089785305 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100320134 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.076571684 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.102752526 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.076451835 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.095271589 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.076506192 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.093512038 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.076624452 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.076425714 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.106641448 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079707991 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.094128595 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.07695544 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.094551342 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.077493148 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097327331 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.076904034 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094019251 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079330925 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.095638804 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.083218459 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.07604489 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095601528 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.075695021 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.094861177 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077129441 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.09490935 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.076478427 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.101805274 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.077651493 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.117953809 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.088052734 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.093736102 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.078858543 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.098032148 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.085347101 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096479003 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.095421174 seconds)
  done (took 7.049205921 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085198496 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10497611 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.078896325 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095755621 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076048057 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.076621228 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.102293667 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094384409 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079304217 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.113068143 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077351969 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096068191 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079176324 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098150468 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077615428 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.095764351 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087925929 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092051598 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.077186244 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097480265 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078246929 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101452731 seconds)
  done (took 2.695694158 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.224806746 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10386525 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143732444 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.113778372 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098211782 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.111582394 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101029321 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085809849 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10237747 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088132392 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105233852 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084269252 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.114480034 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10475013 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087236799 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.105672994 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101243953 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088484856 seconds)
  done (took 2.695150836 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.095493975 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.097601875 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.104238687 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09818985 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.079952717 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100162279 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08650056 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.114028861 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.099665615 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.080403156 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.10787723 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082733873 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.09991279 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080970377 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099995047 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080866991 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.099609336 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080640062 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108078767 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103567957 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087711751 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108946255 seconds)
  done (took 2.831955664 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098756749 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099477633 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.112984109 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.102110423 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.076432719 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.096187807 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.08739786 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.098125578 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.106615829 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.081940493 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097160049 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.078994683 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.105404933 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.081111122 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103230986 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08022648 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100055357 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081197977 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099290929 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076927045 seconds)
  done (took 2.601482663 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.125263137 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114778744 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097070568 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12532367 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11434778 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.096848259 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.126302971 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.113917577 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.097637774 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.1279275 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.096558608 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.114504073 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125085238 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.104137801 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115143714 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125148948 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108047919 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125459375 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.114518058 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09707393 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126613544 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114674326 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109047 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.11477446 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096670466 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115243664 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113801272 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.104702549 seconds)
  done (took 3.90068778 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082884775 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.079502603 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.095834795 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.077644348 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.095476129 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.077343095 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.095299224 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.078122927 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079416986 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095503896 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.079876433 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097090875 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080344195 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.096949769 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080030006 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097721667 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080222724 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.077405879 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094795448 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077696122 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.097357807 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080728556 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.096696276 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.077778624 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077325141 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.097874499 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077655523 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096062504 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080572724 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095399725 seconds)
  done (took 3.337283332 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091565472 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105402609 seconds)
  done (took 0.936237683 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080373097 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114598831 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078383326 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.101521443 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086505131 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098976078 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.090994195 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104063528 seconds)
  done (took 1.49629998 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.106922285 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.118382643 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086542972 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.110373852 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.099998138 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.118208921 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.165869864 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086466322 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.105995204 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.081609407 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.118893279 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.08075659 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.109455216 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103551527 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090400619 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.11358804 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.078807177 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.109023998 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.089552712 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.101140179 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087547128 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115014988 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091290679 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.105980093 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.083094588 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.111612 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112118861 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.0927707 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104523017 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.093826781 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.106919655 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.075046131 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.103586068 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.086585502 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.096778602 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.099943724 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116704282 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086016036 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109385901 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086107079 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108361194 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093889598 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.091343523 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106180656 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094288082 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.104344162 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.087489668 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.093861583 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.082423 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.103324672 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.077634157 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102149372 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.076371879 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109086949 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091113392 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117967178 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083469712 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.104227046 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.0860232 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102406731 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088751598 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.103265944 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109381341 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.093776095 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108580344 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.091316115 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107145494 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077703897 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.092412621 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079970308 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.108151722 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105657542 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.110936776 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.086578462 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105727854 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.079430612 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105520499 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087308759 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108052543 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.10982556 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.08647683 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106904177 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092719184 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102525911 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.085143855 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.106654108 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.083544119 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.101909226 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.082704802 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119259304 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.084660214 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.097729044 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082024791 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110014499 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085796271 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.106194116 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082562317 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109478241 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.075702018 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.104960619 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088037834 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107169214 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.093849329 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10642325 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086756483 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.108797311 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.11132898 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086819413 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.103340619 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.078301533 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105937891 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084309436 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.107885831 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.076064047 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104021113 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.086813972 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.105103028 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.092627195 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.101942756 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.086611587 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109987581 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.093369881 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.101916457 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.078546808 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.104122312 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.086512093 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108900399 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092804365 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.102283871 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077576813 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095612618 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.090133276 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.104257105 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088648469 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105422435 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087383019 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.09478244 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.080396904 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.105903883 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092700211 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.103912714 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.105900423 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.092630658 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.106830731 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.085284048 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.109919793 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08476104 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.100008691 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.092542974 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.104598167 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077179454 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109581538 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.086141931 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.102157667 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086879138 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108715819 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087216294 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.10586888 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084305863 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.105812961 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08772964 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.10064842 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086993038 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.102894867 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.094582116 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.104695551 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.076859441 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097036537 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.088586311 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.101351895 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.085534224 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.101009537 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.086594814 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.106328351 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.080796411 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.104320609 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.08550238 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.117747999 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.094399222 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107163781 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.107827132 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094532923 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.105308781 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.089118925 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.103859754 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088718526 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.10573822 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091475448 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.107338991 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087825165 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.103673143 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.080908567 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106715266 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092857854 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.099952304 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.08083945 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.099737636 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.086530322 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.112052953 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.087411695 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.105801562 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084655475 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107135675 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091808985 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.104702631 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.085707012 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.100710663 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.086571988 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.109941421 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.088842988 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106174375 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.09374038 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106194481 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078073797 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109253019 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083922863 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.109410395 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.077668695 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.10127132 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.083343206 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.106788302 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.086073082 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.104153734 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.077230567 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110532393 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093788341 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.105727374 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.083043715 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.105506957 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114234745 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.086023516 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108046384 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.087862296 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107958817 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101831146 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.101369254 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.086848521 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.113209896 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.087006494 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.095414458 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.090362835 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.10319674 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.081786912 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.104352884 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.084471267 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105902467 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090017714 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.107625939 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.07703175 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.104781657 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.08484055 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.101401975 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.079081999 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.110729809 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.088658469 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.106367809 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.0968145 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106936848 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.087391233 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108739469 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.087171088 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.107030676 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.088026044 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107531184 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.106224656 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.086165508 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.08236196 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.106705027 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.081804211 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.099961294 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.085379236 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.106707133 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.08728286 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108024841 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.085211666 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.11131572 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.105803429 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.088962103 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.125090432 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.103089844 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.08335448 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106330756 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090813024 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.104158546 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.086599021 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.097073365 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093879712 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.104680359 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093996274 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.104696603 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.079945251 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.106543676 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.086863234 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106884537 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.089634159 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.106625372 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086782332 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.104339915 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.087514638 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113942816 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.084744027 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.112490081 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089533464 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108506917 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.087007796 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.107293648 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.085601348 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.10198283 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086639945 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.106938678 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.087787446 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.105662989 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.089960498 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.106949947 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.104332484 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085724913 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.106599581 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.088955924 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.107883718 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.07778404 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.082845447 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.103274937 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.08791605 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111115578 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.107172071 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.086630222 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.085283447 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109510508 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.086827696 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.098675033 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.091773317 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109257545 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.088880824 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116305755 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.102119782 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.089262729 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11652023 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.078254178 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.103740568 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.082464438 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.102827963 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093520599 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.10678855 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.093967439 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.10685396 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.08457501 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.099396778 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.08920684 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.104054752 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077804358 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.099807377 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09194 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.102756503 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086683761 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.088371976 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.10930047 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108099119 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091627046 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.10486352 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.088415471 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.106753004 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.08089708 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.101743303 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.084340843 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.106216361 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.089318555 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.102696711 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.081008238 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.086547805 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.106633722 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.106009921 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.088210717 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.085273401 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112571807 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105958055 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088215764 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110426812 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.07803925 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.106069463 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.088149187 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.105501321 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.084460764 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.107299741 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090160056 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107388777 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.09287726 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.105784869 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091368646 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106586575 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.082041712 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.105857428 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.087985223 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.106436681 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.084594896 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.108043078 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09506903 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.099479758 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.088886459 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107324102 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.08513882 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.10814868 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.089712058 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.107188994 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.093021935 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.1079289 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.087827802 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110158356 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.088423815 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10793939 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089485293 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.10544197 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091862826 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.103262333 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.112908408 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.089345869 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.107113563 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.087508435 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.102574815 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088220633 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.086504386 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106359175 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.112224814 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.089753534 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.101303322 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.084627317 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.080919701 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.108104559 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110701555 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094937504 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.107246832 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090385366 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098001685 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.081489259 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107860902 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.084979448 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.105338648 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.09065298 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110853212 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088572025 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.10361161 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.086431865 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.112133741 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092215756 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.109791438 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.085227593 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.108989188 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.088833817 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.10728025 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.085762205 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.106936324 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089293167 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.109678781 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.087452012 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.104039007 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115464775 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.094482214 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108410939 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.086998838 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.108913886 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.08867055 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098353312 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.089639244 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.106698605 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091989119 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.107243004 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088125204 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117089016 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.084174448 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.105939701 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.095261428 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106106079 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.0932933 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.099036659 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.08794237 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109863057 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08959144 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.098968122 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.084373254 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.1046417 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.088982534 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.104129974 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078996105 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118278952 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.112302658 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.08951342 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105075819 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087033263 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.079262112 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098597561 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.084846044 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109997564 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.087785932 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.116617741 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.103294705 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.084643926 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.079339121 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107743005 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089120447 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.110106764 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080686225 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.099942012 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.084871332 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.108746975 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.113686958 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087598029 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.08719329 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109606599 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.106714621 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.083416358 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110910144 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.081397183 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.108348353 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101126601 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.107781374 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091462447 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.110533217 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095091074 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.109004799 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079698764 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.109303621 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.08921776 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.10962577 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.089497694 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.110584964 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123019425 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090262406 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.1033937 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.088132688 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.106972779 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.085169759 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.115730663 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09112223 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.108541044 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.09112322 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.105517862 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091150367 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.114193842 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090501689 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.109000244 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.089035976 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.107253782 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087902459 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.106241096 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.086839205 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.110528588 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.089669943 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.108164675 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.0915841 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.10458651 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117584813 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.097305433 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.108898631 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.081875113 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.103254746 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.08561766 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079830923 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.109746362 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.082566052 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.105851711 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.08610109 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.105991863 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.09109078 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109790856 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.088914894 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.11004566 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.088097861 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.09745655 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.091980217 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.108812424 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090566148 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.100751056 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.089196972 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.109701228 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.09329236 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.113806237 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.105037141 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.090066207 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.106378799 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092344706 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098960312 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.092979409 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106547392 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.08835336 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.084286639 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.108863772 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.089472007 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10969937 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108838598 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.092708595 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.107210065 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.094445778 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.109977752 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.084174105 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100614537 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092785681 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101006378 seconds)
  done (took 58.819489069 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.153803238 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087367824 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098428192 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080666975 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126263944 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081372313 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099273083 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.081372416 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.10102764 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.094052164 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.100130043 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079822125 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.120964857 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128673259 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124256672 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.114218902 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080613289 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09937047 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.080308405 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099317637 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.101227017 seconds)
  done (took 2.919889683 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.107175139 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118252323 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115571684 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102353703 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.111150325 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.116765869 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.096994535 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118770758 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.120816072 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111242352 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.102667179 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11821843 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.111247862 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.092833933 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112261578 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113241741 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.101799533 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110248216 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.118515539 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.097706851 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114726469 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.115381217 seconds)
  done (took 3.215953434 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.09626481 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.086757829 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.112889583 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.081692964 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.10738972 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.082505209 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.112827596 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.083917686 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.112655635 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.088032219 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.104678966 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.088502194 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.112480827 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.083163301 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.105873576 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.084911335 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.111834386 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.088583351 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.109100984 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.083463392 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.128230774 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.101178134 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.083767791 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.085172535 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.117320512 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.088442178 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.108667459 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.089079814 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.104976441 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.08843005 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.104877303 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.090479843 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.111348031 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.085915108 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.105206131 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.087638406 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.108236206 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.08266654 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.10485684 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.091724466 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.10360049 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.089326935 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.114507883 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.085382101 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.104493653 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.091357137 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.107825996 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.083205778 seconds)
  done (took 5.474722545 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.130484486 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161519316 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.09614861 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.150190133 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.126624177 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.118665747 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.09013889 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.148693368 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.106302499 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.087948596 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.12719103 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.12610131 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.092589015 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.116617344 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.098520225 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.113070366 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.114280373 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.088361687 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.116419482 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088338348 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.114631153 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.112315688 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.10329698 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.120836252 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.112424418 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.090982632 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.111019511 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.097579073 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.125589038 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.117152237 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.100640976 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.116038901 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.126102035 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.090922891 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.108492689 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.110202937 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.105679108 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.110253297 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.110769984 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.090713118 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.114043565 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.098145009 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.117238534 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.127757933 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.09561497 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.110696525 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.092642823 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.105512222 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.119891588 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.092401832 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.119151595 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.123578384 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.093711154 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.111274525 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.098300395 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.126854079 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.1144262 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.090515052 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.117946548 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.120014105 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.092495764 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.113032439 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.101923825 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.112134548 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.117743446 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.121412919 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.092880213 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.115268545 seconds)
  done (took 8.46854435 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099231369 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.133497867 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125775294 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105108685 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.114998736 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.113786957 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.095237149 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.113760774 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.094476991 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121801092 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113447743 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.164155903 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.088422247 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119888393 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.094532759 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.115163784 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113854235 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.095406985 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.11453117 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094744662 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.114454891 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.124380989 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094788224 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.125301991 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127502114 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106512511 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.095605852 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.113514026 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105428047 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.115649617 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127001134 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.114476231 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.095581949 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.125146681 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.128017885 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.096013111 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104877691 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094334043 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.115422909 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.113135458 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.088692097 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124996822 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.094145681 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.108761664 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113513352 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.095540172 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.125965437 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.127657447 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119711717 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.101868566 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.114429133 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.124272379 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095134294 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.114426219 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.126251206 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.114096681 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126424261 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125984396 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115146066 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.105435345 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.126004927 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.133553747 seconds)
  done (took 7.791232312 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08943156 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.084644702 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.104315305 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.083206483 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.105962789 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084052546 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105185268 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.08652454 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085130766 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.106590746 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085461589 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103608953 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083437448 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105117289 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084291656 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102362915 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084181246 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083311725 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105751172 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083268975 seconds)
  done (took 2.658464532 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.097732675 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.126002222 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.087126614 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113998329 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.088741306 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.113746975 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106591115 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090242157 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105590739 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089636876 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.118539104 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099176012 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107900989 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.113430502 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.100096108 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.113692343 seconds)
  done (took 2.478945215 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.11034162 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120182467 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.131601186 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.092383007 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.10444159 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.094475535 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.106486011 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.082079589 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.102273301 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.09494501 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.112587891 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.097444923 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105908627 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.084729968 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.106531186 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.093027464 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102166321 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.091112665 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106137565 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.112479305 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.113497831 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.10967187 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.088605219 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.108770731 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.090464663 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.112057095 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.09464163 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.104763247 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.085136798 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.107228288 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.09018137 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.11584224 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.083230853 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.112479212 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.084085202 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.104412415 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.085517857 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.107251772 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.091751595 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.10820166 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.08441327 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.110428608 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085572866 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.109091238 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080952589 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.108521594 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.081585948 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.114697384 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.087344316 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.110716691 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105563429 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.095447147 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.113434638 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.099627773 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.117388299 seconds)
  done (took 6.360691459 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104714891 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110522059 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.091276926 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103928447 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090413686 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.115443732 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.090622178 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.108316716 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088365253 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.103879051 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.089333019 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.111243716 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089011806 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.110745877 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088591881 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110955839 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081815172 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109312458 seconds)
  done (took 2.606623282 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.096122364 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106111581 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095092117 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107091407 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.08736553 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108090439 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083398355 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.084520018 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105735128 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08678674 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107932648 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088942117 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105160495 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.089127885 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106914592 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087089932 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108665414 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085314865 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.106936198 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082556334 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108939421 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.085541246 seconds)
  done (took 2.934385331 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.108592274 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.140388451 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.100405051 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.150005492 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.111769662 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.090779951 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.121705464 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.091501693 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.131011712 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.109960355 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.09125424 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.109873311 seconds)
  done (took 2.171959036 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11742166 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14599721 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.08422568 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111221719 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120254192 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093167836 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112077481 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092411039 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124397577 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125495962 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092069364 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125929971 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125116126 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122564585 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099214214 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120726216 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111928974 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093769458 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10773379 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134206188 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093427226 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125190894 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111844483 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092396928 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112056234 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123099601 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104459883 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126115416 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112589462 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103887817 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121279834 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11160471 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105205939 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126923916 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110241566 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123209705 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093893202 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134150821 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119696371 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103004963 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.111990108 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119869244 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104490378 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119794346 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124687464 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09282312 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120643931 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111930321 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09202285 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140726774 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12090829 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123104017 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099778331 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125018858 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124418672 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14145326 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126820187 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122244698 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100975905 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126291936 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123986319 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119853607 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104096893 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126416441 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119759349 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126142561 seconds)
  done (took 8.398907489 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131752646 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107555943 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091846156 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126680572 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124101866 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111814536 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093245897 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113032189 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091753815 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110273082 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.159585874 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112987845 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104212606 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124174236 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11245651 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093316826 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11295806 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123736171 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090063742 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140687806 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112946077 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124170133 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103940595 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124498013 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125886497 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120569075 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093357278 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112940378 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093120945 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113574468 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119425475 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093010934 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124158188 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105357152 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103214848 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114099875 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092122818 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121562624 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11306499 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100275378 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125288572 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134875823 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112081684 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093219612 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127042396 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112804052 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093093497 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109965334 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092584433 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109926173 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127147567 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126553778 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106023071 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124261115 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112936712 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092428314 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11444397 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112469366 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094071002 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119836114 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124235777 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093936619 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14018837 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112855888 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093108521 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125170477 seconds)
  done (took 8.23814714 seconds)
done (took 157.237942749 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.109471317 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.144964874 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.102530573 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.171508589 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.086924948 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.143769827 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.120981395 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.124847127 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.087172227 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.108398385 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.087543685 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.111456633 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.152907968 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.107623502 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.088458186 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.111346655 seconds)
  done (took 2.677024327 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.185698476 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.286042039 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107056796 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.112992964 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.093906077 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.112151169 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.092156319 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.115551653 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.088453207 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.122322257 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.109563243 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.091155754 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.120421077 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.090676359 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.108977891 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.090017958 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.120798658 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.090026819 seconds)
  done (took 2.961994894 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.116997688 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.156372541 seconds)
  done (took 1.100084451 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.128372103 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.189421976 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.307985044 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.165111941 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.117331861 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.132438077 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.165858114 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.128396855 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.197764995 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.130756356 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.110272409 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.116527887 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.13953656 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.101754973 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.119717167 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.094863213 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.142929327 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.117300607 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.097539328 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116458062 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.11651994 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.116624582 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.119788919 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.097856161 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.18615696 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.130782583 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.094997178 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.1179316 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.11576801 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.097518271 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.121524031 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.130558327 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.110434428 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.193064203 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.100432617 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.188470219 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.102913023 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.115441581 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.096039572 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.115517327 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118388899 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.09958708 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.131823262 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.094242941 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.118155754 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.123422564 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.097253368 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.11662391 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.102679506 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.125103839 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.122921668 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.100775372 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.187203028 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.103494829 seconds)
  done (took 7.752399895 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.844413328 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.159588376 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115317933 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.953984983 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.146583111 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129162723 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.84622186 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116775449 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.268699289 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.078960387 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134622978 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.129361206 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.215672787 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.281752688 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.158086578 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.343895297 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.719303886 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.129311625 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.12400609 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.159795918 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122956333 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143554055 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.113574519 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.425667072 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.117278872 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09201128 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.122397945 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.126917318 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168451105 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.092048379 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.119726067 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.187708657 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.294634779 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.187719789 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116774106 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092165015 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114458635 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.175859564 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.277010517 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.222820952 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.17769095 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08970781 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112466241 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.106192012 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.135660472 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089722274 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.194374419 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.180328707 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.181881642 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11874727 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.127305127 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.102413043 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126305495 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.168544042 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.112501339 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.347045397 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.326970871 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.114650393 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12289519 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112726518 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273938529 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.114324211 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.210098666 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.142257841 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.218642146 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.0916608 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.822939228 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.171977387 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.114287092 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.101723392 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122642908 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119421452 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.103803841 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.173098445 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.38333485 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129436811 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.116704965 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092838584 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.232672154 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.094190193 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112634002 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.172784781 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.093830094 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.123490012 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.130394457 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106292008 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.20016381 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.25728991 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.128288225 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.100867155 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.121387528 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125609519 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.095411558 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.218412822 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.223626643 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.164909043 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.244060505 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.105618036 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.193380068 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.173628484 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126087376 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.178820831 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122742182 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110430888 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127331331 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.221678993 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.148417308 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.09352489 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.119696832 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.098480867 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.153538297 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.118289456 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.120624481 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.176524954 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.455905105 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.19294049 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.092636974 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.095591148 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124424774 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.168925849 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122135503 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26868999 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103049777 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.195704677 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.100753909 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.11099306 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.102706895 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.191442503 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10803836 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124505441 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126576069 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101740489 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.255858621 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.205979497 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130594621 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240198979 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.188736054 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.10386201 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.179669094 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124010401 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.175693146 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125453626 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.125054967 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094700295 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.812734727 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.127794318 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.100708158 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.121111501 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.198820216 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092418969 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.116427598 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.092213894 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.112911927 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.790083868 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.119272139 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.090022211 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.116616451 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101822406 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.123679371 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121007059 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.098259131 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.189022446 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.216910125 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.12882139 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.123057712 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.092365108 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.167567402 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.119423147 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.092407341 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.116587291 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.093634832 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.124163038 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.119627679 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.095333427 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.180492262 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.187081926 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.22524843 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.534723018 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113593813 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.093646454 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.236503405 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091295342 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.317053359 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121893473 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.231778892 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.175614717 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.089584489 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.345866998 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.19885916 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.200060366 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.096966063 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.177574789 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112737967 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.098960302 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.191620046 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093438944 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122054229 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.166228791 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.132265516 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.107292479 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.168361289 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.116178721 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.238312563 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.111147055 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.178977912 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.094865693 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.128132502 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.315924338 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.092977125 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.136230314 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.169000587 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.121017779 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.093333086 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.631386212 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.093551182 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.126374669 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.12433242 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.228593019 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.174639527 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.100974134 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123064604 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.127714874 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.171017789 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.221434141 seconds)
  done (took 45.60357694 seconds)
done (took 60.916312443 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.3090442 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.272945188 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.315422844 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.203111914 seconds)
  done (took 2.02998605 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.19562394 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.159373871 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.131533448 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.114008166 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.16223523 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.090734939 seconds)
  done (took 1.707671479 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.5017554 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.385552112 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.351897266 seconds)
  done (took 2.098489231 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.262620797 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.291592843 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.367283505 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.461606356 seconds)
  done (took 2.348412469 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.214023095 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.130842355 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.105080259 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.144669973 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.178476352 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.182650514 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.149603199 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.159013812 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.134429799 seconds)
  done (took 2.304803169 seconds)
done (took 11.346456336 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.132623145 seconds)
    (2/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.23592812 seconds)
    (3/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.311280227 seconds)
    (4/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.164468778 seconds)
    (5/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.193025091 seconds)
    (6/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.328328155 seconds)
    (7/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.250588658 seconds)
    (8/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.253898456 seconds)
    (9/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.241540828 seconds)
    (10/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.095667506 seconds)
    (11/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.119221054 seconds)
    (12/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.095011199 seconds)
    (13/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.221483577 seconds)
    (14/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.238829358 seconds)
    (15/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.275097302 seconds)
    (16/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.172599685 seconds)
    (17/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.184166074 seconds)
    (18/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.130172925 seconds)
    (19/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.168314917 seconds)
    (20/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.120248897 seconds)
    (21/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.149964731 seconds)
    (22/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.208939658 seconds)
    (23/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.206078989 seconds)
    (24/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.110526595 seconds)
    (25/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.147971856 seconds)
    (26/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.145555061 seconds)
    (27/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.224607132 seconds)
    (28/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.144942031 seconds)
    (29/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.26633288 seconds)
    (30/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.122647136 seconds)
    (31/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.132051972 seconds)
    (32/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.188536559 seconds)
    (33/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.20267285 seconds)
    (34/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.13627589 seconds)
    (35/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.133321074 seconds)
    (36/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.127799156 seconds)
    (37/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.202323929 seconds)
    (38/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.233934078 seconds)
    (39/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.129210544 seconds)
    (40/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.104345404 seconds)
    (41/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.135835965 seconds)
    (42/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.08824766 seconds)
    (43/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.147830512 seconds)
    (44/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.229421322 seconds)
    (45/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.16463717 seconds)
    (46/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.117504819 seconds)
    (47/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.118879398 seconds)
    (48/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.156771703 seconds)
    (49/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.096711025 seconds)
    (50/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.167231908 seconds)
    (51/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.213836207 seconds)
    (52/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.109698988 seconds)
    (53/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.153738091 seconds)
    (54/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.079101513 seconds)
    (55/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.102715794 seconds)
    (56/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.097920026 seconds)
    (57/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.122364984 seconds)
    (58/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.211486028 seconds)
    (59/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.079313166 seconds)
    (60/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.203894008 seconds)
    (61/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.109587927 seconds)
    (62/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.095675837 seconds)
    (63/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.150974477 seconds)
    (64/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.19475058 seconds)
    (65/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.127798861 seconds)
    (66/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.102783978 seconds)
    (67/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.110141591 seconds)
    (68/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.118191068 seconds)
    (69/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.12220716 seconds)
    (70/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.216852977 seconds)
    (71/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.101802471 seconds)
    (72/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.10980109 seconds)
    (73/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.149979249 seconds)
    (74/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.130597278 seconds)
    (75/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.194621581 seconds)
    (76/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.229852488 seconds)
    (77/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.119915865 seconds)
    (78/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.204940431 seconds)
    (79/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.079021184 seconds)
    (80/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.103868715 seconds)
    (81/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.079856648 seconds)
    (82/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.121603194 seconds)
    (83/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.197012669 seconds)
    (84/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.105285579 seconds)
    (85/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.10130398 seconds)
    (86/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.109438622 seconds)
    (87/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.120975398 seconds)
    (88/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.095879231 seconds)
    (89/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.101725753 seconds)
    (90/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.196165404 seconds)
    (91/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.107278174 seconds)
    (92/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.19756476 seconds)
    (93/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.121507846 seconds)
    (94/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.080414387 seconds)
    (95/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.191587229 seconds)
    (96/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.194779432 seconds)
    (97/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.098198438 seconds)
    (98/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.196673235 seconds)
    (99/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.12066129 seconds)
    (100/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.095267587 seconds)
    (101/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.08697431 seconds)
    (102/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.128377267 seconds)
    (103/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.155520292 seconds)
    (104/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.09203363 seconds)
    (105/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.120900527 seconds)
    (106/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.203435632 seconds)
    (107/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.138874956 seconds)
    (108/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.129224909 seconds)
    (109/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.09521663 seconds)
    (110/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.197381779 seconds)
    (111/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.120428869 seconds)
    (112/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.080945806 seconds)
    (113/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.135142151 seconds)
    (114/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.096241669 seconds)
    (115/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.159345358 seconds)
    (116/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.079125082 seconds)
    (117/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.114798286 seconds)
    (118/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.102777883 seconds)
    (119/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.11876669 seconds)
    (120/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.205546556 seconds)
    (121/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.081067837 seconds)
    (122/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.121064897 seconds)
    (123/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.080445213 seconds)
    (124/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.120987103 seconds)
    (125/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.111781607 seconds)
    (126/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.102023513 seconds)
    (127/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.107941154 seconds)
    (128/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.119435408 seconds)
    (129/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.079622548 seconds)
    (130/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.132302267 seconds)
    (131/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.097481172 seconds)
    (132/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.118069381 seconds)
    (133/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.147410692 seconds)
    (134/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.119757135 seconds)
    (135/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.09836671 seconds)
    (136/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.103156676 seconds)
    (137/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.080028837 seconds)
    (138/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.101962349 seconds)
    (139/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.117738393 seconds)
    (140/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.122385128 seconds)
    (141/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.099037929 seconds)
    (142/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.118158328 seconds)
    (143/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.088535373 seconds)
    (144/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.122071269 seconds)
    (145/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.098766022 seconds)
    (146/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.204039227 seconds)
    (147/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.145633852 seconds)
    (148/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.086431166 seconds)
    (149/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.123225127 seconds)
    (150/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.09931212 seconds)
    (151/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.111523057 seconds)
    (152/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.127290101 seconds)
    (153/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.123618282 seconds)
    (154/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.160407898 seconds)
    (155/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.080428185 seconds)
    (156/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.096069815 seconds)
    (157/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.140132514 seconds)
    (158/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.079608851 seconds)
    (159/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.102835087 seconds)
    (160/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.210956585 seconds)
    (161/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.10716056 seconds)
    (162/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.131699521 seconds)
    (163/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.080058451 seconds)
    (164/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.121233077 seconds)
    (165/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.079397116 seconds)
    (166/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.117910451 seconds)
    (167/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.08012683 seconds)
    (168/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.122335017 seconds)
    (169/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.081438079 seconds)
    (170/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.10304894 seconds)
    (171/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.091159425 seconds)
    (172/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.102970372 seconds)
    (173/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.104247682 seconds)
    (174/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.079525927 seconds)
    (175/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.116409889 seconds)
    (176/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.121210192 seconds)
    (177/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.147413136 seconds)
    (178/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.102331059 seconds)
    (179/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.09994837 seconds)
    (180/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.102602721 seconds)
    (181/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.106798889 seconds)
    (182/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.102051371 seconds)
    (183/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.080105935 seconds)
    (184/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.093144036 seconds)
    (185/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.104288032 seconds)
    (186/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.080620935 seconds)
    (187/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.198830326 seconds)
    (188/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.115090068 seconds)
    (189/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.081193966 seconds)
    (190/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.135063381 seconds)
    (191/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.101181306 seconds)
    (192/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.127695556 seconds)
    (193/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.12091593 seconds)
    (194/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.105001632 seconds)
    (195/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.173596872 seconds)
    (196/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.097000319 seconds)
    (197/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.079648209 seconds)
    (198/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.103889436 seconds)
    (199/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.118823357 seconds)
    (200/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.132271749 seconds)
    (201/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.078913305 seconds)
    (202/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.12023246 seconds)
    (203/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.078934511 seconds)
    (204/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.115748496 seconds)
    (205/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.088213379 seconds)
    (206/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.102795821 seconds)
    (207/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.092817028 seconds)
    (208/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.102280331 seconds)
    (209/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.081557267 seconds)
    (210/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.11756516 seconds)
    (211/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.093154896 seconds)
    (212/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.129630068 seconds)
    (213/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.10014589 seconds)
    (214/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.103321435 seconds)
    (215/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.096859808 seconds)
    (216/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.100834957 seconds)
    (217/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.097031953 seconds)
    (218/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.079937092 seconds)
    (219/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.102832986 seconds)
    (220/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.080739307 seconds)
    (221/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.102994758 seconds)
    (222/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.113489151 seconds)
    (223/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.103346641 seconds)
    (224/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.105885386 seconds)
  done (took 30.617382605 seconds)
done (took 31.480853623 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.139769625 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.131904145 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.10330946 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.126677461 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.147377133 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.10726628 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.128611322 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.106702938 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.126508345 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.095085097 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.117558224 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.104548199 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.127283511 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.14524028 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.106636622 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.1200928 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.095792963 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.128250624 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.104614565 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.130129744 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.147555644 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09733354 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.125250808 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.096701592 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.147667723 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.097106277 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.127264437 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.104383634 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.126602634 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.094486512 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.126850102 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.095456173 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.129318754 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.130508121 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09484925 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.119415811 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095178944 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.087656693 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.120022371 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.120844943 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.103687231 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.117812095 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.106884686 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.119526877 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.098792803 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.11841863 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094924731 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.130270176 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.094550416 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.126230716 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.097162334 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.131691827 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.093520473 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.117981483 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.094065869 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.119852693 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.104199734 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.118036677 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.127049632 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09545399 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.095397613 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.119178343 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.098731917 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.118829823 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.09668478 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.121026381 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.097006758 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.120877179 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.116384178 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.098316569 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094247057 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.120614325 seconds)
done (took 9.090487028 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.10491299 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.174152002 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.150192534 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.127605305 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.14807295 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.134024559 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.108505712 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.143410284 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.127541746 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.12059244 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.146805139 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.140886239 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.133999485 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.126830597 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.133281136 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.099592587 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.125664567 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.106840309 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.155660648 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.142716193 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.149869696 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.102666555 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.148013985 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.140154146 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.102699331 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.145368801 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.104074565 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.123471974 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.102180951 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.142137661 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.141662195 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.102903404 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.126257267 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.114719014 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.132819206 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.124349585 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.111140699 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.122751134 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.100522777 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.123478889 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.134810158 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.11488086 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.12318203 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.110341194 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.123108583 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.103915507 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.12769225 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.124985361 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.104039346 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.120668743 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.104223159 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.147520488 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.124607093 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.102628344 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.125234182 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.104011733 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.126004062 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.103914315 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.126130956 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.126738904 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.101022891 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.124971523 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.105033437 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.143234577 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.126272436 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.103069962 seconds)
  done (took 9.091294912 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.122943472 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.157445573 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.13417604 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.11111634 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.129360454 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.092052307 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.115612053 seconds)
  done (took 1.773566464 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.09824192 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.148137811 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.12736767 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.152045917 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.139646039 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.131552484 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.135673737 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.093829749 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.14237511 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.127240974 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.123435423 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.173833005 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.118740161 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.106187918 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.154033134 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.117452631 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.13087071 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.117803185 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.103170873 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.151711283 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122277471 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.117103115 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.131485407 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.095152817 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.140603718 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.095501302 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.187328005 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.129807218 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094710249 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.125534883 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.099258172 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.214093047 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.117976978 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.128796696 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093245443 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.146957352 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.116111205 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.124782341 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.14409024 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.101905347 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.141241199 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.101292724 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.127116684 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.123570231 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.10262487 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.133712726 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.107068898 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.127299819 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.101074212 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.148041793 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.129812934 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.118348419 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.120210691 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.098977798 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.129044192 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.101232939 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.132720213 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.099430313 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.148183131 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.125363965 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.122075029 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.146281407 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.141742308 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.122628031 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.136253657 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.117370108 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.143504327 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.123844033 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.103204547 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.126376408 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.122383547 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.12283185 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.12902368 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.110972341 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.127052572 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.123647458 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.146811967 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.099459842 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.131165928 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.098944123 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.123369378 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.095189959 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.135795748 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.099470359 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.122439144 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.136361999 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.1091938 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.124197307 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.099241217 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.141120986 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.122124076 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.106952202 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.130168301 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.099027342 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.136114038 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.146388376 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.105137579 seconds)
  done (took 12.978377863 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.100424179 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.095925247 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.126143655 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.120632501 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.097700193 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.096419573 seconds)
  done (took 1.559766417 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.130258996 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.125394229 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.113137554 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.129714296 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.17983096 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.146103376 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.124576873 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.129545098 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.142919982 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.113517501 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.145137442 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.148204006 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.121761742 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.130243027 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.125079933 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.129629793 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.149022114 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100198752 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.136849142 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100979672 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136267467 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.130217807 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.1010207 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.143762656 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.10537223 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.12912624 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.104784333 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.136897656 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.135233979 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.10561846 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.130633606 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.104870743 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.12766149 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.129477486 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.125329588 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.127467001 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122908161 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.108726228 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127441469 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.105889269 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.148461241 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.100129766 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.136139098 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.131950258 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.10520605 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.127553156 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.132911303 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.10545547 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.149436961 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.107587783 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.133661332 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.128834433 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.106132059 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.133122397 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.10360942 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.129463803 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.131545353 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.125673234 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.130956517 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.127589416 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.102723496 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.13042418 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.105710094 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.133196845 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.102877993 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.132878553 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.127098518 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.104594946 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124905734 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.104593497 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.132913609 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.126522281 seconds)
  done (took 9.912690509 seconds)
done (took 36.22105912 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.102107321 seconds)
  done (took 2.017490809 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.878995386 seconds)
  done (took 1.795471813 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.191032366 seconds)
  done (took 18.141422888 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.534788517 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.616214507 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.977049881 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.16978578 seconds)
  done (took 3.215753944 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.980476103 seconds)
  done (took 1.918639549 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.323048838 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.27024605 seconds)
  done (took 1.516969082 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.839189065 seconds)
  done (took 1.767741297 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.370274504 seconds)
  done (took 3.297786848 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.364195327 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.205356367 seconds)
  done (took 1.506877666 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.592944784 seconds)
  done (took 1.523808489 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 35.480948378 seconds)
  done (took 36.414935083 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.239117846 seconds)
  done (took 1.182742785 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.314982997 seconds)
  done (took 1.249751585 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.559773625 seconds)
  done (took 4.499562616 seconds)
done (took 80.973531942 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.109997595 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.134240766 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.110612158 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.130750335 seconds)
  done (took 1.419337761 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.114987888 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.126945074 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.107695639 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.128613659 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.112075485 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.127984213 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.102352897 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.135519019 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.102663935 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.131552474 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.128094729 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.104540783 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.129133745 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.103143911 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.126274526 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.104821178 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.132245181 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.103396292 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.128963479 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.104677447 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.128494004 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.129395375 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.107569469 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.127364498 seconds)
  done (took 3.788353386 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.10942813 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.100079957 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.127187026 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.09931563 seconds)
  done (took 1.372449826 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.115510503 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.143131522 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.117431859 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.135528003 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.143000513 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.118372296 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.12469658 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.099720899 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.126426318 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.110490126 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.126304099 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.118785944 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.143571408 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.11931989 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.112228987 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.117871946 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.097086086 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.143160079 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.110691433 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.13863824 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.099327862 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.135515214 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.107950766 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.139615328 seconds)
  done (took 3.886760983 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.17904324 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.138827852 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.148152005 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.173181932 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.125788228 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.124031634 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.124520813 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132204203 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.127276574 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.099292146 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.124054781 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.155005787 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130899819 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.129743888 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.099865778 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.130398697 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.107181711 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.130169201 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.101883497 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.138845575 seconds)
  done (took 3.564818093 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.110426112 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.124354479 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.095713661 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.123267781 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.106456365 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.12613044 seconds)
  done (took 1.633441716 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.100080202 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.094716576 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.119778836 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.094732091 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.124721233 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.09596903 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.11813926 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.095476064 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.094712344 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.121623082 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.094842762 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.118258974 seconds)
  done (took 2.215566628 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.503585925 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.123880044 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.125376189 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.100505557 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.129190954 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.098717457 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.140023916 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.098775777 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.180489971 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.125943825 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.114524649 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.178283055 seconds)
  done (took 2.863453183 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221558796 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105263248 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273657418 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.382007203 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140464916 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174571321 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.306754412 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174485215 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.194334242 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119317088 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229573845 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138662789 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163793241 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186147418 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147247084 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.191918493 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182732066 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207896628 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155469381 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2129248 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170572165 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175229694 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189370529 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159308646 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145112488 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164865208 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.099665855 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135342263 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180210833 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178347382 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179692632 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155038333 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145131891 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209024979 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220056552 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209932086 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.309596167 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141788074 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.19519443 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.19202966 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249249952 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148652422 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200537724 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161712019 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139271938 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188851598 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163900007 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.187406369 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.138946383 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123651232 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216730306 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184604546 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.18921332 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11960996 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.333281364 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153238564 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.127588034 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187231073 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222184515 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200080635 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175820189 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.105467599 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.219072296 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189986641 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189271296 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.127057612 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.174429391 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132693876 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183360497 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.204048745 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185273778 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174309521 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.21719034 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139802151 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145491804 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178406266 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162072214 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187077091 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168585933 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.127926176 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132334183 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144232359 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134544965 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.166457156 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131599917 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211549892 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143615138 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.191685098 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213143773 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167546486 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168858274 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172428145 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175039113 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155522326 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.09952443 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154655666 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.170532686 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16536625 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13869787 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138824694 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151991028 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.134562231 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159951148 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.104910008 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167375816 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.14148033 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17522345 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170963655 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.109900535 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172985308 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158262878 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.16971992 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179379044 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19471582 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138826492 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114467094 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202082664 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165935986 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.144479706 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184209896 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.194994531 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.17379118 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143911659 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176879954 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205286739 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149621528 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196050018 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122532794 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141811124 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.159078036 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165818832 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164372079 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161629072 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11012728 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.159654368 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200799748 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.134766032 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117405288 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181055515 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134763539 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13539847 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124143783 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145281265 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.149959671 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.15709122 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.120240559 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163314222 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167250469 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162813605 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16526713 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149053819 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201624666 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139517209 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.14172485 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155515452 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.125614972 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.187113511 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193527058 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109553663 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193461267 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.203661243 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204723486 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171514057 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11006759 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190022474 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139268366 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.127104857 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17395916 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14115773 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169487814 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.21741108 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20067932 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.174905524 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.160873049 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156440779 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174846118 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.183120167 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163163733 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.126569868 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170158071 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174197514 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.131052619 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.104061416 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.135592954 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146704703 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111350984 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140872566 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188517646 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170261517 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19725735 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167829886 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147462803 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191442108 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.133303189 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172213453 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.180690885 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118770418 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.220424611 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1890942 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173093148 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123613882 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178195349 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.128632223 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105787247 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.140607225 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.175398233 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140322699 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115714946 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151777443 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19187759 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181805721 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157347229 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211524284 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202523924 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201930339 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.102179057 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.172450981 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179617907 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165818157 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.169416908 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138786699 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.16906005 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.187682964 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152163422 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202108625 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171608269 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177005861 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207967086 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.165427663 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138910796 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130020513 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176088506 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148487459 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172597393 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154056399 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114592537 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162764405 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.143698072 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133176701 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18811695 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150635016 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187701248 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.166289088 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18249974 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106837071 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152326932 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168807959 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154958471 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.09811541 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17708314 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223358717 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123274581 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167474642 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182470323 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139541492 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.322061045 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19699671 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218801438 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11826072 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150594293 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169880909 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169288691 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171742133 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192015427 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150683777 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188601503 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141211967 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.152399905 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142362264 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128643015 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160592843 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.159647434 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.141169551 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.161970445 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.123376836 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218248514 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125021842 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167893632 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173312354 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.155980583 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.162981408 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119899817 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209474461 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167388032 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185825085 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.165207159 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.176764621 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194989709 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13359958 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108117657 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.13577511 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192254044 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111703169 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168381857 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.218360153 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206448395 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167628665 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177611019 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145696354 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.104917468 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168339521 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157226796 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207539377 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148645229 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.143724871 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201437968 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.158145519 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111796875 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173029669 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.293253537 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152384347 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18216817 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.09868406 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.308889273 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108902958 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139918746 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168243897 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179580513 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.112360585 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.192736707 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173776595 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152546187 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142446109 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145692812 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19886421 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24541321 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178746651 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183460446 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.1520514 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165479887 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171206119 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185245412 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123485224 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.153432659 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171524255 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191300145 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.194872245 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.140430248 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17001698 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144074644 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168382379 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209286433 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115165765 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194921868 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13976176 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174840595 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147485574 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104813995 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16796813 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.191687307 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141140955 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183871174 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166890113 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111319345 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134462003 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160368971 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167070406 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124088958 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.139974704 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185828839 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.137197122 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171749563 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162488016 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138382507 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166913829 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153578275 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11150939 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150372723 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154184747 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115056263 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.179298272 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190518743 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.138983246 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186684296 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180563433 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173491299 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168478616 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152292629 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.643428034 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.136513823 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19153251 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155445792 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196700862 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129402474 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17510273 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170168578 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157876937 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176620535 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157838454 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.229426375 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174321542 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.166395407 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112640059 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152422464 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153603049 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.111024301 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16122571 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171283256 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148239544 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.116376101 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.166112133 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155607417 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.15282494 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120251283 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193463247 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157074933 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189109789 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191659524 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148371874 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175049063 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18284513 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138188299 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.170029865 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182350604 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122497253 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159671051 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.139670709 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.143224703 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160627499 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.133333268 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168985727 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16923978 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169515848 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142806588 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.142619243 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169123654 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150895601 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169246192 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106666513 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.164795643 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167573968 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138804676 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.108878802 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165167921 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167411475 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.16709771 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107153092 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.182058039 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192319222 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.104128036 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142945469 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291456558 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167531217 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202418835 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.16174291 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14410327 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124175582 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163474444 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.16283159 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169008397 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.136166878 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112498937 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.139463178 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.188130114 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.16350715 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138050965 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191110202 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169120175 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197435971 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.155175026 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.272472364 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119102782 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164992506 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.139548232 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.109828546 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149342894 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14360688 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153385292 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.200492783 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189065306 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.16092448 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.125496929 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136308819 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.104551146 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142103818 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17220342 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162923552 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16645652 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123408023 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.127486113 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151622682 seconds)
  done (took 80.418444497 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.170278867 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.150626078 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.155845668 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.207939773 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176822927 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.264495402 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.215508706 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.237550211 seconds)
  done (took 2.609465221 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.113010199 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.144465357 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.149767363 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.132083463 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.132468228 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.360821828 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.145135353 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.106981219 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.193450683 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.144910112 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.130936719 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.633192139 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.10189089 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.134480528 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.124243486 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.131295142 seconds)
  done (took 3.901564045 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.259967356 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.541106145 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.898556927 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.254243896 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.234946879 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.162079702 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.742886739 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.19389074 seconds)
  done (took 12.315365497 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.140031356 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.15110985 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.268380829 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.183331594 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.168904829 seconds)
  done (took 1.949203639 seconds)
done (took 122.873688357 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.106900157 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.132532599 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.104785314 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.134065038 seconds)
  done (took 1.501005933 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.122256242 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.089261116 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.120803232 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.087561007 seconds)
  done (took 1.451430733 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.441770768 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.11876635 seconds)
  done (took 1.634099509 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.139003966 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.150489555 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.117986571 seconds)
  done (took 1.450167385 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.114210476 seconds)
  done (took 1.153808223 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.110519568 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.105900695 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.150377846 seconds)
  done (took 1.408123787 seconds)
done (took 9.636418914 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.134898929 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.431859411 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.393891825 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.147745062 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.728109208 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.387589041 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.095471631 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.162772568 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.173607964 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.099612507 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.146324847 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.678987629 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.046362315 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.349084007 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.031816836 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.446793831 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.712546362 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.100763013 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.133941307 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.100403905 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.075933176 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.099086353 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.129501791 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101359115 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.709239231 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.403829814 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.128997489 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.48204725 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.100730362 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.131427288 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.390651096 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.126125451 seconds)
  done (took 17.406433647 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.148081814 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.189363578 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.13592473 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102003095 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.130745881 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.101389832 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.136461459 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.112326749 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.18682978 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.127572312 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.119788547 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.127082381 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103983012 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.128048207 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.121704873 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.126999375 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.101929602 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.129956235 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.107046824 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.130491247 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.120000056 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.126968745 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.101487742 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.130061194 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.099500054 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.141276246 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.099206044 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.139554207 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.099507078 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.134085414 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.131463993 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.100967031 seconds)
  done (took 5.029549892 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.151930105 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.197476713 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.136281985 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135191111 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.178102035 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.128982219 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.213917317 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.136613859 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.19189327 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.128337395 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11903472 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.12990779 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.164727365 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.101432785 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.150436177 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.100424166 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.130988106 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.103222061 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.134954786 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.101933336 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.147611778 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.098887202 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.130305523 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101834574 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.128293416 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.114477303 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.128362601 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.138775367 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.10103426 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.131899391 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.10708737 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.127040737 seconds)
  done (took 5.338196832 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.11104586 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.135848898 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.117886707 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.145666218 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.104885626 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.134323236 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.108295075 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.13019979 seconds)
  done (took 2.027562756 seconds)
done (took 30.843420099 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.125790278 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.141889884 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.114821511 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.138086566 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.135759598 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.126008772 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.112402993 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.098518048 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.138999255 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.115759532 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.129283546 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.101049358 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.143079693 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.10511613 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.14385975 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.109111246 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.150220814 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.115852809 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.130574894 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.110843576 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.129506237 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.120646011 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.135304964 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.101047093 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.14715886 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.102584477 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.148204099 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.105225637 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.135025672 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.101599416 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.144873891 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.105779021 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.129232992 seconds)
  done (took 5.128388977 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.134132799 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.174730277 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.097887915 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.12754267 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.169056187 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.098747616 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.155780138 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.098680819 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.126279991 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.100076619 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.096912392 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.15487774 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.160207114 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.132301953 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.176875145 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.164103994 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.125364757 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.16725533 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.151240966 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.138421426 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.158362756 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.098396341 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.162971825 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.162114479 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.098667786 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.126975568 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.143935152 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.158311619 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.171499833 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.133641392 seconds)
  done (took 5.217569089 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.112623339 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.14805633 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.127550075 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.202222412 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.170527803 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.116068485 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.142794986 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.118874152 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.158774162 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.099801652 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.141218257 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.161608337 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.118370768 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.139605099 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.106692371 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.143530348 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.121382631 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.13153828 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.108417149 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.149101265 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.119246977 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.143121621 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.115478829 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.140422492 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.099955916 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.139979439 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.106256453 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.144734256 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.136574745 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.111053242 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.133204772 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.106077882 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.131995396 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.112219004 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.132949474 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.109166511 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.15211044 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.111665798 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.143790845 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.16446945 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.110980146 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.133545962 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.124221066 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.178416026 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.103590212 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.137637748 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.112202324 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.14051664 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.099776823 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.149815485 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.116286585 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.130267816 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.145563846 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.101459476 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.128671256 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110113469 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.130386835 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.104772263 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.137802183 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.1059447 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.149426626 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.110067568 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137248355 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.102993244 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.13581334 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.101387815 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.12777425 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.106623137 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.154184609 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.106667889 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.163379672 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.10078124 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.135720268 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.110253504 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.136406106 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110589223 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.130302928 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.108445607 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.140445278 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.107078414 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.139350285 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.104060403 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.135345079 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.119315035 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.146623907 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.138463864 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.107249501 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.136806839 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.104698932 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.132362185 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.115504236 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.131712589 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.105875406 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.14043469 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.101902309 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.132755086 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.108051213 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.135381746 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.1004635 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.150325676 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.106668328 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.129789212 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.119722199 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.131512987 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.104973085 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.139888377 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.113959588 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.130959344 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.105980407 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.136576248 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.100808702 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.135911979 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.104770274 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.130895105 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.114390596 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.142557272 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.106996179 seconds)
  done (took 15.859884057 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.255610219 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.232237059 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.20297762 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.315674641 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.154187259 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.128018885 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.228269984 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.182553075 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.13143675 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.171573934 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.188291381 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.192311025 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.101765998 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.165416965 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.233065667 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.321689485 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.164578947 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.144258825 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.171024197 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.155069175 seconds)
  done (took 4.906822475 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.120415028 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.170761691 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.160462874 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.127838313 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.133116916 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.115610381 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.133197377 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.147879169 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.103347006 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.137920314 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.101735091 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.139466638 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.104856615 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.134651142 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.119786014 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.148342483 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.106252822 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.138893507 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.147583611 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.108452446 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.132318583 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.152557156 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.111529693 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.160605774 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.110087559 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.146210719 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.101066847 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.138965355 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.0988699 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.131954284 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.107932492 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.146984334 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.138346606 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.103365628 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.136794465 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.10279432 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.127072307 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.104137656 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.132932381 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.106580526 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.147443113 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.10593384 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.131338831 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.103037896 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.13978302 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.099649739 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.106824947 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.138648703 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.135910437 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.111437466 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.137876642 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.107283103 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.139056656 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.114609282 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.128932397 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.111709543 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.144140257 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.135141219 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.109620901 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.129655115 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.101575271 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.105570841 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.131474572 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.107123512 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.137581844 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.147664359 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.111483515 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.134458033 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.107694824 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.135609905 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.105953679 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.1508905 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.152202483 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.101377312 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.128951174 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.125222424 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.099123667 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.120027253 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.111536611 seconds)
  done (took 10.959815309 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.132148975 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.131880904 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.121986087 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.167077656 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.116256826 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.141904519 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.102686309 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.152750845 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.109753142 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.141840731 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.108853012 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.146998131 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.159487148 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.116490492 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.131903377 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.118563188 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.136773522 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.143366355 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.15218628 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.163555613 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.114086545 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.137748261 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.116119982 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.143848006 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.135901137 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.145625486 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.165775925 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.108490806 seconds)
  done (took 4.836933621 seconds)
done (took 47.952712114 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.226671756 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.362616677 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.1404342 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.141283927 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.193271479 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.143050807 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.158003968 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.334096412 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.831092689 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.12936532 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.140325354 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.141104765 seconds)
done (took 27.004831153 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.199192928 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.734834592 seconds)
    (2/2) benchmarking "String"...
    done (took 1.455111433 seconds)
  done (took 4.25618827 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.139071815 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.138999131 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.387958036 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.137849486 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.155528024 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.155870459 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.141939582 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.141146039 seconds)
  done (took 15.319065803 seconds)
done (took 24.976496351 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.187589314 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.340041079 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.408830737 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.152690861 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.144328181 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.141422592 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.127155722 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.182199431 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.137914423 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.128799366 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.153990143 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.42239181 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.126059528 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.530427999 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.126257985 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.166201814 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.154422851 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.392339407 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.143039524 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.127160304 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.154136894 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.125732652 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.151340686 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.173262138 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.14538769 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.144999149 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.13221086 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.124727952 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.342201542 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.139129564 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.182384111 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.141984227 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.209509797 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.14195411 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.244935597 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.17503581 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.368075088 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.13335852 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.130098468 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.141230992 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.380404896 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.542875506 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.143165472 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.125865624 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.165935798 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.203707256 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.135267417 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.856875864 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.14506776 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.129036645 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.18288017 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.54257759 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.153335242 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.150396854 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.158900982 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.402781344 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.163097616 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.165351713 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.179253639 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.154430113 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.156114899 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.140349936 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.196734441 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.14236768 seconds)
  done (took 139.572727591 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.142566568 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.142974423 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.14438725 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.203730365 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.143806683 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.144746977 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.14164331 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.142511682 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.144024413 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.147424394 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.144961623 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.144450873 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.158311652 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.10697836 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.144233346 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.169876482 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.145601162 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.145263363 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.161135571 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.143685206 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.148092543 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.145076029 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.155529475 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.142675559 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.185232525 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.22613607 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.17775573 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.171549476 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.143628177 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.142855232 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.183265118 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.204651514 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.72846982 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.99845478 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.157347043 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.158603206 seconds)
  done (took 78.09759901 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.143567637 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.145231313 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.145304933 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.143708273 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.145030528 seconds)
    (6/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.175734309 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.143727744 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.697030383 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.694253129 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.866682164 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.18329824 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.438324725 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.42167619 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.144637715 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.236916002 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.158394403 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.144539182 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.162003652 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.172223089 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.148987037 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.146031474 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.694206918 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.161468413 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.305236689 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.317006641 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.159729789 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.176735031 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.543695532 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.146505287 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.177835025 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.474894492 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.192599441 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.145345849 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.516648444 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.497270136 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.26121952 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.146690913 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.178600521 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.147054232 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.426544392 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.145591223 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.147651271 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.147032077 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.151671271 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.814883226 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.149063502 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.699921352 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.148431398 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.081597922 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.145849865 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.147343806 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.33209607 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.835445186 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.162552362 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.147290258 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.150433603 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.147446922 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.147077895 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.179354024 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.339188714 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.262084667 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.150077829 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.151161841 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.179360246 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.149167109 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.349500204 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.150661377 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.33365456 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.208615962 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.250218868 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.697212955 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.150593033 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.24446249 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.264989212 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.147951561 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.147684685 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.14859317 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.148753402 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.258806226 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.146529793 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.552635146 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.320154591 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.16494712 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.451329926 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.242940156 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.147398068 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.514590745 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.151990844 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.150595092 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.913442836 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.245646718 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.147154128 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.149360423 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.149619359 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.150931041 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.55476033 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.699080373 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.378604872 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.150448293 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.764065139 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.154484833 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.565359085 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.697938564 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.831535388 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.153061013 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.263189122 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.321224888 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.168415829 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.150450002 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.439956325 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.148880828 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.212030721 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.149204653 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.549995333 seconds)
  done (took 359.965386025 seconds)
done (took 578.695898713 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.860302397 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.808632211 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.93993378 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.833029873 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.806249222 seconds)
  done (took 10.319913468 seconds)
done (took 11.389490538 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.338485587 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.337083715 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.211771144 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.340387867 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.182360648 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.359897314 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.320812699 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.176550319 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.259523357 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.232806415 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.257829109 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.205663785 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.190784349 seconds)
  done (took 17.486651392 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.427306054 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.15443381 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.23469845 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.395163932 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.194492916 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.414622076 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.462505717 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.15525661 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.305686146 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.166912814 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.16581015 seconds)
  done (took 17.151010307 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.419308258 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.154008375 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.22156626 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.416475512 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.195948041 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.414862936 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.453642655 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.156207576 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.294837212 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.166581051 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.166651515 seconds)
  done (took 17.132782192 seconds)
done (took 52.840417852 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.194838388 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.319775185 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.18303832 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.169140582 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.162856026 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.164585726 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.169588584 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.16247506 seconds)
  done (took 10.599569579 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.162676827 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.159367153 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.162986172 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.162290765 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.162192191 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.159809776 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.163059597 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.162338697 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.163059336 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.161503795 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.161820382 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.160387086 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.163021538 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.161868338 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.15937913 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.163464755 seconds)
  done (took 19.664513373 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.164185775 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.162801372 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.163070626 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.161633081 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.161759674 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.162242558 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.164998277 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.161893125 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.16105236 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.162183492 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.163909853 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.161833657 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.162336976 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.16421996 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.164227792 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.163460796 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.163058263 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.162963046 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.167259747 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.162204135 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.163631245 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.163676535 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.163127646 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.163453292 seconds)
  done (took 28.993060172 seconds)
done (took 60.330000957 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.165397613 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.168665234 seconds)
  done (took 5.409425318 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.22567173 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.225609706 seconds)
  done (took 3.529984369 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.165703898 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.164350076 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.167150276 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.165130092 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.166697987 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.165912353 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.167492674 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.164600141 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.165384247 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.166154589 seconds)
  done (took 12.736359 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.167149765 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.16627354 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.163106638 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.1670335 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.165319566 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.163767047 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.165853047 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.166890893 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.166259905 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.16332781 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.167519396 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.164332951 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.166726774 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.163585196 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.166829219 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.165035891 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.163534323 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.164526911 seconds)
  done (took 22.055223883 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.180954137 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.189524004 seconds)
  done (took 3.449660918 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.306735228 seconds)
    (2/7) benchmarking "second"...
    done (took 1.204800939 seconds)
    (3/7) benchmarking "month"...
    done (took 1.281640899 seconds)
    (4/7) benchmarking "year"...
    done (took 1.27244969 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.208244666 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.187226342 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.2076808 seconds)
  done (took 9.747787583 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.169872664 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.361950089 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.464509056 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.76267843 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.16839374 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.212291464 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.032951644 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.212253471 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.20299704 seconds)
  done (took 13.66844396 seconds)
done (took 71.67187233 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.160929232 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.205414575 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.178832292 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.174997423 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.503602286 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.167875758 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.162817775 seconds)
done (took 15.633720492 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.147964119 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.165407643 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.151032651 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.162445731 seconds)
  done (took 9.706522392 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.174921078 seconds)
    (2/2) benchmarking "read"...
    done (took 1.512718595 seconds)
  done (took 4.768695345 seconds)
done (took 15.555119377 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.169875432 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.169491538 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.169022804 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.167191657 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.170317904 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.166450492 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.165873884 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.168093273 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.168646051 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.169669868 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.169780554 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.169464127 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.169651226 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.171218843 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.168515397 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.167361338 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.171041028 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.167085222 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.167386912 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.167591465 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.169107946 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.166797841 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.167308664 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.167453819 seconds)
  done (took 29.125613208 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.17184952 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.169502678 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.170002943 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.172623501 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.169937304 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.172042686 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.171116918 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.169773881 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.171244167 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.172338778 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.16909121 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.168678021 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.171565736 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.168559843 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.17281185 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.169549035 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.171980003 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.169653704 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.172051418 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.169789605 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.171383905 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.169879545 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.170418983 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.172745865 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.170763589 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.169011672 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.172133752 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.169591563 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.172364737 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.169904699 seconds)
  done (took 36.205002176 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.178783864 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.180985461 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.173858107 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.173193664 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.174811142 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.174011487 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.174158339 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.173953977 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.174952109 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.172290847 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.172796971 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.171827465 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.172974642 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.174056075 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.173929462 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.173474592 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.174130032 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.173090236 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.173855855 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.173236023 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.173135281 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.174566427 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.173505661 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.17318068 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.173178572 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.17513454 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.174601273 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.173089233 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.174767808 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.173278589 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.175534121 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.175189828 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.176048353 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.175995711 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.174923671 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.1752935 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.180373228 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.185037123 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.176272427 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.174758162 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.176523239 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.176024243 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.174728155 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.176867207 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.176004617 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.177601303 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.176241592 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.175931579 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.177839157 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.178150667 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.176808775 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.177091472 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.176061296 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.176935538 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.176660268 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.176794924 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.17798654 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.176760701 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.176208593 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.177922424 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.175197949 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.176910803 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.176057375 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.176780203 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.176993656 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.177890591 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.176769476 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.17770982 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.17850406 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.179008589 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.17662031 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.179458025 seconds)
  done (took 85.743190818 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.180472195 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.176886609 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.174818792 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.175472235 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.175368802 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.176454209 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.17605006 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.177686853 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.175717054 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.177517681 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.177773742 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.177515117 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.176422522 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.17862531 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.178085418 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.175182822 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.178285019 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.174955251 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.179210532 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.1784744 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.179923975 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.177017933 seconds)
  done (took 26.989033257 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.181428284 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.18171113 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.177888329 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.181774446 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.177721328 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.181649536 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.179000682 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.18116585 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.178990989 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.177709166 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.177338155 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.179227547 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.179290906 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.175875587 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.17780539 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.179776437 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.181029816 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.180106792 seconds)
  done (took 22.318595914 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.177888131 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.178639396 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.180210973 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.175132503 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.178961944 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.180651921 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.177469077 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.181003226 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.179110725 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.178847721 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.180167854 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.181041888 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.180375578 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.177078852 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.180338609 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.179465495 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.180434004 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.178560619 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.179958111 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.178783214 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.179294189 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.183201606 seconds)
  done (took 27.037687758 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.180991985 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.181563913 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.179818488 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.179269315 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.179956358 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.181512779 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.180693818 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.178050635 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.181892159 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.182401966 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.178793689 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.181543469 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.182141576 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.179973478 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.178899353 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.178850681 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.183496991 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.180219879 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.18276093 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.180478058 seconds)
  done (took 24.707099558 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.182373028 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.185335746 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.183849201 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.185910138 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.182877237 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.18433606 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.18422197 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.184803984 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.185688869 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.186130918 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.186002149 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.184307821 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.18629813 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.185099394 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.185414359 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.185655332 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.186789306 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.185157454 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.185650357 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.184824133 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.187687034 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.184045752 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.186043785 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.186275805 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.186072599 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.184962029 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.185695918 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.184462104 seconds)
  done (took 34.281548096 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.187002638 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.184605694 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.182682006 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.181014312 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.182171419 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.181676421 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.182583059 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.183324237 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.184484616 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.184439635 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.186315041 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.184476336 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.185698508 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.185693728 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.184472355 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.18548669 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.186059634 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.185246376 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.183569362 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.184940672 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.18712355 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.186340808 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.185467822 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.185021779 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.18358871 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.186747954 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.184711775 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.183988072 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.18579295 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.183626772 seconds)
  done (took 36.635622419 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.227990152 seconds)
    (2/2) benchmarking "in"...
    done (took 1.225706624 seconds)
  done (took 3.551153504 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.185491378 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.18768767 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.188083573 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.183628072 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.185149183 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.186842003 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.187284047 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.184148653 seconds)
  done (took 10.585205717 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.186870181 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.187443391 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.187239613 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.189619119 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.18828747 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.188126109 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.193452315 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.205456837 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.188408025 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.189163813 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.197029572 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.197665647 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.190889068 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.189715932 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.188968357 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.189806045 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.187369435 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.188008167 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.188708956 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.189761535 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.189215559 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.192723552 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.191151033 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.188071713 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.191197464 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.201803912 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.192805642 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.189650328 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.188485738 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.192253218 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.190167818 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.186883673 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.189124084 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.191575878 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.192263443 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.190844798 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.199913623 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.209687386 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.196616782 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.189904319 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.191905924 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.187610286 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.190485862 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.193222051 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.19141703 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.190927825 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.192519512 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.187983219 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.189697332 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.194105897 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.197476478 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.190425228 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.186900372 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.196113246 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.19264406 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.198232723 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.207927577 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.196016538 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.203728947 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.202096776 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.205851379 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.214268333 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.193355881 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.190505398 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.203378995 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.217514036 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.200011219 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.207129107 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.189472422 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.192569574 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.19859552 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.205108533 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.216575525 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.192056298 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.193437996 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.193678078 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.194187576 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.193282047 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.200107459 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.212683837 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.192083203 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.194566187 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.204583877 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.217842957 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.194433152 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.192582398 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.192695358 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.19339637 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.194366118 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.206857911 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.209528596 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.194055282 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.193396818 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.193979883 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.194879251 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.194426358 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.19366031 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.194650482 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.192005506 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.195151479 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.194067402 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.19904491 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.204755723 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.192393862 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.196298378 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.203126597 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.195960948 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.194803959 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.200660838 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.195627463 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.196159357 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.199503693 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.202796124 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.192869149 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.198124733 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.20470911 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.195151827 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.197409774 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.195312344 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.195453755 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.204968893 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.222570932 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.197625682 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.195643886 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.199293582 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.207866203 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.196263294 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.198966368 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.196471958 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.19396391 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.192116127 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.196615677 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.196025066 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.198205247 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.196195578 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.198138072 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.194068776 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.195925882 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.195032676 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.198103502 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.197309391 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.196887247 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.198846514 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.198311583 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.196472481 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.198303733 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.203921506 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.198991948 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.199535625 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.198477713 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.191684654 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.198242433 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.199954759 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.197673638 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.197386174 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.198634172 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.198257032 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.197386227 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.199309082 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.198984345 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.198170667 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.198895751 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.203169184 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.19899598 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.20313989 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.198176653 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.19651948 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.198925755 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.199969201 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.198257959 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.200718443 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.198747992 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.204210987 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.208739191 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.199969042 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.197938398 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.201831025 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.200223019 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.200193794 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.201308557 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.204851931 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.209651657 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.199112337 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.207169149 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.199398926 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.201374806 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.203039514 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.200866559 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.200366941 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.201854881 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.206219385 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.209559286 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.214271417 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.224042141 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.20277889 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.206311103 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.202006093 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.204864831 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.204628446 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.200026619 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.203709052 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.201808319 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.200681153 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.202110505 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.20481132 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.203547099 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.202183823 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.203282779 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.203845624 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.201878278 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.202947911 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.204304522 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.203535254 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.199458613 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.20330514 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.200909031 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.202415348 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.199495093 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.202199193 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.203875293 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.203444872 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.202126627 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.209892353 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.200228762 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.205443759 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.203636176 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.202473673 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.20329283 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.205334966 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.206009767 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.204590492 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.210736468 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.221469569 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.204534108 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.210926735 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.22029008 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.203829345 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.207366152 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.20508226 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.201044244 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.207881235 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.213732077 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.204352222 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.204453506 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.203975097 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.204276109 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.206352694 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.211296405 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.201563867 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.20527503 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.204349611 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.206745485 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.201517028 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.20565519 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.20523617 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.206006466 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.207293558 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.203836375 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.205203027 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.206208069 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.204276397 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.206672706 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.206179193 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.209136703 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.213055408 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.211365245 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.205572863 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.209300532 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.206771021 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.215405954 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.205625166 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.207515285 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.207176717 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.218222307 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.227865846 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.21403094 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.224100616 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.206200675 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.212074413 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.22525784 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.212530902 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.208082307 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.206807783 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.206761149 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.208443482 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.204342139 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.208866505 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.208391193 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.207868314 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.209986073 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.213031028 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.207124346 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.20656222 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.206530333 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.208903769 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.209389262 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.207583202 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.207582486 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.210856716 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.208433005 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.20726716 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.20977979 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.214062625 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.224832666 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.209363191 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.208092682 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.206880732 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.20743663 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.209746316 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.208529272 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.212805476 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.218425917 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.212269461 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.218798265 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.209263721 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.2177359 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.207800509 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.214148709 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.217568427 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.205576934 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.208484155 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.208354221 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.211560074 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.21781309 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.227351894 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.212980923 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.21332171 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.211580702 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.210534387 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.210188394 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.209759001 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.209651645 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.209942794 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.219301641 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.230536917 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.215195651 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.212850151 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.207864706 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.209783205 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.210483631 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.209885957 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.21457851 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.210627823 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.212186633 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.210796024 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.211379327 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.212767839 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.210847404 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.213714569 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.208481319 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.213080235 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.218067643 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.230404449 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.216955605 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.212762069 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.219562068 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.210385603 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.219809988 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.229610806 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.212482363 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.211879397 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.212718087 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.213278043 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.211041605 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.214085154 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.21359692 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.213822687 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.21761788 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.213761956 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.21562442 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.213964851 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.212057651 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.212818382 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.222468658 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.238643766 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.216229762 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.218136225 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.212097225 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.215831043 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.21910388 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.212626279 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.212742621 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.217842147 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.22589972 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.221531686 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.213487615 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.214306937 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.21646622 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.215148229 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.214577057 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.214303085 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.214397403 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.215299328 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.214778669 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.214033499 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.218407415 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.215686942 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.215025126 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.216600372 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.216665409 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.225040327 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.213809328 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.216641796 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.215248726 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.216582828 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.21547064 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.214697114 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.214164662 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.216809123 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.214967549 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.217109302 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.224215184 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.223901692 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.218311956 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.216095077 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.214978922 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.216278444 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.218284155 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.215957712 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.216341468 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.21774252 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.21712721 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.714131481 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.217528347 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.217238564 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.216423601 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.216691586 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.216018041 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.220779801 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.226098684 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.21690558 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.214004014 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.219438631 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.218716891 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.218385554 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.219435607 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.224746702 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.220451471 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.230043439 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.229776002 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.222534047 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.219756677 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.22266051 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.228612894 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.218935439 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.220104623 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.218884589 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.22084345 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.217663327 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.225729825 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.218643401 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.224232924 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.217148743 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.219089432 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.226168762 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.238926308 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.21744565 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.220480811 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.22528483 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.219492949 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.217457881 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.218458831 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.219209658 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.225849629 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.237785356 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.219714579 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.220733052 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.217179281 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.222750833 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.224901693 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.221530174 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.221012027 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.21656657 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.220242436 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.218905155 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.221231279 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.219590422 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.220016021 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.221663904 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.225770545 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.230435248 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.217771485 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.22336015 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.22039479 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.220967297 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.221165725 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.22389299 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.219087166 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.218859699 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.222818671 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.22297229 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.222447633 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.224109653 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.219608453 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.222275793 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.224078362 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.220365667 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.224979272 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.234754396 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.231140863 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.219595327 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.22215704 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.223596099 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.223891527 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.220278266 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.223280608 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.222760295 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.222377661 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.222563808 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.222282802 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.223982155 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.226737193 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.240449413 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.245683299 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.22386658 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.221752969 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.22589317 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.22371198 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.223004567 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.223567079 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.225794275 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.228304354 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.231832421 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.223941852 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.230372241 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.241885813 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.225039977 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.22993819 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.227848783 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.232711083 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.226705963 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.224452838 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.224385382 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.230729431 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.241995438 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.226003867 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.233940605 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.255218856 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.24120401 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.223325321 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.22426681 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.224736659 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.223992657 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.225657892 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.223713331 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.225511743 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.224637073 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.223768496 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.224868311 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.230795103 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.226415131 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.227374953 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.224699156 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.224632135 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.225799112 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.223331135 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.225621438 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.226572613 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.226072829 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.225272609 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.227769139 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.228248329 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.239861001 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.2527294 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.226456483 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.226171969 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.223688251 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.230995041 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.230115466 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.239692321 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.235224422 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.227347628 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.227302139 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.22946696 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.227039601 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.228066242 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.228900327 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.228141906 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.227797353 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.224092308 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.240480467 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.250748688 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.233059924 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.226096009 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.228749925 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.228433982 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.228848441 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.226863324 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.229770251 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.228447005 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.231715502 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.231681192 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.229431938 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.228771936 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.231753998 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.238359986 seconds)
  done (took 723.312135123 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.227983608 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.227262866 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.226777805 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.226810349 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.226739368 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.227894635 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.227846352 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.227003816 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.227345706 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.228014306 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.228254014 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.227664182 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.228498743 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.227686217 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.228665734 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.228335296 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.229928243 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.228053422 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.22790764 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.227069008 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.227865363 seconds)
  done (took 26.917220334 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.230951457 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.227387122 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.228539793 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.231318604 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.228280657 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.230339708 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.229121289 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.230398039 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.230940748 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227718674 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.230855015 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231084655 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.228940969 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.229272371 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229094783 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.231740971 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.231504685 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.228367483 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.231470349 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.228340524 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.232072242 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.22895173 seconds)
  done (took 28.193133036 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.232609486 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.232285388 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.233139871 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.228027526 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.232476891 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.228916697 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.231847958 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.234354799 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.234188754 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.233625365 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.23280238 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.232552513 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.238990535 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.237857827 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.234723371 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.232216232 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.231542969 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.233099908 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.232169061 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.231207816 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.238158688 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.248465417 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.230599032 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.233186374 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.234517281 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.235566701 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.234066966 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.233058818 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.235005063 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.238969022 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.233674972 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.23513889 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.235731696 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.233485411 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.235620022 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.240018223 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.233495427 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.230974835 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.234541473 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.244949719 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.255819328 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.234531768 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.24096695 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.252872473 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.23621246 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.237991456 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.244542233 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.232223863 seconds)
  done (took 60.452182766 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.838498561 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.848723395 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.84815691 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.858618926 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.860439333 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.845567196 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.84820995 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.849661462 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.845465857 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.847144648 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.845922876 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.846041349 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.850278339 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.844664771 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.847656451 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.851084133 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.842146581 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.854472641 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.841230007 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.844006675 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.842400615 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.852178238 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.846901706 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.843228359 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.849802515 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.850199358 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.844825138 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.848411687 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.858564796 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.854820457 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.84597414 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.847903478 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.845531243 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.846159858 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.853462536 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.8475643 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.853102065 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.846210845 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.850409447 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.846306019 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.847308205 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.857952907 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.85994855 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.846607584 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.851568929 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.846167885 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.855650996 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.851565021 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.848772579 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.854312408 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.85662952 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.849170102 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.854232101 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.868678295 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.860289743 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.859173831 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.852389347 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.845895095 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.860803503 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.849118775 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.849124794 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.854658014 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.854134081 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.850669199 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.853680528 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.846564247 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.861255242 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.864370103 seconds)
  done (took 126.984418454 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.238608858 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.239114268 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.238263366 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.239376485 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.239267977 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.238950852 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.239901815 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.240827094 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.239721578 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.239287776 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.240047608 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.241804055 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.239521088 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.241741862 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.239329774 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.241520278 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.241014716 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.23994788 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.240678081 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.239310719 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.239644791 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.24074852 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.242099444 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.240779136 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.242321353 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.24098483 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.241989947 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.23985502 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.240375624 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.240865902 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.241095783 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.240516591 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.241497478 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.242855064 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.241789197 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.241782805 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.239873057 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.241367437 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.241384071 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.242359891 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.243027944 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.242401818 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.242564101 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.242188846 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.242862184 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.242872457 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.243250908 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.24383643 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.243679399 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.242861725 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.243543153 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.24422276 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.244540514 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.243744611 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.243203774 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.244342178 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.24472124 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.244822468 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.243788351 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.242836532 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.243014913 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.24437638 seconds)
  done (took 78.126421306 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.245842698 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.24439589 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.24177808 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.242496575 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.244344499 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.242672628 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.245285831 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.244401034 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.245931545 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.24705271 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246127067 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.243673513 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.245010024 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.247950016 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.244452022 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.244089832 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.243437874 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.243134591 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.248696109 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.245612125 seconds)
  done (took 26.043000951 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.244639714 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.246448727 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.244043315 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.244879758 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.245148341 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.24534346 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.24437803 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246940881 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.243665677 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.244484306 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.245993346 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.247209673 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.244012066 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.244286233 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.246647179 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.245720475 seconds)
  done (took 21.072050857 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.244601049 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.244513378 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.244539629 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.247938093 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.24637458 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.243865327 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.248005838 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.245269328 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.246543856 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.247171302 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.246652973 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.249233668 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.24835937 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.246540116 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.246450751 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.248708357 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.245220592 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.244019535 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.247496196 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.248621538 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.247107484 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.243958327 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.248094343 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.248092581 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.247262574 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.246109597 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.246019385 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.245716035 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.246512136 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.249340242 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.24744485 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.246673736 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.246183419 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.245428977 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.249422854 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.247281333 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.250017623 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.24990904 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.248370202 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.250399941 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.248279607 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.24733531 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.248893712 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.2503132 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.247176418 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.248828157 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.247835435 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.247781794 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.249199434 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.246870814 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.249731498 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.250283002 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.250301016 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.249199022 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.250374597 seconds)
  done (took 69.761970514 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.250879198 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.249549712 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.247694655 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.24962901 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.250271291 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.247680002 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.249928832 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.251531657 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.249978089 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.250326342 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.250039761 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.252236623 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.249240657 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.250969783 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.247783796 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.252260772 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.249485731 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.249272926 seconds)
  done (took 23.651680448 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.24910971 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.251225258 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.254492034 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.249450892 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.247995218 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.25294892 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.247140762 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.252914726 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.25193188 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.24879254 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.251161934 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.252281714 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.253044755 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.251134302 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.251269124 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.2487658 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.253646552 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.253368835 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.249747973 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.251004997 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.254599741 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.253503941 seconds)
  done (took 28.682712435 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.251292559 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.252076695 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.253944736 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.269353312 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.276066675 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.252954086 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.252973374 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.254097569 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.276347595 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.311038425 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.307352902 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.275669271 seconds)
  done (took 16.387530543 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.252495218 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.253233797 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.250803419 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.253114727 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.254833976 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.250268764 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.251344958 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.252016728 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.253322053 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.252288914 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.250054745 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.253872453 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.253985376 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.252268397 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.253418839 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.254085978 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.249587126 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.251549578 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.251732635 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.254537548 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.253290568 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.252439151 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.251427414 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.251588905 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.252018649 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.251326582 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254726505 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.251454909 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.250665025 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.255903104 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.254340467 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.252604164 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255267551 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254131092 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.256454974 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.254716315 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.251803915 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.25574949 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.25599676 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.253563083 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.253907 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254894034 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.25663182 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.25422845 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.256256926 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.252844337 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.253236285 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.253403831 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.254025488 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255187743 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.254600382 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.253793804 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257212395 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256702356 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.255952532 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257153025 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.254168058 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.252927106 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257384835 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.25459376 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255128965 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.25685475 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255036579 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.252994379 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258522532 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.253737423 seconds)
  done (took 83.909257717 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.256128221 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.254035235 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.256641798 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255798085 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254870625 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255258438 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256458704 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255524571 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254862687 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255573992 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257345356 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255684971 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255519221 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255891191 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.254895812 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25611033 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.256090956 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.257473184 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255097276 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.259824187 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256314965 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256074828 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257790898 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257593046 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.257043522 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.260843656 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.257579519 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.256142571 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.256781496 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.257568456 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25664714 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258338505 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.257501242 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.25933037 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.255569794 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256124847 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256943361 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.257246002 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256437864 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26135355 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.258838547 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.261191056 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258151979 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.259314374 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.258698913 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257095478 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257700318 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.259611103 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256920346 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.256711344 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259309427 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2588069 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.259081915 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258835422 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257805234 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258067627 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257441383 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.257512926 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258479552 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.25973858 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.260049118 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258190892 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.261491052 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258720066 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.25887133 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258778813 seconds)
  done (took 84.155170047 seconds)
done (took 1735.907504811 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.425613418 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.377135277 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.261753125 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.273499499 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.260322798 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.256081267 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.272019765 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.259397471 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.261524227 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.261521605 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.261756365 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.450265676 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.256721292 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.261920364 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.261976307 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.354830294 seconds)
  done (took 25.919210598 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.292784958 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.266725046 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.385263692 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.284597388 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.293603145 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.457549548 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.323579804 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.270401981 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.44684356 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.287668391 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.268940803 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.294116706 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.266814387 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.268057988 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.287011184 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.459637753 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.527949567 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.27385251 seconds)
  done (took 28.119110886 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.741002152 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.273569939 seconds)
  done (took 5.17772262 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.286669856 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.267828774 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.269515472 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.2650285 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.258095956 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.261328015 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.264591519 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.258862281 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.265650036 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.398005114 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.270742135 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.277370957 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.287340793 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.267982164 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.2642636 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.30726616 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.445717043 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.267308728 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.265215375 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.273310176 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.269212814 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.373798906 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.312564173 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.267596138 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.398222109 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.270839947 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.272477807 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.275340751 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.417410558 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.268557861 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.268619411 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.268611227 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.270141262 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.18760782 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.810789624 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.28484655 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.294312487 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.276355381 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.263933277 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.445928875 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.271606745 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.278201696 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.261691814 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.77845667 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.439089226 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.3951299 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.279060968 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.272940784 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.270652011 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.33859739 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.271680581 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.272488246 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.315739489 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.116398689 seconds)
  done (took 81.954050558 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.271115305 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.262496629 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.445486443 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.282520217 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.26116212 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.263422922 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.262894804 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.569425677 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.285525538 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.260214022 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.568583956 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.86422724 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.27883191 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.313657826 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.120287644 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.332244325 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.262216271 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.279640731 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.266995813 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.263835768 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.83064601 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.267234976 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.283986204 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.363087275 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.30204792 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.810173785 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.265668919 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.263630943 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.28762696 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.261569277 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.816725923 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.288489671 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.325195927 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.264063255 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.54696901 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.674354857 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.637073044 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.270159849 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.31770611 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.268338612 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.277111617 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.793346627 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.655939273 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.2682969 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.267554721 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.808906372 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.268554864 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.267353816 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.270172892 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.518960708 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.268021837 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.267886858 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.282239615 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.263264007 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.263761394 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.284851325 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.355099547 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.810541086 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.266915599 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.266935726 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.314754109 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.265036133 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.265683047 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.267370259 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.267813709 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.655509125 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.493889981 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.269826004 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.656681748 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.815660416 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.283287472 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.870174895 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.284979839 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.284816617 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.462557165 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.26732984 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.269255772 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.823679499 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.296315594 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.267163291 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.63684041 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.271439564 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.567219728 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.289897782 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.271107467 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.847882112 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.278023697 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.276269573 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.267835699 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.269723812 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.268454104 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.275393674 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.573361312 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.305962047 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.266517458 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.268765789 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.285913719 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.267761333 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.269839032 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.270092662 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.864177432 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.291861362 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.268908008 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.272228552 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.269573306 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.267760151 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.270241009 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.270054725 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.54036828 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.268528549 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.292471121 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.271659652 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.266932456 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.275721199 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.361787487 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.278969739 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.605850788 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.273439495 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.269751554 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.294412336 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.278732455 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.326922843 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.268126463 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.279115126 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.166147592 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.573265664 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.29095026 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.27177765 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.272554301 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.276564067 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.268531684 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.271357519 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.318266988 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.273520229 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.077008207 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.322246414 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.301518612 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.272175854 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.280621904 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.27041954 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.273768321 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.271234463 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.572936949 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.558700339 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.494788006 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.28852773 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.271643856 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.075292874 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.34151888 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.455203331 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.294773759 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.27175954 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.525240688 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.488380953 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.270136086 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.270307337 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.272041238 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.533463758 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.273974172 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.587856853 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.853979176 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.290473284 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.278937095 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.098677534 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.004046629 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.274874026 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.27836286 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.572576311 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.291095639 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.27273867 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.273974971 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.27578686 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.275458106 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.275332958 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.280645678 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.274669385 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.275105833 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.285716548 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.469702572 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.294551569 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.273189939 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.81294708 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.294102417 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.276316243 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.276546963 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.276658168 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.273992557 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.347526518 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.277018919 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.283309112 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.278281042 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.280715662 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.865700654 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.27723293 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.279135382 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.471255931 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.993673657 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.292534113 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.276909758 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.287527539 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.173963562 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.837093929 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.316858957 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.614849799 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.279820519 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.315591836 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.278232871 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.292533535 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.830275742 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.276163309 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.292356983 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.963273238 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.294319458 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.70703792 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.274777699 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.279074865 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.910141836 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.295297112 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.276984886 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.276468932 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.276252409 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.576378682 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.280014774 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.315910801 seconds)
  done (took 485.330766484 seconds)
done (took 627.660711717 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.277551821 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.276431745 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.26534851 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.279792054 seconds)
  done (took 10.281575847 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.292637837 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.284783118 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.284736806 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.286027643 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.28705085 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.287303954 seconds)
  done (took 8.906229675 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.278779307 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.278949007 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.282724179 seconds)
  done (took 8.025021409 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.499732202 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.303513397 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.619805512 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.305965692 seconds)
  done (took 8.913972139 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.284828697 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.286485497 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.284768968 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.285927946 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.286746748 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.288444989 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.285421584 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.287737378 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.287448812 seconds)
  done (took 12.759974405 seconds)
done (took 50.067328955 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.291420719 seconds)
    (2/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.329166422 seconds)
    (3/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.440736753 seconds)
    (4/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.331177783 seconds)
    (5/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.365155848 seconds)
    (6/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.633001629 seconds)
    (7/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.513645012 seconds)
    (8/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.266141302 seconds)
    (9/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.996927242 seconds)
    (10/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.320596794 seconds)
    (11/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.29569593 seconds)
    (12/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.292627671 seconds)
    (13/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.324599564 seconds)
    (14/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.432245531 seconds)
    (15/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.169904716 seconds)
    (16/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.320555366 seconds)
    (17/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.316132577 seconds)
    (18/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.288985449 seconds)
    (19/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.497448162 seconds)
    (20/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.295994522 seconds)
    (21/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.379913821 seconds)
    (22/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.383301206 seconds)
    (23/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.053466095 seconds)
    (24/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.305768797 seconds)
    (25/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.287792392 seconds)
    (26/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.542296482 seconds)
    (27/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.405488387 seconds)
    (28/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.506415852 seconds)
    (29/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.390798893 seconds)
    (30/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.307907138 seconds)
    (31/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.28969973 seconds)
    (32/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.378335275 seconds)
    (33/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.147755267 seconds)
    (34/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.623038721 seconds)
    (35/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.294934874 seconds)
    (36/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.30522865 seconds)
    (37/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.26669315 seconds)
    (38/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.284961465 seconds)
    (39/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.280028507 seconds)
    (40/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.328441255 seconds)
    (41/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.290276117 seconds)
    (42/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.336512757 seconds)
    (43/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.390577935 seconds)
    (44/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.303176375 seconds)
    (45/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.333244845 seconds)
    (46/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.504116011 seconds)
    (47/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.291753481 seconds)
    (48/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.356451918 seconds)
    (49/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.310160181 seconds)
    (50/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.298788902 seconds)
    (51/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.444847393 seconds)
    (52/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.314920314 seconds)
    (53/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.3086509 seconds)
    (54/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.268553019 seconds)
    (55/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.065070825 seconds)
    (56/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.362275579 seconds)
    (57/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.367090081 seconds)
    (58/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.943776162 seconds)
    (59/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.288574863 seconds)
    (60/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.269366162 seconds)
    (61/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.444876924 seconds)
    (62/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.295114377 seconds)
    (63/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.393232022 seconds)
    (64/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.329651807 seconds)
    (65/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.460153708 seconds)
    (66/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.933718267 seconds)
    (67/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.409055763 seconds)
    (68/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.318921796 seconds)
    (69/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.388724315 seconds)
    (70/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.41470047 seconds)
    (71/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.357248514 seconds)
    (72/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.310379762 seconds)
    (73/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.351003861 seconds)
    (74/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.292749191 seconds)
    (75/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.400195621 seconds)
    (76/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.937379294 seconds)
    (77/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.309819028 seconds)
    (78/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.420028547 seconds)
    (79/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.99732093 seconds)
    (80/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.368960069 seconds)
    (81/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.276246472 seconds)
    (82/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.390058926 seconds)
    (83/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.946750961 seconds)
    (84/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.310596748 seconds)
    (85/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.483040471 seconds)
    (86/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.368095395 seconds)
    (87/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.37714973 seconds)
    (88/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.298299932 seconds)
    (89/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.412120877 seconds)
    (90/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.386877388 seconds)
    (91/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.317550003 seconds)
    (92/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.415109572 seconds)
    (93/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.470995811 seconds)
    (94/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.417983293 seconds)
    (95/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.937460083 seconds)
    (96/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.422611533 seconds)
    (97/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.343944263 seconds)
    (98/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.419797709 seconds)
    (99/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.356109365 seconds)
    (100/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.369787719 seconds)
    (101/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.48095292 seconds)
    (102/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.329205191 seconds)
    (103/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.286801824 seconds)
    (104/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.322576788 seconds)
    (105/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.381854833 seconds)
    (106/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.118689617 seconds)
    (107/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.356828307 seconds)
    (108/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.334476638 seconds)
    (109/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.298354329 seconds)
    (110/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.128078649 seconds)
    (111/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.29710291 seconds)
    (112/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.270947483 seconds)
    (113/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.31960753 seconds)
    (114/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.047043449 seconds)
    (115/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.32646061 seconds)
    (116/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.447129332 seconds)
    (117/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.399930529 seconds)
    (118/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.370954868 seconds)
    (119/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.300658873 seconds)
    (120/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.369695045 seconds)
    (121/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.286761956 seconds)
    (122/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.38955755 seconds)
    (123/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.007649985 seconds)
    (124/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.362055999 seconds)
    (125/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.502503416 seconds)
    (126/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.641192351 seconds)
    (127/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.312372075 seconds)
    (128/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.290342186 seconds)
    (129/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.368046503 seconds)
    (130/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.49915161 seconds)
    (131/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.472861113 seconds)
    (132/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.315214329 seconds)
    (133/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.393028132 seconds)
    (134/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.288046864 seconds)
    (135/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.340205352 seconds)
    (136/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.273963376 seconds)
    (137/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.435692282 seconds)
    (138/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.056290208 seconds)
    (139/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.359767968 seconds)
    (140/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.347205618 seconds)
    (141/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.403400661 seconds)
    (142/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.301850795 seconds)
    (143/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.44112165 seconds)
    (144/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.30488305 seconds)
    (145/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.386930115 seconds)
    (146/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.06084759 seconds)
    (147/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.347322384 seconds)
    (148/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.333878378 seconds)
    (149/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.350011462 seconds)
    (150/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.288745495 seconds)
    (151/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.48107273 seconds)
    (152/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.306639624 seconds)
    (153/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.374778981 seconds)
    (154/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.380742995 seconds)
    (155/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.419189647 seconds)
    (156/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.491285431 seconds)
    (157/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.690203601 seconds)
    (158/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.308270318 seconds)
    (159/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.363333289 seconds)
    (160/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.956227411 seconds)
    (161/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.316520439 seconds)
    (162/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.38546212 seconds)
    (163/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.275718599 seconds)
    (164/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.299636369 seconds)
    (165/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.483381799 seconds)
    (166/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.311729186 seconds)
    (167/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.4402613 seconds)
    (168/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.461910526 seconds)
    (169/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.374098369 seconds)
    (170/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.381149617 seconds)
    (171/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.310210557 seconds)
    (172/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.946727581 seconds)
    (173/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.489298134 seconds)
    (174/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.94083716 seconds)
    (175/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.447264959 seconds)
    (176/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.403960532 seconds)
    (177/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.447312143 seconds)
    (178/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.380436792 seconds)
    (179/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.345808164 seconds)
    (180/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.506808588 seconds)
    (181/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.304542675 seconds)
    (182/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.048142215 seconds)
    (183/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.01427454 seconds)
    (184/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.38063335 seconds)
    (185/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.393744396 seconds)
    (186/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.48135675 seconds)
    (187/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.294140536 seconds)
    (188/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.32979251 seconds)
    (189/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.409946022 seconds)
    (190/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.504109488 seconds)
    (191/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.297793054 seconds)
    (192/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.302736502 seconds)
    (193/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.302006255 seconds)
    (194/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.277983796 seconds)
    (195/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.276691223 seconds)
    (196/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.30454637 seconds)
    (197/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.472366031 seconds)
    (198/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.298738343 seconds)
    (199/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.31291552 seconds)
    (200/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.329603911 seconds)
    (201/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.363702158 seconds)
    (202/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.31398311 seconds)
    (203/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.310948475 seconds)
    (204/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.387998796 seconds)
    (205/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.345164372 seconds)
    (206/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.054092321 seconds)
    (207/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.370805776 seconds)
    (208/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.284336618 seconds)
    (209/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.201204723 seconds)
    (210/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.322153186 seconds)
    (211/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.373721709 seconds)
    (212/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.474093361 seconds)
    (213/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.470228422 seconds)
    (214/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.183829883 seconds)
    (215/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.325589066 seconds)
    (216/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.375467729 seconds)
    (217/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.320687796 seconds)
    (218/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.278979314 seconds)
    (219/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.370930173 seconds)
    (220/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.377418686 seconds)
    (221/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.062148464 seconds)
    (222/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.457175919 seconds)
    (223/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.365335396 seconds)
    (224/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.513254459 seconds)
  done (took 358.903442428 seconds)
done (took 360.086048575 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.349981381 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.480890346 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.301830509 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.302642663 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.346232884 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.294183676 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.351631735 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.309296274 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.308665844 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.306299324 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.294425826 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.308945331 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.316459644 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.336877701 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.417981149 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.312046904 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.301680742 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.30446407 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.343643423 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.362080232 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.34692892 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.348813532 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.31580844 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.305679146 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.35115327 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.35311198 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.309109758 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.301722731 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.30152914 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.346857858 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.304531182 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.309425859 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.352711226 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.356902415 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.347026085 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.305521417 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.346309386 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.479694995 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.338653836 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.337668393 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.307522751 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.35437068 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.31481011 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.319080874 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.356751189 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.315344869 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.351389583 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.426237919 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.303850699 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.304029469 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.351466936 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.366463201 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.308916373 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.305377974 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.297119364 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.426380939 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.307189421 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.352084552 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.309458704 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.34872722 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.419715834 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.353440858 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.36782153 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.353581758 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.309220385 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.317792142 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.307406449 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.367028248 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.304239743 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.350696271 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.349763631 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.31221559 seconds)
done (took 105.447262109 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.435323946 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.305474265 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.46747891 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.306268459 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.47503984 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.454413658 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.303660047 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.304279306 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.303880247 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.133768609 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.30597147 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.304490377 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.307270947 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.305187784 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.439051124 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.307202772 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.304189794 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.024346669 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.304790528 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.452422402 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.307969564 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.305202801 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.30519005 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.128832769 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.308794217 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.301603724 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.45499714 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.30660306 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.024137032 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.299952189 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.304845638 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.023874698 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.45825038 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.324403808 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.31931947 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.315436676 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.475953928 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.326929436 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.440304079 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.439396467 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.468703513 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.345470754 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.300804851 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.306784451 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.309806799 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.308145743 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.306284805 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.332639716 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.305297424 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.308588896 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.028877216 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.320825321 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.316583118 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.307794585 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.307009576 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.327288432 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.307836755 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.311287813 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.459806274 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.309480192 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.439817747 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.134331199 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.137473677 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.311588287 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.304446014 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.30874572 seconds)
  done (took 106.846090075 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.376764228 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.384184377 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.428066131 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.326408068 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.361879876 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.43034665 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.325816207 seconds)
  done (took 10.838811295 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.316637705 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.312274531 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.361276557 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.360653748 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.310218361 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.527547863 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.312263183 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.322441177 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.307930224 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.386955428 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.312219499 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.312672764 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.317274078 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.305219918 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.359879751 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.321736887 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.428056342 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.31364773 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.31216852 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.466292663 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.310180077 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.318544171 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.388249608 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.324772225 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.313545406 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.320062681 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.260231093 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.312363568 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.30794809 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.312399139 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.308976428 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.438433074 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.313031194 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.310305491 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.309648577 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.471478985 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.312171638 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.308810303 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.313189664 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.311924315 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.312540843 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.314300439 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.309969498 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.308067424 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.312432501 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.337021138 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.314234535 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.313671417 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.314227575 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.314246843 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.388224446 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.316192343 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.310047892 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.309778889 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.393436077 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.322250077 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.314173725 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.31181772 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.313576653 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.313430617 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.468734659 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.36282691 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.31398531 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.362261806 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.316109237 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.313414012 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.313947624 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.312975144 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.406277424 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.31612948 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.364287267 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.312624955 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.542583876 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.340182515 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.317991765 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.31635914 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.318997034 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.314326763 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.312715201 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.321158374 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.31297046 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.316966381 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.324141625 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.311895345 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.312635391 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.498894667 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.475568707 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.314644358 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.32803907 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.321306475 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.314162528 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.387483152 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.31749069 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.312602157 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.367392347 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.432983787 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.392618723 seconds)
  done (took 136.177798818 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.330359281 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.330718441 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.32115156 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.342214425 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.319404948 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.319184643 seconds)
  done (took 9.173657323 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.319301429 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.318841231 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.315962778 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.316302069 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.318453171 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.318341716 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.319093262 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.316685174 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.322306939 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.320132363 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.318714182 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.318018883 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.318889434 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.319029919 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.317590281 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.320680648 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.3182498 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.318467676 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.317463227 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.317291006 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.316879198 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.320190025 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.320209465 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.321262088 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.326924568 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.320321592 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.339483091 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.317748128 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.315527251 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.322831217 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.339036735 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.319043475 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.320505341 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.326661174 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.322818874 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.3231313 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.321263324 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.321863345 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.318398828 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.320844573 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.319091573 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.319577961 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.320484692 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.322570669 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.322404768 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.324091567 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.327063851 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.342098857 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.321370514 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.322259302 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.321861439 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.321455872 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.320976153 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.32186637 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.325002514 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.341177848 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.326054434 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.321583434 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.322262564 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.324778325 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.32466535 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.320850364 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.323227145 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.324550791 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.318615708 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.322361243 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.323631248 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.326961807 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.321441298 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.321470135 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.318429871 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.321275365 seconds)
  done (took 97.394570621 seconds)
done (took 361.628820448 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.203763539 seconds)
  done (took 4.415015997 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.45630184 seconds)
  done (took 3.673666694 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.383929476 seconds)
  done (took 23.610897402 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.352794132 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.401093018 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.335177038 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.322777384 seconds)
  done (took 10.627993055 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.639551629 seconds)
  done (took 3.858360586 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.314160162 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.314329063 seconds)
  done (took 5.847072482 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.610650713 seconds)
  done (took 3.828020171 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.854184317 seconds)
  done (took 4.084225965 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.3159896 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.330102717 seconds)
  done (took 5.872749369 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.31809239 seconds)
  done (took 3.536279335 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 37.538476723 seconds)
  done (took 38.757766741 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.317441427 seconds)
  done (took 3.540537308 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.340744237 seconds)
  done (took 3.557601215 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.074454786 seconds)
  done (took 6.291185387 seconds)
done (took 122.713365572 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.316771676 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.322658245 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.319968993 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.317942388 seconds)
  done (took 10.494096993 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.377643567 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.378556804 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.375892671 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.37435211 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.37750741 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.375727415 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.347757005 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.363603972 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.375407683 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.376479069 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.379483336 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.373827568 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.37749274 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.351868343 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.376740221 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.381460174 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.376840989 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.377784037 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.350692483 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.372366356 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.326512953 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.375927189 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.37667586 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.326791089 seconds)
  done (took 34.069470351 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.823852401 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.396631163 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.477583727 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.378265414 seconds)
  done (took 7.294986551 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.404292862 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.403045325 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.415646028 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.454924101 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.466082788 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.416465076 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.351715725 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.349002421 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.330462699 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.403287128 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.453654417 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.393880711 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.482751473 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.32680939 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.529368655 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.323321231 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.328302237 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.402569368 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.453903452 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.484322368 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.325713504 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.404710935 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.408337033 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.397707612 seconds)
  done (took 34.931437336 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.3340873 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.340167788 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.324840981 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.340765053 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.326249384 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.324773036 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.327533263 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.33388726 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.327127698 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.32324471 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.326874297 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.338434198 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.329162669 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.325201576 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.331931146 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.327074409 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.332508299 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.331030946 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.327700285 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.33294733 seconds)
  done (took 27.825973435 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.32246711 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.319589581 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.672949294 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.578192911 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.323088662 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.324863001 seconds)
  done (took 13.762030342 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.405253303 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.575435297 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.330098895 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.708231618 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.803148926 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.333087875 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.329369242 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.595516213 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.927589401 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.913846383 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.392832629 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.407957815 seconds)
  done (took 19.949053668 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.323210525 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.324266891 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.331820041 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.338041986 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.387202833 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.345897936 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.336906199 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.321940054 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.390212845 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.406721005 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.349021361 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.38809728 seconds)
  done (took 21.468740036 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418543671 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.32388908 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.321711839 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361618757 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322538628 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.221985714 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.343478215 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.052937358 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.344114637 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.600262673 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324606956 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425862889 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.582445335 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324407074 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.328695168 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.30840675 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.557751689 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842630063 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325833827 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332503191 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364228596 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.332088434 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.337920259 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.559066471 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.325743275 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325603242 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.583690651 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.32430183 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.630093607 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.345342663 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337191222 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325143402 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.597848224 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999903429 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441387933 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.555433687 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328987116 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.32711979 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.35709746 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.333884116 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.331055133 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.32872714 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336743448 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327247299 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.32693424 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.338947239 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.068584066 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.352599454 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.326514689 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.330326705 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.608111301 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431356685 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.331969886 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.327208871 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418002524 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328974739 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.33099594 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426981651 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909328523 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337427309 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338587232 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.334740542 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.346597082 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345111929 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986909744 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.341656569 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.332788601 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.333602379 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327642895 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.338059985 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.349246285 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330206204 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.352387771 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328852722 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.217882745 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.350278356 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33179966 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910092116 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33111332 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.349496583 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.562463102 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328826586 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32839216 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.330282295 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.328339339 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.07752311 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340655829 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.316154184 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.353243218 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.058395558 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.572323476 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347570072 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357822508 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.552466842 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.30949096 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329374615 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.336549028 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326600848 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352818268 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.061757379 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344351495 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.330436272 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.589439216 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.539780322 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326214343 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.33743013 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.832232109 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360468234 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.34712018 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.329375535 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.561623574 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.943981488 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.34979659 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325193837 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350858505 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.329173873 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.11481586 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344675477 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.434893759 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.332506195 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.614186068 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.181434741 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330560533 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.400927486 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334742233 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.333003122 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.328847701 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334425786 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.331723505 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.549436351 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346661081 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.343103481 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.331302775 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330617878 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.329774998 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350460002 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.334361118 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.555554739 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346545528 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.61222508 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331454252 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329498751 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330223067 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.557580914 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.331446253 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.667654266 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.597316359 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346421396 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.333146127 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.364384493 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3537274 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436277992 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352593367 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.347052786 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.593709563 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.335119752 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.336087804 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.333297737 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.35602315 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34129164 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.340633764 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340443297 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.958503881 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330081996 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.345571317 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.314229489 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.349872595 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406603504 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.344091291 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.577298474 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.338983826 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343069927 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.34309378 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.344677677 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.566221247 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.348815982 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.339362034 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.421639051 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.833220252 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.972120579 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.354991934 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.336835902 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.334706124 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.335240687 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340388964 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337741719 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.340848792 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.565965912 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.354910742 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.341901336 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.96170732 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346848999 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.339281877 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.368391975 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.351768883 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.343782573 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338930118 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.336031113 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340609644 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358370472 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.349703885 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482417879 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.353517237 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.338236843 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.855483957 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.343049461 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.340247706 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.340441878 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37377153 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.337446301 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.203609046 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.604836833 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.343135712 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.644621982 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.356328305 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.392091344 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.339512356 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345912439 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358583603 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.349182033 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348882583 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.351860098 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.340957895 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346264252 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917893028 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.192957786 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908573468 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35858597 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.358151218 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.343289023 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.081280988 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357688615 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.339790241 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.591005853 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.078562955 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358377366 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.842399068 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.358068292 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.15577092 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.628581456 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.577663992 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352491236 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.346228773 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.632678235 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.560000704 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375307662 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.3554399 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345414259 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.32539458 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.936479896 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36032866 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.418800094 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.086783229 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364311201 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.345767828 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.34383009 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.339265356 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.791890921 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.360243459 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340883966 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.346881351 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.346936845 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.206051997 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.347526734 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.342458126 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998384853 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.354947801 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.845608982 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362093747 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.573679066 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.356085353 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.347337545 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.344398112 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.350258102 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.603486782 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.626910696 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347438952 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.352568636 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916316847 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.221829744 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.354694065 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34534143 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.135582091 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358138915 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.655747089 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.350046837 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.363187685 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369583526 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.34758825 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346121094 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.34137256 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.350491896 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331601807 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871414629 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.352287957 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353970213 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383437152 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350066948 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.603651021 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.359524248 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.964923975 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.581322766 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35218204 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389909738 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.350529484 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355279621 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.3377522 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.346158952 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.346877756 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422311934 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.572077941 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.35670259 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.333334758 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.410641287 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.559811664 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.347134164 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.347171417 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.62321825 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.347367658 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.353314612 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.251842252 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383061111 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.349719069 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349926868 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.353283838 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.367430912 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419963847 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.580469295 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.361376691 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.362883759 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.779048692 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365809209 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35274589 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.361388952 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442382174 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352230556 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.361007378 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.123450174 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.974658504 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245048662 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.980918649 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.637453581 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.353784253 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355986896 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348078321 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.51053049 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.348254366 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.657417771 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348934528 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.367035402 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374500107 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351481671 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352132998 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.566609038 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.626310274 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350349584 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361446243 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35474932 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.349642885 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.361218101 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.561860307 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876890368 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93643756 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353887172 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.364251981 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.098325717 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.641355255 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351966016 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351540653 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350601325 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.354871718 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.351623734 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.356347726 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354648804 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495376333 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.6374237 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042489631 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.379014927 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.37819627 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.867483207 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350387441 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.615438721 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354192824 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.588142877 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.980623625 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.102691357 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.621375993 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422293811 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.58561329 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.352032382 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.515017691 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.364117954 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.353916296 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354291304 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353231326 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.350940558 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.362293578 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.979231637 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.626240514 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.355110698 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.351354682 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388277605 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.362010321 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.578289571 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.116571784 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.577516767 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.36378247 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.357894068 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.352329423 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.986540087 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.643448975 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359961296 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.360432282 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.607011189 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.355382622 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.375764404 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.043280167 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.354189046 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938385204 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.332057661 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376124405 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369068083 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.115845072 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.987517037 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.357421286 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882833087 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357000848 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369523063 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.633792449 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.3627898 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.356347626 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635013296 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.361191119 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.355342941 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.613514099 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.979369603 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.155501574 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.371120323 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365876653 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.364489166 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355652754 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389184724 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356797463 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357747052 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.800275527 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.375674893 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35710363 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.36810318 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.367963458 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361317587 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.358819482 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356968244 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.363433139 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.35259087 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.376700413 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.378283621 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.458319448 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.962254776 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37895365 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.030337797 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.683790407 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.617559349 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.369258454 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.346875724 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.360642344 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3598348 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35882648 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358856531 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.361885072 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969228029 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.363919126 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.370794168 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.361892409 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.35846675 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.569769065 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.359038735 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.614279108 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359361746 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.379594063 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.344635442 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358593621 seconds)
  done (took 964.518340657 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.364889378 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.37371961 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.394029889 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.458957746 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.384321963 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.491593219 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.39542998 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.395603237 seconds)
  done (took 20.516779515 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.37356465 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.373961855 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.364214987 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.373803642 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.364482839 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.871614665 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.391598037 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.374567988 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.379545716 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.374354012 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.371047504 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.348759346 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.374409337 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.369945214 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.352910525 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.376684368 seconds)
  done (took 32.704456862 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.559903486 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.582657298 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.721288562 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.389601861 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.373770464 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.368360353 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.686843318 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.39305388 seconds)
  done (took 27.333958123 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.37258021 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.374459789 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.372439155 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.373829944 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.374730897 seconds)
  done (took 8.126126558 seconds)
done (took 1224.212873539 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.365832018 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.367266216 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.367185761 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.370664621 seconds)
  done (took 6.728354903 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.348707538 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.34757002 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.349370657 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.361292347 seconds)
  done (took 9.665668146 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.125799411 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.051822283 seconds)
  done (took 5.43698148 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.861849471 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.868094486 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.867673206 seconds)
  done (took 6.860070284 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.673450162 seconds)
  done (took 2.934070057 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.284638319 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.3651372 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.06703569 seconds)
  done (took 7.976998821 seconds)
done (took 40.859870821 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.374704074 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.614581163 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.528006578 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.3622731 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.525554204 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.51994971 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.227632099 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.362765983 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.362922733 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.389565706 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.377083326 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.531202497 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.140596443 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.618822805 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.138906654 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.712230787 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.5317441 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.367075529 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.369672809 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.36314386 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.250150273 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.36262401 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.397048667 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.365467454 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.53010568 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.513674396 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.376813887 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.714246509 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.376223284 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.381588454 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.510981008 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.367792458 seconds)
  done (took 82.824921033 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.379835694 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.365925946 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.369044203 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.385143143 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.378721994 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.365336837 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.401294176 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.367269681 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.383300113 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.364993777 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.366741762 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.372451534 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.371496297 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.369025696 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.377459344 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.367675084 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.374494154 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.367315082 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.385238485 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.367192184 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.385499048 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.387563547 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.3671869 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.385242929 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.395455847 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.367476229 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.386000094 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.367788584 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.383639964 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.367242869 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.373283049 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.386592621 seconds)
  done (took 77.297572495 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.368827079 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.368131856 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.377706607 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.36921159 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.382689065 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.376259372 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.369171101 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.374654084 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.368412325 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.372101277 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.367210504 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.380831242 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.386806132 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.379652671 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.369787558 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.369722146 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.386340733 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.376929286 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.372631296 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.383627055 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.37085831 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.369178681 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.370792356 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.366852924 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.371008888 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.370259875 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.383537433 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.368057832 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.36805871 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.399598667 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.381794216 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.372710972 seconds)
  done (took 77.260020146 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.650849696 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.376369347 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.377664931 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.368579913 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.37664499 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.378367068 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.370122887 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.655273372 seconds)
  done (took 14.822333427 seconds)
done (took 253.462428946 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.36829017 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.944546682 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.417009313 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.370832951 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.415112044 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.3979754 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.608229598 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.412206874 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.607463367 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.393387107 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.397677544 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.380202505 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.24762188 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.532909404 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.300049151 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.375830046 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.332000433 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.375737448 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.999231233 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.664906671 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.399303753 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.372828393 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.302528452 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.362153048 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.363295675 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.487751908 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.490134008 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.607089503 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.548114087 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.467454876 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.947680833 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.375666965 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.394954341 seconds)
  done (took 64.926469234 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.379837269 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.522319773 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.379633758 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.377856444 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.496846236 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.379856547 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.38041336 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.380167698 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.382864382 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.380380834 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.379973353 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.381530515 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.381402635 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.425362366 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.502295078 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.398267466 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.380830412 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.491984709 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.381734828 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.375194873 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.423061685 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.380814621 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.384173972 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.425882408 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.381902126 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.383355313 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.493527672 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.382788289 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.382041246 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.496262363 seconds)
  done (took 43.563404301 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.38464226 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.023495767 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.173695458 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.396645681 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.38312991 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.387641387 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.699108483 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.388039245 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.386759161 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.391091301 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.942606034 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.389555595 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.427574943 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.199405656 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.39185207 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.384497819 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.385323566 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.383169694 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.03415004 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.397938991 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.723706073 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.387936015 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.703422274 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.397696431 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.404567601 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.383139499 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.388943013 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.301799473 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.390573248 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.940641355 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.246930406 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.706348037 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.242662421 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.183508418 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.239218357 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.391520781 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.384218329 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.939155424 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.388633004 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.386099861 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.704420261 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.390450866 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.178522952 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.104850733 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.408334248 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.384732437 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.295875077 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.94464699 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.655267268 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.397748805 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.200860568 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.393777197 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.39003267 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.391193935 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.647304332 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.392274484 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.387024487 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.358339429 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.395836626 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.705707485 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.393281404 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.389432919 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.028357647 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.388451789 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.029907115 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.394038452 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.397760803 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.408901082 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.184586957 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.395663429 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.121325279 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.408197883 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.387772825 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.937234568 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.029934923 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.358895969 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.391380806 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.032081004 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.250589769 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.702048618 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.398693096 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.281259769 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.711199583 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.395078853 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.391552111 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.390684079 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.38924074 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.467303117 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.70502326 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.054330036 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.118450744 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.379315711 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.717611073 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.40470742 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.39202892 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.356921018 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.39340168 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.390674356 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.179151731 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.127116726 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.413802035 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.398515017 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.134838661 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.417075872 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.714751252 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.398778785 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.191996933 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.395954951 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.504691946 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.393581081 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.397074626 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.414209841 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.715218436 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.399382138 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.389321657 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.109432971 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.979644384 seconds)
  done (took 197.329564 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.396091692 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.38785516 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.384833482 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.410800385 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.388253388 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.394853267 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.385309459 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.388123442 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.390642122 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.385097057 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.38542831 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.394736458 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.393621507 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.385987985 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.385613362 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.410565821 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.395746279 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.39096509 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.404595712 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.383886481 seconds)
  done (took 45.125198501 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.392613027 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.025117658 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.986498899 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.395238989 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.388910792 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.395080648 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.458328052 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.392868603 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.390274567 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.736065261 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.589000275 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.412796771 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.390689041 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.391339303 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.981848589 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.390808696 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.736018549 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.029450434 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.397378425 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.029194595 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.388757823 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.394441507 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.393818549 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.024800525 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.739944457 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.717222788 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.463051847 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.032554213 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.393436994 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.392518043 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.026302863 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.398965638 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.394542806 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.995599174 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.40892352 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.410716309 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.392993332 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.461943163 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.465914845 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.740683441 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.101569063 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.717851956 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.408210158 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.572111723 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.39470871 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.381441213 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.027717587 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.416841068 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.385913645 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.395682792 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.402178947 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.983625814 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.418433431 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.984511332 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.414376767 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.395495126 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.031442814 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.989888762 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.005943523 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.58929226 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.416892873 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.718276259 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.397980215 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.033463652 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.418201073 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.39786286 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.398248032 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.592745984 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.050324484 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.725385522 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.744829344 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.745712441 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.401165208 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.462009271 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.416302168 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.79871897 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.463038861 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.837052151 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.745498687 seconds)
  done (took 128.613383508 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.68909625 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.519519532 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.829914838 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.050035636 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.393651222 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.522922581 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.518672397 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.673233107 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.406906054 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.468125756 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.122561126 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.500631185 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.180996131 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.471707623 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.502315749 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.55434107 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.83988747 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.396500165 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.07973002 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.105476461 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.399392491 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.506484797 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.989140381 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.642530424 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.397688231 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.968583176 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.415216243 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.100781884 seconds)
  done (took 54.535268691 seconds)
done (took 535.361049975 seconds)
SAVING RESULT...
DONE!
