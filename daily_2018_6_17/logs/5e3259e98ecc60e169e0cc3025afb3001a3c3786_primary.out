cset: moving following pidspec: 10661
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.977737104 seconds)
loading group "string"... done (took 0.586428658 seconds)
loading group "linalg"... done (took 9.674031923 seconds)
loading group "parallel"... done (took 0.184221334 seconds)
loading group "find"... done (took 1.53311314 seconds)
loading group "tuple"... done (took 2.184695357 seconds)
loading group "dates"... done (took 1.504254513 seconds)
loading group "micro"... done (took 0.239556305 seconds)
loading group "io"... done (took 0.587054916 seconds)
loading group "scalar"... done (took 46.771693429 seconds)
loading group "sparse"... done (took 14.427695196 seconds)
loading group "broadcast"... done (took 1.173963225 seconds)
loading group "union"... done (took 13.107023018 seconds)
loading group "simd"... done (took 2.735937557 seconds)
loading group "random"... done (took 11.015124496 seconds)
loading group "problem"... done (took 1832.997918687 seconds)
loading group "array"... done (took 26.748778762 seconds)
loading group "misc"... done (took 1.187929355 seconds)
loading group "sort"... done (took 3.937909037 seconds)
loading group "collection"... done (took 19.634711375 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.763612877 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.146910852 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.219554131 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.376401466 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.244097225 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.166640959 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.17517604 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.583401382 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.02127022 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.290280021 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.156495263 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.594517254 seconds)
done (took 6.430729658 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.264535758 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.389714214 seconds)
    (2/2) benchmarking "String"...
    done (took 0.181681071 seconds)
  done (took 1.207553119 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.079402435 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.187352906 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.11761363 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.116724805 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.101898357 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.115242223 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.116033687 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.115721649 seconds)
  done (took 1.510026813 seconds)
done (took 3.708279652 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.555325162 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.865408042 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.573346406 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.176546824 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.205592016 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.184077498 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.322014269 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.169515956 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.128860348 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.113837915 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.211253617 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.397110399 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.516666192 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.059127615 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.107847528 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.115430349 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.10220676 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.752948635 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.086778267 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.138077361 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.596340944 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.124598072 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.122499849 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.13313395 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.208529058 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137831307 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.172042264 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.092920201 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.674020858 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.106243579 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.238523044 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.08846431 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.181454239 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.257512115 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.0844526 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.113307657 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.675944768 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.188030144 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.122581333 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.12110288 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.653928144 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.085981286 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.246194382 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.113645272 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.118075968 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.186170866 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.125379389 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.099155899 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092480592 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.102720581 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.162212774 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.480377792 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.111211291 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.174268249 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.11341579 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.703305619 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.102260014 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.159881622 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.146791379 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.113916661 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.08801248 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.114427138 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.158345323 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.115669629 seconds)
  done (took 20.529834282 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.165311623 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.170641881 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097316777 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.145367991 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.162710145 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.084445134 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.101842633 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.08333877 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.131057674 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.195481489 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.143880143 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.190560082 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.079523146 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.105285961 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.14774802 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.255492362 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.110260934 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.125393461 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.10395016 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.109610215 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.130339717 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.115191442 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.114032178 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.115452149 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.174226172 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.208388291 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112251134 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125295209 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.102194619 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.119826858 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143760073 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.152167392 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094797274 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.088836893 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.205322786 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123342864 seconds)
  done (took 5.496083343 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.230173497 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121026533 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.242240632 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.183761591 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.151094707 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.186212388 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.147332402 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.304962232 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.310573873 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.189625604 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.134662213 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.11523194 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096179066 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.085481561 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097868277 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.690900309 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.185715662 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.153948931 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.154686843 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108911726 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.101101098 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.390919761 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.106371497 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.085669813 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.107062359 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.08156346 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.138975728 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.212691281 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.110130644 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.350973194 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.122876292 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.11273533 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135414696 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.203717963 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.163128958 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.137994869 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.14730766 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090510469 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.103536521 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.239650892 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.09721034 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.103020016 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.097566978 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.116669793 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137577408 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.137637466 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.104200558 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.116924486 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.253086268 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.087045117 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.12566454 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.129214647 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.218794042 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.141328112 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.085013198 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.390420927 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.104231439 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.108547104 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.10085331 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.303877397 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.142838303 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.086424587 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.099233188 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.106370388 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.083130698 seconds)
    (66/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.101986169 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.1128284 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.453691651 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.100884702 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.172717809 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.073879946 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104369652 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.110556187 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106707792 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089703905 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.123726796 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.100188481 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.082575731 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.100471879 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.083966268 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.106105079 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.124973982 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105457321 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.0837943 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.16537026 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.122485496 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.103670759 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130967265 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.104143995 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.099846002 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132744548 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086572695 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.104068302 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.177776417 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.108709253 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.126702899 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103340154 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.132277543 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.100826549 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.214358629 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.099308625 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.127821268 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.103860504 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115851712 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.128022763 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101041204 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.105616082 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.082177121 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.100984874 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.161834915 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.084639651 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.099316976 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.086818093 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.117325128 seconds)
  done (took 25.185037473 seconds)
done (took 51.849525735 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.522317384 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.125605407 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.124212054 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.12513894 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.123700153 seconds)
  done (took 1.745632584 seconds)
done (took 2.442047007 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.388390133 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.194172648 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.125947089 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.192096792 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.1107032 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.2163789 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.182860359 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.124773801 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.211494629 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.105885849 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.187723215 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.105670535 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.111071606 seconds)
  done (took 2.982815236 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.105340059 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.129083126 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.090490756 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.119250607 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.099240303 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102750806 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116974103 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.13648637 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102616994 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.110582088 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083889095 seconds)
  done (took 1.890970863 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.099421388 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.122260927 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08903665 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11774755 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.099872614 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101076459 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114378515 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.110152779 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.115417737 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.112070561 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084582898 seconds)
  done (took 1.862950224 seconds)
done (took 7.42502712 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.140088624 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.829860237 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.156838581 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.206532806 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.385479497 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.250440401 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.61344268 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.169058257 seconds)
  done (took 11.659245225 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.124561938 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.108711973 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.107754618 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.150023782 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.089671601 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.105093616 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.106725498 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.090553889 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.105560846 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.091908858 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.104585783 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.104509366 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.091503498 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.106046533 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.090330216 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.104771742 seconds)
  done (took 2.449670468 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.144321311 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.143339982 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.09788983 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.118299183 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.111896483 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.095688774 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.112792085 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.110960373 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.09549187 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.109888022 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.117598522 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.100932485 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.11570032 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.109576474 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.112537775 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.10361684 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.10936845 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.11358217 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.099409024 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.112625547 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.118036901 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.09706613 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.116972049 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.115808742 seconds)
  done (took 3.479085101 seconds)
done (took 18.286233505 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.181776913 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.105381804 seconds)
  done (took 0.992867233 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.155593395 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.158562783 seconds)
  done (took 1.026006625 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.119227733 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.104464375 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.146837845 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.122817647 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.104151357 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.089689089 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.140077374 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.104773428 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.088531227 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.105783801 seconds)
  done (took 1.841464146 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.093886631 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.109158082 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.117030872 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.155142482 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.102072659 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.109734773 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.109331446 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.094385399 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109446234 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.104313786 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.098682966 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.128022506 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.110991618 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.131441554 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.095048599 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.114228556 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.11896829 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.11071607 seconds)
  done (took 2.727740181 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.089218612 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.104843587 seconds)
  done (took 0.908489297 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.095117775 seconds)
    (2/7) benchmarking "second"...
    done (took 0.104067496 seconds)
    (3/7) benchmarking "month"...
    done (took 0.09399821 seconds)
    (4/7) benchmarking "year"...
    done (took 0.110000065 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.105372141 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.090869394 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.104232795 seconds)
  done (took 1.417855629 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.549209708 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.279284548 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.383342601 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.128079905 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.148843922 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.405183185 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.150230008 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.124169125 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.122379767 seconds)
  done (took 3.049783696 seconds)
done (took 12.675373334 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.096029979 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.241893159 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.603369487 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.12966713 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.088451582 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.163664863 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.327509081 seconds)
done (took 2.368847963 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.365368644 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.163461375 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.097603933 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.103747371 seconds)
  done (took 1.445625478 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.084236727 seconds)
    (2/2) benchmarking "read"...
    done (took 0.11246843 seconds)
  done (took 0.918776795 seconds)
done (took 3.090727812 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.12226449 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103698015 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.102661894 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.088254789 seconds)
    (5/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.10559863 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.087615881 seconds)
    (7/24) benchmarking ("one", "Float64")...
    done (took 0.101926065 seconds)
    (8/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.0863479 seconds)
    (9/24) benchmarking ("zero", "Float64")...
    done (took 0.103818698 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.087705263 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.101384531 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.0858669 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.10219897 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.101974506 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086685504 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102373943 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08620981 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101810081 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.087406638 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103092231 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087190305 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102171777 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.101448081 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.088573913 seconds)
  done (took 3.088365864 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.112452577 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.106934879 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.108878455 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.094998268 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.110972484 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.108543001 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.093341581 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.106785459 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.109651757 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.090951325 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109717876 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.110621771 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.090361875 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.109761333 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105528596 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.094249906 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.109565925 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10603818 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091128243 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.11127666 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.108165801 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091554926 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.109338124 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110123966 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.096403708 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109628131 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.105266259 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.09155621 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109660768 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.109929793 seconds)
  done (took 3.851776835 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.096617617 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.09924487 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.085200138 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.113531903 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.084922481 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.104109188 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.100153925 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.086499329 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.101388162 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.085321891 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.102230292 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.083747261 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.101306889 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.085789259 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.1037939 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.106543852 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.106026474 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.10216123 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.085106305 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.102532036 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.106157901 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.085299396 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.104093848 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.084925595 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.10075786 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.085209144 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.100973271 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.085545463 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.10141806 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.100540374 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.091026035 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.107780242 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.084661672 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.115497975 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.107328163 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.085556418 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.110410754 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.084379726 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.101155964 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.084608625 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.101530685 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.100635366 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.085373575 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.113039462 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.089122794 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.102273502 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.085799409 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.102907163 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.214244119 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.091127352 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.099376904 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.086233419 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.102965691 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.086352456 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.10786387 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.099893622 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.087088259 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.099906212 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.087528398 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.100540099 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.085863724 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.100328936 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.092063662 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.102854182 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.127908372 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.097966772 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.100828994 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.103186988 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.089261406 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.110632824 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.089317787 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.122463782 seconds)
  done (took 7.860839918 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091625465 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.116419926 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.089979932 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.10700399 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10196277 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.08653028 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.112612667 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084956319 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105835163 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.122106563 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086820171 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10703811 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090178719 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10519138 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101546708 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090157165 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112606306 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101808981 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.086144172 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.105940941 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.086895027 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113213418 seconds)
  done (took 2.94110532 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.263398404 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095391762 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.157929392 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.122083182 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.127827484 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.122811819 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.094113322 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.110909887 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109929176 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099227081 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.117101309 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110289006 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.128825951 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100622454 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.117270445 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.118817894 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108190401 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102809303 seconds)
  done (took 2.943530921 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.107014024 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.108824773 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.132206064 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092315058 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.108956645 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09092548 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.115697499 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.122177687 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.10731155 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093174355 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.117753743 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10753575 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.091811687 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107355251 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091773983 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.108753949 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.107688816 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091862538 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116803001 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.116421026 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.11618715 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100307927 seconds)
  done (took 3.092999009 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108540985 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108364183 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.143626805 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096513764 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.103381155 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10353496 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.09832816 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.107589671 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.11459653 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.092238869 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109426708 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087172655 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.116680199 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108950521 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.10027984 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108617947 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10763974 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093013544 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10822023 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.08839785 seconds)
  done (took 2.847617291 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.18455635 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10728889 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.124937035 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.13645457 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122762846 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.10716963 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.134920875 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.123594129 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106416191 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.1384619 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.124320234 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.122914076 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.136322152 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115121682 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122733386 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.136038367 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.13558515 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.135661158 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107167212 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123343265 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.139330539 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106747498 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135913976 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.123354705 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.124186838 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.106488507 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123143741 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.131298094 seconds)
  done (took 4.281899397 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089302086 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104175348 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.088513492 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.104535907 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.08904182 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.105512297 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.087464096 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.104221071 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.087624648 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.105126658 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.104686062 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.088025872 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.103416927 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.088444989 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.105884821 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.088499271 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104909965 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.088745172 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105054224 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087878562 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.105393311 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105426553 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.089246615 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.105406085 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08843398 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.105520844 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089551079 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.105435168 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08968773 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.105817056 seconds)
  done (took 3.666438653 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.103012688 seconds)
    (2/2) benchmarking "in"...
    done (took 0.13243898 seconds)
  done (took 0.984519606 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.090542699 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.12582765 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.085719461 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.113091841 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.117556061 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.089243882 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.117690622 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.117307444 seconds)
  done (took 1.607519006 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.158542136 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.158533475 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.09561206 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.120515193 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.157382403 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.15028394 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.17521285 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.112492207 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.09346916 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.105018644 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.154291926 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.104003007 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.097950235 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109381552 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.111655498 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103127957 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.104705588 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.100725801 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.115454236 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.107954124 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.095889322 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.121615669 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.116617841 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.101410367 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.107568379 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.117415353 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.102935427 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.120078937 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109157455 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.099236245 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.11201566 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.102110716 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.094642772 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.113990216 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.088659281 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.154876134 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.123719198 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109764688 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.097301422 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.113711002 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.116968239 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.087295342 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.114597917 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.11111002 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.100030987 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.112922125 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.120949335 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.08829845 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.104807905 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.089843174 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.105569943 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105934419 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.086479764 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.113644206 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.096607158 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.124433299 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.109808289 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.090906563 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.109547655 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.108183601 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.093378143 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.107715483 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.11588509 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.094018657 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113861122 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.113205178 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095660878 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.105224183 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.086339493 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.105307501 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.114194133 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112489767 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.118537012 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.112668044 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.096076924 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.107658266 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109053106 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106577411 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112833004 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.116785832 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.095516683 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.115738546 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097670718 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.108508844 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.107782119 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.09919325 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.110266761 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.093234207 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.104243233 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.126851425 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.092749185 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.106080897 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.104539394 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.099337332 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.108635114 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.094289291 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.105591104 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.1147222 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.08597261 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.112503705 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.113605454 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094484354 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.118322057 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.113003076 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.09663549 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.114500139 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.149496337 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091474848 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.109384197 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.104496149 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098249016 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.106414989 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.096546801 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.104994657 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109387188 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.091227315 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.114452199 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.115368592 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.093628975 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.113469567 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.097852965 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.118406826 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.110398185 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.087494893 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.108906493 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.111351251 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10164019 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.117150061 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.093495318 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.106840387 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.106098129 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.097263444 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.112346098 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.111411456 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.096547748 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110950746 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.089021141 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.106362988 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.112717817 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.099903196 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.10840242 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.110547747 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.09888626 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.111998669 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.094384696 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.115701014 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.107587383 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.087374663 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.116164444 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.108634017 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.08935935 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.119177958 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.108943667 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.093347914 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.109717194 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100023035 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.109738612 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.11395587 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094280253 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.114610129 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.096857397 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.105736349 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.110952748 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.094493469 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.118666824 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.109658207 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.089548611 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.105270513 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.097178542 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.105565492 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.112084818 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.088752985 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.110411377 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.097071186 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.107931791 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.11235036 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.090918793 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.12596959 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105418243 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.115584408 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.115133857 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.100023938 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.113544568 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.112173051 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.094842814 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.116613107 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.114724614 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.0989497 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.113022664 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098571351 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.109815835 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.106536633 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094847217 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.116096584 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.087026481 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.106585625 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.105257226 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.096382767 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.119584944 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.095497455 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.115803842 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.112172239 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095103619 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.119257278 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.110094601 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.096812305 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.10630901 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.0953352 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.121229665 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.116962174 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097958308 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.118875461 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111933722 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.090399289 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11857185 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.093404652 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.114962201 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.107827055 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.088213845 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.106973984 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.096949573 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.11139047 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.108380511 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.087884598 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.116905563 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.098197655 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.112084114 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.105311371 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.096591947 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121226828 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.109454438 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095970213 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.11087049 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.114068844 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108907496 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.106699807 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.109770371 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.102298906 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.114273471 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.088449567 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.114642122 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.111285148 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.090297944 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.113036858 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.093588925 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.11185902 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.117110889 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.095100105 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.106122334 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.092176133 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.113430357 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.107121197 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.089223169 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.117835701 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.093589679 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.112483044 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.122020683 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099742149 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.115891852 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112762305 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.095491058 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.115986797 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.115471432 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09336988 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.115535509 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.091338317 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.106750873 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.112210265 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.087274686 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.107897022 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.092345709 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.114628292 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.112293606 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09490387 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.112843786 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.117836091 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.09363918 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.115364629 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.133652328 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.090496629 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.106377205 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.112589622 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096242108 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.111702114 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.109907007 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.089851501 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116482056 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.095561539 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.117588996 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.11044717 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.088162363 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.115821841 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.092886736 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.117869593 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.115453882 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.098645267 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.109312723 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.095949304 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.112638064 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.123288286 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.090127706 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.120103194 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113873263 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096004206 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.112051957 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.11269538 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.092478394 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.107872278 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.09428517 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.116325657 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.113231165 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.096520773 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.115016491 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.111594839 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.09239086 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109544945 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.098932921 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.113417121 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.116736323 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.089781884 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.107437339 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087957231 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.116508156 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.117164825 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.096946638 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.109040008 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.094221649 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.117665997 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.11351644 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.088503111 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.119549911 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099537963 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.116378117 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.121968152 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.088218751 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.111912906 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122988823 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.087936813 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.112982649 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.090435172 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.108196577 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11738445 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.099070786 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.119380334 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.111630367 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.089362996 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.107702226 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.09766677 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.114399955 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.10693187 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.09061059 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116091551 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.09024574 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.113536518 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.116527968 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.096288396 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.118219825 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.098302506 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.11463927 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.112570855 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.09726787 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.10912554 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.088145427 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.107229352 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.112736888 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.098209175 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.108894393 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.089059752 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.116069456 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.112333817 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.093555028 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.114317869 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.091967991 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.118014234 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.114645718 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.094118999 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.120988281 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.107357872 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.094811524 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.116173345 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.097090349 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.108030286 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.114125626 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095171648 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.119274959 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.116457912 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.096430052 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.115477557 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.097311034 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.110925374 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.1144269 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.097179488 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.118002104 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.090127524 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.118393122 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.118647314 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.09189229 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.113165341 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.112683456 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.090883375 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.114508039 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.099709346 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.113356084 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.120980181 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.097601259 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.113519649 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.097180513 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.116472151 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112936828 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099303383 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.111956502 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.117370143 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.090177622 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.120155998 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.113814143 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.099565733 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.111616243 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.091541402 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.115113735 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.115069778 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.095972991 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.119458755 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.098802276 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.10892662 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.107703533 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.092186877 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.112378187 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102876129 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.120029365 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.113273579 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094813365 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.110759711 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.107845398 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.099232766 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.10797328 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.092636941 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.115029861 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.117732638 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.095348815 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.110516912 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.095803893 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.11836587 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.118187333 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.097878531 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.109854688 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.116123015 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.098661911 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.112611586 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.111239209 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.094064981 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.11756331 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.09639983 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.112663669 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.108150315 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.104019618 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.119041609 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.118542023 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.092951873 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.116623822 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.111219448 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.091544788 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.118351403 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.094018564 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.117528709 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.115139712 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097935727 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.125148214 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.107414669 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.094486391 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.123858525 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09560448 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.120049893 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.10944138 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.094880839 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.119063901 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11770671 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.09212633 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.108739034 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.091457151 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.113932619 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.108460739 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.092197038 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.125213383 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.118047793 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.094913105 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.115329412 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.095792621 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.110025302 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.090953229 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.109324447 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.118959787 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.093219885 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.122949735 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.109634216 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.089528513 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.109891787 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.097641437 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.115056683 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.116857775 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.091653977 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.11076731 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.090435095 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.115818488 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.122358512 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095127292 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.117876629 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114402907 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.095278102 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.111299008 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104468513 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.108557145 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.115110184 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10727067 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.118712403 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116293015 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.098552659 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.120716667 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.118466037 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.091727635 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.11772435 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.094871621 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.115097687 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.117785831 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.100273019 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.133003367 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114163104 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.09020422 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.115272387 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.093865577 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.1086506 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.122877416 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100054549 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.119426403 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.115584006 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.092710673 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.119826219 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.120746777 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097021783 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.115105211 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.11495333 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.096572284 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.112436845 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.094989974 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.111978452 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.119170487 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.100293749 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.116564426 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.102020673 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.109745354 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.125927607 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.103796439 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.120001302 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.109047265 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.090641071 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.109698755 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.092698071 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.119444364 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.091828159 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.114777073 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.114543871 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.096491759 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.116923009 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095644662 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.11543178 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.119823687 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.098053822 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.10916393 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.098830655 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.116084783 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.116706912 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.089204698 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.118141973 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.117329182 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.099636324 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.123652969 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.099136664 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.116065574 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.111866769 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.098202578 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.112564645 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.117126832 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.097210835 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.112050079 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.091073797 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.118686508 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.119738225 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09726888 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.120313702 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101152819 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.115211415 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.119401281 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102879676 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.110501415 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.090855194 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.118607279 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.111466861 seconds)
  done (took 64.763830766 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.169820346 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.098310292 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.112907929 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091770793 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.142883435 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112603541 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11091524 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.094440664 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.113027049 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.128491572 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.093568322 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111485641 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.137317196 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.146077122 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.140415776 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109763517 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112074034 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.112423866 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091699812 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112773186 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.135958007 seconds)
  done (took 3.291044644 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.117371942 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.134488504 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.131421481 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.135275846 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.123818915 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.110585504 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.132261092 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.130458769 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.134205993 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.126284792 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.134093803 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110261354 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.125596192 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.127140481 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.12561598 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107608111 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.135347206 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.125333306 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.131156052 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.131341769 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106695799 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.13288751 seconds)
  done (took 3.580923252 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.103907036 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.118199254 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.100141271 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.114908406 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.09807189 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.114362422 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.123184949 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.094371303 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.123591896 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.094544795 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.111177599 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.11428915 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.100282361 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.114242877 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.092418497 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.115568404 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.123182293 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.098250146 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.119128029 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.09420288 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.13892536 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.113889615 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.094262545 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.11164697 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.127529762 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.098710597 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.117803982 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.097489306 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.112431911 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.116848481 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.094224736 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.11626083 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.098921921 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.112097867 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.111245503 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.098910095 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.118087044 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.094229044 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.114921252 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.11857035 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.095405124 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.119336054 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.121462206 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.095291049 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.113241911 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.097562334 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.118148537 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.093583184 seconds)
  done (took 6.046564113 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.156085846 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.178401195 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.107977351 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.163172538 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.114952234 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.134589954 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.120079237 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.158965892 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.122261183 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.102185322 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.13912824 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.138084722 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.125921858 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.106020251 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.124198439 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.126231885 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.106636134 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.120548288 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.130700208 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101075404 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.13048475 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.124825181 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.135241659 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.135642664 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.104782881 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.1235884 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.12155105 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.109759878 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.141926838 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.132812969 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.126235044 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.129481887 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.116722332 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.128696881 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.121532742 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.101916625 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.139958879 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.122202953 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.124020931 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.098814731 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.126137529 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.129095282 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.10572894 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.138307706 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.126743606 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.126327097 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101982229 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.118540841 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.134828713 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.121508168 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.111799318 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.141807691 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.123866094 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.126890273 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110267892 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.139911622 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.122355446 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.122762892 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.105929046 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.134695488 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.120979634 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.105031329 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.138720915 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.123576722 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.131959954 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.138072305 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110537963 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.129654868 seconds)
  done (took 9.493394454 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10968514 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.145886998 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.138657179 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.140899302 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10557823 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.125843769 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.125086643 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.126265031 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.106227114 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.133726237 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124824676 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.212193624 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.119370494 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.133817475 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.105653656 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.126910048 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.126257393 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125157433 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.106501115 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.126611862 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.125723024 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.139447762 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105887138 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.139915813 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140786074 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.118074599 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105274941 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.12697161 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.139178143 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.124758886 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.14155261 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.106174884 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.126772313 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.138005952 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.143219559 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.126202102 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.095416344 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12678209 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.126851045 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.105559575 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.120280823 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.138666056 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.125959263 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.099266131 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.125266233 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.125608885 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119142563 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.142119425 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.133739002 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.133710477 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.126654162 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.139013932 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107046335 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.126623424 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.13900694 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.149351049 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.139777922 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.138880126 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10735613 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.140033796 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.13990865 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.148959542 seconds)
  done (took 8.768850358 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095606603 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115712714 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.096280857 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.116236096 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.095526516 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.115854057 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.094408097 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.115972052 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095178113 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.115849431 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114277058 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096350768 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.115539637 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095435808 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.11507503 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095454232 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.115809943 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095060786 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114977295 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.094930902 seconds)
  done (took 2.945488116 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.107585596 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.138252782 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.120019169 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108367193 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.119735081 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.126614635 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.097659132 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119637968 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.119224355 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100125125 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.130675055 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.130660293 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099509252 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.129701282 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.130743549 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.128551466 seconds)
  done (took 2.746411555 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.121554959 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.133996782 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.174509382 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.123743438 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.117104428 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.107876015 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.116985079 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.093552857 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.116249371 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.125243731 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.102768034 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.129855867 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.116619298 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.0955243 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.119004969 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.102719254 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.115402992 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.12456684 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.096394838 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.17606494 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.128199537 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.123772886 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.098508509 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.120642512 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.123559721 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.106844304 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.128108053 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.117884574 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.097319714 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.118302262 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.121879381 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.108761748 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.11644549 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.104595364 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.116399693 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.117048569 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.09660853 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.119424746 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.122772304 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.097067454 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.113901029 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.102177266 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.11766859 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.118829519 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.095116591 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.118698208 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.095568492 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.127582918 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.122166476 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104199435 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.116662162 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.1259159 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.10449998 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.132087104 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.12789203 seconds)
  done (took 7.255947683 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.112895459 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.120886704 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.125783382 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.094386825 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.120827344 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107746508 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.121879528 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.122649689 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102153426 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.114701644 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100938461 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.123777727 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.12176305 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100279593 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.123905319 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.122417921 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.093620211 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.12173289 seconds)
  done (took 2.89204538 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.10706665 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.120418902 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.104771449 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.120408828 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.120533583 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099012336 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.115710935 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.09503979 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11559346 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.099655924 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.121961134 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.12031286 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094562362 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.119451068 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.099087108 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.120820743 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.119332077 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095860949 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.120941292 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094081458 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.121081093 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114676739 seconds)
  done (took 3.283259522 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.113129256 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.176762573 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.130380197 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.187485147 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.122230683 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.118216827 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.108316719 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.121618205 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.136943916 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.096307019 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.119259478 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.118038629 seconds)
  done (took 2.391314998 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12741987 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.16057478 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.118798244 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099075739 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13378656 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126118366 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12531291 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108512331 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138034295 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.142311076 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126866843 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137306881 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116057758 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139966261 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132490841 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132476479 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125904904 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105631711 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122026117 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.148310669 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126574939 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117082143 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127575728 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126926002 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127481443 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119257107 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139610864 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141975585 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126184269 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137712673 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133017659 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106161936 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139280543 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.143179664 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120792897 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116823313 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128412118 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.149505013 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133716548 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139779878 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.099734282 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135231727 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138713697 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135019172 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138792672 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104974743 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135831725 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126931054 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127629623 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.157177571 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132998361 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119307618 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133729256 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139066384 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137779382 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.15792992 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.143261138 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.141009467 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133831305 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143285372 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.139851616 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112656584 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140758465 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1440628 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132309747 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141540487 seconds)
  done (took 9.512561949 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.167413761 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100042644 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127973453 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.145187149 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140470202 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107295374 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127937393 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127296107 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106898286 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123298941 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.178249391 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127057029 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139631483 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140895284 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107201926 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127816669 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127190993 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140441136 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101781791 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.156956937 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127805054 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139275177 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139793829 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.14099585 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.142471349 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111791178 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128619192 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127430418 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12777729 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107720359 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135855287 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126755626 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.141058024 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.098569933 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141006899 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127592426 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127883951 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114410704 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128382855 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133530293 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141686823 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.149534101 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106596942 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130154845 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145035207 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128213706 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127749978 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102795912 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129436425 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102930826 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145653044 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.144779367 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.144554084 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.14125979 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127957078 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127403881 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107237179 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128041246 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127157061 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111527721 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141645032 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128128959 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.158148655 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12765019 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129147311 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119843447 seconds)
  done (took 9.422760572 seconds)
done (took 174.283758553 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.164193332 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.18377856 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.159330488 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.157169438 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.116595593 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.151242355 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.128537777 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.159712641 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.11533005 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.094420371 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.116835353 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.097179437 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.183344429 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.114914185 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.093796535 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.119088564 seconds)
  done (took 3.010242632 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.217110909 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.311394104 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.136316397 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.120811131 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102153342 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.118692247 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.097770917 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.122435409 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.117286952 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.108077411 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.118673931 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.118168987 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.109522896 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.119930582 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.117602 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.09680904 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.131283652 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.11746717 seconds)
  done (took 3.244759289 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.122362391 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.169774175 seconds)
  done (took 1.154505544 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.133177141 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.223566567 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.300804592 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.177835295 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.147427142 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.141910234 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.178928807 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.137179748 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.211501012 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.140386522 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.139949517 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.102927591 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.15030455 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.129398419 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.112393274 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.122990966 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.151072543 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.132095161 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.111944972 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.126235396 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.145603173 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.102960336 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.13057283 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.133132734 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.201027594 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.13989172 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.125006923 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.102939241 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.125366215 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.132400475 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.109226571 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.141567313 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.140631658 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.212004281 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.109011166 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.208859819 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.132668477 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.102096026 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.132366484 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.123104624 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.105814861 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.127628777 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.140448108 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.122404978 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.102819727 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.131512911 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.125103003 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.102444077 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.132853327 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.134166407 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.133099275 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.109522069 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.208709819 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.133461559 seconds)
  done (took 8.496568375 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.919961129 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.166585395 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099943361 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.042675936 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.155635915 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.139338381 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.923647079 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.123332943 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.289677518 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.917590101 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.140900304 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.12262594 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.292911828 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.280309173 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.193891194 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.399221039 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.756075172 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.137840736 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.153498674 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.173751983 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.129578198 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.152531208 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120546409 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.469715356 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.101349883 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.120755692 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.127614257 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112162172 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.210551388 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.099366733 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.125141948 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.230728544 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.291588095 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.240191245 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123777612 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.098512483 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120538166 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.19399392 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.305086201 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.251600199 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.214955817 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095026621 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.119236415 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.135969453 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122190968 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.118444186 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.212403827 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.201017176 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.222125521 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104635525 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.134142531 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.132414914 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.133555568 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.188880656 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.118397977 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.377529356 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.383666847 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.121038042 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109412756 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.140875221 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.30206981 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.120970901 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.267986915 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.149837161 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.251687501 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.098232028 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.826108922 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.215527749 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.120330014 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.109182881 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.129597114 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127616821 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.132999326 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.187842344 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.401838137 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.137658853 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103653843 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120313226 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.274218703 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.099081986 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.12157607 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.190013272 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.123854774 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130814896 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.115420953 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136459126 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.21969877 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.275707984 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.137476379 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.13167367 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.104919666 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.136648614 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.124322738 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.238878784 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.281187677 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.184220647 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.238799994 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.136357051 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.21464402 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.192196062 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.134685756 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.221749608 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.10855529 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.141203609 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137053781 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.25710785 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.162496042 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.123889342 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.10483163 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.131813317 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.165658376 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124745794 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.130447993 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.197263488 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.512547312 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.194545213 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.119844959 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102669364 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132463974 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.208901505 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108230611 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.299429561 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133511852 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.193319135 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.131185291 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.118719233 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.1092281 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.215595054 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.138102374 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130859491 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.112864796 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.13036497 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.298672285 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.257567712 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115212862 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.273683692 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.199552867 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.133493891 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.221738637 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108098539 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.217189374 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132799259 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.113524994 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125181098 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.819548618 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.136731073 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.130124568 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.104914422 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.210686603 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122128302 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.122140584 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.098772684 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117828923 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.854465701 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103073599 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.119934592 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.099884528 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.131372455 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.130584255 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.128328902 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.104766157 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.211591381 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.275207858 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.135589147 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.130535424 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.100212565 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.208873616 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.102689139 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.12134463 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.098598803 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.121954415 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.132299094 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.104212473 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.123684264 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.198827494 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.207993235 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.262433928 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.584618764 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.121185569 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.099226621 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.270873877 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121253942 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.346590588 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13193057 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.267749344 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.216445276 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.096674175 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.378953824 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.218479554 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.213524779 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.123541472 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.198120278 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.118843998 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.109554886 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.212073061 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.098932204 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130505633 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.185223595 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.139302755 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.137477 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.199929886 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.122395641 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.256713787 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.118950551 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.196815237 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.124723316 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.136025846 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.353787296 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.121529249 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12131435 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.210195428 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.126283405 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.09916214 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.752050439 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.121912014 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.112147482 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.132179529 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.265168986 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.214541906 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.108534509 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.131697386 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.136337299 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.188937103 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.259146966 seconds)
  done (took 49.570848648 seconds)
done (took 66.340673918 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.335686772 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.293150987 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.350292681 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.245782834 seconds)
  done (took 2.20436538 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.237732601 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.173740163 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.224057502 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.097853343 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.232531468 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.098027946 seconds)
  done (took 1.964210988 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.546234903 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.451379351 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.359934525 seconds)
  done (took 2.263297506 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.277249837 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.306344997 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.375317436 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.507681842 seconds)
  done (took 2.479191915 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.265032496 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.146490342 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.140977645 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.428257244 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.227267826 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.233975896 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.163331838 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.178263944 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.149219625 seconds)
  done (took 2.886279317 seconds)
done (took 12.702060426 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.382813458 seconds)
    (2/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.167466969 seconds)
    (3/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.174702095 seconds)
    (4/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.34402197 seconds)
    (5/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.118274104 seconds)
    (6/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.273437175 seconds)
    (7/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.174415589 seconds)
    (8/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.175285652 seconds)
    (9/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.264258192 seconds)
    (10/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.151849027 seconds)
    (11/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.131186694 seconds)
    (12/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.249583917 seconds)
    (13/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.17292183 seconds)
    (14/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.257201155 seconds)
    (15/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.214775975 seconds)
    (16/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.253765442 seconds)
    (17/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.169929904 seconds)
    (18/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.300528964 seconds)
    (19/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.205275396 seconds)
    (20/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.309769429 seconds)
    (21/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.185343563 seconds)
    (22/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.262997739 seconds)
    (23/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.137547396 seconds)
    (24/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.147691418 seconds)
    (25/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.113345974 seconds)
    (26/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.125573533 seconds)
    (27/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.140355055 seconds)
    (28/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.089534293 seconds)
    (29/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.120444311 seconds)
    (30/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.12694756 seconds)
    (31/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.246041727 seconds)
    (32/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.102360091 seconds)
    (33/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.130573449 seconds)
    (34/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.186937305 seconds)
    (35/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.218211686 seconds)
    (36/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.132141867 seconds)
    (37/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.107360981 seconds)
    (38/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.15809343 seconds)
    (39/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.141109841 seconds)
    (40/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.25908969 seconds)
    (41/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.159826191 seconds)
    (42/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.158917401 seconds)
    (43/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.193127293 seconds)
    (44/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.118678149 seconds)
    (45/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.128958028 seconds)
    (46/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.126509225 seconds)
    (47/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.152683438 seconds)
    (48/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.13193878 seconds)
    (49/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.134384148 seconds)
    (50/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.223697164 seconds)
    (51/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.175831366 seconds)
    (52/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.106757681 seconds)
    (53/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.128959986 seconds)
    (54/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.214448572 seconds)
    (55/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.146131852 seconds)
    (56/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.117013024 seconds)
    (57/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.255491388 seconds)
    (58/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.089584562 seconds)
    (59/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.163870697 seconds)
    (60/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.23166745 seconds)
    (61/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.102563045 seconds)
    (62/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.08919083 seconds)
    (63/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.126605085 seconds)
    (64/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.127987996 seconds)
    (65/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.181889745 seconds)
    (66/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.146316581 seconds)
    (67/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.115930599 seconds)
    (68/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.203362907 seconds)
    (69/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.116650888 seconds)
    (70/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.316470877 seconds)
    (71/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.206730141 seconds)
    (72/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.160439266 seconds)
    (73/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.08999624 seconds)
    (74/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.188609393 seconds)
    (75/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.131784383 seconds)
    (76/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.256733505 seconds)
    (77/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.220880786 seconds)
    (78/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.090058395 seconds)
    (79/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.129143219 seconds)
    (80/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.103626757 seconds)
    (81/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.203775529 seconds)
    (82/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.114377049 seconds)
    (83/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.119895603 seconds)
    (84/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.177445447 seconds)
    (85/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.129614271 seconds)
    (86/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.183028467 seconds)
    (87/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.089222435 seconds)
    (88/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.203777919 seconds)
    (89/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.088442162 seconds)
    (90/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.131072685 seconds)
    (91/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.097141386 seconds)
    (92/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.131779195 seconds)
    (93/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.140647475 seconds)
    (94/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.228159888 seconds)
    (95/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.149287921 seconds)
    (96/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.113287017 seconds)
    (97/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.163309824 seconds)
    (98/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.10442387 seconds)
    (99/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.114323162 seconds)
    (100/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.146111962 seconds)
    (101/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.148220685 seconds)
    (102/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.143521844 seconds)
    (103/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.130859156 seconds)
    (104/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.104409914 seconds)
    (105/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.206031373 seconds)
    (106/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.128796335 seconds)
    (107/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.118541532 seconds)
    (108/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.129452163 seconds)
    (109/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.101964738 seconds)
    (110/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.129981436 seconds)
    (111/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.148063445 seconds)
    (112/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.10534496 seconds)
    (113/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.140569182 seconds)
    (114/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.1299458 seconds)
    (115/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.089375721 seconds)
    (116/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.131060768 seconds)
    (117/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.097984449 seconds)
    (118/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.114314996 seconds)
    (119/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.227021546 seconds)
    (120/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.097686727 seconds)
    (121/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.139780321 seconds)
    (122/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.088763347 seconds)
    (123/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.241449511 seconds)
    (124/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.142921837 seconds)
    (125/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.130501612 seconds)
    (126/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.090423317 seconds)
    (127/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.131205742 seconds)
    (128/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.152977197 seconds)
    (129/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.140767136 seconds)
    (130/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.114908629 seconds)
    (131/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.216865069 seconds)
    (132/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.122202547 seconds)
    (133/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.116699121 seconds)
    (134/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.146299156 seconds)
    (135/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.206742703 seconds)
    (136/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.114554876 seconds)
    (137/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.106722293 seconds)
    (138/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.120472428 seconds)
    (139/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.106568773 seconds)
    (140/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.204818202 seconds)
    (141/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.128171118 seconds)
    (142/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.090078772 seconds)
    (143/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.144598556 seconds)
    (144/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.212736872 seconds)
    (145/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.131170199 seconds)
    (146/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.096157359 seconds)
    (147/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.102371392 seconds)
    (148/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.130636518 seconds)
    (149/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.08916409 seconds)
    (150/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.215686282 seconds)
    (151/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.16950267 seconds)
    (152/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.089960088 seconds)
    (153/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.137276059 seconds)
    (154/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.115262066 seconds)
    (155/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.189898123 seconds)
    (156/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.141590265 seconds)
    (157/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.140577247 seconds)
    (158/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.144703128 seconds)
    (159/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.119885488 seconds)
    (160/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.130636859 seconds)
    (161/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.205064266 seconds)
    (162/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.110887974 seconds)
    (163/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.140526422 seconds)
    (164/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.090664899 seconds)
    (165/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.123728128 seconds)
    (166/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.112917345 seconds)
    (167/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.110803373 seconds)
    (168/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.122272854 seconds)
    (169/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.147433689 seconds)
    (170/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.130794003 seconds)
    (171/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.139747708 seconds)
    (172/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.089210925 seconds)
    (173/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.13203499 seconds)
    (174/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.105798011 seconds)
    (175/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.141481799 seconds)
    (176/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.129369784 seconds)
    (177/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.09623424 seconds)
    (178/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.115078316 seconds)
    (179/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.106804236 seconds)
    (180/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.178091991 seconds)
    (181/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.115196192 seconds)
    (182/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.116418884 seconds)
    (183/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.113876415 seconds)
    (184/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.10676188 seconds)
    (185/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.194854945 seconds)
    (186/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.122739262 seconds)
    (187/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.20360979 seconds)
    (188/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.09071482 seconds)
    (189/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.122794126 seconds)
    (190/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.097992096 seconds)
    (191/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.128311053 seconds)
    (192/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.089452533 seconds)
    (193/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.132865845 seconds)
    (194/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.090455014 seconds)
    (195/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.158977823 seconds)
    (196/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.14468076 seconds)
    (197/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.09034322 seconds)
    (198/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.114210689 seconds)
    (199/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.091183038 seconds)
    (200/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.12015341 seconds)
    (201/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.097214767 seconds)
    (202/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.186526547 seconds)
    (203/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.134986444 seconds)
    (204/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.115738384 seconds)
    (205/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.115509598 seconds)
    (206/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.090141567 seconds)
    (207/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.115103372 seconds)
    (208/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.09094763 seconds)
    (209/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.147357999 seconds)
    (210/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.090659616 seconds)
    (211/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.11507755 seconds)
    (212/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.119422052 seconds)
    (213/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.115373018 seconds)
    (214/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.091106792 seconds)
    (215/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.11639848 seconds)
    (216/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.090605002 seconds)
    (217/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.129741366 seconds)
    (218/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.095591811 seconds)
    (219/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.114630247 seconds)
    (220/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.13289991 seconds)
    (221/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.09062647 seconds)
    (222/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.145485422 seconds)
    (223/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.089849486 seconds)
    (224/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.129455133 seconds)
  done (took 33.900598413 seconds)
done (took 34.812281882 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.513748765 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.139863012 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.10992119 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.135640637 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.189849094 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.136891157 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.11739251 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.140465906 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.139473346 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.107057341 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.125764275 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.139964771 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.110505413 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.190309997 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.138926519 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.126916698 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.101113114 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.141316089 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.141072089 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.120209048 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.216062429 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101610977 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.139796757 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.101009474 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.190228447 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.127337352 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.135575149 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.109351947 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.140609249 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.132320373 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.109687287 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.126339607 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.143259388 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.117639542 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.125290479 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.105944944 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.124947017 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.122792107 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.109113327 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.133049524 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.139619846 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.108198889 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.137695869 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.126749698 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.108669327 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.131257804 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.098879511 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.140766329 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.124586651 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.110270181 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.12806241 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.144141319 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.106491356 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.1253946 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.099338474 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.129179334 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.139061563 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100271026 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.141399445 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.124325782 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.103619137 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.123779576 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.109265562 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.124119802 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.130039146 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.103399301 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.131670166 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.110103893 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.131843969 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.127218741 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099356791 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.131823653 seconds)
done (took 10.526945294 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.106967705 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184859777 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.190204574 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.196902722 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.158704777 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.144373979 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.147958258 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.15751834 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.143225338 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.126459563 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.163172727 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.155958486 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.198398958 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.141660813 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.144234411 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.109235585 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.14082119 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.139426553 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.201499486 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.126175935 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.161261036 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.141088847 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.161638619 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.151102171 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.107345391 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.163931036 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.135100336 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.13284766 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.108526543 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.142027924 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.151104858 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.108626589 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.134632582 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.152578013 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.118459325 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.139262453 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.143589212 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.109199588 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.132780509 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.131105878 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.145652883 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.124753297 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.131481779 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.144898377 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.109181691 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.138682046 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.139516636 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.114969526 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.135027253 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.135254401 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.10991802 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.161740055 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.139940243 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.140645295 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.114306645 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.138453298 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.139917485 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.113578256 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.135310021 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.138892253 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.107556975 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.133568574 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.135133744 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.157866191 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.11003834 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.140808367 seconds)
  done (took 10.20064293 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.126589805 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.166268821 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.14177014 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.141873864 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.113873114 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.125348397 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.122815819 seconds)
  done (took 1.910164283 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.099452954 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.19519149 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.192772883 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.216947019 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.185054829 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.20389966 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.147432673 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.099696094 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.160480179 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.136945249 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.195454041 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.224671535 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.133410809 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.143759136 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.197265091 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.099039223 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.223315022 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.100019139 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137541281 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.193835838 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.141174594 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.129528951 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.141189996 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.125740091 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.187183386 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.102339846 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.275415462 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.141275719 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.10598925 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.135231806 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.13729364 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.210593829 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.188087626 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.141094584 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.104446239 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.19038452 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.185946998 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.138543294 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.203184617 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.132819495 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.186942608 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.136044786 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.111916597 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.140464868 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.136992911 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.174937114 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.115799115 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.13966869 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.13607244 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.194886845 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.137413174 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.188333088 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.108209466 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.13610657 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.136547319 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.113671408 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.144426638 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.136863117 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.196644775 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113899612 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.186629302 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.213199482 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.187690048 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.189937735 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.147527092 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.189764907 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.185191649 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.108258521 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.135106678 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.137483944 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.18902508 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.137224157 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.11187111 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.176117614 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.140301671 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.188342346 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.188373982 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.134351478 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.112940905 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.130916476 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.134953521 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.099642255 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.175934858 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.136832723 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.108043495 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.145620805 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.139175491 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.137959842 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.103965744 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.151887382 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.13687369 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.139243556 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.116037324 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.13642702 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.143026067 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.192602157 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.138117452 seconds)
  done (took 15.790268306 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.101749619 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.127099483 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.107495715 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.127821065 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.125719621 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.101827929 seconds)
  done (took 1.684722613 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.136542104 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.140297188 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.148713311 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.113023135 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.194799602 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.221352101 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.199617695 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.138079455 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.129689128 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.150161454 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.19416553 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.197898841 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.195542888 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.145302478 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.196660994 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.143585529 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.198356943 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.13823406 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.147186586 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.109416413 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.145898677 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.141225829 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.10967243 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.189180908 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.140647828 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.142937524 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.110915024 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.149812844 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.147246675 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.138379505 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.116053215 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.141569899 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.134556088 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.111937475 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.228574208 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.109594698 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.136769187 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.144588092 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.115468316 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.142828495 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.199238516 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.138275548 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.148036929 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.117309751 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.139679611 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.136033526 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.117679625 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.138506331 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.198691071 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.1449035 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.145186339 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.113041847 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.142688843 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.144049365 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.135096918 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.111394817 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.14521688 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.198531807 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.143484914 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.135243563 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.113444159 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.142997563 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.138973904 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.117592948 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.142712661 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.144371959 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.13537382 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.114416726 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.136106086 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.141074962 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.118329504 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.140655805 seconds)
  done (took 11.517625556 seconds)
done (took 42.068516639 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.144960304 seconds)
  done (took 2.141091989 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.977911925 seconds)
  done (took 1.979696241 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.811276948 seconds)
  done (took 18.847492024 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.59313938 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.660296449 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.981106491 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179220025 seconds)
  done (took 3.413640463 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.012795854 seconds)
  done (took 2.035955911 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.372071469 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.266402962 seconds)
  done (took 1.644191788 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.90849676 seconds)
  done (took 1.924094679 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.425376978 seconds)
  done (took 3.439914831 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.388598868 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.20704213 seconds)
  done (took 1.615309269 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.675463382 seconds)
  done (took 1.692422457 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 35.48521748 seconds)
  done (took 36.502248833 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.254932395 seconds)
  done (took 1.285635596 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.322346523 seconds)
  done (took 1.3412297 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.700685926 seconds)
  done (took 4.721471661 seconds)
done (took 83.589678179 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.112365981 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.142017604 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.114474442 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.140993845 seconds)
  done (took 1.523436537 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.122115721 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.140299555 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.143893314 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.113194657 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.149126036 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.14011875 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.111392779 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.147881824 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.138743919 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.115692101 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.141219058 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.140852842 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.115859747 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.139000181 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.110335743 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.142536199 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.144033559 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.113671033 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.141682027 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.142145692 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.112230591 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.142453663 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.142986657 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.113525141 seconds)
  done (took 4.195556483 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.112194238 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.133078534 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.108440928 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.132724531 seconds)
  done (took 1.520360299 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.121668577 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.156340454 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.156633987 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.120821615 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.158120498 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.156110589 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.108764644 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.137202757 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.138726705 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.120449279 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.13957831 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.159624347 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.157010916 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.105354353 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.149392888 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.102738435 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.133787557 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.15667296 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.121706699 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.148823278 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.135748405 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.121041778 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.145594318 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.152397682 seconds)
  done (took 4.334812624 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.222400676 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.126153315 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.165846299 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.192757619 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.167246513 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.136960796 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.140159579 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.145411236 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.147387339 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.116340697 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.144752659 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.201549153 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.142995923 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.14543297 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.116651343 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.147438982 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.144536925 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.117168373 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.146392064 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.153251471 seconds)
  done (took 4.052609704 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.113902332 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.132826128 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.101109144 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.133195349 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.140247362 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.10907589 seconds)
  done (took 1.7655874 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.102558052 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.126744258 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.10132849 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.126294131 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.105357495 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.127817648 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.098862044 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.12845051 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.09963612 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.128147311 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.12573891 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.098986838 seconds)
  done (took 2.410071784 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.319097196 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.1053826 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.13667885 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.133003212 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.136317059 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.104799952 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.15024803 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.10502574 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.272892552 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.13495339 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.122230149 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.238223593 seconds)
  done (took 3.001043782 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238689241 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142253948 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.27407766 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.406107952 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183728772 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.192520198 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.303129163 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189641623 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.244761207 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13396094 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253481989 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180220904 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176715703 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206508599 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161372481 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.210823759 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201558093 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23027343 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171143187 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235116014 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191027384 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.220322111 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.209216693 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175949143 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131567449 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184084028 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.140874984 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149270164 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201085189 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19712355 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201204202 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171684088 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16252313 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257407548 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247208649 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234576101 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.343956133 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157150617 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.215702251 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.211683375 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.298530871 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13413921 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.25290487 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178104363 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152187328 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207523132 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182163177 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.207734985 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.154951707 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161503969 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216005076 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200608516 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.210181568 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160124195 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.344493559 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170604144 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.143162702 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229784542 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220662628 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219213496 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190568701 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.141464661 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.210540837 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233736621 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206902821 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.168104196 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.196937248 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118447044 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230355735 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.223993831 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208533809 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19223862 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.241719912 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156085103 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18757666 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19513975 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176877592 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203957076 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18375172 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.112559248 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172030745 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158887339 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147363908 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.208905146 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11520807 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.259914956 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128247246 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.211226871 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259949991 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183019865 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188971672 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190283014 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194210416 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169957201 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.138961579 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139928108 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.187872771 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179575523 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152718243 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181553766 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168897345 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.149740366 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17503645 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.113966148 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184764236 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.157033845 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1921676 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189161625 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.154286055 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190535594 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174917859 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.184562406 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199123466 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213202043 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153834093 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154569161 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222503434 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181546677 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.160383811 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203001124 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.217087258 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.191038184 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159624519 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197726263 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224161224 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165323326 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21579603 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166295366 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155720966 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.177652055 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184100201 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182274703 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.181102857 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120377679 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.178993481 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253112164 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.119035972 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158601826 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20037666 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150487439 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148379753 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165293763 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129067277 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.163920576 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.177560115 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.162943778 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180233498 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183971254 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17932845 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185003775 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165816765 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224461369 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154820657 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.185736066 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17073106 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.111652558 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.239488682 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213469639 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148967513 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213743876 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.196550763 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222557793 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217810122 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122387414 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.208166712 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151285763 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.143830259 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193831193 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189807157 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190177993 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.212783351 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244643589 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.200583904 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.178072946 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171448453 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194432464 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.202217791 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185724283 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.168379119 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188752054 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198365512 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.142110075 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.118542791 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.15038581 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161744822 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123591609 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1547728 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211348546 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219115771 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213299076 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187304233 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163059147 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.21025134 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.149835601 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192610119 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.202054054 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162388611 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.214985771 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207883435 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192341228 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167292144 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19792989 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.143725016 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144476713 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.128109002 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.197525615 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155356186 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156815799 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16895476 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.211118916 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203674714 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173410727 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255923347 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197226081 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.222346366 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.144763122 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.158160367 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225861133 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181370317 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.183281455 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151593835 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.186331971 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.204384049 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168494203 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224236381 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187157242 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222962393 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230653094 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.182487867 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153451375 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172661089 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194942585 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164150723 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19186741 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168906018 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127987573 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178522819 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.160588953 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149416943 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21011459 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166505371 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207167075 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.181854405 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232375796 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118052115 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168157779 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185015355 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169509781 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.137728129 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197905374 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216063717 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170518756 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184169816 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201707881 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151421847 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.335304674 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220233506 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243496664 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130691706 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167762886 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185726555 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185315594 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189316254 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.240065976 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138054736 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238679548 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181677961 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.13605794 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158615194 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172202673 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176064561 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.17974468 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.157142568 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.178937547 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.13676288 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.245606133 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167905258 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183355254 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190141444 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.14007186 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.181873149 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16434965 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230660936 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183025006 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204141389 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.179889416 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.194895259 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247825466 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115391232 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150603361 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.150430912 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212133595 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123132853 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183891525 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.235225138 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222994108 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183699279 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193915486 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159406676 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.146987242 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18568943 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172043289 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222905268 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165667626 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.161178 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219871553 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.176337789 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153082866 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191206872 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.304852173 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169161044 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202337091 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.140030672 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.29811736 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118904379 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151555403 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185222655 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198477764 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.172457359 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.209075739 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191802301 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168350822 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18514558 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158876472 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.214429961 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233443631 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228368941 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204254314 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.166344319 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18543445 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188598547 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205290789 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165925121 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.169554391 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156674111 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238856161 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.216498568 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.157297348 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188658451 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188587244 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184136855 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204695624 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156666346 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216523656 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151510629 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194100424 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161833511 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119050668 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182180855 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.235164112 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125968035 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231714969 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152900489 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152972154 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151663844 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178107681 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183179165 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167130437 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.120898935 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238870385 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.118202828 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188595077 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207770307 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152454358 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181381754 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168645584 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124691561 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167659969 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167548777 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158782244 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.193071359 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212407314 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.154270341 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205609584 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200638344 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190933281 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184653817 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167749048 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.688878197 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.120252048 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238603326 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141320284 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251317032 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172827449 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190418271 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186334062 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143293014 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227234299 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173600185 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.217120131 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223512097 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.185685767 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123586786 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167763549 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168116564 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.15644514 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17753102 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188254191 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133061878 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.161972264 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.183140358 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17009895 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.169166211 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161268522 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212281742 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171175137 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214447966 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.211185694 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16251964 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191899853 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202405591 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152147222 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.189800429 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198587544 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165420493 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179479498 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.154882367 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.129070501 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206744926 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.146588623 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186492042 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184702621 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187098791 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187526094 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.162144742 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185249926 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16736819 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185701603 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120912681 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.183300954 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182280934 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156540956 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.151110884 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180108909 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186318851 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.18415001 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120757752 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.198051544 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208842699 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.145645721 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125249823 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.333387739 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186132099 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223893871 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.180806654 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156910623 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137276104 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180749265 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.179331183 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185077954 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.154315066 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153504125 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.126359917 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.209640855 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.178762379 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181933418 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207637881 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186206884 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247719518 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.137480837 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.290884646 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162157524 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179751403 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.155403571 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.1238043 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164222894 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157511111 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17053497 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.216129627 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204658441 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.178544987 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.16831123 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152140285 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.115362926 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154949677 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188630681 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179686638 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184740128 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170239394 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.109654942 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168004766 seconds)
  done (took 90.089917403 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.174698716 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.176693889 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.185450734 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.233792051 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.20861196 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.296687338 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.242535986 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.26902639 seconds)
  done (took 2.929345837 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.145538434 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.127822406 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.165036341 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.143297968 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.145880021 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.458374402 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.154811883 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.114102391 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.206668672 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.184453886 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.11518609 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.700579254 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.141968502 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.144133398 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.134583266 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.14241204 seconds)
  done (took 4.360615428 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.599509559 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.580081356 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.217195092 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.277272413 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.259407309 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.2009188 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.796638119 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.21589888 seconds)
  done (took 13.283710232 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.146476881 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.163793617 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.364140809 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.231986296 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.182292202 seconds)
  done (took 2.238435248 seconds)
done (took 136.719989874 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.119415733 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.164642153 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.11861847 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.166373483 seconds)
  done (took 1.704225253 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.16504455 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.132376809 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.104043957 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.130765207 seconds)
  done (took 1.684481327 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.553150273 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.100354114 seconds)
  done (took 1.836739933 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.143253541 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.163974952 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.165640144 seconds)
  done (took 1.632761846 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.124846705 seconds)
  done (took 1.274510011 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.114637716 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.147413114 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.199677367 seconds)
  done (took 1.617949176 seconds)
done (took 10.901116345 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140651706 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.539002655 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.433691465 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12514189 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.743342852 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.425445374 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.059340617 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.175190692 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.186595116 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.106610025 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.158273742 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.686029621 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.042715077 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.480591712 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.9956621 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.385552221 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.720115085 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.10882902 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.145422185 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.136770011 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.005818628 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.136414367 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.107665753 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.138777834 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.716257439 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.412626087 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.137668972 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.39887082 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.105975656 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.141852089 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.395852237 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.137917399 seconds)
  done (took 17.772227679 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.153569437 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.203114005 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.146123293 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.108608005 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.141664693 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.137951276 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.117577941 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.151496529 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202829587 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.137718103 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.127755523 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.136989075 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.142591713 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.107095919 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.161728019 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.134827296 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.11107841 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.139300916 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.114632261 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.139819552 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.158539029 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.105458202 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.139422629 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.108698968 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.13724141 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.151323149 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.107174245 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.151063331 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.136623468 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113286889 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.142924201 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108360666 seconds)
  done (took 5.538895263 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.157892244 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.213853103 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.148116032 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.172811801 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.193022863 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.108871362 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.227880654 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.177826758 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204539918 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.138692079 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.158967059 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.105976906 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.178252707 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.137776308 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.130678236 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.1367252 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.139520117 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.11019133 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.14549191 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110056013 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.160596016 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.135827508 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.109528278 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.140302405 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.136441356 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.124167096 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.136904789 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.151615756 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.10722678 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.143994408 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.112844845 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.137948509 seconds)
  done (took 5.861397753 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.119820863 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.151905721 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.129650055 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.161656595 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.146081136 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.119786181 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.150691261 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.143667882 seconds)
  done (took 2.291270192 seconds)
done (took 32.618452164 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.13463148 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.157860861 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.126363528 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.150208053 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.211444448 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.139613675 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.124409608 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.140997595 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.121429983 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.160712846 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.106118773 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.143316833 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.157475613 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.116999811 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.194376671 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.154348606 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.200086524 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.197524364 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.112615157 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.152258035 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.144709698 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.202825134 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.118404478 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.14535567 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.206386182 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.110622701 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.194072292 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.149748918 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.147098019 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.109537506 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.194547434 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.151982007 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.112161521 seconds)
  done (took 6.144564025 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.213058841 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.224369303 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.109644553 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.14050421 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.221703964 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.140483634 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.21172397 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.108708567 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.141555488 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.108710654 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.141520502 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.212551261 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.218973694 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.234934429 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.253291293 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.220735833 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.210537131 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.220687287 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.236605696 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.225103466 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.210848446 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.109371081 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.220235322 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.225987859 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.141398303 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.108052225 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.280262283 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.218976239 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.248555347 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.209842604 seconds)
  done (took 6.94740307 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.122191189 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.156630624 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.13250583 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.21035385 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.181796636 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.155193475 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.120070023 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.164220064 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.166472204 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.107509425 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.149132431 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.176443836 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.125810602 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.151259533 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.14303021 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.128477656 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.166260967 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.109967535 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.145711266 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.160271411 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.127213503 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.157707697 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.154526344 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.119798475 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.140528924 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.148319569 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.11402899 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.155256958 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.115314393 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.147590824 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.143694363 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.113810074 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.14435409 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.116926386 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.144765207 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.153769305 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.135825278 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.148954846 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.15284378 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.144153893 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.149141029 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.146780991 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.130029642 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.191395797 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.14266279 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.120102692 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.152992314 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.149675698 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.107316343 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.160959098 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122991658 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.141781927 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.162309169 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.106682198 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.139463225 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.147312703 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.110581315 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.144178651 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.1165639 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.144286365 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.167493682 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.118338453 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.147413351 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.141364427 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.116040607 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.140785365 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.108280751 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.147399908 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.164431232 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.11447938 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.17359941 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.108679584 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.153478406 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.148356195 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.114058462 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.150577463 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.108330334 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.146783163 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.14769923 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.114215764 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.149509928 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.14204543 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.114092001 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.159772369 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.161006452 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.122204548 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.152442299 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.150083876 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.11295537 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.143186067 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.123404089 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.143047627 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.144533195 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.119000277 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.143103847 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.111286582 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.152883778 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.149780004 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.108705329 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.159490124 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.113569626 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.141937135 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.156328551 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.110359965 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.145456185 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.118328724 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.153358106 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.140653926 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.118837213 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.152471344 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.107563193 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.146872806 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.143349731 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.109087774 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.158344492 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.119043977 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.146364636 seconds)
  done (took 17.50065754 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.314679808 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.328171951 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.220973595 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.420583482 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.133496318 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.243230415 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.28948191 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.241850552 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.142700077 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.185771159 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.203688871 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.280992431 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.108527234 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.175427709 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.325678137 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.392496625 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.175320782 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.188870969 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.18789916 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.166134066 seconds)
  done (took 5.923238952 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.132946757 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.184020806 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.17416067 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.176386303 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.116247937 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.157799502 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.14070994 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.166486511 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.117736612 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.150270476 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.108027593 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.154991992 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.150709591 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.122180581 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.160555855 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.190382656 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.115426105 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.150394454 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.16551859 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.116396823 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.149251189 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.169631725 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.152241398 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.138321481 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.154954629 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.156996452 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.108632711 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.148702046 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.11287705 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.148028323 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.14797415 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.161352789 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.118680638 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.148093753 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.118766171 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.154131346 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.111613527 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.144442028 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.142639995 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.113778921 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.160179697 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.120365687 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.145677432 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.106875673 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.156516521 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.145079657 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.123820644 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.152475034 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.152453699 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.125596568 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.152929425 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.121551678 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.149239253 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.161668003 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.111690752 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.157032264 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.156245555 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.121148327 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.148456321 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.139980659 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.108762595 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.14744413 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.114528419 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.153462492 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.150438233 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.132307975 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.1570153 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.142494738 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.119110306 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.146393516 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.145340673 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.12967128 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.169431937 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.145976927 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.112846713 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.164009312 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.112644632 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.134385421 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.120872036 seconds)
  done (took 12.369223464 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.141978695 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.14877049 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.161099318 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.150163601 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.163222039 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.116043291 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.146822497 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.162748277 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.122508093 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.156063651 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.154137766 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.124445139 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.168319129 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.15621997 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.114242624 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.15876129 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.119937569 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.187044677 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.163533467 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.178249697 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.128014969 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.147934016 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.156542425 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.124072971 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.179260672 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.154027051 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.174854907 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.121250247 seconds)
  done (took 5.393926442 seconds)
done (took 55.440594992 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.307468172 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.497733585 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.274442156 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.271932956 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.308110874 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.298344265 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.273458998 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.466729089 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.069699647 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.262316867 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.273081936 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.280445972 seconds)
done (took 28.783721231 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.279522236 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.889694897 seconds)
    (2/2) benchmarking "String"...
    done (took 1.594883942 seconds)
  done (took 4.692686414 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.267661603 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.268557923 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.5150241 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.268181089 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.289237126 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.291575548 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.268600451 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.30624461 seconds)
  done (took 16.40477026 seconds)
done (took 26.843970875 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.311212036 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.593672324 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.557395717 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.288670494 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.287070196 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.269506713 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.262267594 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.336937906 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.269909808 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.276920007 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.28700103 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.567149522 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.265000692 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.708826454 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.262533806 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.297130609 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.295024544 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.6140205 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.27019508 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.337972136 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.262140274 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.284381904 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.281033855 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.294254574 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.283772217 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.27955668 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.298261871 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.264930147 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.573289307 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.291573679 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.325326212 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.273829475 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.287756069 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.272826616 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.401635784 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.308417088 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.552887293 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.274233371 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.263786383 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.285481048 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.566687978 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.696873932 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.288862346 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.265007479 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.295605407 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.306342175 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.269050648 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 2.019432552 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.275174435 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.263613831 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.316192754 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.699668704 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.282381312 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.277148404 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.295237543 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.61696341 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.281349497 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.354124723 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.312009579 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.276423303 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.290340625 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.291276568 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.300915237 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.277575749 seconds)
  done (took 149.037789396 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.27417515 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.276957385 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.276858358 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.3417028 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.276685279 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.27466771 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.273224221 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.271790082 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.277213311 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.278703016 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.274507503 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.277153633 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.277635256 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.242604448 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.279066498 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.296509169 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.277662785 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.274189608 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.283809776 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.274463099 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.274339146 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.276826685 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.291736787 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.274375506 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.317904149 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.366315739 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.296872007 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.303066004 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.280406624 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.27362949 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.323082718 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.297989694 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.929391723 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.13752757 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.285075725 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.305895746 seconds)
  done (took 83.017864976 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.273468962 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.274114826 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.275026118 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.307839327 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.275082065 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.882876807 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.888240015 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.075484081 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.574823664 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.765168828 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.580540774 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.2756198 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.373228484 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.288965453 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.276936286 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.291340719 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.320346482 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.280183259 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.278016297 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.887111783 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.292359598 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.776854218 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.458639916 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.294792064 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.310998118 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.680596244 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.276138228 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.275534192 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.311119432 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.618045614 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.330520802 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.276480271 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.671409209 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.58564495 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.276524308 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.393554795 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.277762765 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.312373425 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.277906603 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.564346293 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.27952592 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.276388739 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.278494785 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.281711012 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.960536546 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.279138454 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.887290599 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.282655257 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.267808262 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.279397999 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.27706534 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.531208618 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.020793297 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.295926897 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.277693486 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.279976534 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.278644442 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.27828867 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.311636598 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.720363053 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.400036683 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.297160481 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.283374356 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.312999199 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.278627157 seconds)
    (66/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.278508448 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.27946216 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.761367244 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.336889752 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.494468513 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.794976028 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.893361457 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.281804008 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.378553288 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.401449133 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.280644951 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.279417132 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.278701382 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.279653458 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.391945397 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.279874593 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.739839201 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.461693612 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.299748393 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.758047079 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.382781043 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.279422363 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.703279498 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.282076119 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.279868441 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.063914826 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.378548704 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.279996384 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.281001733 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.278984903 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.737663914 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.893886669 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.562962223 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.284379844 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.925819208 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.286976781 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.744728037 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.873591838 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.969243393 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.28174324 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.395776414 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.464062533 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.301743838 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.280761122 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.759066334 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.283659569 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.337847896 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.285107883 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.682240419 seconds)
  done (took 377.344407375 seconds)
done (took 610.598927776 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.030414711 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.976843912 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.117486945 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.014899027 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.972488552 seconds)
  done (took 11.320428682 seconds)
done (took 12.527699605 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.482498372 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.487064826 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.347920267 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.487350597 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.318913604 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.505215742 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.465104164 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.306031815 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.39233975 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.367480955 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.390854581 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.337816743 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.319048334 seconds)
  done (took 19.418009169 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.568265943 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.289675457 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.369268501 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.542379293 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.329541088 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.578574371 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.608036219 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.292435519 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.441345958 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.30095424 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.299534992 seconds)
  done (took 18.83173704 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.572889663 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.289257429 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.35488536 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.551247132 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.328778873 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.568941097 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.607707268 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.289575078 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.429994031 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.301245736 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.300586434 seconds)
  done (took 18.806181753 seconds)
done (took 58.264895854 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.328375034 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.462992477 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.316832474 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.302431072 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.296657221 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.297354416 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.304509872 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.297356952 seconds)
  done (took 11.819117856 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.296829824 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.296694148 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.294422227 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.294931657 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.295794932 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.29509068 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.295063773 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.296965891 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.295939556 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.29520254 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.29549824 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.294604482 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.29508488 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.294537645 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.295460702 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.297120219 seconds)
  done (took 21.942113516 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.299203414 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.295826011 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.29506959 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.296972464 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.297020939 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.295881992 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.297729915 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.296384337 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.296970269 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.296410623 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.296231988 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.296059815 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.296921595 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.297250663 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.2965817 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.298375691 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.296444449 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.296406718 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.299774605 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.297527189 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.297527025 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.296516228 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.297972438 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.296530025 seconds)
  done (took 32.342031096 seconds)
done (took 67.31354197 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.30229679 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.28923227 seconds)
  done (took 5.806001353 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.35941192 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.358801885 seconds)
  done (took 3.935455702 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.29878492 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.29684822 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.297455695 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.296335651 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.29802156 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.296422654 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.298342204 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.297544411 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.297657661 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.298786423 seconds)
  done (took 14.189522659 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.300290203 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.299798184 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.299391341 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.299893587 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.298023179 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.299154339 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.297210306 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.299053534 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.297780672 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.299748584 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.298697265 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.298603365 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.29855692 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.299169089 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.300002482 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.299244205 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.300777081 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.299344121 seconds)
  done (took 24.598207544 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.314248756 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.321559357 seconds)
  done (took 3.850140015 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.439416928 seconds)
    (2/7) benchmarking "second"...
    done (took 1.340482804 seconds)
    (3/7) benchmarking "month"...
    done (took 1.415038378 seconds)
    (4/7) benchmarking "year"...
    done (took 1.407077257 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.340913432 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.319628478 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.341489946 seconds)
  done (took 10.818798084 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.299449239 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.514387002 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.627085518 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.841146348 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.300416288 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.345635073 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.109829542 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.347374562 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.333147095 seconds)
  done (took 14.935670423 seconds)
done (took 79.347690886 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.28930031 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.362708463 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.316395965 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.309353777 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.597189839 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.330039237 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.294122628 seconds)
done (took 16.71429372 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.287298281 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.284083703 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.303807166 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.299082351 seconds)
  done (took 10.391163898 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.304082507 seconds)
    (2/2) benchmarking "read"...
    done (took 1.649915441 seconds)
  done (took 5.170056072 seconds)
done (took 16.776786956 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.302242661 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.301768109 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.301585022 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.302113448 seconds)
    (5/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.303247424 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.302119819 seconds)
    (7/24) benchmarking ("one", "Float64")...
    done (took 1.302279802 seconds)
    (8/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.302909444 seconds)
    (9/24) benchmarking ("zero", "Float64")...
    done (took 1.30176445 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.302550002 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.301789573 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.300638464 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.302231004 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.301480067 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.299947343 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.301158256 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.300803301 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.300813367 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.302067273 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.301824746 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.302560772 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.302966953 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.302032078 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.300557417 seconds)
  done (took 32.461849533 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.305163439 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.3008889 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.301839431 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.302893297 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.301129333 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.301506204 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.301957996 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.302981605 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.303506622 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.302220798 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.301234866 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.302652892 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.301724702 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.302365963 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.302412596 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.303258568 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.302007658 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.302483608 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.302550897 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.302897038 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.303500459 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.303060093 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.303947585 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.304452812 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.302712892 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.304190213 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.303016209 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.304365412 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.304730686 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.302969301 seconds)
  done (took 40.303353057 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.308076547 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.310976759 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.304775631 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.305019861 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.304381539 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.304583885 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.302732091 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.30564925 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.303874983 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.304895125 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.303989658 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.303885514 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.304475568 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.303368309 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.303419454 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.303722055 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.304640701 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.303712827 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.305576912 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.304440576 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.305909025 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.303627854 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.305117154 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.304176523 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.303941304 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.304834194 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.305064359 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.304283561 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.305322889 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.304285767 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.304958803 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.30503167 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.305894876 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.305735925 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.305828909 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.304911854 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.310159504 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.313697946 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.306181682 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.306317274 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.306587884 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.3051061 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.305500954 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.306608215 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.305248948 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.305605949 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.307408047 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.306729155 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.307743284 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.306254526 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.305404053 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.307306737 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.306891388 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.306754809 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.307604551 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.3066799 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.305844689 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.308177567 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.307626284 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.306507556 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.305881378 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.305078676 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.306404505 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.308572822 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.307338744 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.306639845 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.306509543 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.307313578 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.308405469 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.30852362 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.307787126 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.30872553 seconds)
  done (took 95.254226889 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.307165047 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.308983765 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.307851219 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.3078779 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.309680826 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.307650579 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.308072515 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.307921072 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.307968604 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.308484378 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.307232767 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.308717206 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.308114072 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.308913793 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.308703037 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.308931298 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.309444881 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.307970444 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.308333038 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.310019599 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.309728903 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.309119353 seconds)
  done (took 30.009218048 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.310084786 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.311143572 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.308098648 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.310215987 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.309405238 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.309903474 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.308906754 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.309880164 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.308933276 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.307885472 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.307875649 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.30989014 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.310948643 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.309014407 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.309615355 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.310378962 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.308120408 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.311183937 seconds)
  done (took 24.797368342 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.310854898 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.309515991 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.310987051 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.309996261 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.310763138 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.311052602 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.310311849 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.309182667 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.309551439 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.309411766 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.311284339 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.310375147 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.309824734 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.309896863 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.310749748 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.310793903 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.311401848 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.310735203 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.311602224 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.310582866 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.31298786 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.309181759 seconds)
  done (took 30.05693134 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.310549433 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.310989175 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.308846177 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.311621471 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.31050781 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.311485348 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.309974227 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.31033204 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.313804646 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.312377329 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.311006515 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.311149168 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.312999076 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.310540331 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.311629753 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.312226704 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.312707731 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.311234501 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.312401 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.313261685 seconds)
  done (took 27.457103228 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.314204649 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.31363944 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.313139928 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.313893395 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.314236304 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.312960578 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.314864886 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.31459893 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.315167152 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.313896264 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.313525385 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.312607276 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.314309369 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.314711425 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.313655186 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.313357873 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.314240841 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.314312446 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.313220253 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.315121842 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.315910311 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.315007709 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.315826287 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.31466025 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.314743565 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.31579911 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.31410674 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.314960302 seconds)
  done (took 38.029111402 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.315042317 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.314491708 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.314581808 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.313173439 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.314384415 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.314395285 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.314373714 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.313669629 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.314499193 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.314858517 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.314273066 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.314969594 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.314585644 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.315228056 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.314255406 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.315465862 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.314741374 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.315253974 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.315106917 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.314677747 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.314872131 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.315324319 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.314938896 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.314576926 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.314545061 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.316142504 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.315019144 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.315728302 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.315892237 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.315323999 seconds)
  done (took 40.673532264 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.357688054 seconds)
    (2/2) benchmarking "in"...
    done (took 1.356854966 seconds)
  done (took 3.944804607 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.316362415 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.314723994 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.316010755 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.316112275 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.317844367 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.316276974 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.317214397 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.316571884 seconds)
  done (took 11.76143235 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.313157084 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.31580515 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.316082469 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.315937848 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.316155102 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.312066289 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.318488518 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.337993806 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.313841748 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.314473814 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.320288194 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.321295899 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.31432745 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.312994128 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.312893715 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.314321321 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.317319539 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.317694385 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.318726467 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.317018668 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.317025608 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.314623644 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.313680389 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.31866157 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.315331572 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.323002456 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.318197217 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.317629156 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.313856765 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.317270737 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.312023549 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.316869262 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.317604389 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.317385676 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.31762145 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.31828095 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.321029965 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.335293426 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.320182788 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.317921365 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.31875711 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.318210139 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.313703731 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.315565373 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.315261193 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.319587881 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.319386877 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.318481377 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.313448557 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.318352887 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.32655044 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.314058618 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.320706986 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.314911834 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.315345438 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.320192209 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.339770288 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.318717156 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.323492351 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.32481241 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.328215808 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.339916193 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.316897087 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.318395837 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.324602637 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.332663078 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.321747695 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.339974657 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.321031977 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.31933574 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.32201495 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.328180591 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.343763679 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.319438521 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.318644847 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.321186951 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.316426257 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.319066218 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.322087435 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.337983662 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.320749535 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.320739628 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.323519635 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.334172424 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.316025034 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.320233545 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.322091747 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.320793188 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.318175573 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.327016422 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.341637709 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.321409627 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.316767869 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.316401711 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.317642993 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.322274417 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.31629039 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.317567118 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.32063874 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.322217506 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.322962529 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.32230085 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.325896648 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.321581342 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.322657994 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.324618174 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.321703376 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.317526997 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.323820658 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.324231551 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.322223603 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.321328785 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.324823289 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.322807571 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.320990118 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.326986614 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.323158029 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.319655189 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.322094589 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.323115445 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.326475865 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.339396869 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.323836111 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.324412987 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.323348459 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.336085903 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.323632692 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.322729645 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.324228431 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.324357865 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.32300904 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.320953554 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.325089535 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.319898144 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.325041553 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.321779409 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.325748675 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.325502283 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.325078905 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.320490534 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.321440576 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.319748142 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.320070698 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.322299884 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.324299921 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.322259456 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.325620624 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.319542353 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.321896165 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.324951895 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.325156537 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.325176707 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.320787754 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.32480747 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.320122095 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.325999348 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.322137231 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.3244128 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.325302188 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.325530887 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.325077924 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.322823251 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.325323028 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.325931537 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.326416268 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.322234936 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.328042254 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.325382628 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.327436038 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.321853739 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.326912249 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.320850001 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.325381335 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.335511943 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.327652354 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.32781768 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.324240345 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.326023869 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.327398546 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.328285255 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.326206567 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.333053455 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.326596316 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.329435254 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.328081325 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.327087552 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.32675137 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.3233477 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.322938224 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.32784714 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.326168602 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.334581807 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.333820278 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.351625431 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.32370608 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.331144676 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.323854056 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.332367369 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.326761549 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.328546335 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.327628905 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.328161412 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.324077047 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.325722818 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.325455718 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.327186057 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.324270292 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.328108727 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.329894386 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.328698321 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.32898176 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.3252693 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.323851914 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.328265299 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.328640524 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.327870296 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.323647055 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.328752281 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.323756325 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.325094892 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.330333427 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.328545978 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.330731429 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.329456285 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.324855333 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.325799402 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.324736292 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.323443068 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.329589423 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.326551689 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.325218549 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.331539523 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.344899782 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.326662472 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.33188713 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.346294043 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.32487743 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.327111504 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.330852545 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.329784688 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.329768864 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.337967656 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.331184118 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.331282514 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.329147158 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.327503494 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.330949452 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.331397089 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.329109331 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.325439902 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.330893038 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.32752119 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.329319975 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.326160997 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.326876638 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.327004251 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.327841657 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.331738887 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.332635869 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.327839958 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.330062005 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.331037601 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.332673734 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.330485353 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.339849799 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.332352143 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.32773691 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.327925978 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.328569438 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.336892198 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.328192751 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.330906403 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.326736114 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.338185699 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.358901011 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.335083246 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.348234691 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.332708139 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.333049076 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.349770197 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.331755083 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.327858768 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.329254194 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.328206792 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.327292873 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.331561556 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.328488717 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.333667974 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.32864575 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.330238508 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.337454337 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.331838358 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.327526671 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.333039628 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.332773129 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.334791872 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.328655555 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.332379643 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.330297468 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.332841304 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.329462813 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.328403231 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.335505162 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.350792841 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.329902229 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.329311345 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.328717615 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.329991784 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.330477873 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.333177234 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.333637756 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.341665931 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.334258795 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.339642677 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.331085579 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.338487148 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.334848497 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.334599537 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.342935858 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.3349238 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.330286266 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.331396509 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.336229395 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.336902895 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.35595014 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.333082436 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.340118506 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.335619986 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.334567175 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.336703346 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.335856182 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.334634116 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.33684635 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.339136463 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.354562717 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.335245083 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.333693359 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.336560107 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.336302919 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.335891111 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.330896317 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.333010875 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.335399542 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.333773278 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.331113852 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.333230222 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.335904414 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.336085353 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.33701858 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.336569385 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.334445327 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.338136699 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.353363232 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.339562696 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.336704849 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.337614659 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.337269547 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.339284711 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.357908229 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.332741797 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.336629586 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.33591344 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.334727954 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.330422645 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.334349601 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.335221912 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.334926806 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.341702541 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.337564886 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.334117011 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.333728035 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.338073398 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.333903377 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.341047206 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.357153258 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.335634796 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.343657306 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.338291932 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.336101872 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.343045679 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.340769336 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.332369147 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.3365711 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.345929512 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.34680085 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.335618967 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.338726088 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.334120962 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.337600901 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.340207853 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.340201431 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.338303513 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.340092912 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.336347669 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.338386029 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.337571959 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.338690102 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.33622501 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.335329007 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.335128198 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.345720084 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.340189321 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.337402052 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.340417283 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.339752475 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.336636618 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.335861997 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.340611107 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.336294602 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.339579664 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.335731531 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.342751468 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.342558612 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.336933955 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.335530701 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.340451576 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.335249093 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.337216359 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.339649918 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.340762044 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.341435476 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.338752279 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.340219878 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.336090545 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.334971041 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.340663587 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.335048249 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.340167361 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.339130176 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.344234671 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.335899984 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.33999921 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.342638634 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.34208416 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.337249047 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.3371524 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.343307217 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.341370031 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.350852109 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.345829337 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.345342904 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.336944085 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.33998256 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.346203696 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.337742143 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.337591548 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.343064854 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.337205887 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.337978101 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.34141387 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.342682048 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.344754289 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.338886789 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.336549923 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.345861212 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.361277289 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.344098437 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.341494131 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.344284436 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.337953309 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.343969483 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.345903657 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.338879106 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.345703232 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.360253546 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.342993665 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.340655811 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.338213027 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.341164721 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.347401741 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.344576943 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.340637181 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.344121015 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.339708411 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.344218046 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.343897405 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.344081485 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.339391408 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.340872715 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.34226112 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.350147832 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.346219882 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.34256017 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.340724838 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.341119361 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.344747495 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.344760126 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.345833699 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.345590236 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.339923017 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.345061988 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.340732402 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.34285313 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.340373405 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.34185095 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.34895513 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.3467162 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.345276407 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.352322089 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.354251358 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.345703731 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.33968755 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.342289771 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.343316731 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.345076783 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.348722535 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.340852114 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.343399363 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.345082683 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.345046909 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.345916254 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.345565315 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.358112531 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.370349386 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.340909551 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.341930527 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.345585456 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.346742097 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.345689648 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.345467132 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.343999434 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.345062729 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.354566665 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.346663832 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.349001251 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.362986097 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.342695825 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.351809454 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.346754542 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.350824665 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.343902192 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.34609209 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.348299391 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.348487923 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.359657386 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.347705963 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.352001254 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.370152533 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.365342824 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.345132341 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.347533056 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.344144706 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.348962929 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.345438147 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.347676045 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.347430961 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.348891414 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.346113798 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.345743738 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.34941148 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.343659817 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.352491672 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.349140828 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.344240594 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.34703 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.348450504 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.348674841 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.350855539 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.349923758 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.349054911 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.34987548 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.345853883 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.356372557 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.375470851 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.350734866 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.349431764 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.351109368 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.346942138 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.34978065 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.357326987 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.359568028 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.349112973 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.348431656 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.346334976 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.349483325 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.352186284 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.345733079 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.345849173 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.345526696 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.351083509 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.358997261 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.377028528 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.350282993 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.344273161 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.350013781 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.35294514 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.345349999 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.351310195 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.351470171 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.347951188 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.349448394 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.355374764 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.351866425 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.350280692 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.349875371 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.358995314 seconds)
  done (took 796.343528574 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.350979097 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.349991982 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.352184952 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.349898172 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.351203912 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.351006267 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.351251866 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.351083408 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.351009442 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.350646959 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.352028679 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.35226517 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.352487116 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.353320053 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.352764815 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.350056231 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.352598751 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.352864229 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.352856858 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.352174212 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.352947497 seconds)
  done (took 29.648463702 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.354178804 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.35297148 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.354291639 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.354197934 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.352992562 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.353572472 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.354318147 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.351788123 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.352687366 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.352054492 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.353127459 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.353263236 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.3516617 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.352226426 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.352879018 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.353069696 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.353314353 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.353206252 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.354981711 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.352337779 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.353993067 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.354973643 seconds)
  done (took 31.035860774 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.351890986 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.352528284 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.348732626 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.354583895 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.354183225 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.353268382 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.355660364 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.356258725 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.353792007 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.351286167 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.348526905 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.352431908 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.361241979 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.363300748 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.351039552 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.355672339 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.354852129 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.355758996 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.355584609 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.355890097 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.355618496 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.376509205 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.356243219 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.350322219 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.355690691 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.355040015 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.357965331 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.356398064 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.352990757 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.360518032 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.355134217 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.350377071 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.353175347 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.350325097 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.353030572 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.361478976 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.355985409 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.355323584 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.35575895 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.359352148 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.375331187 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.357359873 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.357466448 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.376895682 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.355831804 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.355599017 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.364790353 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.356477726 seconds)
  done (took 66.381522625 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.96362871 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.990387512 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 2.005599062 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.984322881 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.98869138 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.984303673 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.976880748 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.981786708 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.98081827 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.980935814 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.983347261 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.9859954 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.983031523 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.991436792 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.977568742 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.981906718 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.982759502 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.981125691 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.981937004 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.979643566 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.979688799 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.977063036 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.980057435 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.989804165 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.994504555 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.980824067 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.983159911 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.982054408 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.984957792 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.985542957 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.987678686 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.981412033 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.984168377 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.988719114 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.992784387 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.997914206 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.982251599 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.985925022 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.98164508 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.983564131 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.982910143 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.982367375 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.985047448 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.986283156 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.983064957 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.988866486 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 2.000178849 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.981745416 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.990018753 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.984373444 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.983521879 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.988284857 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.985239429 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.989399163 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.989179746 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.990273248 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.989356816 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 2.003443961 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.98423855 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.990662488 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.985878722 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.98141778 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.988904504 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.985728881 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.991660886 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.999569734 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.990443578 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.990441486 seconds)
  done (took 136.314186001 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.360507878 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.358263443 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.359318281 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.361207346 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.361181223 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.362404076 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.359947679 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.360036601 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.361217687 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.361408035 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.360592913 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.360807275 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.359323284 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.361738171 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.359318124 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.359700731 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.359761193 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.361119019 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.361366383 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.361791758 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.360285424 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.360818059 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.361302951 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.361253832 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.361161217 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.362469648 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.361272104 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.36311759 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.36222567 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.360367884 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.361601623 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.361060519 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.362056274 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.362800989 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.363523079 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.361777306 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.362814276 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.364135052 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.362119656 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.362336377 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.3630221 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.362566352 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.362396553 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.362733073 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.363137522 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.363670735 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.363743646 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.36288737 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.363492995 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.362772356 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.362268003 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.362736616 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.363727592 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.362661566 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.363383474 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.363487217 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.363541927 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.36435367 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.363315628 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.363567537 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.364180386 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.362994654 seconds)
  done (took 85.716353571 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.366277118 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.363374527 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.363845137 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.364345901 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.364343264 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.364998983 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.362996636 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.364283382 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.363350222 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.363814997 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.364412288 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.362495829 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.365749709 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.365550902 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.364036264 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.365613316 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.364439012 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.365290674 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.365702054 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.365076872 seconds)
  done (took 28.565307659 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.365232444 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.365130279 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.365963317 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.365203234 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.364272385 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.363873545 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.365991798 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.366007505 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.365038371 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.365567911 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.365265078 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.365354415 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.365794253 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.36632369 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.365751072 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.366305055 seconds)
  done (took 23.12228584 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.365561094 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.365723634 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.365883499 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.366622134 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.366602838 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.367780755 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.367100768 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.366556379 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.367428486 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.367681544 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.366281617 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.365387655 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.366210293 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.365387938 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.366351568 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.368481573 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.366581176 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.366501674 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.366570783 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.368924617 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.368105108 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.367234 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.367882817 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.368312071 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.370016765 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.369158798 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.368478714 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.368721675 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.366422966 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.365615146 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.368668519 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.367172978 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.368669446 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.36866417 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.367586668 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.368232788 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.36745199 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.368866058 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.369232061 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.368610893 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.367990119 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.368521232 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.368544291 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.368108488 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.367555324 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.366901586 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.370585015 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.369609242 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.367961339 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.369264206 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.368268589 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.368307384 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.36899691 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.369814415 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.36748619 seconds)
  done (took 76.503619759 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.370359997 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.370555222 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.36834084 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.370660781 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.370368542 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.368954231 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.368636031 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.369857612 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.369126482 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.368585517 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.368178574 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.370115468 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.368735839 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.369387809 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.368589677 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.368660196 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.369779318 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.370918168 seconds)
  done (took 25.929418433 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.371215632 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.36957543 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.370012129 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.371212158 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.369750303 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.369130087 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.370559134 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.369994431 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.370409946 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.370708283 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.37113381 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.371928562 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.371450563 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.37240064 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.371994234 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.372091675 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.372909447 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.372279039 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.372623481 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.371827218 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.372036737 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.372364469 seconds)
  done (took 31.44613893 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.366598202 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.366017875 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.366189736 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.381937096 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.38858745 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.365313234 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.365508364 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.367315361 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.386106369 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.409990836 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.409700237 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.388751909 seconds)
  done (took 17.843291674 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.372641639 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.372999849 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.372320191 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.371976602 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.372234379 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.372617619 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.372014516 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.370418578 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.37269993 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.372589903 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.372430105 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.372921543 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.372366557 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.373691219 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.37248162 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.372901769 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.373096367 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.37077611 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.372384156 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.3730297 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.371276485 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.372733393 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.372772547 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.373462801 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.373267466 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.37197313 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.373817696 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.374023988 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.374136915 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.373754872 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.372923535 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.37369868 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.374677371 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.372768456 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.375137328 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.374624635 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.374562728 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.374627608 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.3739163 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.373991468 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.374990122 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.375000827 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.374825833 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.373126834 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.374647437 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.374669608 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.376442072 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.374353076 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.375792838 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.375436397 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.374865661 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.374265926 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.373171226 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.375019162 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.374974657 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.375735771 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.37508666 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.376323224 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.375753206 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.375742263 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.375064651 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.376193215 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.374858065 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.375062828 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.375552335 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.374275035 seconds)
  done (took 91.955510968 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.376051141 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.375917754 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.375590457 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.376553733 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.374919811 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.375869093 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.376217535 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.375754284 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.376170578 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.375360125 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.376237846 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.376774039 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.37625318 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.376847152 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.376276257 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.375915492 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.374964737 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.377134832 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.37684375 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.375768424 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.377153544 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.375489255 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.375140101 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.377507242 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.378551474 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.377159317 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.376326715 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.376799843 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.377396309 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.376228329 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.377923484 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.375099718 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.376028542 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.376232762 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.377682422 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.377267896 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.377609725 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.378678163 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.376775447 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.377232623 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.377217521 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.378204974 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.377373487 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.377961591 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.37838706 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.378226175 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.378820693 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.377415369 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.378188145 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.379597557 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.378385509 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.377597317 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.378063617 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.378564258 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.377507612 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.378310034 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.378099276 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.379259285 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.37853478 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.379695903 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.378277056 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.378408328 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.380437443 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.380357837 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.378237814 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.380470744 seconds)
  done (took 92.189389749 seconds)
done (took 1908.961221923 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.542973902 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.495131246 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.374201611 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.38419879 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.374601064 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.396966504 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.387539488 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.374542101 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.374041513 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.37260448 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.373700477 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.565197923 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.429469913 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.374638719 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.373045893 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.470579997 seconds)
  done (took 27.953607852 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.405477265 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.383053492 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.508832695 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.404175466 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.40879128 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.592457542 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.446220156 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.382994251 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.581802703 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.409722789 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.374231738 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.409406615 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.381291231 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.374327255 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.405584294 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.592840587 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.669843314 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.384006328 seconds)
  done (took 30.403084128 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.906998565 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.395572445 seconds)
  done (took 5.594365488 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.402188258 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.380079758 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.38285414 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.379843793 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.372637763 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.39253299 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.381008252 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.377095187 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.406982402 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.528084826 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.385780249 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.394758029 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.405168003 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.383022548 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.386002955 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.428312728 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.540996932 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.386887262 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.385134064 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.38801328 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.382331247 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.475036726 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.431984019 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.390237057 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.526489518 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.377630167 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.40863568 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.390458812 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.523495601 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.389163879 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.384252295 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.384286405 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.384818528 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.376902016 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.899889683 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.406127719 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.39260057 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.413632419 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.38735559 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.522854186 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.384368838 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.389522796 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.384258613 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.899158254 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.541542648 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.52127187 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.410565104 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.388187204 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.384585941 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.4555527 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.387194698 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.384496469 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.445002395 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.234564663 seconds)
  done (took 88.446737059 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.383668522 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.376176714 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.560183325 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.407743273 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.376675811 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.405146435 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.380809727 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.714075482 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.432840211 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.376504159 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.691963132 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.026131355 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.40268631 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.431769659 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.239592547 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.448655068 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.378870939 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.39618238 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.384167695 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.378877148 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.970375789 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.380950322 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.404628641 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.511678196 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.420107717 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.953974614 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.39727393 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.381960475 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.406923652 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.377681462 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.96553543 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.414127478 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.442635298 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.381624754 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.675885924 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.819395593 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.77971315 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.383558271 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.399270361 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.382944787 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.387665618 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.938356004 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.799502479 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.383559577 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.380199423 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.950221323 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.382317394 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.381757979 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.383045042 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.635135002 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.379585158 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.381185029 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.395544208 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.402362494 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.378677709 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.495545513 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.477032709 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.950642143 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.382500191 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.382277633 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.402406403 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.379322275 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.387319427 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.380398265 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.40340467 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.791135252 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.53199636 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.385907261 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.785544535 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.950573047 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.401140213 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.03139259 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.403946496 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.391038964 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.601244613 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.380287737 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.380847654 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.954405056 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.412737101 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.380229077 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.766920082 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.381729178 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.697006623 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.416943383 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.381998698 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.984847136 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.388214371 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.382959171 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.380395211 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.385022921 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.380373507 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.384996979 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.684524242 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.442661972 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.381226626 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.381624494 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.423112244 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.381382153 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.382751138 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.388910079 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.027366816 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.408885339 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.380356533 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.383265532 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.389636379 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.38732292 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.381024298 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.382167248 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.659124492 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.38387276 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.407331903 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.386271531 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.38225504 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.392084185 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.516466493 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.390238609 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.738538547 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.385014362 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.383175525 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.412468496 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.384681596 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.389543711 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.383637843 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.39203209 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.307824904 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.688574484 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.403804101 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.404142726 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.382487133 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.403025948 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.383133347 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.389496205 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.42591867 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.388399151 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.235768728 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.417466045 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.416979767 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.383217135 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.395626305 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.384019338 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.418272113 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.386637299 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.690537627 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.689150209 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.53947485 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.390641344 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.383371319 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.221894957 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.419860952 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.569185681 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.409581393 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.385569138 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.645188686 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.627480453 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.385050439 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.384827544 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.386688608 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.651779007 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.385068513 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.70366085 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.989025232 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.405993273 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.394682241 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.240959853 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.114840508 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.385905032 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.387929956 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.697209981 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.409757698 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.385764876 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.386779942 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.38657797 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.40451399 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.406476636 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.386228418 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.385789109 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.386805256 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.434776768 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.583796398 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.408639184 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.389731239 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.945284267 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.465497451 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.402776103 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.392573002 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.387830303 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.386942248 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.467933585 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.386692435 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.405214713 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.387473475 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.395385472 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.005991468 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.390204113 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.388296036 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.583310744 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.153805084 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.41368242 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.387814045 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.406859922 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.299681741 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.97043989 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.457411099 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.756456204 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.397691741 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.430224411 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.387689023 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.430771486 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.971524701 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.38802807 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.41015007 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.110922134 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.412402188 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.918497959 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.388194558 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.390654125 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.06463502 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.412806093 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.39198481 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.388819047 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.411706784 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.694835674 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.388700187 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.426824896 seconds)
  done (took 512.575966631 seconds)
done (took 666.258942959 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.38838809 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.393302816 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.386461715 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.394190113 seconds)
  done (took 10.869647786 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.404172258 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.395931673 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.400458127 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.395233798 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.402411834 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.394650385 seconds)
  done (took 9.701401895 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.391117538 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.394933875 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.394818192 seconds)
  done (took 8.488648895 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.627684475 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.414241453 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.783187507 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.426448468 seconds)
  done (took 9.562872518 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.401193058 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.402015093 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.400537128 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.404051814 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.404251762 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.405852196 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.403075429 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.403674942 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.406444082 seconds)
  done (took 13.939418836 seconds)
done (took 53.868107448 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.398627591 seconds)
    (2/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.420767829 seconds)
    (3/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.497627896 seconds)
    (4/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.457759929 seconds)
    (5/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.401255854 seconds)
    (6/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.54963977 seconds)
    (7/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.593302289 seconds)
    (8/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.454614256 seconds)
    (9/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.394026916 seconds)
    (10/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.624099759 seconds)
    (11/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.425586335 seconds)
    (12/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.1987303 seconds)
    (13/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.453371604 seconds)
    (14/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.587369131 seconds)
    (15/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.447075304 seconds)
    (16/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.045754481 seconds)
    (17/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.427383747 seconds)
    (18/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.563867616 seconds)
    (19/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.16690884 seconds)
    (20/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.185951947 seconds)
    (21/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.422099044 seconds)
    (22/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.088424364 seconds)
    (23/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.414860834 seconds)
    (24/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.411530833 seconds)
    (25/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.529601792 seconds)
    (26/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.433563538 seconds)
    (27/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.430820398 seconds)
    (28/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.395230421 seconds)
    (29/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.494663689 seconds)
    (30/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.568659058 seconds)
    (31/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.423538182 seconds)
    (32/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.588100487 seconds)
    (33/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.446279845 seconds)
    (34/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.47602244 seconds)
    (35/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.52993577 seconds)
    (36/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.430922738 seconds)
    (37/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.431961476 seconds)
    (38/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.485788698 seconds)
    (39/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.435347105 seconds)
    (40/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.470998586 seconds)
    (41/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.57138121 seconds)
    (42/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.488280349 seconds)
    (43/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.617260131 seconds)
    (44/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.473929971 seconds)
    (45/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.489170785 seconds)
    (46/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.39307313 seconds)
    (47/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.615216793 seconds)
    (48/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.429174748 seconds)
    (49/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.626689689 seconds)
    (50/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.208153866 seconds)
    (51/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.47324273 seconds)
    (52/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.431362613 seconds)
    (53/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.424965076 seconds)
    (54/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.508077367 seconds)
    (55/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.392365803 seconds)
    (56/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.391197104 seconds)
    (57/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.623537428 seconds)
    (58/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.512290261 seconds)
    (59/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.408889634 seconds)
    (60/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.511282625 seconds)
    (61/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.499246269 seconds)
    (62/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.529657448 seconds)
    (63/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.547720467 seconds)
    (64/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.560876303 seconds)
    (65/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.736576375 seconds)
    (66/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.432997721 seconds)
    (67/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.388420074 seconds)
    (68/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.553257014 seconds)
    (69/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.784982406 seconds)
    (70/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.702901228 seconds)
    (71/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.503411013 seconds)
    (72/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.415683829 seconds)
    (73/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.412285237 seconds)
    (74/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.432855392 seconds)
    (75/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.432157592 seconds)
    (76/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.122178923 seconds)
    (77/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.57171782 seconds)
    (78/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.057985789 seconds)
    (79/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.517504819 seconds)
    (80/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.458374737 seconds)
    (81/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.54815769 seconds)
    (82/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.401298447 seconds)
    (83/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.476838527 seconds)
    (84/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.575457711 seconds)
    (85/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.421107671 seconds)
    (86/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.398290316 seconds)
    (87/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.557210648 seconds)
    (88/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.532784686 seconds)
    (89/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.490807933 seconds)
    (90/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.44688889 seconds)
    (91/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.387784657 seconds)
    (92/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.488366519 seconds)
    (93/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.412484374 seconds)
    (94/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.455406939 seconds)
    (95/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.468939158 seconds)
    (96/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.178646721 seconds)
    (97/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.658556781 seconds)
    (98/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.549557175 seconds)
    (99/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.389508435 seconds)
    (100/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.418857337 seconds)
    (101/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.444923137 seconds)
    (102/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.477979574 seconds)
    (103/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.437721931 seconds)
    (104/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.517817369 seconds)
    (105/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.572901183 seconds)
    (106/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.531950938 seconds)
    (107/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.473258812 seconds)
    (108/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.508146822 seconds)
    (109/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.567052396 seconds)
    (110/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.590755904 seconds)
    (111/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.633594716 seconds)
    (112/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.475538144 seconds)
    (113/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.551673396 seconds)
    (114/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.452520855 seconds)
    (115/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.491020728 seconds)
    (116/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.450790166 seconds)
    (117/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.520305891 seconds)
    (118/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.514211307 seconds)
    (119/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.148495103 seconds)
    (120/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.483250032 seconds)
    (121/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.437833264 seconds)
    (122/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.403022656 seconds)
    (123/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.674452806 seconds)
    (124/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.435860771 seconds)
    (125/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.498236722 seconds)
    (126/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.591918912 seconds)
    (127/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.436919297 seconds)
    (128/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.518940792 seconds)
    (129/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.447983567 seconds)
    (130/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.094987859 seconds)
    (131/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.665024645 seconds)
    (132/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.635718142 seconds)
    (133/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.537604058 seconds)
    (134/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.45593879 seconds)
    (135/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.432515134 seconds)
    (136/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.480514023 seconds)
    (137/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.457171234 seconds)
    (138/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.52477217 seconds)
    (139/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.431249504 seconds)
    (140/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.538427511 seconds)
    (141/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.516607319 seconds)
    (142/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.150970391 seconds)
    (143/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.451008654 seconds)
    (144/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.315620468 seconds)
    (145/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.457832413 seconds)
    (146/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.461350622 seconds)
    (147/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.626477404 seconds)
    (148/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.811135546 seconds)
    (149/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.068832591 seconds)
    (150/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.574253758 seconds)
    (151/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.438349398 seconds)
    (152/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.119384431 seconds)
    (153/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.411668871 seconds)
    (154/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.807624682 seconds)
    (155/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.396813847 seconds)
    (156/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.609954426 seconds)
    (157/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.531532417 seconds)
    (158/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.548918875 seconds)
    (159/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.47905909 seconds)
    (160/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.431007281 seconds)
    (161/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.056147548 seconds)
    (162/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.486022759 seconds)
    (163/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.420149644 seconds)
    (164/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.093456541 seconds)
    (165/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.586763675 seconds)
    (166/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.546102323 seconds)
    (167/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.446957905 seconds)
    (168/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.525573851 seconds)
    (169/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.49777131 seconds)
    (170/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.579475606 seconds)
    (171/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.633376131 seconds)
    (172/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.191611428 seconds)
    (173/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.457756412 seconds)
    (174/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.500489836 seconds)
    (175/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.419217773 seconds)
    (176/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.5116898 seconds)
    (177/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.468340767 seconds)
    (178/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.369011111 seconds)
    (179/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.425741256 seconds)
    (180/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.593939151 seconds)
    (181/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.632497173 seconds)
    (182/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.446440861 seconds)
    (183/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.508185316 seconds)
    (184/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.422853101 seconds)
    (185/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.326107455 seconds)
    (186/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.530420728 seconds)
    (187/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.574464198 seconds)
    (188/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.62301707 seconds)
    (189/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.47828826 seconds)
    (190/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.457478015 seconds)
    (191/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.433805429 seconds)
    (192/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.5051073 seconds)
    (193/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.463794897 seconds)
    (194/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.573852125 seconds)
    (195/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.454804397 seconds)
    (196/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.508182318 seconds)
    (197/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.579392409 seconds)
    (198/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.627359338 seconds)
    (199/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.366651602 seconds)
    (200/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.601362936 seconds)
    (201/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.530756614 seconds)
    (202/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.632394787 seconds)
    (203/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.652498599 seconds)
    (204/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.519846091 seconds)
    (205/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.251037289 seconds)
    (206/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.555384067 seconds)
    (207/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.52275636 seconds)
    (208/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.399701965 seconds)
    (209/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.406280428 seconds)
    (210/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.402587104 seconds)
    (211/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.224573294 seconds)
    (212/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.663561645 seconds)
    (213/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.394267753 seconds)
    (214/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.218941117 seconds)
    (215/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.119148739 seconds)
    (216/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.639785443 seconds)
    (217/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.645384461 seconds)
    (218/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.467982726 seconds)
    (219/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.239717471 seconds)
    (220/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.443729393 seconds)
    (221/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.394825695 seconds)
    (222/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.46632938 seconds)
    (223/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.504485848 seconds)
    (224/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.510355935 seconds)
  done (took 389.523447625 seconds)
done (took 390.831727003 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.461320025 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.5963736 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.413370838 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.413705538 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.458402478 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.421402578 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.46004623 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.42084276 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.422508035 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.423635273 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.423674564 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.428460012 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.425293221 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.453211633 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.528775071 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.421925711 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.413394114 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.419129925 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.461005064 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.47986642 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.457715163 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.460527441 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.433549347 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.414489641 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.461098609 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.46326752 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.419703638 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.404412595 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.425462464 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.462103017 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.40901259 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.426030659 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.473126419 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.469202868 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.459404531 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.420797945 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.459412048 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.596496382 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.459377097 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.454335254 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.426552846 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.470271812 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.426371153 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.42495327 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.470733834 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.434931944 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.464607388 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.538900325 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.408753559 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.423865823 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.467066086 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.482988602 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.426936261 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.419040773 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.416255598 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.542775158 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.421576308 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.463518536 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.425355657 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.460635104 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.530408505 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.465534293 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.48274718 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.465487846 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.424244657 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.427989034 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.421415167 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.482666358 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.421662713 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.459729927 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.460750515 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.428830179 seconds)
done (took 113.787164359 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.546095759 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.415550766 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.557833017 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.420727607 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.584599309 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.566656563 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.420906616 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.420999889 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.419797687 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.25313231 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.420910592 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.42010894 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.41602519 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.420808426 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.546998341 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.421282653 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.421483674 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.142977438 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.421772415 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.562594531 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.413102031 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.420853014 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.42101722 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.243568576 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.415506719 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.415576718 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.564054831 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.420628453 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.13501524 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.411334689 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.410120996 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.133713979 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.566835813 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.440447247 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.431363462 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.42993312 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.5853402 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.44266303 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.548485964 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.548655323 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.560545461 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.460012216 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.412417653 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.409108755 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.422875953 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.422505644 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.421593781 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.450204271 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.416488324 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.420432627 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.145317142 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.431441202 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.431635928 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.422756419 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.423196201 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.442541996 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.424222003 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.424676711 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.571217345 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.427204755 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.54880071 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.247324904 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.256931197 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.422925659 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.409263706 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.423593284 seconds)
  done (took 114.376685531 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.484330097 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.495081096 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.541274517 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.440687872 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.470796972 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.544103542 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.440063734 seconds)
  done (took 11.744481786 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.425030242 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.425144957 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.46777255 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.469087461 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.424001038 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.576903441 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.424692656 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.430846184 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.434135176 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.47257068 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.424424723 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.424569609 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.42317498 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.41801199 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.468153351 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.433912328 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.535588418 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.420439474 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.425413144 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.575724622 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.42307866 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.434929751 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.478150419 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.432630607 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.426434243 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.427444457 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.191042448 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.424441026 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.424388805 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.42631527 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.425564021 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.472382853 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.426071059 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.420084496 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.425531968 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.537516081 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.426353684 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.425927068 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.427222843 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.421720207 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.424525437 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.426138638 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.427179833 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.426187992 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.426946005 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.447388647 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.428688543 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.426432022 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.428003126 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.426134881 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.472322883 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.427395517 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.427630687 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.427430796 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.477995234 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.436760145 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.425373382 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.427360446 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.428457376 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.427452597 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.579623127 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.469112411 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.429460358 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.472105728 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.428916108 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.428535089 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.428078526 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.42769735 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.516462319 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.429211768 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.471503804 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.427800694 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.605563032 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.447686001 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.430337159 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.425860048 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.427790972 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.428135858 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.422380227 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.430423018 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.428526038 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.426012178 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.429666315 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.429920316 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.427447599 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.581088893 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.533797022 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.428921848 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.435664197 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.431465216 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.428780694 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.477502743 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.429630153 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.429211454 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.476489453 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.540773914 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.487929665 seconds)
  done (took 146.544530032 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.437667726 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.437631625 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.429634785 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.453796549 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.427278421 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.425213113 seconds)
  done (took 9.943365195 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.428309105 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.434862578 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.431077396 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.430157558 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.430154228 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.430625559 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.431052189 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.427360011 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.435430581 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.431553537 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.430639076 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.43197308 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.431360427 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.430688299 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.430495521 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.431231129 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.429665994 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.430767899 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.43077127 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.430433871 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.426154891 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.463908381 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.431012602 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.429496483 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.436037114 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.431623001 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.447930076 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.43247367 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.432201182 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.433971297 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.45601884 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.432993501 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.428753372 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.434250432 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.43630065 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.428966698 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.438222206 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.434915735 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.435664604 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.433710454 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.435665528 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.432938533 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.433855719 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.435236703 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.430157397 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.435079451 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.439634333 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.451420655 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.434700003 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.43529917 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.435828736 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.432628998 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.432975418 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.435923914 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.43148178 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.454371731 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.441250085 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.434347927 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.434106016 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.430562782 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.438268357 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.435390029 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.431559113 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.439348505 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.435985518 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.437274867 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.431703041 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.438810747 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.433773355 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.435883076 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.436280655 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.434663687 seconds)
  done (took 105.638125985 seconds)
done (took 389.570579458 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.355664753 seconds)
  done (took 4.694776433 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.62064869 seconds)
  done (took 3.96064248 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.691206159 seconds)
  done (took 27.040315069 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.500649585 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.540351996 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.437112635 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.425036186 seconds)
  done (took 11.241989905 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.897781697 seconds)
  done (took 4.235613521 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.430045408 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.449417525 seconds)
  done (took 6.222323856 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.777393072 seconds)
  done (took 4.116147677 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.015840324 seconds)
  done (took 4.366028376 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.452286729 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.446495322 seconds)
  done (took 6.247777389 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.418047793 seconds)
  done (took 3.758284542 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 38.912497018 seconds)
  done (took 40.254452635 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.441041286 seconds)
  done (took 3.783990284 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.469454298 seconds)
  done (took 3.809397805 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.728363882 seconds)
  done (took 7.069448051 seconds)
done (took 132.139098958 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.425109777 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.432003107 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.433205098 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.43305147 seconds)
  done (took 11.063425783 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.490333763 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.489730518 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.491441344 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.490311931 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.490279726 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.489413053 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.463025383 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.463988804 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.488896161 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.490238392 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.491489092 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.490431857 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.492951899 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.466164213 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.49005523 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.492722457 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.49138371 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.490400648 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.46343701 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.490627687 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.439441822 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.490157767 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.492140908 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.440154474 seconds)
  done (took 36.912530229 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.931991392 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.508140354 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.589983905 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.489086686 seconds)
  done (took 7.860566528 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.515407972 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.518244713 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.544077445 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.575930358 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.581455491 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.532182307 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.465984657 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.462039807 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.44687928 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.517534401 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.567338667 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.50909767 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.596030557 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.440119566 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.645890379 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.438480965 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.43968237 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.517633135 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.569826716 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.582566682 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.439290758 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.518135263 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 2.027990409 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.510218926 seconds)
  done (took 38.305479456 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.450242391 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.456054399 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.442349772 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.458287673 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.442739439 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.442573922 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.442823314 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.448988517 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.441808634 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.442416458 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.443615032 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.455043101 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.446168157 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.442268282 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.449523054 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.444444854 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.449798929 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.447382421 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.443043293 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.449781175 seconds)
  done (took 30.284543331 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.432364148 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.430973845 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.78231522 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.688596237 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.430411672 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.430866117 seconds)
  done (took 14.540426235 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.522105151 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.711135124 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.444041264 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.870875806 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.965923309 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.441666049 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.43961336 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.735290313 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.127498396 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.109738336 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.512122612 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.521969544 seconds)
  done (took 21.747399242 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.436335974 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.436713181 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.438149895 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.472393519 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.506236016 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.465587852 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.444966639 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.432203845 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.509572355 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.536061638 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.467653014 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.507028158 seconds)
  done (took 23.00007607 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537599735 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.44007924 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.438495684 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.549896442 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436844613 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.288117569 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.526947054 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.203771147 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.465419571 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.713847288 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.449842882 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543706483 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.698199261 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448734066 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.446292736 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.428777017 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.675183243 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.029009518 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448390325 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439453354 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.478687178 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.439974171 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.471277286 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.698767891 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.446284152 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.440361094 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.704234496 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.440936281 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.779980873 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.46068674 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451559371 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.440093021 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.717451689 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.157263977 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.562729835 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.690212384 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.45283977 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.448575592 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.434178121 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.447411405 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.464031825 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.448603317 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.452621147 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.442467077 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.441278164 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.441947896 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.252494012 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.472810122 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.441055035 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.44210441 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.75631548 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.54515416 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.448344214 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.443280538 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46557522 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.441611669 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.447587319 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.574805648 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046117867 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.441483182 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483544282 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.448302372 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.437562255 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.44805077 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.158081133 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.45472131 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.448754654 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.449874527 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.441833213 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.443778002 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.467142212 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.441440719 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.467932456 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.442558015 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.284116241 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.461028756 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.449687857 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.103906401 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463434346 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.449755002 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.677606289 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.445554618 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.444202788 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.443389279 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.442774193 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.293090433 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.459216908 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.428940194 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488528529 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.23665273 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.718805479 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.470005255 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.47361005 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.669395144 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.4286375 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.444218269 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.460001386 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.453116309 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.466930562 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.219551699 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.465146238 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.452828747 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.70530589 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.650165246 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461670609 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.445890072 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.98542831 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482184983 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.469252626 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.446011957 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.722754085 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.114918507 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.487741886 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.456708044 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.469216294 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.446753061 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.339143633 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.469885417 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.554971813 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.452059441 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.766523432 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.400790836 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.453214287 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.514955546 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.449763787 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.447191222 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.453878044 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.454360408 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.445688695 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.690929405 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.474106162 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.484273541 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.446847152 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4471008 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.461037963 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.453528564 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.455231248 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.674097596 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468016375 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.730790284 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.446973356 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.448352914 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.44836143 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.66915953 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.466042177 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.7908497 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.715320844 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447218688 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.455266197 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.487847763 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.468169146 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.553630151 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.471575356 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.449868894 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.713843824 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.456385595 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.455804139 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.466378934 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.456723495 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.452309369 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.45939356 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.452655094 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.114760088 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42877698 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.456864577 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.342695576 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.466695975 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.518420569 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.457706586 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.705576368 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.461110413 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.450708765 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.46393045 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.464642128 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.67713408 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.460760253 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.452108343 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.534582589 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.984426646 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.138004283 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.472804568 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.449958953 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.451974485 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.449605919 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.451081327 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.450583516 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.450705458 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.702495703 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.473587843 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.448853155 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.15138239 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480916371 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.461893821 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.466531845 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.464874281 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.459095309 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.453117253 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.451390876 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457374585 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.475425236 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.470352489 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.596788182 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.469680381 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.45180338 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.972966584 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.45894661 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.451840168 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.452419218 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4862642 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.460685914 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33347991 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.738998749 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.448261106 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.77736015 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.468377478 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.476902633 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.452072172 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451888314 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.460377601 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.461278202 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.465072202 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.464367546 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.458318266 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461729686 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029551373 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318569667 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.082962356 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.460080772 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.454608369 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.459011069 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.232419397 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474153874 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.454295494 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.730018682 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.262175244 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476330841 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.994094782 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.492587448 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.358952411 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.777203997 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.6952371 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.4555492 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.455708363 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.781162442 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.667499312 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.488197342 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.455013605 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461357947 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.440245286 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072761083 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.485086098 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.542429225 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.234160587 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476769635 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.462423955 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.483241389 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.454312673 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9454725 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.478347079 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.455989256 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.456798917 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.460799913 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33721246 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.484539848 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.455864622 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.168135115 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.478146253 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.995690678 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478515408 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.711466182 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.472809493 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.462157986 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.454089138 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.467900395 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.719146411 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.77582375 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464316356 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.471423091 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.091282828 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.333155083 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.465964416 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457477278 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.357665952 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461690337 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.831285236 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.464104616 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.491259581 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.463081529 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.457065878 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457719088 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.456593437 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.461439798 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428762421 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.057595923 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.466943988 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461521002 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.459318305 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.462783589 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.715892635 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.474031425 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.132227298 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.695759749 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.451738785 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.481212626 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.46456622 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463937424 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.451010782 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.45843598 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.459662977 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484172767 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.684184543 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.456975388 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.444829493 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.517821028 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.663624964 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.459043974 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.460042931 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.750140754 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.464164404 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.472624921 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31390432 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.514518335 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.466275801 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468319809 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.474106325 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507640431 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.527121199 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.718386973 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.478882818 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.471746005 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925938673 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482917471 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.466779491 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.476359661 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.556117863 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.459705747 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.477970112 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.241814839 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.138853353 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340324422 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.140484082 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.789491264 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.468199943 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471466408 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461449039 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.624063818 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.460360693 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.737389036 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.46217655 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.481149204 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.49012906 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461567513 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46961129 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.673544504 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.738940225 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.460282751 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461211021 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486739338 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.461109403 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.472974667 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.667292452 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.065382369 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.145363369 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470985711 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.462752773 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.258763211 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.761235029 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461586467 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.462516634 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463104745 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.476667833 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.468475883 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.469743745 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48096521 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.613766451 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.782668316 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.191155727 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.496479126 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.501459569 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.982891506 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480808339 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.727396169 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.474212895 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.727588698 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.147379198 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.27489212 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.733497709 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.535462272 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.721159401 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.468892112 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.626546163 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.471054218 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.467314122 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.464125031 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464469959 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.464958111 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.474334248 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.135121289 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.759573092 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.470688941 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.469404834 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.500608696 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.475249861 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.691510611 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.338369753 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.691762382 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.476283714 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.47448245 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.466953983 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.133795089 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.792267287 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47307044 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.472606754 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.74912372 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.472340472 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.491919436 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.984921421 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.46578681 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.14448691 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.446134551 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.489625414 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.465999998 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.30889617 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.138049941 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.483823126 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.075812941 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.473305774 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.466458193 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.766125322 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.475195805 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.466083402 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.771221919 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.471772397 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.46748434 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.750241601 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.135836986 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.382020405 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.485161933 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483188315 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.474453111 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.467099792 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497698911 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.471161988 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.467329563 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.957734497 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.496793261 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468634977 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.482721441 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.482767263 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472221493 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.497858403 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468514146 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.475808716 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.485901781 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.463105547 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.476018158 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.608919825 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.095365415 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49223651 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.146886725 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.801758437 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.728519254 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.46982653 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.458860918 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.474958565 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468610945 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.470293815 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.469406469 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.48572086 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.144058948 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.476566144 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.510772328 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.475443532 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.47098968 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.67634516 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.473873589 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.736969097 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475103187 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.493412642 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.457085764 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470310647 seconds)
  done (took 1023.480800567 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.467513436 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.492151411 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.512736343 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.510834194 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.490179524 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.497844917 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.551689367 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.546268608 seconds)
  done (took 21.445672406 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.469595347 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.480279251 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.464269201 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.47856778 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.473797565 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.027898954 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.507641319 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.479942753 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.491200326 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.47155364 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.480356504 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.476649873 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.476694966 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.468364991 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.466717765 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.483294664 seconds)
  done (took 34.584545865 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.942880552 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.785026613 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.178132596 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.498287644 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.519128943 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.482465621 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.915882328 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.50418556 seconds)
  done (took 29.204712164 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.47865446 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.477342411 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.479669991 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.478684836 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.477327649 seconds)
  done (took 8.771448271 seconds)
done (took 1302.543826813 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.480424011 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.478907957 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.479953627 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.479234609 seconds)
  done (took 7.296265521 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.458836944 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.458680519 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.458659839 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.473652501 seconds)
  done (took 10.225866168 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.335373537 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.230447548 seconds)
  done (took 5.944722435 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.991054841 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.994351503 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.996428428 seconds)
  done (took 7.360689002 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.780900473 seconds)
  done (took 3.159135578 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.402277026 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.471083515 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.181061144 seconds)
  done (took 8.433267162 seconds)
done (took 43.797087651 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.474449087 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.810797295 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.631749952 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.475083959 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.636872319 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.633731023 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.215722614 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.467696344 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.497837579 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.472520799 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.483305954 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.659691288 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.1978156 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.810798065 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.198786544 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.717512457 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.636608191 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.487677227 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.487828017 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.471314949 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.214322055 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.487989772 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.471166092 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.470968661 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.640603628 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.624777997 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.469858946 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.738425945 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.469713965 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.501746399 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.623149201 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.472745303 seconds)
  done (took 86.03450833 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.470313433 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.49071835 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.490899311 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.489951369 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.50135564 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.476445832 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.501336588 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.470016828 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.470333781 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.475106933 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.470319726 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.491223151 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.508509868 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.470059363 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.49032899 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.471291512 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.48186518 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.474129183 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.47077139 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.47237686 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.484747824 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.478394587 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.481393935 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.470476713 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.491455436 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.471394339 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.492509134 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.482057454 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.472308246 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.491389587 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.476221915 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.504856815 seconds)
  done (took 80.817387602 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.487647061 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.474178473 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.473267301 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.49443464 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.47760479 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.478601265 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.496954883 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.478722483 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.471379066 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.472418326 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.472408928 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.471148516 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.475651207 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.489632415 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.473511673 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.48808397 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.473727113 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.472536561 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.493804532 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.488538789 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.473169274 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.487356165 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.487109559 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.47395532 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.496581964 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.485530179 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.481031772 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.472731254 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.505474574 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.483909433 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.484764555 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.473632988 seconds)
  done (took 80.794507625 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.760582863 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.485590682 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.489329005 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.479825006 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.489279757 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.486464576 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.480137721 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.761668322 seconds)
  done (took 15.817025237 seconds)
done (took 264.842772879 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.497261831 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.075495614 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.528746015 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.480408293 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.504589576 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.506689289 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.741359433 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.532365358 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.739965031 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.506330474 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.502037443 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.479293455 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.439183162 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.655001641 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.425069935 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.495226193 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.492975834 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.484955293 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.150450259 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.805010316 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.510924865 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.4855417 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.418092083 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.502503503 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.483961689 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.575890367 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.604585479 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.735288573 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.664675022 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.58041071 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.090412499 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.484560915 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.481937811 seconds)
  done (took 69.047613864 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.482675061 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.632920541 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.486200513 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.48788952 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.612064147 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.511000251 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.482948448 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.487381848 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.489017165 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.487190813 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.486768437 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.488845286 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.489268429 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.536534484 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.612692881 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.511731266 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.483717538 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.607871817 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.481627646 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.480900331 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.535721686 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.488962372 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.491058936 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.537967385 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.489325474 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.490087123 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.610249424 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.513352025 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.490177472 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.608580671 seconds)
  done (took 46.983140352 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.490301416 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.188506773 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.359742257 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.492463584 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.48512177 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.487962762 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.837573085 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.494502135 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.488545386 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.489472684 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.073239429 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.492493959 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.525773107 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.390999517 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.488991472 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.490817067 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.492351308 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.486325752 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.2035626 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.497222783 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.860429734 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.495424271 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.839153363 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.501807358 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.514006242 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.488312009 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.492683282 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.415287073 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.511930009 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.073836472 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.460319767 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.836479022 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.338011939 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.393047391 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.458110531 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.497247307 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.491856074 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.084508518 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.490486588 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.489239078 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.836201241 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.488237865 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.37209556 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.238419196 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.510183717 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.493861296 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.434942869 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.100558014 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.782985079 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.495650556 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.40381822 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.491092989 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.492872779 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.489367074 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.786893333 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.494014338 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.488309582 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.477953615 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.520176618 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.84152642 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.498998019 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.490389186 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.204477337 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.487460489 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.187102552 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.490365055 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.497275123 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.513667654 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.375423229 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.492127658 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.258787777 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.512702764 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.495566872 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.07558935 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.189241478 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.482747571 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.517326988 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.196122777 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.371814002 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.860582619 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.494334532 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.399520469 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.865375058 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.493354502 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.497830477 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.498330529 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.494960762 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.571536235 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.83671674 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.184570213 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.263019894 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.505415054 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.867238764 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.498472321 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.491518443 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.479070758 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.519564924 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.495779801 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.372783797 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.256316736 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.51285552 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.499198035 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.270576222 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.517533014 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.841333744 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.495073616 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.386731351 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.493086115 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.571480841 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.495225627 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.49844014 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.518678934 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.843063631 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.496163114 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.497529675 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.253135085 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.121815738 seconds)
  done (took 211.917009496 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.483490498 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.489106833 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.48790709 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.490257202 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.484619297 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.494632784 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.48439737 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.48535088 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.492103295 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.486630764 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.487538335 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.496366933 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.493459896 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.486320823 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.491743316 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.491781929 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.48687461 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.524645911 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.489670071 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.485876498 seconds)
  done (took 47.208093276 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.498451739 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.16827211 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.173450199 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.503748044 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.4967483 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.491989656 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.561434816 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.502136008 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.498272169 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.854345739 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.70805693 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.523891527 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.498241433 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.498888182 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.151058382 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.495289178 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.85451209 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.188614891 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.503149126 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.190024119 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.49303223 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.49859674 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.492707346 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.179764182 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.888721774 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.84851243 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.569456079 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.191896214 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.524610924 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.499174869 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.188722779 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.504018766 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.495886207 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.189787033 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.526323574 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.513608027 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.50164847 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.565405679 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.568004524 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.86199664 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.271953174 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.885915301 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.514827027 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.683784299 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.504765691 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.489967665 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.181501196 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.523314232 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.488734986 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.501488776 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.505637049 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.163995764 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.521988618 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.163581957 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.528134602 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.502509072 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.192896902 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.166849535 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.177877115 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.749364512 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.520990022 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.850449727 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.506810636 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.184559262 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.522357605 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.50267781 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.503057612 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.71288418 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.200144394 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.853037599 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.862668105 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.860527158 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.500396998 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.573304107 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.52408376 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.934518227 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.573195132 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.931713611 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.867010455 seconds)
  done (took 138.565570243 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.81037714 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.631531759 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.976383401 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.177017199 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.496542522 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.650754179 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.630934214 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.795051947 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.508068605 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.575035408 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.262373949 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.628301968 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.349377794 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.60252844 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.615018633 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.662192845 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.963764825 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.491700772 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.271732091 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.258983213 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.522494732 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.619154749 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.079527603 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.739011656 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.514145982 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.165922943 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.515881985 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.30195051 seconds)
  done (took 58.215365769 seconds)
done (took 573.320910551 seconds)
SAVING RESULT...
DONE!
