cset: moving following pidspec: 32100
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.300619121 seconds)
loading group "string"... done (took 0.470756415 seconds)
loading group "linalg"... done (took 7.714110665 seconds)
loading group "parallel"... done (took 0.17120404 seconds)
loading group "find"... done (took 1.193070843 seconds)
loading group "tuple"... done (took 2.125979242 seconds)
loading group "dates"... done (took 1.344126721 seconds)
loading group "micro"... done (took 0.248772349 seconds)
loading group "io"... done (took 0.662338103 seconds)
loading group "scalar"... done (took 42.269901966 seconds)
loading group "sparse"... done (took 13.26569613 seconds)
loading group "broadcast"... done (took 1.085780013 seconds)
loading group "union"... done (took 14.747341015 seconds)
loading group "simd"... done (took 4.883851575 seconds)
loading group "random"... done (took 9.980274334 seconds)
loading group "problem"... done (took 2.00757397 seconds)
loading group "array"... done (took 22.480681007 seconds)
loading group "misc"... done (took 1.429085606 seconds)
loading group "sort"... done (took 3.618247781 seconds)
loading group "collection"... done (took 19.415693711 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.45641019 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.13867732 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.142723046 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.131997019 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.200360133 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.13986548 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157039561 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.106132344 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.985489483 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.177994178 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.139403274 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.492761969 seconds)
done (took 5.017820989 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.216251038 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082212216 seconds)
    (2/2) benchmarking "String"...
    done (took 0.094513385 seconds)
  done (took 0.870268403 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.088711795 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.143228272 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.091402631 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.074023436 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.073542354 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.091334593 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.074395888 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.090006307 seconds)
  done (took 1.333670441 seconds)
done (took 3.202571509 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.732584591 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.264976522 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.199789745 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.511870514 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.177809351 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.20891227 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.677168005 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.399722355 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.245781853 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.1023647 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.128972993 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.39135127 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.112343471 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.692276751 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.084316323 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.121760245 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.19396875 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.443202955 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.091870096 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.089908604 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.114717484 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.150713942 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.111461488 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.08423125 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.177419748 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.076126423 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.181233218 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.105121475 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.074102834 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.279665532 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.196063163 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.707583578 seconds)
  done (took 10.864144988 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.113373165 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.134610959 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.073625506 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.153168101 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134036934 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.078122653 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.096260518 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.075921341 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120253971 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.176679811 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113927316 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.138597842 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.089928175 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.078186606 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.113677755 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.227159188 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.116555702 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.115132846 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.078928273 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.08595187 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.134194855 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.109200465 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.089082945 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.104464751 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.16606185 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.203019786 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.107642727 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122960873 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.076553058 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.108340903 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.141419253 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.155235046 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.075814655 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.075958498 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.174121523 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.120957142 seconds)
  done (took 4.990477107 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.189810403 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.099562567 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.169591686 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.161765666 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.141879891 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.150581952 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108361697 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.255835599 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.196590904 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.15906333 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142009625 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.11293514 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07716265 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.097267187 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.075358514 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.610599351 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.161239255 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.128223761 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.093076085 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.094258253 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.080647478 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.385918332 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09656424 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.072563182 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094254403 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066815069 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.158086963 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076406056 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.178573047 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.09618194 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.095012841 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.110523758 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.201864234 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.123604937 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104443505 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.12164931 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.131407565 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076198167 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.070794094 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.174072026 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.098521918 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.073072609 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.119164549 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128057848 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.115593554 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.090194421 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.077423126 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.225085946 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.073942787 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.087860981 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.026270725 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.173620853 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.08872093 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.072460674 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.334033172 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.112190379 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073680151 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.090942483 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.270896647 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.123927974 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.092873445 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.075962039 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076618004 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.091055989 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.077282943 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.775071897 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.09230325 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.705912149 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.077504431 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.086091491 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.094592973 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.091323755 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081695394 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080408906 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.109829176 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.07461759 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.092940212 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.073276246 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.089881166 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.075170094 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.109347464 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.079727215 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.091289428 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.14246741 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.089549203 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.095574718 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123366706 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.077092227 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.089802342 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.123110257 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076972958 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.074203034 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.130316699 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.073986459 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.11166408 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.092425086 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.136183746 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.075874171 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.174374175 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.074151405 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.120492833 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.082408335 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.122617803 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.10309533 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075382018 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.09607234 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.072068908 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.089339858 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.073216167 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.141726476 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.089690056 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.075836542 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.073503992 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.10370476 seconds)
  done (took 22.428157267 seconds)
done (took 38.978681315 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.34871138 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.106692579 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.108628756 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.107616981 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.105415698 seconds)
  done (took 1.547217565 seconds)
done (took 2.289884753 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.283433596 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.167788403 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070370548 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.179673386 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.072412793 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.172472701 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.154741094 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.105905105 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.177649447 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.070595845 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.174148929 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071348948 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071031263 seconds)
  done (took 2.540198388 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091062629 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112347887 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.078415709 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.090318036 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089769905 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090251602 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106819614 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.096517186 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.106683116 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080249026 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.072086471 seconds)
  done (took 1.75314329 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090526414 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.092324403 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095913421 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088966322 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089536933 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08956086 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106252284 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.095260646 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107295919 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081349192 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.072398389 seconds)
  done (took 1.751335762 seconds)
done (took 6.778096927 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090751229 seconds)
  done (took 0.826813352 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.008000289 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.281844634 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.09954098 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.157784315 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.301698658 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.205291534 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.58616336 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.126168195 seconds)
  done (took 15.716701369 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.109528782 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.095382436 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.075811625 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.092128206 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.09143804 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.093585645 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.077649446 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.094639264 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.077436394 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.077436636 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.096128095 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.077056201 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.094389657 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.076247269 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.097538138 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.076791017 seconds)
  done (took 2.202334649 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.114272781 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.112591916 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.101917586 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.085295769 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.098271333 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.079350154 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.099760345 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.080693982 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.095241189 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.078799491 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.100739712 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.083219878 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.097997212 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.077396896 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.097948468 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.084975027 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.09505791 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.081479984 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.098468356 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.098772457 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.083429634 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096834954 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.08168969 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.100060973 seconds)
  done (took 3.07577872 seconds)
done (took 22.564416197 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.149909098 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080123167 seconds)
  done (took 0.975369321 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096834035 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114148741 seconds)
  done (took 0.960427289 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.102921301 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094912279 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.131694325 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.092518506 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.094245603 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.076135048 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.125927869 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.07832184 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.094945668 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.078364947 seconds)
  done (took 1.721471139 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082245542 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.082497612 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.102980183 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.116690024 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.088055271 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.097231765 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.083725044 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099606987 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.083609777 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.094107746 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.086129098 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.112211589 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.084816599 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.112714095 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.099484269 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082659181 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.103081947 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.080456694 seconds)
  done (took 2.445651454 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078258396 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.078018796 seconds)
  done (took 0.90816428 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080630784 seconds)
    (2/7) benchmarking "second"...
    done (took 0.075793746 seconds)
    (3/7) benchmarking "month"...
    done (took 0.095984531 seconds)
    (4/7) benchmarking "year"...
    done (took 0.095667384 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.075087818 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.074830668 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.091457878 seconds)
  done (took 1.343609254 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.481378969 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.137614109 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.260184589 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.079305219 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.115705244 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.320421012 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.074031489 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.097203193 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.078908937 seconds)
  done (took 2.436544704 seconds)
done (took 11.538828831 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.088430752 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.096395995 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.125003617 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.466867289 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.112032691 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.074362964 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.152941979 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.24701067 seconds)
done (took 2.119311136 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.142540117 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.33518149 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.121524067 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.070097433 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.091888906 seconds)
  done (took 1.376595429 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.075647516 seconds)
    (2/2) benchmarking "read"...
    done (took 0.078778563 seconds)
  done (took 0.910558888 seconds)
done (took 3.186115117 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076528819 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.128584051 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.075003465 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.07389023 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.095115449 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.07322374 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.093076067 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.075967032 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.076424351 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.095150992 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.075642626 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.093488947 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075797228 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.073381179 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091124999 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073180447 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094040449 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.072987919 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073800736 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.091110671 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07289584 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093436748 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.073580847 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.07365293 seconds)
  done (took 2.78238532 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.104498294 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.096181613 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.082245291 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.100264886 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.080106486 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.099365722 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.08293779 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.09358844 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.082282432 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.095972941 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079390379 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.09767766 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.078531893 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.097751888 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079075053 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.097126925 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.082007943 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093890788 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078355268 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.098230365 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.081510325 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09418802 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.080859615 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099010038 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.080237282 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098362263 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.078133393 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.09310898 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080733604 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.095645763 seconds)
  done (took 3.442436141 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.081735901 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.07277834 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.09042405 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.079013024 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.089435019 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.076346204 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.072393852 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.089223332 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.07229298 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.089409062 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.073510475 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.071802897 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.089213065 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.07339544 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.08998946 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.075226469 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.102178816 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.072755356 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.071857687 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.090069422 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.075096775 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.089941215 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.074673674 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.07176807 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.08924909 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.071534878 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.089602628 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.071732455 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.073283322 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.089320604 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.074490712 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.092989036 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.072025305 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.078380556 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.092854508 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.07147925 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.092681657 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.071291949 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.181548141 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.088067756 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.071238358 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.089613053 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.072311457 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.079046987 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.092908158 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.073684462 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.090545484 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.073883769 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.072878234 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.094567502 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.072879248 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.089879122 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.074486342 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.09107998 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.075603907 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.071734241 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.091990132 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.073560876 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.093419287 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.073792923 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.073745342 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.091970221 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.07614922 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.092666746 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.09008037 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.078908671 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.089005497 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.07415184 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.094568718 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.075245336 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.073846575 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.103085729 seconds)
  done (took 6.72937668 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.079391719 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101093407 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.073973833 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.074311315 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088247058 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072514208 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.096646415 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072467022 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091418324 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.090890737 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090893558 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073779579 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07427654 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093049846 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073978074 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.091848737 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.083359484 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088333875 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.07240974 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.094772278 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073157221 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.096211459 seconds)
  done (took 2.616997136 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.20803941 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101109985 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.138323728 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091302334 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.112612677 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.090235239 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.098924562 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083322913 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098263237 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084667642 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10159643 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098551728 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.093560403 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100083977 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083463265 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102616736 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081087728 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.103321209 seconds)
  done (took 2.63673849 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.09002194 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.095639872 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.09875138 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095031991 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.076693352 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09824885 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082837263 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.10981993 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.079541306 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.096315722 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.087596277 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095565768 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.078219549 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093442547 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077848933 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.075398567 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.096142282 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075578502 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102176119 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098629562 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.081020656 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103262525 seconds)
  done (took 2.759549781 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094222255 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097532495 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.098011336 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097371379 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.075642987 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.095696816 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.08310564 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.093197572 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.083421395 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.077329499 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092333694 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.07663192 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.099140967 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075190758 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.098246401 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075656798 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.094926252 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075750344 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094925125 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.074143129 seconds)
  done (took 2.524813853 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.11688662 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.108844979 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091690853 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119448349 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090385276 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107959614 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11788252 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.091047456 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108420966 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.103367392 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108081071 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090977301 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11815591 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114121898 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.0906649 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120508756 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.1020039 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120682652 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111455801 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.093633244 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124447104 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093523262 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121212932 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093722151 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.11091477 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093010193 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111275864 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.118255108 seconds)
  done (took 3.769201039 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078023476 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077840919 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.093557789 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.074993261 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.075400498 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.093573754 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.075001967 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.094486573 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077451673 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.075183987 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.095044377 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.077499671 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.095840586 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.077441802 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076643757 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.095368105 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077515207 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.092612949 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078302545 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074906972 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.095417062 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078356014 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.095666178 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.075754992 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075221847 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.096019205 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07498447 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.093956253 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078091482 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07576015 seconds)
  done (took 3.271795081 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.085885637 seconds)
    (2/2) benchmarking "in"...
    done (took 0.102084797 seconds)
  done (took 0.968338311 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.075922315 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113330109 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.075103064 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082230592 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.102341683 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.078576576 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.105646664 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083696534 seconds)
  done (took 1.495109512 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095963059 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.115609783 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083345181 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.108472232 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.096830965 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.113412473 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.138325439 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.103079095 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.083729978 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.094670817 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.095135849 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.095711174 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.083227889 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.077754484 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.102203081 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085106488 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.096949721 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088285735 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.103419742 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.080993389 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102966167 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.089882928 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09908311 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.085508075 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.079705857 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.107133801 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.087196138 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.108677501 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.080191541 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.105844937 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.084480929 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.090508876 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082866967 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102584645 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.078877851 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.11353852 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.0913315 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.103392345 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.086687874 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.1028083 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087054151 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.076438292 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.102231215 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.084268728 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106992158 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.083301527 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.102622514 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077127398 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.09416308 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.080425737 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.077079432 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.096428436 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.07302301 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104292492 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.083067149 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111718971 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081422363 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.09848377 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.081270953 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.099697513 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.084811263 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.080700345 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.099565972 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.08249737 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103763872 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.082251226 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104901688 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.076887385 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.071807788 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.098256263 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.087347104 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.120174551 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.106558133 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.083246729 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084561978 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.097652267 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.082008524 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102493971 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08633873 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.105896772 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083081698 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103940719 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.085974762 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.097443054 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.080627447 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.103718088 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.081858435 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.082157715 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.094455717 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094738567 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.09956538 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.0794543 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.094555669 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.087591555 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.100529075 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.082364402 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.076415637 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104174819 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.072660099 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.102029096 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084431328 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098280993 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.088277779 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103920102 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084357804 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.104962434 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.089413612 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.078588385 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.100993993 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.075588072 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103274133 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.08121754 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.104710089 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.07246172 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082544502 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.099640014 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.084124717 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.105278328 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.081213502 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.102561772 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087370285 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.104557951 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080662679 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.07563475 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.100607619 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.082977303 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106033877 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.085805643 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100137643 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077780131 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095509697 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.08375559 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.101882136 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.083260211 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084106538 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.100968575 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.073202488 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.09783596 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.083870615 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.105758926 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.078991148 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.097700385 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.082910835 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.079322624 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.10095445 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.085031637 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.099092532 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.078705675 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.102177727 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.080256431 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.095911791 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088338421 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.081963986 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.099908525 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.083016454 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106679203 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.081106471 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.102564622 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081622735 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.103195929 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084959464 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.077826935 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.097281611 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.082301819 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.107601139 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.081023179 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.096375448 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.075839271 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.104651837 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.076682646 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.083779162 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.097070479 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.08128881 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.103318969 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.080757188 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.100869828 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.080993313 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113083888 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09173842 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100958623 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.084668206 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.089531316 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.102044548 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.081359385 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.101160327 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084965591 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.102916568 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.087345939 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.103763437 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084198234 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.09992526 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.075913726 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.084519146 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104981122 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.079064368 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.09827189 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.077914111 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.102399438 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.085443237 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.083954086 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.10331724 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081927343 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097961968 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088662322 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.101173589 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.082665672 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.097134821 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.08334981 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.088262903 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.104210326 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084827918 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.107528883 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.082372694 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.096245076 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088181019 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100174115 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.085236639 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096697717 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.076571494 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.077746531 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.103951839 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.082059148 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.100632124 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.072626939 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105963864 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087236855 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.079228487 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.097951137 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.082278813 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.105765723 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.080295203 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.099213675 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.083274298 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.103729653 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091508796 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.094845929 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.079465889 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.104733551 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.081282676 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.070837745 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.100206387 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.079595011 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.094239199 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.079306705 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.097629446 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.079776774 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08274069 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.099336261 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.071054404 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.097587848 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.079391671 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.094971327 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.077989339 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.105468221 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.083421689 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.080698398 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107274744 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085057663 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.103228732 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.082949351 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.102245111 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.084682875 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.103909624 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.082606781 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.103756963 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.081671284 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.078664502 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.101007677 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.078461293 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.09955519 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.081829927 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.103185138 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.080534999 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104676266 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.083982949 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.080742605 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.103778586 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.085170615 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10037736 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.080110493 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.098167122 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.082670171 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.080109635 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.099435726 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.082596161 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.097666954 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087367777 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.102507349 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087531126 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.099185596 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.076274662 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.084635377 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.101492318 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.085399725 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.104342728 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.085510811 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.100306099 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.083365855 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.101225335 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088984693 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.077431883 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.108122562 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085815711 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.098865251 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.083633069 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.098685457 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.081205245 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.098292048 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.081845908 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.085178894 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.099309981 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.083099866 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.104036057 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.083054198 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.099052916 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081345733 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.104794629 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.079750265 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.085849347 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.093492885 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.079058626 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.098484047 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.084260762 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107262351 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.084989476 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.082929607 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.102623394 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083066038 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.099350662 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.074154802 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.104506265 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084269855 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.102197634 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.08636247 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.103134129 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.078783529 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087217278 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.090111676 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.079103204 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.097035284 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.075079236 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103516974 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.082386757 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.104435183 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.07697491 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.076685577 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.093233685 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.082741417 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.097527034 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.071898069 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.07775022 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.098709321 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.079741159 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097960063 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.082208176 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.098147166 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082640559 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103394514 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.080495937 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.078795289 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.100061562 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.074747065 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.094148379 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.076238439 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.098483398 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.082612385 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.074568137 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.093566632 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.081060628 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.097830936 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.077688914 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.099766436 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.078793723 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.084315692 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099783138 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.080319143 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106000204 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.074879658 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.102836941 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.083930425 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.102805657 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.079089235 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.084689771 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103058706 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085840341 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.106902919 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.084355461 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.100323212 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084439906 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.100167549 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.08368616 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.083506241 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.104292207 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.079544486 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.104892008 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089447492 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.100949617 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.08258275 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099024954 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.081020305 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.084736962 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.105536451 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.07995473 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103537478 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.080532446 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.097191678 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.084554706 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.100733073 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.081189285 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101215694 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.07888405 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.083634297 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.094358155 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.086505159 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.095932662 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.082761473 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.097659026 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.075673084 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081051454 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.100040222 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.080518342 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.101655525 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.082871273 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.095362218 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.076673329 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.097532583 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.079508097 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086421626 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.104770648 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.079668925 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.100009711 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.076292209 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.093217356 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.083548525 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.094377074 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.079585448 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.080310642 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.102888352 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.080195972 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.098365439 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.083850794 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.108122187 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.08718879 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.104800996 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.0780039 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.105955602 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.086217894 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.082798507 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.100469152 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.081023404 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105668945 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.086170821 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.100560523 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.078388854 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.105220612 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.08209997 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083778719 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.098080631 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.077785282 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.096365619 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.075890627 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102241974 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.079801847 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.103317081 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.080739982 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081946316 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105781496 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.076888201 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.096808925 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086482183 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09999244 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.085172818 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.095326453 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.078488469 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101981352 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.083890711 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.077191462 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.096728251 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.077163486 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.102317942 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.080185648 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.079134121 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110601196 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.107981299 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.082696338 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083095383 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.1027911 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.079509137 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098767576 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.079775475 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105868568 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.081897661 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.087386864 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.097485963 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.076892782 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.095264528 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082379466 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.099666478 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.081179984 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.074922953 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.095832447 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.07686782 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.099326172 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.08573363 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099375859 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.081652809 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10030785 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.079668434 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.078845511 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105480343 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.074848503 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.100561283 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.088760022 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.102115977 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.079746632 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.102983766 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.085885147 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.102433099 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.07676293 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.08343542 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.099256373 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.078409496 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.102663481 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.083743136 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111663055 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081773588 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.096531443 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.081052865 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.100202873 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.078027925 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.085056999 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103833718 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.083659756 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.102557705 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.080397071 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103923379 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.081285713 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103684896 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.081235547 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.099891988 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.081128613 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.078343185 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.102287328 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.078356688 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.105827157 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.086622977 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10520705 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.088798572 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.080750988 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111414307 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.090557479 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.106874292 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.077500014 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.100817178 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.081006968 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.099417737 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.087142481 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.079167158 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.103164572 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.083991672 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.103893707 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.082019812 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106975788 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.083840849 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084155084 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102291921 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.073028735 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.099189821 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.081590783 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098179487 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.075625071 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.083211802 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104348627 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.086005252 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107952433 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.080121265 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.103772136 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.083444959 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102204809 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.080330066 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.088969154 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10290464 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.08342568 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.098081361 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082980165 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104136554 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.082855293 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083505492 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105002601 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.080128901 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.106636287 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085575567 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.095530541 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.075903529 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.103859772 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.079786403 seconds)
  done (took 54.917837228 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125834885 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104273657 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074368584 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094030568 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118302395 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078873396 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073611842 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.096894848 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.07809712 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108009992 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.076446137 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096185278 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.09764867 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124247515 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121143118 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111281595 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076947633 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101962926 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.077594518 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081091525 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.117312039 seconds)
  done (took 2.864407355 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104001908 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.111910568 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090323216 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.115067894 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104121122 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090950558 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109491305 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111032538 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094360249 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104627906 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.114490108 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091588574 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.104987322 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.086287106 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105773493 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108026595 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.095067373 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104096439 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.091632493 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.110027414 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108297124 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.090419035 seconds)
  done (took 3.076400265 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.08995785 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.084239617 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.105954233 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.076143887 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.104672557 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.076402732 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.110207031 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.079664887 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.089226535 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.098442173 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.080184355 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.099491434 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.082750841 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.073338207 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.097213216 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.075840939 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.146548142 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.106071887 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082891147 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103597779 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.076205994 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.080123725 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.09677362 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.078080016 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.096995757 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.091412475 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103923799 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082578566 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.081901148 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.09646147 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.082954194 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.095452494 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.080036869 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.098235722 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.077705629 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.077638056 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101855279 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.082525767 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.09660167 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.079346005 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.078910627 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.09722559 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083461293 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.10037954 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.080153616 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.096120692 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.080539247 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.082088931 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.093195685 seconds)
  done (took 5.242915528 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.114622584 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.149433515 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.102738318 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.141334578 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.094878433 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.11125301 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.081440753 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.119302559 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.097241416 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.08124493 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.118922328 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.115853554 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.082694799 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.107640013 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.085587587 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103488766 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085671139 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.099515307 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.08950121 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.100905075 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.091241872 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.109489103 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.119170387 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.097769701 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.110580249 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084525035 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102654422 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.090767695 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.116724074 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.111662083 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.091439361 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.112852186 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.120385599 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.087518881 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102447476 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.088651168 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121537858 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.085597263 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.105894536 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.077329142 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.104722553 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.087661864 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.107299152 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.122734903 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086360865 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.107579928 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086125263 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.099620742 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.097767786 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.109364199 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.095048783 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120093813 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110909887 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.086635816 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110772643 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.098881294 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.106113102 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.084239081 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.109708538 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.117747382 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.079857316 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.110609829 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.098680285 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.108246301 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.094547137 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.119428103 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.108165766 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090622118 seconds)
  done (took 7.942052049 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.115303361 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111395354 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101520614 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122356591 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111453906 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.090843629 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110844711 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091439834 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111477626 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.097722051 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110930889 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.159013914 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.088352436 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116483859 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.090147709 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.111319907 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.090233965 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111727855 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090718799 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112725437 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111682091 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.10272548 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.111210891 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.101018711 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123916041 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.108851403 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090793416 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111089843 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.1002138 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.112616596 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124317484 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.090924923 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11169912 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.122300722 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.104152671 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.111952115 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085759585 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.112858895 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091304113 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112033663 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.088572889 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.122046194 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111963312 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.088311773 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.111463145 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.091541424 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122453251 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124969165 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096519768 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11831228 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.090941768 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121973776 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111449988 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090835709 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.123090401 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.130502441 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101987797 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121696746 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112056004 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.102338543 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.12182361 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.129574343 seconds)
  done (took 7.566290162 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.114625473 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.117982745 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.125042678 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.078732134 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079780493 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.112727766 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079709312 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101817023 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.116969393 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096390577 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119559475 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090855073 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114972707 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120247704 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091301639 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115186557 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111844431 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091103279 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.116422179 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.090521965 seconds)
  done (took 2.927942941 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.09168678 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124129886 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.083933479 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111749352 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.086660407 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.111121255 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.085853082 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107601206 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084445058 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10735854 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096576647 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115926179 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084120723 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.11218288 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.095542221 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110830153 seconds)
  done (took 2.457407307 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.104000728 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.125626874 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.107344061 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.110561211 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.080973882 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.10852122 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.085762996 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100893074 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.0794269 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.119631426 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.090263225 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.110058796 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.086173139 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.098095341 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.080414748 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.106159815 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.075863294 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083319852 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103568414 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.10315819 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106743763 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.087795552 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.108416609 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.085234013 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.108046002 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.088504967 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.112181577 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.080805371 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.102557723 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.08615369 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.106987512 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.091446524 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101377112 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.088259944 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102953947 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.08148004 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.106596719 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086528554 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.110263588 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.085996527 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.081443684 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.107506477 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085959294 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105946339 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.079387075 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.107993207 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.079408697 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.110058702 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.085989142 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.107561506 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.085771358 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.112198746 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.090763875 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115529604 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.093407275 seconds)
  done (took 6.185756262 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098694942 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109032632 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.07898578 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.081422281 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.107980409 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.086167331 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108354068 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087255366 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106903407 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.081609023 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106595894 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088340007 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084692573 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109904552 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.085085076 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.1086799 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078637037 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106204385 seconds)
  done (took 2.568359034 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.089588146 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.083432494 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.112523719 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083832111 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.104753934 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.086558581 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100443831 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.081845699 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081319537 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.105738432 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083238791 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.107275127 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082309744 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.106670039 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.083970304 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104761592 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.086454508 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081738733 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.104539773 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.079815558 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.107121373 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082650047 seconds)
  done (took 2.892252818 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.120466758 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.124680658 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.091700779 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.213392041 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.125048848 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.109483463 seconds)
  done (took 1.641200835 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108559488 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142007859 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.084692193 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107783046 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09573686 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110322638 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088524283 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110160196 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10034765 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123330622 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109373382 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100088462 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121112445 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120791705 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09552213 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117106005 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088619202 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111001403 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084107377 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130290295 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109599321 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099418339 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110612657 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109310692 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089250477 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120247333 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100046171 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122878975 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109389725 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099884776 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117336042 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088279461 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120919974 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123231501 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086676462 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121567547 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088734535 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130419121 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118083107 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120447449 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086700877 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117247615 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100568539 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117324868 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121313524 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089099959 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117085826 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08894228 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110057476 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137474497 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097213877 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120569684 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118193366 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100913781 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122009924 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136702855 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122911888 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099398084 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117533442 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124117696 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099652941 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118110736 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120154989 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102504717 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117178573 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120610308 seconds)
  done (took 8.118406149 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123860873 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105720951 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08898587 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123551219 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120786146 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089143639 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110494664 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088839782 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110191912 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085508725 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.155312681 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110737661 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099378992 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122560187 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108339576 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088920368 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11013893 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099194721 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107855786 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136754672 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089341242 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121571793 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121272859 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09945563 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123387104 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117358631 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089240601 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110645113 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088791742 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111391625 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116280345 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089916531 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120960356 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085750968 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121135652 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088681752 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111073535 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117568609 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089419234 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116245354 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099601153 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131059883 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109968915 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089866639 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123832227 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110425008 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089515785 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102792333 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086594003 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103845109 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097865638 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11982791 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120450671 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120885121 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089452412 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11041277 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090535674 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10694691 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090064724 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116561072 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099443127 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111601182 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13785849 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088339722 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111913485 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121752054 seconds)
  done (took 7.957565239 seconds)
done (took 150.1128596 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.100903824 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.139780612 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.099104748 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.169124412 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.08040772 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.113407611 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.134088424 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.095174164 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.101212735 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.081319686 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.101270018 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.083004619 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.144652565 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.102432898 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.080570472 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.103543889 seconds)
  done (took 2.586313569 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.179631789 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.288923775 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098155017 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.100280348 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.084918983 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.081332638 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.106069935 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.093401788 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.107895604 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085097542 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.084322351 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.107679776 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.084406936 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.104245738 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.08644388 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.105431118 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.083318719 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.079946324 seconds)
  done (took 2.821849182 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.114248493 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146979143 seconds)
  done (took 1.128046762 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.120475882 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.172817528 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.267042508 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.148981384 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.130566065 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095220434 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.149936221 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.12128257 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.199485622 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.123047927 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.102296738 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.108622723 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.112518476 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.110971989 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.088169139 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.10955678 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.135410764 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.087917292 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.109843357 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.088279948 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.133501161 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.080481713 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.110731187 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.088210586 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.182232265 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.12205398 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.080039476 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.100989732 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.089635783 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.111392746 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.09061163 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.115390027 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.124038219 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.144380371 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.094731741 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.147476923 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.108541704 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.086803234 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.108912789 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.086199665 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.110888261 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.09051307 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.116182689 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.087264697 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.100796618 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.088466442 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.103039309 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.080530496 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.087546656 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.110214622 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.109232636 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.086930431 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.144255659 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.110247676 seconds)
  done (took 7.080291232 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.813256334 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.14681893 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086658955 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.876361651 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.135099836 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120215561 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.777980467 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.132736048 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.225911974 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.781579553 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12604948 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.116578591 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.199447349 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.221451941 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.912635797 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.301977742 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.929402384 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.094800452 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.138482368 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.143496211 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.090027679 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131896862 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.124657715 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.421570887 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.086235428 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.10679236 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.09062322 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.115272203 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.151629619 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.085352367 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.10898636 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.169184525 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.234281882 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.193125283 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.086834945 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.083566828 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106672921 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.158710229 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.258645605 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.185147902 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.169624217 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.080401467 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.106941682 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.093245848 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.125534863 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.102641236 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.154838993 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.163447264 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.162250271 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086256563 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.116444141 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.113370227 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.092946555 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.152381631 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.104617085 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.280898354 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.300057221 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.10505829 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.091735204 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.121205553 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.230722332 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.106830324 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.192621349 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.13123058 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.20691843 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089356571 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.791958589 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.162949716 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.086306205 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.114229471 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.092540895 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11190718 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.094808947 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159472385 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.38342346 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.117215275 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.087044284 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105019548 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.196162258 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084317436 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106122837 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.155349466 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.084354843 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.112911783 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.116691035 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095565834 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.15812971 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.214053972 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.117246507 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.112014051 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.088824091 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116405249 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.085490112 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.202350318 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.209312531 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.150556011 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.200514913 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.115017486 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.15456044 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.156690735 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.112927022 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.160227044 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.090369993 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119143871 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09270982 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.207082982 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.133926821 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083482238 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.110048599 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.089637762 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.136961185 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.108199235 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.090013527 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.158039723 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.470485745 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.155538732 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.081797473 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.086824094 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114255374 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.152921248 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111771219 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.227079093 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114790416 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.157667952 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.088899133 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.103729138 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.089699101 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.174538715 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.096100988 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.112538657 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.093135254 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.113376217 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.221240675 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.206742079 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096486611 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231850748 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.151489095 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.113938574 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.161111895 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.113010823 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.158528407 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.091982833 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.114451176 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.08487557 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.779742386 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116503243 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.091675144 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.109284681 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.155219604 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.10661949 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084804377 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.106284852 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.081720508 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.762856449 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.087928729 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.081608471 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.108117431 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090124934 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.113924146 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.089304705 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.11157314 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.152745146 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.220327289 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092219162 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.113051662 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.083812762 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.151160572 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.108545651 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.084972381 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.107362813 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.085718464 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.113983548 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.087853069 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107271872 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.1621402 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.152468588 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.207913318 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.568400013 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.084228131 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.10737069 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.215102811 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085258224 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.27517614 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.091851631 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.214983813 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.15730732 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081197938 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.300776612 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.157950619 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.178644558 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.109288361 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.16214754 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.082959533 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.111115271 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.154022891 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.084654162 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11231401 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.151764245 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.098896741 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.118468759 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.913792478 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.085473485 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.217349316 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.102853648 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.160571412 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.086047535 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116142246 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.258647087 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.10786521 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.099976358 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.175728153 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.08811853 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.107317489 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.693376297 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.085043083 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116175147 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090860538 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.213930159 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.15593995 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11487525 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.090385502 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117128505 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.154454017 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.199688216 seconds)
  done (took 41.516184928 seconds)
done (took 55.995220936 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.290682246 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.220962199 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.263057602 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.164169412 seconds)
  done (took 1.905218273 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.177563069 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.121547316 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.146153785 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.102004766 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.12452242 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.101721016 seconds)
  done (took 1.663044282 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.372124715 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.269521867 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.21288912 seconds)
  done (took 1.747580304 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.250686489 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.236343017 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.342626754 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.389921135 seconds)
  done (took 2.211808419 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.203236991 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.098752974 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.123384092 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.114650027 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.168952876 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.200778037 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.137218704 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.144842501 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.104405267 seconds)
  done (took 2.238574464 seconds)
done (took 10.662447803 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.238188277 seconds)
    (2/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.329883539 seconds)
    (3/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.178122326 seconds)
    (4/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.273378141 seconds)
    (5/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.230625946 seconds)
    (6/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.188348792 seconds)
    (7/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.11869837 seconds)
    (8/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.090432942 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.125021777 seconds)
    (10/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.084231653 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.117929924 seconds)
    (12/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.229799128 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.088204506 seconds)
    (14/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.249823211 seconds)
    (15/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.185330609 seconds)
    (16/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.12576857 seconds)
    (17/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.198251912 seconds)
    (18/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.089344637 seconds)
    (19/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.180676674 seconds)
    (20/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.101556799 seconds)
    (21/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.216635691 seconds)
    (22/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.120024545 seconds)
    (23/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.172415596 seconds)
    (24/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.14155097 seconds)
    (25/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.187911119 seconds)
    (26/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.171132045 seconds)
    (27/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.207240944 seconds)
    (28/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.243528599 seconds)
    (29/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.08360036 seconds)
    (30/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.109089499 seconds)
    (31/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.088828358 seconds)
    (32/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.18499762 seconds)
    (33/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.23058753 seconds)
    (34/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.087647782 seconds)
    (35/286) benchmarking ("sort", Int64, true)...
    done (took 0.226471953 seconds)
    (36/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.086278877 seconds)
    (37/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.132440147 seconds)
    (38/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.114241527 seconds)
    (39/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.080922772 seconds)
    (40/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.174329839 seconds)
    (41/286) benchmarking ("sort", Float32, true)...
    done (took 0.23379497 seconds)
    (42/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.265078935 seconds)
    (43/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.096745566 seconds)
    (44/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.087429615 seconds)
    (45/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.122324841 seconds)
    (46/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.089945834 seconds)
    (47/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.133698516 seconds)
    (48/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.211431399 seconds)
    (49/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.136710592 seconds)
    (50/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.134932697 seconds)
    (51/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.110889321 seconds)
    (52/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.10392405 seconds)
    (53/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.088119925 seconds)
    (54/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.118416902 seconds)
    (55/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.103906838 seconds)
    (56/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.104757347 seconds)
    (57/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.094551304 seconds)
    (58/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.162425056 seconds)
    (59/286) benchmarking ("sort", Int8, false)...
    done (took 0.193711769 seconds)
    (60/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.193566063 seconds)
    (61/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.1123099 seconds)
    (62/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.136943681 seconds)
    (63/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.142477611 seconds)
    (64/286) benchmarking ("sort", BigInt, false)...
    done (took 0.229539657 seconds)
    (65/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.106605627 seconds)
    (66/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.198289236 seconds)
    (67/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.082375126 seconds)
    (68/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.089831126 seconds)
    (69/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.153433446 seconds)
    (70/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.132280097 seconds)
    (71/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.168013442 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.130184223 seconds)
    (73/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.079474733 seconds)
    (74/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.22025106 seconds)
    (75/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.110731949 seconds)
    (76/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.086388164 seconds)
    (77/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.082243494 seconds)
    (78/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.137312083 seconds)
    (79/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.16237208 seconds)
    (80/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.081641219 seconds)
    (81/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.086933511 seconds)
    (82/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.092404368 seconds)
    (83/286) benchmarking ("sort", Int64, false)...
    done (took 0.080785609 seconds)
    (84/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.10406553 seconds)
    (85/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.084659286 seconds)
    (86/286) benchmarking ("sort", Float32, false)...
    done (took 0.177928727 seconds)
    (87/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.198965689 seconds)
    (88/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.069656516 seconds)
    (89/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.070905575 seconds)
    (90/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.092734703 seconds)
    (91/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.096216504 seconds)
    (92/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.114413173 seconds)
    (93/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.19995591 seconds)
    (94/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.107583862 seconds)
    (95/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.156959679 seconds)
    (96/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.088065963 seconds)
    (97/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.071830691 seconds)
    (98/286) benchmarking ("sort", BigInt, true)...
    done (took 0.236537942 seconds)
    (99/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.104746093 seconds)
    (100/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.091466907 seconds)
    (101/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.112947649 seconds)
    (102/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.090088832 seconds)
    (103/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.166884653 seconds)
    (104/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.094276118 seconds)
    (105/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.135457575 seconds)
    (106/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.141036534 seconds)
    (107/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.177130931 seconds)
    (108/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.108966472 seconds)
    (109/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.196655476 seconds)
    (110/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.158789837 seconds)
    (111/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.113937669 seconds)
    (112/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.136401475 seconds)
    (113/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.155511654 seconds)
    (114/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.081318478 seconds)
    (115/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.121782943 seconds)
    (116/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.081669071 seconds)
    (117/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.10617581 seconds)
    (118/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.068644328 seconds)
    (119/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067878165 seconds)
    (120/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.103059676 seconds)
    (121/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.110015554 seconds)
    (122/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.10777087 seconds)
    (123/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.127365766 seconds)
    (124/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.104805172 seconds)
    (125/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.069940664 seconds)
    (126/286) benchmarking ("sort", Bool, false)...
    done (took 0.182322811 seconds)
    (127/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.114358573 seconds)
    (128/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.07004935 seconds)
    (129/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.088051907 seconds)
    (130/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.120564376 seconds)
    (131/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.071852892 seconds)
    (132/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.109711099 seconds)
    (133/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.089366834 seconds)
    (134/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.127479745 seconds)
    (135/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.093935358 seconds)
    (136/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.154938196 seconds)
    (137/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.070030193 seconds)
    (138/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.201784075 seconds)
    (139/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.08257945 seconds)
    (140/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.134958241 seconds)
    (141/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.089689432 seconds)
    (142/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.111480156 seconds)
    (143/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.107884947 seconds)
    (144/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.186185943 seconds)
    (145/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.095483102 seconds)
    (146/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.101362278 seconds)
    (147/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.192867267 seconds)
    (148/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.106689306 seconds)
    (149/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.119397499 seconds)
    (150/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.070036056 seconds)
    (151/286) benchmarking ("sort", Int8, true)...
    done (took 0.223747569 seconds)
    (152/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.113164901 seconds)
    (153/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.105804117 seconds)
    (154/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.088743503 seconds)
    (155/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.177136556 seconds)
    (156/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.079112096 seconds)
    (157/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.09588555 seconds)
    (158/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.068962414 seconds)
    (159/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.068675715 seconds)
    (160/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.11493598 seconds)
    (161/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.176224309 seconds)
    (162/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.071138792 seconds)
    (163/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.177642371 seconds)
    (164/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.088895288 seconds)
    (165/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.068297039 seconds)
    (166/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.095680356 seconds)
    (167/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.072250121 seconds)
    (168/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.185080993 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.080854659 seconds)
    (170/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.09422368 seconds)
    (171/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.089728921 seconds)
    (172/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.077212347 seconds)
    (173/286) benchmarking ("sort", Float64, false)...
    done (took 0.173917247 seconds)
    (174/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.069521753 seconds)
    (175/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.09707292 seconds)
    (176/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.082478164 seconds)
    (177/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.114569636 seconds)
    (178/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.069887249 seconds)
    (179/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.087043682 seconds)
    (180/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.108195196 seconds)
    (181/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.07146695 seconds)
    (182/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.105877847 seconds)
    (183/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.086089397 seconds)
    (184/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.091720902 seconds)
    (185/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.131539629 seconds)
    (186/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.17143238 seconds)
    (187/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.079031586 seconds)
    (188/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.082367481 seconds)
    (189/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.177728208 seconds)
    (190/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.123133252 seconds)
    (191/286) benchmarking ("sort", Bool, true)...
    done (took 0.232362344 seconds)
    (192/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.08872265 seconds)
    (193/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.085200871 seconds)
    (194/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.139144902 seconds)
    (195/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.078012869 seconds)
    (196/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.172276954 seconds)
    (197/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.074805654 seconds)
    (198/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.11557604 seconds)
    (199/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.092081812 seconds)
    (200/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.085945687 seconds)
    (201/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.120443698 seconds)
    (202/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.089515443 seconds)
    (203/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.19348366 seconds)
    (204/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.103686465 seconds)
    (205/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.136156531 seconds)
    (206/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.116208508 seconds)
    (207/286) benchmarking ("sort", Float64, true)...
    done (took 0.233008702 seconds)
    (208/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.091840292 seconds)
    (209/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.087665063 seconds)
    (210/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.132444206 seconds)
    (211/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.079454645 seconds)
    (212/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.12075252 seconds)
    (213/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.080266946 seconds)
    (214/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.130190748 seconds)
    (215/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.167253562 seconds)
    (216/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.090602117 seconds)
    (217/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.081033052 seconds)
    (218/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.117500484 seconds)
    (219/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.094881646 seconds)
    (220/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.095435282 seconds)
    (221/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.070897117 seconds)
    (222/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.085030155 seconds)
    (223/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.103891831 seconds)
    (224/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.075106569 seconds)
    (225/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.112808851 seconds)
    (226/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.08952525 seconds)
    (227/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.164210205 seconds)
    (228/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.070342442 seconds)
    (229/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.093521287 seconds)
    (230/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.107672898 seconds)
    (231/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.081287901 seconds)
    (232/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.092586924 seconds)
    (233/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.082140692 seconds)
    (234/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.070420489 seconds)
    (235/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.093632509 seconds)
    (236/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.075900043 seconds)
    (237/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.189012445 seconds)
    (238/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.087690625 seconds)
    (239/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.175618177 seconds)
    (240/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.090255591 seconds)
    (241/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.11848542 seconds)
    (242/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.083113509 seconds)
    (243/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.093199798 seconds)
    (244/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.072402406 seconds)
    (245/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.071806115 seconds)
    (246/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.113287155 seconds)
    (247/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.082063215 seconds)
    (248/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.080543416 seconds)
    (249/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.104707272 seconds)
    (250/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.082868835 seconds)
    (251/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.092460253 seconds)
    (252/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.084202488 seconds)
    (253/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.080053454 seconds)
    (254/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.095176181 seconds)
    (255/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.082365867 seconds)
    (256/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.093137288 seconds)
    (257/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.070452182 seconds)
    (258/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.082200786 seconds)
    (259/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.100919186 seconds)
    (260/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.081405421 seconds)
    (261/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.072350074 seconds)
    (262/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.123117853 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.08963537 seconds)
    (264/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.096117348 seconds)
    (265/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.084252948 seconds)
    (266/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.07926338 seconds)
    (267/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.092801048 seconds)
    (268/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.069633392 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.103086112 seconds)
    (270/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.088933196 seconds)
    (271/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.071752304 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.113938118 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.080482163 seconds)
    (274/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.10635808 seconds)
    (275/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.070334892 seconds)
    (276/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.080120408 seconds)
    (277/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.107670642 seconds)
    (278/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.08179243 seconds)
    (279/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.080872525 seconds)
    (280/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.096201045 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.080277147 seconds)
    (282/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.104380728 seconds)
    (283/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.070563988 seconds)
    (284/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.069508325 seconds)
    (285/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.093747341 seconds)
    (286/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.08270653 seconds)
  done (took 35.292689454 seconds)
done (took 36.19572875 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.09946854 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.146527128 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.09435336 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.133331264 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.094639224 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.118703918 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.0905733 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.092928604 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.119101792 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.095272271 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.121104587 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.07600522 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.123212335 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.099192586 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.122294698 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.120464341 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124955003 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094330202 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.114832761 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086652605 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.090549693 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.111929673 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.088945763 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.101890598 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.099420101 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.095878072 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.118621222 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.098749473 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.111785878 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.086913236 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.079957298 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.113622107 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.081119333 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.11849607 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.087974248 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.108417718 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.093671924 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.090789261 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.106711661 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.081634547 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.116501468 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.082634025 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.11133932 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.090291041 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.082952449 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.104491584 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.086553875 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.119134147 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113874094 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.109650123 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.090453647 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.090884424 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.116028039 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.087832137 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.104971931 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.085476091 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.104835107 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.113482953 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.10858465 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087213312 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.088968717 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.113886483 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.081088347 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.10863529 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.086095652 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.114975143 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.093381291 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.080115867 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.115184554 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.086970599 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.104453429 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.086141906 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.07987983 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.105429439 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.091532448 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.115668026 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.080962916 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.082201466 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.113014567 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.086932011 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.104954473 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.085057427 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.106385647 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.084133496 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.084312732 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.095260408 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.081103179 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.087829932 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.10518399 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.085712793 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.111622537 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.08898664 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.1061209 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.093346188 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.081562057 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.105365323 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.081847598 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.105603735 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.083297507 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.080250881 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.105119572 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.084905339 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.113859982 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.083842969 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.083008357 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.117780203 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.082351354 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.112159099 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.081751356 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.080803926 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.12109023 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.092417042 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.106180685 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.08843157 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.079696601 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.10755231 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.080920015 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.10496815 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.082139187 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.081358104 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.107617454 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.082327074 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.108464506 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.083882161 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.094769676 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.105743681 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.0811652 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.108305047 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.082804984 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.086283537 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.10702741 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.082566144 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.107120115 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.080338857 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.08396815 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.106185078 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.083732472 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.107660318 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.085509063 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.082663556 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.110124411 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.086264248 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.107063193 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.081680829 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.080268921 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.100578464 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087633827 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.108258949 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.08425799 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.081044125 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.107639979 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.082210941 seconds)
done (took 15.743693768 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.084108741 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.180001006 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.140859664 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.116305287 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.12726161 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.082642912 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.116772402 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.113475659 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.108450419 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.137429489 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.105969493 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.125259483 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.121650739 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.10467904 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.082381347 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.085246337 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.108586953 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.098221257 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145806488 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.102409344 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.142005574 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.104587414 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.111354925 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.131711324 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.091871514 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.124407515 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.083013719 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.110292825 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.085850736 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.130926591 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.102856698 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.109797227 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.082643429 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.103916617 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.124060041 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.089714914 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.106979518 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.089446908 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.106077127 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.083316375 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.129542337 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.105035212 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.111442393 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.088467391 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.109552946 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.085151736 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.083118754 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.115213204 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.094011306 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.110519389 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.097840345 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.135390973 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.109030123 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.092109694 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.080675799 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.116996665 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.091721845 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.109229392 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.083086694 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.108682901 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.082482349 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.102630044 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.122071303 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.13092003 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.086462879 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.115528663 seconds)
  done (took 8.040643132 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.100210202 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.135115753 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.100431738 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.124438632 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.082723814 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.081820525 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.109028713 seconds)
  done (took 1.692608546 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.087405747 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.108191998 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.134098264 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.107861708 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.13004667 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.133709042 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.088576914 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.083507048 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.127632385 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.084412513 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.133605837 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.125111112 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.109050094 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.092294652 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.135927282 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.082806097 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.13513772 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.083076702 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.112764005 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.11029877 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.110760346 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.10209762 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.110752669 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.083906124 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.100838864 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.108075422 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.156709796 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.088728904 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.081284518 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.111609799 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.081878766 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.148304944 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.101210452 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.116824625 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.084050333 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127384994 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.10176903 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.105652672 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.10027689 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.113947868 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.102307584 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.085208322 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.110755143 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.086060346 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.112361222 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.097859689 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.086797729 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.11155953 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.086022082 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.132141012 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.08681624 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.126094577 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.083710885 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.086768335 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.111551613 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.087207864 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.118164296 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.084638592 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131504839 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.081949341 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.128691275 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.104218787 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.124780831 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.103180874 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085467787 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.125975084 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.100816364 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.11125484 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.085324918 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.111489236 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.104246755 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.080275635 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.111215929 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.097760271 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.110463525 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.110122347 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.134660891 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.084924414 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.119181126 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.084525629 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.083285646 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.109755995 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.109436127 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.112466488 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.083858829 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112024266 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.087517201 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.108229306 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.082800409 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.087400686 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.108366568 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.085830664 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.11331944 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.085103047 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086728166 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.131151414 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.085112305 seconds)
  done (took 11.107282649 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.085687785 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.084898427 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.111827057 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.085748231 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.109377684 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.085417278 seconds)
  done (took 1.536523055 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.114147218 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.109230612 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.098333452 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.113001982 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.124607196 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.133067634 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.108385959 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.118010538 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.101609123 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.121118757 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.110593674 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.134893296 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.113761791 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.114593569 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.108244093 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.112933104 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.108947916 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.115122266 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.094943298 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114472796 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.100684481 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.115004798 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.0901215 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.127764389 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.094544363 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.114037411 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.090160552 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.12077748 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.096168445 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.119521547 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.089971345 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119033504 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.09017082 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.118512771 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.110188158 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.115501909 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.089083535 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.12027014 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.09067096 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.093867791 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.134687605 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.089228313 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.121037868 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095311593 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.118390544 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.089094199 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121039775 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.088976575 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.132878602 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.094434094 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120885713 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.087935817 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118713366 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.095726385 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.115610069 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.093203099 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.120951824 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.108775552 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.115398705 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.090012904 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.112134209 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.09372162 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.119037473 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.094897367 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.118471644 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.096282363 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.11560694 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.089880365 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115077806 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.089553283 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120422955 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.086946645 seconds)
  done (took 8.755724076 seconds)
done (took 32.089160101 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.679252839 seconds)
  done (took 1.649944272 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.83230893 seconds)
  done (took 1.804128311 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.190359204 seconds)
  done (took 18.186590975 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.468908547 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.559503083 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.95221384 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.160395445 seconds)
  done (took 3.108052365 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.948795676 seconds)
  done (took 1.935945993 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.284255736 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.230940176 seconds)
  done (took 1.488728399 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.767121784 seconds)
  done (took 1.75182937 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.425836304 seconds)
  done (took 2.4010645 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.323402039 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.156093286 seconds)
  done (took 1.468625938 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.561482303 seconds)
  done (took 1.548423347 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.759744584 seconds)
  done (took 11.74731514 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.23974906 seconds)
  done (took 1.23693745 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.286388501 seconds)
  done (took 1.275743408 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.55732272 seconds)
  done (took 4.546269074 seconds)
done (took 55.129056795 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.096050276 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.097204543 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.122247602 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.09515253 seconds)
  done (took 1.397900763 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.105041953 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.090100384 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.124864851 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.090034476 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125170476 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.090461421 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.118585551 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.099634108 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.115971199 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.091785408 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.116789264 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.090145493 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.119088576 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.09310845 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.113596279 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.094473956 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122866768 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.091300813 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.094213385 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.116587909 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.087947312 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.118106221 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.094518465 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.114654472 seconds)
  done (took 3.516347691 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.095923433 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.089281548 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.117444505 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.088399435 seconds)
  done (took 1.385988957 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.095223685 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.100787982 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.126844833 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.094335139 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.126731866 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.099534835 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.112593484 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.087538771 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.114260589 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.094900241 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.08504458 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.134129679 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.126087423 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.094870784 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.095870121 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.110993152 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.085963666 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.126267485 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.095088478 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.12058216 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.088287814 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.119522681 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.085867823 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.102058466 seconds)
  done (took 3.524399239 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.16842608 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.122469154 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.108379112 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.116854019 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.12984541 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.1364836 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.08268161 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.135701302 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.082903327 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.12451233 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.087464042 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.154679803 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.095890211 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.108889856 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.082980001 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.082274714 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.120674325 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.094729516 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.111942266 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096439717 seconds)
  done (took 3.247161258 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.094615366 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.08672471 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.10858352 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.086265917 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.119411929 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.090434225 seconds)
  done (took 1.590703721 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.098144161 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.084777326 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.114223354 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.085891801 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.115307269 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.084259775 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.08403163 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.111189175 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.084693431 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.109086428 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.08659136 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.084215187 seconds)
  done (took 2.147675096 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.506523432 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.08746285 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.113255805 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.109114556 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.094793231 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.083114085 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.126176687 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.085529912 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.138203543 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.083285635 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.110225623 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.086643409 seconds)
  done (took 2.631161915 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20266206 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094575627 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256592643 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.346602674 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164246842 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166400452 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.279993572 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161042897 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.18015454 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109165801 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215205492 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127275535 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151119333 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175357439 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110252466 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.151353772 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169831268 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194332983 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144519178 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199372166 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158056179 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163782367 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175875778 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14815475 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107463942 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15484908 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.115776979 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099181779 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168111134 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165461826 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16904659 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145669036 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1347968 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194405774 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203938575 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173996585 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274296062 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12887499 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.151475487 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.161925202 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247792204 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110498025 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216891619 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124732632 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126725091 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178211486 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152205463 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.177619889 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.101425758 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138395465 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17786604 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172214669 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.175262047 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133318294 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296309176 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143210971 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115771011 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177684507 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180415479 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18511322 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165050225 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.115711206 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178728115 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178427541 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173660518 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.114206374 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.160377991 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122697208 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170358096 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190793602 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173622813 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160269606 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.178526995 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133216565 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15916887 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165933185 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122318074 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174689404 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15790605 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.1170898 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119011592 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134998442 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097142537 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.188683401 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121126387 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198145886 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104677144 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.171395271 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197226196 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155007837 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159101855 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160451407 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160712787 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116286792 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.114768793 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141370525 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120884469 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153661597 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128810098 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125219842 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139645493 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.123056594 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12120913 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.120750648 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154510074 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.097558606 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160444686 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160510926 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.094845742 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164706643 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14687947 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.118205203 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164589094 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179264363 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130687641 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101479342 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188007168 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156458384 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.131150783 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172336787 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181319672 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.151595184 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106778021 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161814892 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18766231 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139701358 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184224287 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13716004 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103208797 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.138380733 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15488355 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125426675 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.155863067 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126835482 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.148081779 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187114383 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.096842614 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13440349 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171170866 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096329005 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126430405 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114949092 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132179308 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.104552639 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.139607886 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.132420262 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151714219 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128886908 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150282015 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151276765 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137981053 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185815827 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102463809 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.147863063 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144976025 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.088844486 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.171119431 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179920755 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126879343 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190793874 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.160254453 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189124234 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157550308 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099755862 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174841186 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12621121 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.087454301 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159258881 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155983053 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160031367 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.176050687 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18708909 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.159058175 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.148940563 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143775024 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131470158 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.160992713 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151387792 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.133870449 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128821749 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153522878 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.120093851 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.093363286 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.123900168 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110141341 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128095101 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12803163 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176339375 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159333629 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181764283 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158331356 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109846198 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178582677 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.122714949 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160709718 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.16512861 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107099441 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.179286638 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17555329 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164348946 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140899943 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169526629 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.089166768 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119715504 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.100706015 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160464994 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1318966 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104097179 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14108826 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17764968 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169980905 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145692858 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195776515 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161388709 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188125035 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.090048655 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.163504203 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16449433 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153375603 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.146593007 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135127207 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.120762814 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175159708 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139346883 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184477745 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1570324 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165931879 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189938673 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.14716268 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099364718 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146021883 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161872666 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136466967 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13301015 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14290472 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13214346 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11798064 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.123878283 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094105355 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166477251 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142950343 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170627438 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.145250063 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164570453 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095581499 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140633215 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156731854 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141917523 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.084318431 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160745268 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178796754 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140359429 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153200988 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140335422 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127898774 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.303885803 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181571611 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177311506 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133384778 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110097722 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15885093 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156101913 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157917636 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175502986 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113858888 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172357066 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154778193 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.132429422 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104128024 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144834768 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147140649 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.109125211 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.13018435 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.150096503 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.107379079 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170999143 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139311659 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154979038 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159768668 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.118380639 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.14327689 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109751128 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224654966 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125882655 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173126946 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.146749841 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.158388587 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192688138 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.092798919 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125903146 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.095338812 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175811586 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13009283 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153521662 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.179251264 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192254938 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15423655 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160699077 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107021607 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.115914347 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153709295 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117040188 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218816637 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110790289 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.133083542 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179943632 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.139887359 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099659058 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159637557 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.280050215 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139458221 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167827186 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.082695876 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.273821177 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094479865 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127109431 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156654971 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166016598 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.104031637 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.17063302 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157941305 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11198478 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156935772 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134298116 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182024417 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198164997 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16426985 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167231304 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.128368408 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126353536 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157132472 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170393891 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140700116 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.104736028 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159369614 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177545595 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.181399793 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.12962597 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128589183 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156662677 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158848847 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165196977 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131362639 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192482596 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09875452 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15908115 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136941244 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120537184 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125020981 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.179301963 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130290568 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166096691 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153804835 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100778441 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123823551 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147525581 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125427189 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139147011 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.122200257 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165910459 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.092967896 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159087605 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175421708 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099780013 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151256574 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14102319 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103747808 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139832029 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140719363 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104975774 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.15984034 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177222469 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.098102641 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169907992 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169346939 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158280785 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154050776 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11225848 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.665139537 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.124200356 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176317505 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115382665 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179714138 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145830194 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161377084 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15614892 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117131472 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161237956 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145770778 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.226942934 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158905326 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.12457002 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128338633 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141545613 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109282311 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.128344534 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148328426 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127860179 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13801172 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.131927516 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.122200907 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140400481 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.1300985 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1068494 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178347192 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144534504 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171027257 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177961353 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106040097 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161567331 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164854627 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127653154 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.156428457 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167285947 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10999701 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146388768 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.127459996 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102981352 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176281779 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.091067599 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156120439 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156280582 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157129703 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158120454 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.100711135 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156866337 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139098279 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158789254 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099365242 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.149217569 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154011449 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099189577 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.125108191 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149944288 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121439744 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.146706437 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121301578 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.13344518 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177284131 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.090871645 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13051026 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276060404 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153305209 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186080777 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.11098343 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132965724 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111420015 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143460187 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.149340163 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154896285 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.097096121 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129463595 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.097927438 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.16338368 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.139668024 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124447225 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180162394 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152558807 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194099497 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.133237826 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.275550395 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107301998 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151936953 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.091647201 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.126758705 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109529551 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132108845 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140530934 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184331661 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175386609 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.113118771 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.131480227 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094907677 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.121521373 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100840286 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157869726 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150505929 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155208619 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110194699 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.112245679 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139511424 seconds)
  done (took 72.772201963 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.160176172 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.129162039 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.143621289 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.1972317 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.162992792 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.247854024 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.205009704 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.232427903 seconds)
  done (took 2.560066117 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.087907006 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.138632461 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.123045418 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.131811115 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.111596619 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.087552908 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.321699221 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.130826733 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.085573242 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.142838135 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.128141917 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.112342804 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.514823552 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.084534049 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.116117769 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.10852259 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.087639079 seconds)
  done (took 3.591565244 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.252515944 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.473755576 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.109057426 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.189322999 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.174082469 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.090251674 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.706732787 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.090059745 seconds)
  done (took 12.173241747 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.118834584 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.112244699 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.158543197 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.15795859 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.116593061 seconds)
  done (took 1.762869572 seconds)
done (took 113.287504696 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.092398003 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.094636164 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.120737199 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.096124364 seconds)
  done (took 1.481834956 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.100017974 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.073251627 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.105717094 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.076681887 seconds)
  done (took 1.447500761 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.188721486 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.164471056 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.395079566 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.073888722 seconds)
  done (took 1.586481885 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.109313127 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.126781901 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.099615844 seconds)
  done (took 1.43647208 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.100972529 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.096175707 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.125592679 seconds)
  done (took 1.420482016 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.099331529 seconds)
  done (took 1.192611977 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107039316 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.134844154 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.107675783 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.132961638 seconds)
  done (took 1.58043188 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.093033531 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.09401029 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.135176987 seconds)
  done (took 1.416375375 seconds)
done (took 13.009120591 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102151804 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.417327317 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.385368763 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13266715 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.69281044 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.404843895 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.036846692 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.142215668 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.16368204 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.087176152 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.103771774 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.696480282 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.986390411 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.372083177 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.97328511 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.372282905 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.672244091 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.115616562 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.087143369 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.086206016 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.052402008 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.086365619 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.116047723 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.086653263 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.697891189 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.39171001 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.115498165 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.344442008 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.08672196 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.123699946 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.374305126 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.116157328 seconds)
  done (took 16.706650777 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.09383346 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.172975937 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098321524 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117306706 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.095023958 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.088461941 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.120146909 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.088052687 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.17765636 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.11560461 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.105208441 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.086560679 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.120692504 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.088153913 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.136438489 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.086891017 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.117163677 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.087760613 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.086909165 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.116308977 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.106204236 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.116214923 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.087146202 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.115886241 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.08804705 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.12854734 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.089469482 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.087196178 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.116066184 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09456104 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118738784 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.0887021 seconds)
  done (took 4.532263888 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139277158 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183258294 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098669998 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.150820354 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.16810556 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.090416691 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.194842232 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.141788065 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.151573452 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.117309586 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.104838417 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.116860997 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.120970857 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.117719519 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.10758828 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.116477118 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.088387503 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.115510246 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.088420925 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.087311968 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.13597612 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.087009097 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.116733747 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.087548223 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.11646696 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.102669337 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.116430571 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.088620434 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.087249073 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124693627 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.09028497 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117335476 seconds)
  done (took 4.874100537 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.092274426 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.092547806 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.131510284 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.102773626 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.118382362 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.091273717 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.12041763 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.090042589 seconds)
  done (took 1.938692371 seconds)
done (took 29.145587589 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.105802743 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.092818729 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.130954495 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.100515895 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.126887499 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.100788248 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.115063176 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.10034736 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.100123754 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.126088582 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.103208732 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.115844981 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.089451148 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.114519348 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.102853912 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.091900081 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.130303102 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.096975123 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.131546561 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.101169328 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.118346377 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.099374217 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.097638124 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.131659475 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.101611734 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.130991997 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.103426094 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.123373182 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.088603789 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.11807973 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.100808063 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.136568449 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.090284726 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.130908207 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.092650089 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.091174875 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.118454904 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.091460526 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.129931394 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.099503237 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.122957726 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.099340797 seconds)
  done (took 5.686527676 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.113018995 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.144954356 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.109281318 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.082620499 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.118714612 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082581778 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.14214324 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.081046149 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.112128041 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.111658491 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.104711161 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.07913001 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079865388 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.103839863 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078713187 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076973367 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.110743985 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.077056282 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.106297192 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.080268788 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080591504 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.103041739 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081963208 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079820218 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.105822787 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.082948878 seconds)
  done (took 3.644832454 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.094874332 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.102198917 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.138196289 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.17036569 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.122422832 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.125094766 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.096719176 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.10489542 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.135131408 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.08692103 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.119912148 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.115910805 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.135819346 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.095205414 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.12007185 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.102649511 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.100622544 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.119495764 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.092594763 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.136838896 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.103562457 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.126889359 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.106142229 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.127925642 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.087668121 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.088611856 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.121150132 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.097088689 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.124284808 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.095633784 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.122139085 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.091310554 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.088907178 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.128351662 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.093762112 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.117969516 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.107572497 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126693824 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.096830185 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.118134687 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.09801565 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.090031948 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.138564654 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.126754995 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.118202508 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.093729813 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.120916822 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.09670548 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.118771126 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.105584169 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.125948443 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.088113197 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.091160634 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.118372373 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.088858531 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.132605396 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.08950172 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.08942577 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.128909455 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.092761484 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.129242564 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.092285416 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13170553 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.088908363 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.093373485 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.118463035 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.088290101 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.115722708 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.110275362 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122696884 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.128065878 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.118362653 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.088964566 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.096251817 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.124219554 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094378803 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.117284407 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.102317797 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.126482271 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.091401679 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.127322205 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.09026389 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.089949316 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.136721145 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.090119427 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.118142227 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.089211729 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.093315906 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.119616198 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.089061887 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132147633 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.087267951 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.119728398 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.1022446 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.087669641 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.118269583 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.094229384 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.122410352 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.086645223 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.130409866 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.0937511 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.116803505 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.098510384 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.088076105 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.120281767 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.096536359 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.121890608 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.088025257 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.121328754 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.09420862 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.088375082 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.121941603 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.090161368 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.11942915 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.09747356 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.124280762 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.091853226 seconds)
  done (took 13.836339553 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.226442508 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.212174208 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.183872837 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.261068583 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.131583864 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114913268 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.20831658 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.154813304 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.08951607 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.157045398 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.165891728 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.180988133 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.166360846 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.179527243 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.137955662 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.120495862 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.10657578 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.164112291 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.212453446 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.288365957 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.108572984 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.12718546 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.126793706 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.156361121 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.132696421 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.097496735 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.135472736 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.100354833 seconds)
  done (took 5.575307821 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.104207117 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.150438599 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.09394225 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.139884755 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.114125557 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.11907782 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.092339147 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.119835861 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.102015168 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.132831462 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.087933307 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.094301358 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.125445182 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.09708195 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.118983251 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.097295791 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.128766693 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.089874926 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.121298592 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.093014563 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.0985025 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.136641367 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.092374133 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.117928542 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.096735632 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.118361011 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.089908357 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.140974519 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.087842386 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.140848669 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.086226495 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.127612909 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.102406535 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.11891132 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.088716305 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.090333563 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.121589344 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.090521994 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.120648861 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.087397495 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.086321248 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.110439555 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.087977651 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.133674718 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.094991666 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.113781954 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.095174758 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.123498517 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.089771152 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.08606475 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.121675471 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.092044286 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.121224192 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.097102807 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.090473927 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.119891265 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.092553346 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.118572568 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.096357401 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.090593928 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.117748049 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.087154306 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.122743261 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.092417272 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.128186035 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.09351641 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.086349069 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.121244667 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.093238295 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.126302883 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.091347191 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.093979096 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.11730689 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.090630686 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.121097426 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.094346942 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.092565375 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.117865073 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.088591126 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.119626575 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.078742584 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.088280816 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.106703465 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.092776169 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.117766943 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.087630195 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.090198481 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.125505677 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.104413363 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.121708554 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.096755991 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.120079199 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.087834022 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.121358899 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.08571163 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.091534241 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.134864613 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.138717774 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.088807773 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.085916396 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.133469273 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.091041385 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.117283252 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.079607082 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.097359329 seconds)
  done (took 12.253202726 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.125875201 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.149814679 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.091055988 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.137336008 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.122778691 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.154017212 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.095651123 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.1269617 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.0902064 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.138120873 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.08942305 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.09702443 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.119248644 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.10255829 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.154519497 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.099612271 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.121905298 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.103605158 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.123435003 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.134515867 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.137328451 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.106927044 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.137755824 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.088840974 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.125534816 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.106072025 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.15804991 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.106143812 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.131946194 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.107812037 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.133549076 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.126210289 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.138848084 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.09319677 seconds)
  done (took 5.214933614 seconds)
done (took 47.316571168 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.218651672 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.417837022 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.196526458 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.120426135 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.23449562 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.20315897 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.200854796 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.189276375 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.344045198 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.189875729 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.446396654 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.793603261 seconds)
done (took 58.679557819 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.223819941 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.35640494 seconds)
    (2/2) benchmarking "String"...
    done (took 1.49028827 seconds)
  done (took 3.973182532 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.735634606 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.168278324 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.460688583 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.193935718 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.200927621 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.49118347 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.880978194 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.59029376 seconds)
  done (took 28.109562991 seconds)
done (took 42.168873701 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.224791962 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.200178054 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.240034446 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.186696382 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.332443417 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.218254008 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.562468832 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.212500378 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.210664847 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.188866982 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.199879839 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.210648473 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.214633254 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.635016509 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.19992163 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.201846167 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.214561312 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.738915238 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.617542782 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.210933364 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.213714333 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.253425384 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.21909291 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.198931691 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.248252797 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.194679246 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.214577321 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.216958756 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.816465683 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.206979309 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.210618754 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.80910273 seconds)
  done (took 190.952128484 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.196321731 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.203083287 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.305251546 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.252426378 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.674188576 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.402956448 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.343728842 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.752097123 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.218893349 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.211934534 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.44923456 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.204034121 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.523702987 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.171909932 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.226217834 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.243098849 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.529753158 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.534598212 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.238917033 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.337396523 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.211055908 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.454907936 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.374987936 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.404362477 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.248184722 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.229098182 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.223062719 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.216268131 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.395453516 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.485811488 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.217536249 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.248421463 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.83207985 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.056861513 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.20278328 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.238640702 seconds)
  done (took 150.189358165 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.197861886 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.199154296 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.198100824 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.229785994 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.198141564 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.784103152 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.794045846 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.725228952 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.699331832 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.547108845 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.462631485 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.198246269 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.292757046 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.214479113 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.199206036 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.213600804 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.224014464 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.205267851 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.198493304 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.766979315 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.211469409 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.316954647 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.382259107 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.216130751 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.233149974 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.600862018 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.199346749 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.231757436 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.534452088 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.247865505 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.200571673 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.602921261 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.314328097 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.202848908 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.313030957 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.200931616 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.201558645 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.232244535 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.201608291 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.481584566 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.199932285 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.20183261 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.204294995 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.866978836 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.200647294 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.789926609 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.206667721 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.150663388 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.20206381 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.201262047 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.448324602 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.850820079 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.199216644 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.19950358 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.202326603 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.200901612 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.200543926 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.232558857 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.523745565 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.301247805 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.201135323 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.203266109 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.233124447 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.200565952 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.200236647 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.330390553 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.199775527 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.271393239 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.258057576 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.418196246 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.768877692 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.201614302 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.300530425 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.323277023 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.201700065 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.201949297 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.202165963 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.20030764 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.313001803 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.202371658 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.61823857 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.378747938 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.219038844 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.555066328 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.298504497 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.20156642 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.626540211 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.207672221 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.202085818 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.962396778 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.299077001 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.202245179 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.20230823 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.201420662 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.624126618 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.793830891 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.484851442 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.208813684 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.763934969 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.207238819 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.630946151 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.762639865 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.911000254 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.209000725 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.315581246 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.380600291 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.217991942 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.205185807 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.205826364 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.561421731 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.20445228 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.263372661 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.204534402 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.601030339 seconds)
  done (took 365.758974838 seconds)
done (took 708.028785917 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.813067718 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.814095231 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.929683273 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.808359345 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.771320323 seconds)
  done (took 10.271909364 seconds)
done (took 11.408794284 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.393129503 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.391832559 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.265401795 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.400359185 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.235450775 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.41804247 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.373917212 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.230357773 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.305642111 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.29135781 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.310423318 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.263600921 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.244604551 seconds)
  done (took 18.259617141 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.537205814 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.546356822 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.273448429 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.537009905 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.250761899 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.549686883 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.445611835 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.438342932 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.414841489 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.22504247 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.218009631 seconds)
  done (took 16.573388958 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.547783274 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.546790221 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.278014004 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.537766961 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.252232511 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.552900499 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.426815769 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.443725501 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.421847514 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.227143115 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.219226826 seconds)
  done (took 16.59155943 seconds)
done (took 52.562750521 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.215114389 seconds)
  done (took 2.353376645 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.254880322 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.417093307 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.240735816 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.222753682 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.21686527 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.225166375 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.22266578 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.218414032 seconds)
  done (took 11.156037156 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.211706741 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.212275655 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.210714975 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.211064717 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.214481925 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.211341919 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.214837279 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.213133151 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.215541139 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.214435153 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.213143627 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.213684575 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.212455397 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.211889018 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.213992553 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.21291995 seconds)
  done (took 20.546483084 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.215044904 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.213300646 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.214677311 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.214272858 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.211465992 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.211995476 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.213333728 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.211920903 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.212492272 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.212837563 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.213248654 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.212657211 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.213294335 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.211958163 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.212356322 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.213623485 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.211790617 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.213234111 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.215958306 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.212894695 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.213323743 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.213339304 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.215293434 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.213938574 seconds)
  done (took 30.259843552 seconds)
done (took 65.454154373 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.866752066 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.927712585 seconds)
  done (took 6.936376935 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.277060341 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.275970872 seconds)
  done (took 3.695803886 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.217121069 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.21572408 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.215695789 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.215997581 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.216178678 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.216467608 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.21671767 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.216865207 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.217321554 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.215772307 seconds)
  done (took 13.303324499 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.216787721 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.216482232 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.214272411 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.217360478 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.216735099 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.215444016 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.21712518 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.216528897 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.217071388 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.214376742 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.218577218 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.214310557 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.217084143 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.215056376 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.217016675 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.214371803 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.214698301 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.214586062 seconds)
  done (took 23.028640051 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.231919512 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.242652763 seconds)
  done (took 3.617311295 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.345026159 seconds)
    (2/7) benchmarking "second"...
    done (took 1.256786135 seconds)
    (3/7) benchmarking "month"...
    done (took 1.325414293 seconds)
    (4/7) benchmarking "year"...
    done (took 1.312472865 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.257052856 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.237809026 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.27351648 seconds)
  done (took 10.150168127 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.219369525 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.40464234 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.507675068 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.828155707 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.220901934 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.224034203 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.097332819 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.221392867 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.226707906 seconds)
  done (took 14.093305148 seconds)
done (took 75.967474226 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.270331421 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.217971491 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.518429661 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.232620617 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.231413605 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.554605671 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.265398521 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.34683113 seconds)
done (took 37.780887359 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.215229695 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.202386155 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.076971473 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.229143413 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.317906718 seconds)
  done (took 18.966332737 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.260279314 seconds)
    (2/2) benchmarking "read"...
    done (took 1.546577 seconds)
  done (took 4.943802328 seconds)
done (took 31.267156381 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.214177297 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.215646834 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.215544826 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.2105916 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.214259918 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.211267798 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.2119803 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.214294572 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.214063377 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.215338184 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.216171561 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.215418707 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215065517 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.212797775 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.212871224 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212914873 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214714538 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.211977452 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212209653 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.21225737 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.212940387 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.216680619 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.212613652 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.212444845 seconds)
  done (took 30.267617581 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.21567169 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.215827428 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.215629916 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.216081114 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.213701153 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.215725501 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.216342122 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.213717854 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.215958804 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.215760781 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.214765288 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.211648795 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.216331483 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.213111229 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217077456 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.213610783 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.215472114 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214256425 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217513139 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.212603353 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.216911204 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214175889 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.213577907 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.217287035 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.215273596 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.214547707 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.216928297 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.21537796 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.217351763 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.216697161 seconds)
  done (took 37.599478099 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.222480176 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.225214345 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.21771321 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.217913605 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.219372839 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.217757593 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.222329778 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.218212786 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.216784001 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.217499705 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.218597166 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.217489868 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.217781311 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.21829588 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.219244731 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.219141878 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.217893342 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.219029878 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.218574785 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.217893262 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.218856247 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.219077047 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.21911873 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.217932341 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.21795716 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.219947517 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.21868244 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.218868857 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.218433929 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.220119518 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.220272895 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.218889383 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.219649205 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.219386537 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.219156401 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.220723053 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.225386128 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.226239497 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.219350068 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.21725098 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.219715084 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.219255163 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.220591507 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.220020302 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.220016553 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.219494737 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.220782524 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.221036117 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.221284782 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.219890076 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.220751553 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.220663748 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.220406464 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.221311254 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.22035334 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.220946685 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.221193683 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.22146728 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.220636432 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.220898367 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.221157192 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.221467982 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.220658597 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.221781868 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.220783381 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.220766589 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.220572549 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.221811701 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.220657381 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.22178332 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.220558504 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.222076913 seconds)
  done (took 88.981216567 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.222331211 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.218151914 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.218745274 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.218349504 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.219291207 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.220291217 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.219445002 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220856052 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218668794 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.220617628 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220879745 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.219485637 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219036914 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.223070248 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.222145345 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.218193001 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.222037957 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.218886932 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.222302244 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.221868077 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.222525809 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.219242382 seconds)
  done (took 27.991933607 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.221898599 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.225595427 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.219322454 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.22335277 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.222200268 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.223623121 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.22476799 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.224917721 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222976314 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.219437132 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220141239 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222185002 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.222464032 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220608752 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.221326644 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.22421844 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.223302061 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.222753389 seconds)
  done (took 23.152384862 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.220936151 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.221697258 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.224270422 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.220729371 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.221393027 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.223388495 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.22178774 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.225494046 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.223761808 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.221425459 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.225377035 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224244672 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.222712923 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222439767 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224979147 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.222159189 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.224712891 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223539705 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.225721209 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.222417039 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.227201311 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.228823366 seconds)
  done (took 28.066281823 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.228502059 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.225785223 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.220456374 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.220057695 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.223933482 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.225934834 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.223688415 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.221213295 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.682472705 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.226628771 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.226718773 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.231627957 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.228577051 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.226479392 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.220739815 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.223092399 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.223190093 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.222236108 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.227355611 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.222450147 seconds)
  done (took 26.096515657 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.228292888 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.2287201 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.22878006 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.225899874 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.226809735 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.229290104 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.229298819 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.229109924 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.230414846 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.233756972 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.229488073 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.23107987 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.23198815 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.228977481 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.228806685 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.228219102 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.232568189 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.231688957 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.231033056 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.233366273 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.234271969 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.234628395 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.23413038 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.230319595 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.23191879 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.239296688 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.228492495 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.22864161 seconds)
  done (took 35.60855532 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.229379554 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.226149402 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.221520435 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.225084913 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.223698213 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.22620923 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.222463472 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.223385117 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.228248874 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.224655897 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.224851227 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.228435222 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.230216838 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.229879098 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.230841697 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.232265899 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.230082521 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.228088302 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.231957849 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226731922 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.23107919 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234656053 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.231952549 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.230546756 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.231691885 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.233942329 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.234171988 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.237036336 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.237389853 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.232262638 seconds)
  done (took 38.029327836 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.278653741 seconds)
    (2/2) benchmarking "in"...
    done (took 1.274026606 seconds)
  done (took 3.708303081 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.230740964 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.236606759 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.235821722 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.232910196 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.230224711 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.235549058 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.235637331 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.233183581 seconds)
  done (took 11.025573828 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.238024811 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.236496055 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.237083938 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.23416679 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.239681807 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.232001389 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.243668192 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.255861777 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.239785533 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.239615701 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.243097289 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.241845772 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.238136224 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.234864443 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.235751728 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.239936451 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.232804335 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.243264943 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.235956482 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.235293206 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.236492255 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.237853937 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.238519735 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.234764561 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.240483225 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.248296461 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.240927323 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.2355097 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.236270602 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.241344599 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.23157462 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.230737628 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.237853474 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.23640223 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.231350926 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.235989981 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.244926265 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.25689213 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.245441344 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.235050602 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.237006824 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.234847964 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.23667841 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.235114558 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.240457001 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.240488795 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.235790628 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.234860057 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.236045469 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.241833615 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.243621339 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.234822453 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.233739564 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.238497518 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.239674776 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.243095807 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.254635559 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.239008499 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.247397792 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.244559196 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.248423138 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.244307349 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.242504553 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.241102095 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.248950732 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.266547628 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.245456257 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.25365889 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.237633697 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.238108345 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.246700651 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.253372656 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.262171577 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.238128694 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.240479635 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.238459564 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.238174112 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.241436891 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.244233269 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.260040791 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.243067711 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.241216313 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.250170935 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.264080568 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.242945823 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.241240263 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.240270836 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.241264408 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.243973057 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.24994351 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.266313701 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.244103263 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.241579448 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.242155913 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.24205683 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.244325554 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.247087245 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.2468082 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.239664094 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.242806012 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.245267927 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.247313481 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.249140808 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.246990928 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.247949707 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.254639121 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.244819725 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.245713888 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.25138497 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.248918604 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.247469737 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.243459499 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.246990302 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.237797631 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.243974346 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.24702848 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.243348986 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.238754859 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.242411331 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.244027878 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.252111966 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.272293841 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.243228812 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.241549752 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.248998483 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.257777759 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.244527247 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.245761577 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.239415452 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.24567176 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.241703715 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.244701832 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.243922483 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.246799271 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.243717227 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.242824481 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.242704046 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.247235033 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.244972868 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.243572131 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.243753364 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.242201241 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.245331151 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.245306519 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.244628839 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.244305406 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.247309516 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.241322443 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.244498316 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.238977144 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.241270701 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.246379891 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.245116352 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.246416482 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.242408715 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.244606405 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.240348844 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.242412695 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.242171287 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.248145097 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.248458884 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.242252132 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.246140243 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.244459699 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.249388588 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.243084734 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.242558102 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.247739138 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.24399199 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.245758013 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.246212149 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.245288407 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.247058152 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.247148046 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.24480221 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.243962027 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.245425443 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.246915406 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.246031902 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.247691768 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.249571729 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.25619713 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.246892948 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.250224954 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.244857177 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.248153591 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.245696754 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.245950357 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.243579332 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.248856475 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.247418096 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.254057622 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.258798028 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.270089429 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.243881819 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.248115289 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.247758399 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.250276319 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.247723698 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.246082276 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.245151245 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.246883067 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.24810201 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.247655299 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.245634221 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.248411374 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.245999642 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.247424167 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.250047652 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.247905956 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.245183274 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.243774023 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.248369578 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.245477833 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.24778601 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.249098929 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.246228453 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.246570296 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.252584372 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.24911278 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.25299867 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.250674879 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.254200025 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.243399611 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.249655801 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.248335404 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.248150837 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.244839079 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.24930598 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.249174265 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.251087307 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.257505144 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.268281301 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.252109801 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.255857503 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.264544468 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.249198528 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.249528599 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.243710849 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.247146345 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.252933221 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.256605024 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.2497071 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.249361841 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.25197394 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.247240697 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.255293991 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.256528866 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.249036026 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.251406191 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.252253381 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.256514463 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.24943581 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.251425105 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.250970762 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.248821014 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.250907597 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.250658292 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.253171578 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.251644955 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.250614387 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.250957877 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.252799444 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.255536994 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.261397846 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.255897559 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.253827668 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.256371908 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.255444217 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.256163213 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.256062304 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.25629663 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.254714318 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.264075447 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.277017412 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.257298792 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.252146331 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.252933623 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.259053682 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.251914072 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.258590787 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.25589764 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.25038151 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.253226331 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.251089155 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.256811609 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.258051543 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.259548899 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.257219365 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.25063692 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.25709622 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.255843992 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.257830529 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.257014718 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.252497482 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.25944691 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.256890032 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.257798011 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.256108208 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.254741202 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.255565615 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.25577678 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.264231699 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.274728595 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.259574538 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.255777345 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.253810043 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.252246869 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.256810048 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.253836574 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.260205674 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.262226557 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.25859211 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.262052033 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.259018268 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.262232559 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.258101595 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.258843504 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.263806836 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.255221444 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.253693099 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.261933949 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.26017809 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.260778784 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.275429458 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.2622251 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.260581994 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.259901319 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.257464497 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.257417713 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.258790935 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.257675516 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.261603189 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.265528649 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.276221061 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.260145402 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.260441736 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.255501419 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.260029942 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.255092719 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.260353298 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.259446096 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.258011576 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.256290537 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.259147744 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.259944026 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.265445696 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.265022291 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.256757737 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.261106544 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.261519657 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.263369932 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.280099386 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.261817308 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.263362374 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.266411031 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.259173862 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.264275498 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.276604444 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.257474297 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.260351113 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.259737771 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.256703358 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.256861066 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.25681668 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.254941014 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.255803779 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.255317922 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.259227109 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.264646851 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.258314491 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.258879612 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.258699624 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.271211324 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.285784382 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.260333284 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.266009599 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.264242195 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.259416398 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.263341533 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.260241367 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.256989769 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.264634287 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.269192652 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.267082787 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.261126648 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.260255667 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.261377935 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.262993768 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.265182642 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.261527882 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.26698636 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.266415193 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.264541382 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.262610759 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.263606398 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.263606674 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.267588075 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.263706265 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.263766437 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.26720246 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.261813385 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.261305333 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.264748875 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.26352554 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.263316369 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.259950221 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.261924414 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.261741962 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.262007406 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.262913522 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.268114145 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.269341536 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.263864058 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.261411159 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.267066468 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.265972087 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.265689854 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.266775149 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.262858412 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.26490903 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.261473774 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.26732653 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.263213949 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.26708006 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.266318136 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.267925788 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.268298841 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.272496836 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.269904388 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.266648683 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.262271179 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.269476135 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.268095343 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.266918427 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.261857978 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.273429031 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.270611542 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.275426742 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.269922103 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.27021033 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.263239816 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.266307793 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.270258858 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.262665453 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.264650513 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.267595024 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.268494874 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.26916798 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.272417579 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.267423182 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.269681773 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.267224809 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.26396037 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.273089149 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.291059086 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.269888858 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.270805156 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.269552449 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.267619423 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.26804492 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.269147261 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.26738965 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.276550611 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.286256402 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.272920915 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.27078847 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.271121742 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.270425581 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.271751321 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.271911819 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.271449661 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.269795268 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.265570361 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.269668277 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.270338999 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.270583504 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.270104924 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.273467532 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.274606165 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.27333399 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.269631369 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.271585608 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.268424974 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.271548155 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.273221684 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.267352079 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.266591458 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.268244732 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.271617142 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.274286286 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.269066315 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.271002856 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.269933763 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.273581474 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.268601217 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.272533651 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.270387597 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.281365005 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.277817635 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.271389703 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.272893046 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.270798354 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.272097167 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.271946768 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.273306864 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.272178666 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.274004119 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.273432031 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.273446016 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.271802258 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.276479265 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.286416034 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.296583321 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.273901819 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.271462387 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.273143658 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.269971215 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.269559924 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.273957886 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.276164995 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.276534666 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.28363244 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.274026931 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.279897314 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.289557855 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.276587955 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.279936095 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.277990534 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.275387293 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.275986219 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.27336861 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.276707764 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.278568775 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.288079852 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.272307367 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.284967025 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.301363693 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.29127527 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.275456023 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.276823863 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.270473809 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.276636136 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.27630485 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.275699127 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.274869204 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.277802479 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.275992384 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.276812662 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.275140987 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.274332842 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.274102912 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.275575626 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.274102631 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.278573024 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.273645922 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.276864437 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.275804895 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.278113295 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.275934395 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.276444303 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.27471714 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.289350972 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.297595836 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.274411074 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.27735394 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.27761776 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.276806603 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.279213207 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.283770629 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.285081916 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.276825705 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.273336101 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.276274406 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.277121345 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.27409695 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.276918603 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.275103244 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.276543444 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.273564929 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.288319128 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.282067033 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.280460671 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.276657081 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.276699388 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.275987697 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.27538395 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.27970481 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.27807459 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.277276233 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.279686514 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282510768 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.27929348 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.279746622 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.282019847 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.279086488 seconds)
  done (took 750.962094815 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.277785885 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.277903227 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.277720505 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.277430548 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.274354581 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.27687845 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.276733566 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.279237723 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.278042172 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.276992856 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.276530923 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.276377016 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.275978249 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.279635452 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.27793418 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.277101167 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.277029519 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.27486452 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.275213258 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.277343373 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.275763301 seconds)
  done (took 28.009928824 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.281788524 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.279590247 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.280165856 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.280532332 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.280710175 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.28066686 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.278676725 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281951977 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.279756548 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.275533256 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.278511471 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.279727633 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.277226511 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.276142898 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.278851281 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.279877012 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.280704919 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.276324507 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.280109105 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.27740363 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.274373848 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.272427666 seconds)
  done (took 29.323447134 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.283646242 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.279207292 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.280668811 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.278945433 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.277557495 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.276248071 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.281479528 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.280895312 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.279241224 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.282972735 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.280243829 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.280470651 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.289271355 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.283415778 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.284947732 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.281266448 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.424618331 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.284860855 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.286234711 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.285285954 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.281256067 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.289295892 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.274524136 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.282882835 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.283016847 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.284206793 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.281611222 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.281101117 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.283254966 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.282829321 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.287244596 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.283470602 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.282848213 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.286013612 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.279119778 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.28366872 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.286191634 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.285236861 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.280296222 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.285368563 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.294014466 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.305464477 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.286310701 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.288640876 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.283206238 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.284016136 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.288212506 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.288325967 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.281120583 seconds)
  done (took 64.239798223 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.286237777 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.282898725 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.282773447 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.283894381 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.283940715 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.286205804 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.283948693 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.28907934 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.281614419 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.280680535 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.28426183 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.283970186 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.280657561 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.281740856 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.281902243 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.283749077 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.282970897 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.2832428 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.282669719 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.283018317 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.28077882 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.286171212 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.285138754 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.283513241 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.286589494 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.283247696 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.280828617 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.285534577 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.282161986 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.283189906 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.283834377 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.286559013 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.285228039 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.282379734 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.279795647 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.285656407 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.285309501 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.283069167 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.28451735 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.280076902 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.28697937 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.283612883 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.286472519 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.288488121 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.285982601 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.28505198 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.283995626 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.286554708 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.285756478 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.287118059 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.287447471 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.282552449 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.281485875 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.28655212 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.285504253 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.282658676 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.285122878 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.281038835 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.286944031 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.285531571 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.287648262 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.291327093 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.286839845 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.288586294 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.289534864 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.281041656 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.279283071 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.288209042 seconds)
  done (took 88.539309735 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.287224786 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.28891031 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.290061614 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.285992274 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.286085574 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.285723138 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.289541958 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.290429717 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.284057212 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.284483387 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.283297453 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.284383423 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.289092833 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.284736036 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.286498475 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.292243593 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.292206376 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.286266741 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.291950908 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.29035441 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.286829322 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.285257035 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.287564363 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.286736066 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.28665352 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.29161772 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.290752067 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.286675225 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.290306418 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.285527139 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.286865596 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.293787149 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.288903991 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.287016824 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.287398937 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.29027643 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.287011387 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.28843232 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.287976694 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.288987644 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.289295376 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.289539105 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.2884526 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.288018293 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.287556725 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.28747129 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.28885139 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.289944756 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.287372756 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.291808492 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.289064842 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.288243361 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.293195089 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.285127442 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.294257229 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.289414184 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.296516746 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.292198239 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.290152513 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.293854934 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.293647917 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.287706906 seconds)
  done (took 81.103345867 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.29616151 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.292124174 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.287165649 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.288343879 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.2932241 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.29226597 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.288549131 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.289782822 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.29509529 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.294050745 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.297261134 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.294174825 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293173146 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.293848753 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.289787885 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.29435232 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.294158811 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.293690851 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.297667529 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.293982083 seconds)
  done (took 27.064934351 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.294616443 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.295040891 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.294846669 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.2938934 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.296932549 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.295610569 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.296063265 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.295324368 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.295419439 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294836157 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.29879356 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.296971752 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294528352 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.293366271 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.294997636 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.293275744 seconds)
  done (took 21.93312593 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.294318424 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.297925352 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.296054136 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.297214359 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.295620966 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.296858379 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.299250667 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.295482047 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.294340095 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.297781868 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.298940808 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.293428465 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.297458985 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.297877465 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.294723935 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.298001428 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.297690729 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.292879573 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.292804947 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.29974798 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.29733212 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.295202988 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.298727396 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.299223685 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.296910646 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.297501794 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.295113087 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.294997192 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.295218149 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.295313472 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.29734406 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.296104252 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.297671948 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.29642862 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.299110364 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.292997483 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.297455563 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.298607289 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.29854149 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.29966605 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.295989257 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.293568194 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.29603151 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.298824141 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.29581508 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.299973704 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.296350382 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.29655769 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.297372051 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.29734489 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.299313377 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.300178206 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.297426956 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.303782992 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.300027571 seconds)
  done (took 72.544280015 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.299526888 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.302139873 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.300467325 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.301001806 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.299584042 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.298439067 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.297970572 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.301123596 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.299028906 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.30169507 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.299831946 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.30352378 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.297035764 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.30100956 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.298793533 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.301000951 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.299663982 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.298273868 seconds)
  done (took 24.610069261 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.296825028 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.299367967 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.299444493 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.298643518 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.298252489 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.301746195 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.299270008 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.301107207 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.302618243 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.298113095 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29928986 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.303164857 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.301411859 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.303352612 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.300398556 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.298788128 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.304177641 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.300290579 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.300200229 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.297777143 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.303816908 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.30215532 seconds)
  done (took 29.820094558 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.303506416 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.301720778 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.300660833 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.31909952 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.321049932 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.325205692 seconds)
  done (took 9.081807359 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309731688 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303737592 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.299879563 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304340199 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304423217 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300991886 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299264565 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301754941 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303061938 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302275381 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302839486 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305706042 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306532665 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301998033 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302278797 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302077204 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301510308 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301788225 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301256927 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304051357 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302663251 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304010875 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301056869 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300410837 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303504446 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299178959 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304848671 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299754556 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299698485 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302847486 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300804359 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299947975 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302526468 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302365255 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304818654 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303877528 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301414085 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305650281 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305838551 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302870492 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.305694469 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305385325 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305321399 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302623398 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306609583 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300940512 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303760466 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305061829 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302431024 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305612214 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305743683 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301798094 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306473029 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305418029 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308723599 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306301165 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302528244 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304285771 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307494747 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304509748 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302538269 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30212786 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303115107 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30238204 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304583574 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302949135 seconds)
  done (took 87.262045811 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305268585 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.304262997 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304767442 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308176433 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303877934 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304269116 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304811946 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304938282 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303613507 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30529288 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305925369 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305161016 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305201469 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304781193 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303651116 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303784914 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306328484 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307362296 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306676596 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306600886 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305771399 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304454074 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304598606 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304542226 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306578351 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311156485 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306888484 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307024094 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305713255 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306941343 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307106028 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307402836 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308525411 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.307948893 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307015344 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308191656 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306217493 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30741219 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306633826 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310187197 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307007119 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309521651 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307141202 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309600595 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30961812 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309225215 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308635205 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308649249 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30850648 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306179275 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307252668 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306906967 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309330195 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307633971 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307970622 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308339049 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309548276 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311490796 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310981838 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311976505 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310756685 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308881083 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312624282 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308285773 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309934581 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309176763 seconds)
  done (took 87.497863393 seconds)
done (took 1753.659974562 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.474394644 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.42521458 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.309591908 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.307966667 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.300482799 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.333404899 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.3213753 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.30228961 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.308342008 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.307492141 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.308821843 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.495178878 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.307425566 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.299810706 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.307831562 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.403960301 seconds)
  done (took 42.732992084 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.339119087 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.316096744 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.433898059 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.332272638 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.337242016 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.503690528 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.370859281 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.315825574 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.496692435 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.360800696 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.009203033 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.341475137 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.315764387 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.521566481 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.336456328 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.502510904 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.578753754 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.02074581 seconds)
  done (took 30.652486531 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.789577499 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.316879545 seconds)
  done (took 9.328462326 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.336404315 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.316610979 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.316204643 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.315191911 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.30625273 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.299128887 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.313595095 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.314498238 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.107324151 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.437043206 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.316653555 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.32616537 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.340234636 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.318033762 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.308095611 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.352403044 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.465951361 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.315669725 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.309860161 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.317569791 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.310000471 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.401327139 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.350584791 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.307708916 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.440915781 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.083189623 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.30254722 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.320097515 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.437190254 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.307446072 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.312231699 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.313039427 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.315241001 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.23948635 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.763834543 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.301542297 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.342442837 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.324795537 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.307045505 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.457910317 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.317458454 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.323638665 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.308240728 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.766572709 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.480946559 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.43465827 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.590919723 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.312902669 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.314686877 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.381993366 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.317847779 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.317109809 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.356725635 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.119857705 seconds)
  done (took 110.946807631 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.345010351 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.699344146 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.480888609 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.334991709 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.023171224 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.025606318 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.325864742 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.609368272 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.352634622 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.307694246 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.60395425 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.837082345 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.32681468 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.302907813 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.490669014 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.307517514 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.313867141 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.086636103 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.327128126 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.306193413 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.822842326 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.309151742 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.334574591 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.467436816 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.347470396 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.770267727 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.767532338 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.7199909 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.323651064 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.297650508 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.776481953 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.320800142 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.371455267 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.304067421 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.584784966 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.693419257 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.668697715 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.31284602 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.331970346 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.301070818 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.32715557 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.783282247 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.656085267 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.301118522 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.307478706 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.765843353 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.298248866 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.306823982 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.305172695 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.508528521 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.917475074 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.306403096 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.780234497 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.304229678 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.625781924 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.378306362 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.36142653 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.796474838 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.296177284 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.367623687 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.344177902 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.30874354 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.30851224 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.310780638 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.311154929 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.654285391 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.506743005 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.308764917 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.658053777 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.761724616 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.315648967 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.861226436 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.144028623 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.327533263 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.360179454 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.304541697 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.888429111 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.806277992 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.30356513 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.300989869 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.641113888 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.304115461 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.596052189 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.325062743 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.321027124 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.818928838 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.320292404 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.363666328 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.319547171 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.321094163 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.978927534 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.312579608 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.584800231 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.377569657 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.306094832 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.307361325 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.33421217 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.314794439 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.31040461 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.302512824 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.832013194 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.32725413 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.439940016 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.324189042 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.301126892 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.310156735 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.306335797 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.309426502 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.523975887 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.891674806 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.31855727 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.311059492 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.304029227 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.319795855 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.472284704 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.310532443 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.616302427 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.308617384 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.305464823 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.314559819 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.952360519 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.341458088 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.300978978 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.31149928 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.236335332 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.51241613 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.332069379 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.311492134 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.307887491 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.304315994 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.65055855 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.334978266 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.325416721 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.312182768 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.013018662 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.352106862 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.318453153 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.573299344 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.313866878 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.305899495 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.314686106 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.310416016 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.600855839 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.58076003 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.446842808 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.303407389 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.312547276 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.994339889 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.331556766 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.4437246 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.334279125 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.347618769 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.509197214 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.462728942 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.307267261 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.876226467 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.307114696 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.518832272 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.313799824 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.609331787 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.814095142 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.327012246 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.315849145 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.015423006 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.03887663 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.976869217 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.313850291 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.587509683 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.278921646 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.791473185 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.308468974 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.30644941 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.777459581 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.314656865 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.309431942 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.307529766 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.307467348 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.450486684 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.488677905 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.566775971 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.309266983 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.765880624 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.307026602 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.308499415 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.334186334 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.309493757 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.661453774 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.34954845 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.31744688 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.35376168 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.314248343 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.308920278 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.78279802 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.155637946 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.316595353 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.465923344 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.949656628 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.322611055 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.315488017 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.05852785 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.982361717 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.825761326 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.357588062 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.62528167 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.315645894 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.351636278 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.908836133 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.383389983 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.788596937 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.308469587 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.317039763 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.912380633 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.323517894 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.425664076 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.306713638 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.311690624 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.851798277 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.325699862 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.317478346 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.589887457 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.339661167 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.565629432 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.317103957 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.355796745 seconds)
  done (took 1105.201911035 seconds)
done (took 1300.0832156 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.309726128 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.317072243 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.30952439 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.318900274 seconds)
  done (took 26.480684344 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.320713707 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.316304927 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.323182084 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.317138536 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.321890475 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.318479367 seconds)
  done (took 9.151020651 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.365398275 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.318843372 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.3189403 seconds)
  done (took 19.23475094 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.532950725 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.628702482 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.655947738 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.587432258 seconds)
  done (took 10.630962069 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.323635615 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.320403821 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.319749686 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.324009465 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.325839273 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.326305676 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.325881686 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.324281967 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.324743263 seconds)
  done (took 13.14269791 seconds)
done (took 79.875936665 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.557002609 seconds)
    (2/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.3338472 seconds)
    (3/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.97790391 seconds)
    (4/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.320056496 seconds)
    (5/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.146526328 seconds)
    (6/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.318617497 seconds)
    (7/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.42409766 seconds)
    (8/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.396391339 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.594276711 seconds)
    (10/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.392922915 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.350673309 seconds)
    (12/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.337496593 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.338092908 seconds)
    (14/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.080138959 seconds)
    (15/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.425509083 seconds)
    (16/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.208939193 seconds)
    (17/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.404379866 seconds)
    (18/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.4514555 seconds)
    (19/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.530754549 seconds)
    (20/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.594171903 seconds)
    (21/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.210053215 seconds)
    (22/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.337208936 seconds)
    (23/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.875499111 seconds)
    (24/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.004900285 seconds)
    (25/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.827864416 seconds)
    (26/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.73393699 seconds)
    (27/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.317283903 seconds)
    (28/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.308768593 seconds)
    (29/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.302221604 seconds)
    (30/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.377904248 seconds)
    (31/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.340799021 seconds)
    (32/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.302233067 seconds)
    (33/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.824713702 seconds)
    (34/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.348199194 seconds)
    (35/286) benchmarking ("sort", Int64, true)...
    done (took 6.315595906 seconds)
    (36/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.095472809 seconds)
    (37/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.023810395 seconds)
    (38/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.444963354 seconds)
    (39/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.124024518 seconds)
    (40/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.513520566 seconds)
    (41/286) benchmarking ("sort", Float32, true)...
    done (took 6.319902306 seconds)
    (42/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.40369934 seconds)
    (43/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.32246984 seconds)
    (44/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.457712749 seconds)
    (45/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.33886093 seconds)
    (46/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.314115413 seconds)
    (47/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.350289281 seconds)
    (48/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.820967904 seconds)
    (49/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.700689025 seconds)
    (50/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.329632116 seconds)
    (51/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.175562655 seconds)
    (52/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.413565671 seconds)
    (53/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.426925826 seconds)
    (54/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.424574679 seconds)
    (55/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.578240299 seconds)
    (56/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.367174658 seconds)
    (57/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.341470265 seconds)
    (58/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.759232124 seconds)
    (59/286) benchmarking ("sort", Int8, false)...
    done (took 4.380575636 seconds)
    (60/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.327242955 seconds)
    (61/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.822940421 seconds)
    (62/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.995552545 seconds)
    (63/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.326369177 seconds)
    (64/286) benchmarking ("sort", BigInt, false)...
    done (took 6.334228893 seconds)
    (65/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.373835575 seconds)
    (66/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.302329154 seconds)
    (67/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.315926414 seconds)
    (68/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.352482178 seconds)
    (69/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.982759002 seconds)
    (70/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.351306616 seconds)
    (71/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.278927201 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.257296354 seconds)
    (73/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.343597139 seconds)
    (74/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.902707641 seconds)
    (75/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.828758884 seconds)
    (76/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.990119328 seconds)
    (77/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.310354428 seconds)
    (78/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.326576085 seconds)
    (79/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.148072612 seconds)
    (80/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.028804282 seconds)
    (81/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.334393455 seconds)
    (82/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.592421645 seconds)
    (83/286) benchmarking ("sort", Int64, false)...
    done (took 5.560685388 seconds)
    (84/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.318080166 seconds)
    (85/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.323128445 seconds)
    (86/286) benchmarking ("sort", Float32, false)...
    done (took 5.452957611 seconds)
    (87/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.920118895 seconds)
    (88/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.204662704 seconds)
    (89/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.357660943 seconds)
    (90/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.3061759 seconds)
    (91/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.441671232 seconds)
    (92/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.317587221 seconds)
    (93/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.309282554 seconds)
    (94/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.206947422 seconds)
    (95/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.685859555 seconds)
    (96/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.862494708 seconds)
    (97/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.313340432 seconds)
    (98/286) benchmarking ("sort", BigInt, true)...
    done (took 6.33715161 seconds)
    (99/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.859019221 seconds)
    (100/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.327015824 seconds)
    (101/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.345069205 seconds)
    (102/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.344401292 seconds)
    (103/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.569656404 seconds)
    (104/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.101030676 seconds)
    (105/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.354938659 seconds)
    (106/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.310431788 seconds)
    (107/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.327804185 seconds)
    (108/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.050463128 seconds)
    (109/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.313803617 seconds)
    (110/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.324236747 seconds)
    (111/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.534215554 seconds)
    (112/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.423716195 seconds)
    (113/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.312548437 seconds)
    (114/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.326754753 seconds)
    (115/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.708980011 seconds)
    (116/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.346666764 seconds)
    (117/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.337893623 seconds)
    (118/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.978188838 seconds)
    (119/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.830431022 seconds)
    (120/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.678762023 seconds)
    (121/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.322051002 seconds)
    (122/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.410791888 seconds)
    (123/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.70922038 seconds)
    (124/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.271387992 seconds)
    (125/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.308397954 seconds)
    (126/286) benchmarking ("sort", Bool, false)...
    done (took 1.857612034 seconds)
    (127/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.347346571 seconds)
    (128/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.30761602 seconds)
    (129/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.57415903 seconds)
    (130/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.72649447 seconds)
    (131/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.307394293 seconds)
    (132/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.120025582 seconds)
    (133/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.576044327 seconds)
    (134/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.962376722 seconds)
    (135/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.334399371 seconds)
    (136/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.830366962 seconds)
    (137/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.860708294 seconds)
    (138/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.308382836 seconds)
    (139/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.464652728 seconds)
    (140/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.404586972 seconds)
    (141/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.44918261 seconds)
    (142/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.34813238 seconds)
    (143/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.749795587 seconds)
    (144/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.149399143 seconds)
    (145/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.832333557 seconds)
    (146/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.750838124 seconds)
    (147/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.307741353 seconds)
    (148/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.341343479 seconds)
    (149/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.055362148 seconds)
    (150/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.920115683 seconds)
    (151/286) benchmarking ("sort", Int8, true)...
    done (took 6.320715385 seconds)
    (152/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.774891943 seconds)
    (153/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.130798271 seconds)
    (154/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.347907738 seconds)
    (155/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 3.059801863 seconds)
    (156/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.239749499 seconds)
    (157/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.316840436 seconds)
    (158/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.977325424 seconds)
    (159/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.333118747 seconds)
    (160/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.344296664 seconds)
    (161/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.325407572 seconds)
    (162/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.342485829 seconds)
    (163/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.334779099 seconds)
    (164/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.402764407 seconds)
    (165/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.181692468 seconds)
    (166/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.310413657 seconds)
    (167/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.566011372 seconds)
    (168/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.44930844 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.260591397 seconds)
    (170/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.309932035 seconds)
    (171/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.350906377 seconds)
    (172/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.686493588 seconds)
    (173/286) benchmarking ("sort", Float64, false)...
    done (took 5.644742713 seconds)
    (174/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.30871191 seconds)
    (175/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.309614359 seconds)
    (176/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.333371923 seconds)
    (177/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.421033549 seconds)
    (178/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.74095128 seconds)
    (179/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.349472768 seconds)
    (180/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.386196736 seconds)
    (181/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.319690818 seconds)
    (182/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.383621175 seconds)
    (183/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.310871279 seconds)
    (184/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.372738295 seconds)
    (185/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.955999673 seconds)
    (186/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.320330972 seconds)
    (187/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.222834495 seconds)
    (188/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.38556337 seconds)
    (189/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.317871578 seconds)
    (190/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.737964479 seconds)
    (191/286) benchmarking ("sort", Bool, true)...
    done (took 5.377977719 seconds)
    (192/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.339630818 seconds)
    (193/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.408257513 seconds)
    (194/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.343110307 seconds)
    (195/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.312458687 seconds)
    (196/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.369492916 seconds)
    (197/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.311850312 seconds)
    (198/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.340682968 seconds)
    (199/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.99455215 seconds)
    (200/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.329085834 seconds)
    (201/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.34142943 seconds)
    (202/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.538252081 seconds)
    (203/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.312478844 seconds)
    (204/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.738379368 seconds)
    (205/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.328759475 seconds)
    (206/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.335619665 seconds)
    (207/286) benchmarking ("sort", Float64, true)...
    done (took 6.346709516 seconds)
    (208/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.747601227 seconds)
    (209/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.222224749 seconds)
    (210/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.853722951 seconds)
    (211/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.347735858 seconds)
    (212/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.056632234 seconds)
    (213/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.3880462 seconds)
    (214/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.188124942 seconds)
    (215/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.381691228 seconds)
    (216/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.418587597 seconds)
    (217/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.341282889 seconds)
    (218/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.410112763 seconds)
    (219/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.480830989 seconds)
    (220/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.517979212 seconds)
    (221/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.58963755 seconds)
    (222/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.452324996 seconds)
    (223/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.328305492 seconds)
    (224/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.017793851 seconds)
    (225/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.333125526 seconds)
    (226/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.328665938 seconds)
    (227/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.710283752 seconds)
    (228/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.186208844 seconds)
    (229/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.41852399 seconds)
    (230/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.448775232 seconds)
    (231/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.808022082 seconds)
    (232/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.026981562 seconds)
    (233/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.549256261 seconds)
    (234/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.334860073 seconds)
    (235/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.59699397 seconds)
    (236/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.336086387 seconds)
    (237/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.431692484 seconds)
    (238/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.351513516 seconds)
    (239/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.397056729 seconds)
    (240/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.733916969 seconds)
    (241/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.436313259 seconds)
    (242/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.33603241 seconds)
    (243/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.576085325 seconds)
    (244/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.317016592 seconds)
    (245/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.336176777 seconds)
    (246/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.366999156 seconds)
    (247/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.158497865 seconds)
    (248/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.278932943 seconds)
    (249/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.959582231 seconds)
    (250/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.419536706 seconds)
    (251/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.445440584 seconds)
    (252/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.350883311 seconds)
    (253/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.334687999 seconds)
    (254/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.316499263 seconds)
    (255/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.302828465 seconds)
    (256/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.585796443 seconds)
    (257/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.616384646 seconds)
    (258/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.695362219 seconds)
    (259/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.715103663 seconds)
    (260/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.545823921 seconds)
    (261/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.331148356 seconds)
    (262/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.65793361 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.418389679 seconds)
    (264/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.317372266 seconds)
    (265/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.442737033 seconds)
    (266/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.409408943 seconds)
    (267/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.522645305 seconds)
    (268/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.725293349 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.449306367 seconds)
    (270/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.355776331 seconds)
    (271/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.869537135 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.161551248 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.371621217 seconds)
    (274/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.413616253 seconds)
    (275/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.112557942 seconds)
    (276/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.455219932 seconds)
    (277/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.393935209 seconds)
    (278/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.290122523 seconds)
    (279/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.743575799 seconds)
    (280/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.336298044 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.370977245 seconds)
    (282/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.693161725 seconds)
    (283/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.231327086 seconds)
    (284/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.529749428 seconds)
    (285/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.903485575 seconds)
    (286/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.475697694 seconds)
  done (took 943.722772039 seconds)
done (took 944.958846614 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.364309602 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.356469557 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.339126308 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.363069993 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.452299661 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.516541053 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.351631992 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.343969968 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.38974442 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.392586132 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.339687078 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.516291739 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.34233067 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.340703064 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.341376782 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.357524239 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.473801601 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.349610844 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.356662358 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.35184219 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.356727108 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.339498465 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.392210818 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.515255268 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.347206602 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.345459665 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.345285395 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.361579279 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.453476185 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.345559242 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.342325528 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.352214334 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.476875767 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.348583329 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.336307731 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.363169114 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.354352395 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.350126948 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.346378707 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.375147086 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.843080853 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.34272058 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.343349786 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.343919239 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.343029732 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.347912366 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.346815391 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.349581505 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.356737651 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.356927449 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.832376666 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.357497696 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.345668178 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.344011443 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.354549563 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.343852875 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.346229475 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.360703999 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.360939341 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.359365068 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.468434776 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.355654644 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.346082676 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.357737435 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.350955334 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.872160415 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.339319614 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.350705468 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.850155911 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.348514501 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.878334629 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.354500722 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.344863654 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.358814211 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.378909564 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.431388279 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.340726643 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.343282918 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.352877234 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.343980771 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.357212151 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.360151916 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.351154061 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.346195034 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.360279416 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.523254724 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.357618933 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.34646604 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.355535129 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.367828326 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.354250288 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.358882307 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.350682352 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.341749044 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.35731734 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.34997581 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.348357409 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.350951117 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.350422019 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.357559633 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.850519564 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.364779022 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.344072742 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.343616151 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.345792309 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.361660215 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.848911103 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.347079995 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.370318575 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.398775956 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.352192784 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.447031646 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.355376438 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.365540478 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.357248621 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.352933087 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.343869867 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.455021571 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.846103837 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.363599902 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.350338925 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.350167667 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.368616832 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.350800727 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.345344968 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.435209836 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.350547952 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.36557459 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.468736235 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.360617108 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.380991405 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.347316863 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.351816162 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.384559942 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.365877454 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.379150423 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.351672366 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.365354513 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.366195897 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.345647347 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.361130733 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.361217093 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.352450973 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.355945728 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.344133015 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.386566818 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.365765901 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.365806429 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.369958768 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.472389855 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.34490544 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.424799918 seconds)
done (took 229.043550673 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.407521989 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.342491486 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.437955438 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.348553661 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.449580494 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.452379459 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.343888042 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.346168012 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.345920581 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.724668228 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.346627309 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.344669566 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.339548311 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.344489659 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.429966309 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.348460547 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.343633103 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.690710007 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.3475563 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.4156804 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.347545589 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.346491506 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.348586502 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.729721548 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.344008085 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.344023167 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.416780341 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.348664725 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.695140416 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.342553783 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.348221426 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.696672328 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.439730476 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.366004838 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.356791493 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.355637984 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.452701626 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.372441521 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.432052196 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.430345059 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.442736073 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.386232025 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.344584081 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.343651424 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.35525523 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.350368211 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.346418844 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.376834546 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.349944167 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.346640502 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.690208485 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.357796479 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.346436992 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.346389347 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.345965118 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.379947812 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.345462016 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.350819149 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.437270853 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.351808185 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.41316229 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.733172366 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.728551045 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.352023946 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.353151661 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.350247937 seconds)
  done (took 149.446975774 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.417874688 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.422061669 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.468811818 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.358418459 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.398029473 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.473874177 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.358052055 seconds)
  done (took 11.157631454 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.357345181 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.351753457 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.401356661 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.401328154 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.353953944 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.52864906 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.353000106 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.361414521 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.346625211 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.401525029 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.352881785 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.351287206 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.358991598 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.345245747 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.399098347 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.363684768 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.465469581 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.351725765 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.354622786 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.503584894 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.348657199 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.360774456 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.403050988 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.363094013 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.354541659 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.35700924 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.181125819 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.353512029 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.350550946 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.3522312 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.349974947 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.432461919 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.352496377 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.351318585 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.350680153 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.468206514 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.353695591 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.350064412 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.355784071 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.345894439 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.35479616 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.353452233 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.35385166 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.351248145 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.353830856 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.379402981 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.353384776 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.353787486 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.35414693 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.352438341 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.405251491 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.356694489 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.351062262 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.352639569 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.406329619 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.361261747 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.357110817 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.352799512 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.356876247 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.352731498 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.508668004 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.400755111 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.352782658 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.404195178 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.353900606 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.356476767 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.354838091 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.355679289 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.416769959 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.354052913 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.403894021 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.353250719 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.53637617 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.377909942 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.357360284 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.35804189 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.357423152 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.356827016 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.351522501 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.362314895 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.352303838 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.357766558 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.36177896 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.35500399 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.354850987 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.528838905 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.462624029 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.352340883 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.368061286 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.361393581 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.355265642 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.40714183 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.356301015 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.355119932 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.408333138 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.470344732 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.406868537 seconds)
  done (took 155.603484988 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.360897795 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.364563688 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.360670479 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.380177232 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.356449878 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.356156667 seconds)
  done (took 9.444629151 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.359529977 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.358017751 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.358255042 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.357201191 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.357415076 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.360525051 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.358670443 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.361447607 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.362344429 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.35796101 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.36247807 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.359433537 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.361478496 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.362143461 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.358406232 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.356831761 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.360869334 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.359180465 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.358388049 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.357354416 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.463614226 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.358387354 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.359083606 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.357932681 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.36927222 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.361666063 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.366927069 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.358458469 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.35873087 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.368554825 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.363682892 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.362746812 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.362411535 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.36640388 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.363176325 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.36004078 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.364114621 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.360934189 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.35881024 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.363034116 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.362079972 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.361416778 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.3612701 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.364184675 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.362464166 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.366882154 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.368355884 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.369019841 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.361992549 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.361705139 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.36154098 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.360046161 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.365384317 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.363638965 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.362006503 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.381255829 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.367132493 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.363867156 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.361317151 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.361685946 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.362186029 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.363752385 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.363572358 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.366540612 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.357813588 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.363958792 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.363917767 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.365760565 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.360971397 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.359340052 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.362675106 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.359402117 seconds)
  done (took 100.443832505 seconds)
done (took 427.353551087 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.39305685 seconds)
  done (took 7.662991253 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.618156568 seconds)
  done (took 7.894637955 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.97702863 seconds)
  done (took 23.257945101 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.361839184 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.397294146 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.366648519 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.367139252 seconds)
  done (took 26.766704262 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.383264235 seconds)
  done (took 7.65828178 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.371321502 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.371448015 seconds)
  done (took 14.020013439 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.584900951 seconds)
  done (took 7.857507011 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.463927509 seconds)
  done (took 7.746735109 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.371578699 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.379973358 seconds)
  done (took 14.044755018 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.354110457 seconds)
  done (took 7.630307489 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.852636954 seconds)
  done (took 12.132364347 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.357097146 seconds)
  done (took 7.638745633 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.370498308 seconds)
  done (took 7.646336402 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.934789585 seconds)
  done (took 10.209918173 seconds)
done (took 163.441216597 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.357047421 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.367423812 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.358985999 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.356972236 seconds)
  done (took 26.716749401 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.398562914 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.401285934 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.402808479 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.410419894 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.401126074 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.401569809 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.392729524 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.391877593 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.412566698 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.403092948 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.402382172 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.400583203 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.401329016 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.3915198 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.403983594 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.402361363 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.410312404 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.401980352 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.396805642 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.404391122 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.36656119 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.411736952 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.404217107 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.367443566 seconds)
  done (took 34.856908209 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.890629196 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.437821657 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.519427775 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.418694491 seconds)
  done (took 7.54433963 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.416703308 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.420436331 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.432625402 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.468153676 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.497779063 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.431637993 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.392491857 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.390459174 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.377462833 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.423408309 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.499787498 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.435564813 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.504301294 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.365725941 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.551847614 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.368601151 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.369459626 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.418852574 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.473139075 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.492471192 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.372206185 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.42065061 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.423866664 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.439503692 seconds)
  done (took 35.664795268 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.370608529 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.386832359 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.368746706 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.369135689 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.376800711 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.366865258 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.367472273 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.370595674 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.368972236 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.375073405 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.367954236 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.380450958 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.369593646 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.369127469 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.372950063 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.371070357 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.37355825 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.36859439 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.369204546 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.375254307 seconds)
  done (took 28.717064238 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.362583224 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.228711311 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.712618509 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.618912885 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.364153176 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.362139901 seconds)
  done (took 27.928616792 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.44568157 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.592927733 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.370968213 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.76294108 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.847825625 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.376580111 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.369068054 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.638418825 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.988551963 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.966077829 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.43885343 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.450395422 seconds)
  done (took 20.528417974 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.37957298 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.371123047 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.374855635 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.385989249 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.430260198 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.380138264 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.379546584 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.365224848 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.437452833 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.43936151 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.380257162 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.430985345 seconds)
  done (took 38.039578128 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450751915 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.413065862 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.414921222 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397204988 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.108670865 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.576331741 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.420913185 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.137528612 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.37514525 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.641808787 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380071857 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459984995 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.621758324 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377940282 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.370707387 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.437006748 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.598128409 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881557242 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372115951 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.711077038 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39666212 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.373547862 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.809106883 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.624737303 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.58281869 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.343665683 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.627432969 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.144621277 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.679176673 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.386808209 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375282821 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.369563245 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.643221041 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062367607 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468757268 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.602066359 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371511956 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.939589903 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.370506262 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.712300091 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386100251 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.376452484 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381364006 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369215988 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.304016871 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.368246383 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.150744549 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.382611981 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.07884597 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.369798891 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.649761455 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469674483 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.375586731 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.941410131 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.445366118 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.382433977 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.371907088 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.471246683 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947068693 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.981156731 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.386635351 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.308858765 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.367801753 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.719814284 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044168227 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.383361233 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.373264637 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.372431135 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30376777 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.704294769 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.39238886 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.518286813 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.394687839 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.021036943 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.128383093 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.378685519 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.303564467 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925423627 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.383321053 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.311138613 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.595948739 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.146353534 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.307730766 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.322412772 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.304383335 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.111293131 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387632217 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.838291963 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.397804137 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.14306284 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.610806951 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397050212 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394875785 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.599035593 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.260468549 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373643298 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.370310997 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507033989 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392625193 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.146804429 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.314939502 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.375988021 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.626952369 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.581364002 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.371930168 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.46201542 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.907485759 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377838305 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.417522268 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.376083013 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.611885051 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.996284442 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.393523474 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.990467094 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397373184 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.148609401 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.156590861 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394188595 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.385028002 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.37522602 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665212193 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.192379512 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.264423119 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442138764 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.378259055 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.373878009 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.751941141 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.23046022 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.257159568 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.597661034 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.408986242 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.389391164 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.374160206 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320466747 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.383900972 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379145532 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.164577806 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.597485244 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.388518984 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655799157 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.308421541 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52127597 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.383265108 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.596827757 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.631467964 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.378856045 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.633559468 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374781617 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.380486571 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.410525181 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394383112 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475481752 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398413391 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.374125509 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.656500467 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.380282953 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.379168542 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.750713223 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.160622817 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377779607 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.381557388 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389467006 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.003619004 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360471256 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.384241057 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.266713076 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.388042013 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444262347 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.383806836 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.610074693 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.784878993 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386939129 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.387949566 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.378662059 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.606330757 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.386847035 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.728763152 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.463251114 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.903469679 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.001230093 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.399020702 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.311592922 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.086293177 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.071110779 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374177393 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.575241734 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.380423303 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.612364091 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.39747674 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.382799107 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.008467679 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389008779 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.743001803 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.393301912 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.391449111 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.384517986 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378310502 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.773019765 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.018101148 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.402674234 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.394409472 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521085262 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.394531407 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.314167639 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.895217359 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.38500504 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.37751425 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.156955526 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415877255 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.750215461 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.215147387 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.63824079 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380990805 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.659775841 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.839925047 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.422368447 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.384088877 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.380699411 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388233167 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.393905168 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406430865 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.391851116 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.758344021 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.822772982 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949479572 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.161439032 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94944093 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.819019764 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.404665247 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.285239653 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.156201854 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320713719 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.036916202 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.640825327 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.164976183 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.332694871 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.91042492 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.65167146 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.215711487 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.669217766 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.610749436 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.81530372 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.387033656 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.690726268 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.594043771 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41638001 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.382590143 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.316569378 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.670716201 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.962858563 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382215181 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.466213868 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.165230639 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.387338933 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.167387576 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.436541168 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.195360938 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.836898759 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.933723734 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.769755071 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.390243856 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.389728883 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.217546836 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.391246222 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.909931566 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03355103 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.400701591 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.917711706 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.324466989 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.618661614 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.404100885 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.388676686 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.143805818 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.396133703 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.644876949 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.665978801 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319301066 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.385621244 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967583066 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.241675121 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.391841506 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385869205 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.165814375 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393625883 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.69890602 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.396842796 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.797091404 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398038717 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.318092922 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.318497755 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.077671579 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.394493686 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360596198 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894609909 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.411879501 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413089032 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398904521 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.237216973 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.64250134 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.398715515 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.017788559 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.615365475 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387693472 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416265114 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.388490668 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397212628 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.3818977 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.282333616 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.622347237 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397147732 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.616313036 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.449788812 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.30465488 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.441400523 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.626621666 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.267871496 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.38595831 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.679292667 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.104762229 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.404103326 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.1447516 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41922622 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.389703414 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.423682878 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.410487927 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415769349 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460895869 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.623631027 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.407199871 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.399011268 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837614641 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395984152 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397762027 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.402222156 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48359792 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.061615543 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.807653091 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.169186744 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.032932099 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.183731527 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.023851894 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.682677475 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.394060501 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395275273 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.323653511 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538924719 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.916484012 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663944004 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.520971502 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.392956592 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421134379 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.394138233 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.404168552 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.60743457 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.664661105 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.259920221 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399660945 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.053666312 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.272794229 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.401466604 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.60303959 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907878327 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961497823 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.773007483 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.399594851 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.180837487 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671231104 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.48392655 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.391345454 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.980977653 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.390818135 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.208820533 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.403696843 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392078246 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543839875 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.677664042 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106302121 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.406720249 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.553552805 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.163278236 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.803743558 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.652913588 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.933160319 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.637002359 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.025168862 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.155997156 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.661615958 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460606282 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.633314693 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.50432404 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537234758 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.397669952 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.281564379 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393796219 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.233883249 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.104507866 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.403459878 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.028477754 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.66255561 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.396936226 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.402313725 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423213436 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.403814294 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.616298873 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.152235685 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.624519626 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.402017859 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.405057878 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.964511275 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.026099251 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.689491948 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.337288816 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.397510896 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.660809083 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.636219123 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419756664 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.847656087 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.1077929 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973869929 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.364393375 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41536364 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396683453 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.182778572 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.038124669 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.83051905 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926085091 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.060312073 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.401817134 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.675415788 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.400124724 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.404848369 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677116578 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.40060771 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.405401647 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.643057184 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.028516695 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.245676657 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.425338755 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.820235797 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.34116819 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.623523568 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.474037937 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.336343858 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.396022783 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.862731594 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.423801792 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.529610047 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.406597785 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.400456291 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410342799 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.134967865 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.670683561 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.402011939 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.428459658 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.390751823 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.416695998 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.50492237 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029276929 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404729957 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.072934715 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.754665144 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.653926752 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.397247902 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.392910439 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.401870161 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399721502 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.116613699 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.368444512 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.403753666 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969450214 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.400369485 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.432899034 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.404091875 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.615314364 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.611476236 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.403970985 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.645535652 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418390571 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419200746 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.30741813 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.168622378 seconds)
  done (took 1691.883391408 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.429400689 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.446591209 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.427009691 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.506585085 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.447133413 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.47230433 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.470160011 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.465551983 seconds)
  done (took 52.977887726 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.403957942 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.566885799 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.44188367 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.400862036 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.412954411 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.405885394 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.915510621 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.42102467 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.413429696 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.410248884 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.403394297 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.412193113 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.093073193 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.416196915 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.41376311 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.402685798 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.411237679 seconds)
  done (took 66.669348499 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.98261264 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.671774706 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.896777905 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.426159532 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.422341385 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.401353873 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.730084891 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.429572314 seconds)
  done (took 55.280580631 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.41110073 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.411439694 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.41280064 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.412007344 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.412432988 seconds)
  done (took 8.375925334 seconds)
done (took 2096.461177108 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.405459001 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.407060534 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.405689958 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.407506178 seconds)
  done (took 6.942255339 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.388420054 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.09000329 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.390363248 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.405041624 seconds)
  done (took 18.59114913 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.410904931 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.433021342 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.186696662 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.101146005 seconds)
  done (took 5.60590055 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.154581733 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.16593095 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.149606122 seconds)
  done (took 7.788693054 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.400348439 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.411139507 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.405334047 seconds)
  done (took 20.535380505 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.71735637 seconds)
  done (took 3.036620242 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.551219808 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.601465819 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.771778674 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.760228714 seconds)
  done (took 8.004828129 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.799261457 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.795042314 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.599752328 seconds)
  done (took 6.514117129 seconds)
done (took 91.181333885 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.657889054 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.43301547 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.609320786 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.442534781 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.63399816 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.608990621 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.901614338 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.40588286 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.950215692 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.937883632 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.445623985 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.633719515 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.624375226 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.428618328 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.628457007 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.430464262 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.742566036 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.518524261 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.17217841 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.330811623 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.901411404 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.081404908 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.273711489 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.102735016 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.795865013 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.564298286 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.660468723 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.430233966 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.345602385 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.684280328 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.565270033 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.415901337 seconds)
  done (took 196.679062974 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.41816038 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.405599282 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.426046597 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.405157341 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.405789944 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.424287254 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.406408565 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.423445707 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.405685287 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.407139057 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.40663161 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.41622664 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.409328784 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.436642834 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.408303824 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.440354176 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.407087029 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.407665909 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.407143744 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.414296075 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.407565437 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.420542772 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.410431391 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.416635674 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.407740196 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.425873513 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.407162324 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.407398153 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.421018243 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.407595298 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.408115786 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.406860281 seconds)
  done (took 206.550167488 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.409836148 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.407113565 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.407368886 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.40832531 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.405987766 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.407104169 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.408933192 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.421188543 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.408553591 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.407663106 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.436652589 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.418093204 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.410142607 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.439620103 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.407766955 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.425068667 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.408225732 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.427004658 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.420416105 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.408510017 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.411498449 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.410038218 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.424797358 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.418097761 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.422619798 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.411613143 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.427698971 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.408697006 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.409172587 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.422988933 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.410178869 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.415551977 seconds)
  done (took 206.610393258 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.612186763 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.4163835 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.416911708 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.353504798 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.417682264 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.41777087 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.414793401 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.607868088 seconds)
  done (took 14.981854141 seconds)
done (took 626.142618957 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.86769761 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.593195192 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.635801404 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.445268523 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.334051307 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.464462733 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.437118312 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.624770724 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.390287242 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.636294956 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.745121379 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.435082123 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.938787637 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.441865267 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.713819345 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.547814753 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.346440761 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.454514579 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.786616986 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.069645801 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.727470487 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.025835081 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.636758309 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.394153828 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.916299899 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.021715137 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.246030734 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.341653459 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.443970817 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.787475135 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.301100493 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.570789501 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.490988869 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.491755247 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.553677139 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.551178697 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.491337605 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.509027456 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.641069261 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.779503663 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.086743799 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.20202793 seconds)
  done (took 97.445918279 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.410500631 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.409461976 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.409224868 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.410484885 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.411353705 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.408807852 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.410392038 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.408631711 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.410699124 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.409789301 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.410327136 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.411416573 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.410117878 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.41246756 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.410467629 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.409503445 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.411776227 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.412859905 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.41019657 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.40964854 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.411211543 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.410009997 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.411603615 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.410523369 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.411347955 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.411921629 seconds)
  done (took 38.004804346 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.42254314 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.689379097 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.876368111 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.43478849 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.421015997 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.426087363 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.509013608 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.431007002 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.426580417 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.425273038 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.602990399 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.431722805 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.461327686 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.899711565 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.433184532 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.423548299 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.42380824 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.422992483 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.699309281 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.439561982 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.532460159 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.433275168 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.509900191 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.441548461 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.447565175 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.423803552 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.429454897 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.997059911 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.431333372 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.604339131 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.291565108 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.511484773 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.946157892 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.885852466 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.293946924 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.432398251 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.424278717 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.60639166 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.428052748 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.425110132 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.51127167 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.43440829 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.879739754 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.117178179 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.448992683 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.425547059 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.016980523 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.609341978 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.702693884 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.441849219 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.907411221 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.436082929 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.427085404 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.426447942 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.697740659 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.438582749 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.425283928 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.02292229 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.459662286 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.5119353 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.435099635 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.42582332 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.698244461 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.430186139 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.692400782 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.434749927 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.435139581 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.448613301 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.884222894 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.438124338 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.129801489 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.451160841 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.427020376 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.602695529 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.694218935 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.063778172 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.435001413 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.709377728 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.959770422 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.511322159 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.434982414 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.984102629 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.514920162 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.436313274 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.430764717 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.429973217 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.429147625 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.480351493 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.511431805 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.077194793 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.128753612 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.058960084 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.543637868 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.444095667 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.429314875 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.026801584 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.452726476 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.426968397 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.879310612 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.140161315 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.452807313 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.436779083 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.139576859 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.45865341 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.517492053 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.44185683 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.889952514 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.437896649 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.480914752 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.429172161 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.436400385 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.454739246 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.51650455 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.440668833 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.430374121 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.108437679 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.63970155 seconds)
  done (took 188.75040356 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.422416753 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.423741787 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.442403972 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.425006017 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.422647597 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.431755021 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.424464443 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.424002028 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.428980611 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.425740912 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.423948417 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.425488175 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.42714359 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.448937251 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.436037092 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.431140328 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.036384596 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.424986605 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.424239695 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.424920893 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.23832526 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.432898707 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.425527247 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.425782542 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.427820867 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.428267959 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.455949448 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.428880954 seconds)
  done (took 154.778132025 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.433439244 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.070202091 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.440408286 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.578713499 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.460153586 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.430421913 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.577947344 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.504646296 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.440103575 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.429600318 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.431415715 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.776128556 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.439679599 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.020215258 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.650649488 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.587851261 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.024780519 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.457093091 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.432075295 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.431391179 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.5812344 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.449963443 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.780083324 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.086707261 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.442627773 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.077593412 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.434043326 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.434334049 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.433843552 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.078858473 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.438537975 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.782078383 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.52555424 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.503969452 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.084170539 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.02413676 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.043876835 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.607198916 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.439273481 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.432153178 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.431589763 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.425861394 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.081264265 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.443399889 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.434573882 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.07652296 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.46208298 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.435642908 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.442082978 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.43380027 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.501425493 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.507773795 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.787775452 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.092527264 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.525723282 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.450615842 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.582907842 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.846451175 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.443626902 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.022886752 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.43155082 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.085170616 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.462214822 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.42470909 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.435944236 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.440437119 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.602574219 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.590554478 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.031580375 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.459012366 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.024528362 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.629745428 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.44277444 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.435458395 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.437030326 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.087785427 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.033487884 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.627710378 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.595156813 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.655445511 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.434355848 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.437721671 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.428297182 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.524121139 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.442349657 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.088262281 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.049467221 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.461520518 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.438470638 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.437952024 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.438325635 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.631962977 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.093091079 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.528558214 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.028878804 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.810108438 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.794960108 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.446360965 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.502811876 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.459272036 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.789188117 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.446791679 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.501418785 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.912811245 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.794414025 seconds)
  done (took 172.92364483 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.703775611 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.757285885 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.533522505 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.601524523 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.082052968 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.037899859 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.779274077 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.58335955 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.553554931 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.716020092 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.71080403 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.528108059 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.667880621 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.518124941 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.215561918 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.511475095 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.535295166 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.588633834 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.583176316 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.51618945 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.150275757 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.754713198 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.641607877 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.461822139 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.542958091 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.269014723 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.047764841 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.022330434 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.642814044 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.869871978 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.001772306 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.609793924 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.492151512 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.197564676 seconds)
  done (took 69.775903593 seconds)
done (took 723.00567592 seconds)
SAVING RESULT...
DONE!
