cset: moving following pidspec: 8274
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.322777851 seconds)
loading group "string"... done (took 0.472593774 seconds)
loading group "linalg"... done (took 7.762315887 seconds)
loading group "parallel"... done (took 0.176082071 seconds)
loading group "find"... done (took 1.198016616 seconds)
loading group "tuple"... done (took 2.151330299 seconds)
loading group "dates"... done (took 1.352185353 seconds)
loading group "micro"... done (took 0.250782527 seconds)
loading group "io"... done (took 0.666235652 seconds)
loading group "scalar"... done (took 41.64435099 seconds)
loading group "sparse"... done (took 12.688982965 seconds)
loading group "broadcast"... done (took 1.03988835 seconds)
loading group "union"... done (took 14.375369316 seconds)
loading group "simd"... done (took 4.893124443 seconds)
loading group "random"... done (took 9.91105279 seconds)
loading group "problem"... done (took 1.990213254 seconds)
loading group "array"... done (took 22.52711243 seconds)
loading group "misc"... done (took 1.431903268 seconds)
loading group "sort"... done (took 3.631386747 seconds)
loading group "collection"... done (took 19.406619196 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.45348901 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.137706038 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.142527391 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.132388233 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.199045692 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.137686728 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.154301312 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.106523167 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.961573399 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.17555142 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.138786215 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.49084267 seconds)
done (took 4.969262869 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.214301292 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.080104047 seconds)
    (2/2) benchmarking "String"...
    done (took 0.092639408 seconds)
  done (took 0.85643396 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.087744558 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.140262238 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.089013018 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.073156295 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.072381489 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.08887132 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.072054721 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.088484893 seconds)
  done (took 1.309390816 seconds)
done (took 3.160447757 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.718258142 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.262348233 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.199761337 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.503570682 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.175187963 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.204311847 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.6582168 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.332375058 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.238838093 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099398404 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.128008544 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.394436263 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.112428665 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.682938905 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.084168728 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.12190199 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.168095463 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.439006382 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.08912545 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.089118698 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.11215531 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.150039903 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.111911782 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.082453093 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.176687207 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.078104074 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.183333676 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.103629147 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.075185266 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.279499071 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.196490488 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.685907508 seconds)
  done (took 10.658356341 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110989695 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133039954 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.074081472 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.152372682 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.131456504 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.078239958 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.095842488 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.074791562 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.117965635 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.17446365 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.111571933 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.136229354 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.088075392 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.07740498 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.113028451 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.225175674 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.115649839 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.114495995 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.078934655 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.083443419 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.131919507 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.107449833 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.086791829 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.102257638 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.161576558 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.199223405 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.104532879 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.119541713 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.077329691 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.1062628 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.138377959 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.153473671 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.072919734 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.074114455 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171118256 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.118824147 seconds)
  done (took 4.915013381 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.185223683 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.097427717 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.1658567 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.133800023 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.159196572 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.139481933 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.151529497 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107889415 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.254113441 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.181055757 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.160606275 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.137800674 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.110902195 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075504124 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.09597748 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.074852947 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.597657302 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.159912021 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.128082918 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.092443924 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.094406415 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.085145761 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.381134104 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097567801 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.072403296 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094906909 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.067479797 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.154375875 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077236168 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.175535283 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.096023035 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.094949736 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.110666825 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.201558298 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109782532 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.089450518 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075997825 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.131147553 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.070744336 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.173319295 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.098910303 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.073344436 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.119302674 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128215538 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.114304336 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.088832217 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074846592 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.220859794 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.072826592 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.087678619 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.983566803 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.175775635 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.088623211 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.072847497 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.328093263 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.110907406 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073904157 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.093764663 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.262429972 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.121002645 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.089602462 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.074380457 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074998324 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.09317117 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.393127566 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.076138216 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.6909029 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.077677416 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.084925413 seconds)
    (70/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.08921142 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074722452 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.090679755 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080472596 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098887487 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.092631642 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.091495114 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07638267 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.091140224 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.073816145 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.074966509 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.110759121 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.095479594 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.074514169 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.155189729 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.075158987 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.093071347 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.122252753 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.093364183 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.07378175 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.123418319 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077698535 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.074417028 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.129956521 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.074172641 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.089794877 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.109275952 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.075692588 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.137476427 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.091632865 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.158995525 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.0744725 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.121179937 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.079480782 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.122510684 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.103084447 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077359159 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097300835 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.072593692 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.089594505 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.142573289 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.076612129 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.091848602 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.075383656 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.103865709 seconds)
  done (took 21.865903475 seconds)
done (took 38.124223024 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.340688743 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.104333806 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.105629537 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104726157 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.104275318 seconds)
  done (took 1.51960353 seconds)
done (took 2.254922982 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.266397455 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.167917138 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071711525 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.161523701 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089612688 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.168709804 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.154900469 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.106302431 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.178770846 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.07111458 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.174864087 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072319819 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071773331 seconds)
  done (took 2.516242589 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090093226 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.110207434 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077781488 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.089306716 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088789813 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088903877 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.1045008 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.095375279 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.105672429 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080324517 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071027051 seconds)
  done (took 1.73654111 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089947634 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.091457936 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094022086 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087595517 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087710801 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088256986 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.105077038 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09493741 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104991963 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080957853 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07134905 seconds)
  done (took 1.7283121 seconds)
done (took 6.708719741 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.089062158 seconds)
  done (took 0.814854358 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.988127393 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.928840613 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.098763411 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.160048309 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.303360267 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.206720745 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.576022965 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.128142369 seconds)
  done (took 15.329408665 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.108310724 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.110968652 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.076877043 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.093869728 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.076781965 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.093102682 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.076267902 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.095053367 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.078433189 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.078760148 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.09464592 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.075225143 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.091407968 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.077173328 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.091994774 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.078049412 seconds)
  done (took 2.186700376 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.111960872 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.110657394 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.099583359 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.083986823 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.09769179 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.079249365 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.099917298 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.080682995 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.094773189 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.079036589 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.100714685 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.082612182 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.09915378 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.078094298 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.09796216 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.085199313 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.094197457 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.082370805 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.098447165 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.098672547 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.083627601 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096393532 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.08231185 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.100226351 seconds)
  done (took 3.055150754 seconds)
done (took 22.118998189 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.148130026 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080580958 seconds)
  done (took 0.964604126 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094997661 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.11301879 seconds)
  done (took 0.949742648 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.100451614 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.093288306 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.129676636 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.092759209 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.093343801 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.07698598 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.125038328 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.076979758 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.093006908 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.077560663 seconds)
  done (took 1.70106311 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.080260728 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.08049091 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101429732 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.11286736 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.086462964 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096005266 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.080982544 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.09726371 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.082589041 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.091927492 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.085215838 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.109564853 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.082727654 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.110735452 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.098416952 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.081992851 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.102686434 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.081155786 seconds)
  done (took 2.407189928 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.076337538 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.07857025 seconds)
  done (took 0.900200645 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.07908744 seconds)
    (2/7) benchmarking "second"...
    done (took 0.075005344 seconds)
    (3/7) benchmarking "month"...
    done (took 0.094423101 seconds)
    (4/7) benchmarking "year"...
    done (took 0.095166685 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.075433394 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.074353037 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.091725765 seconds)
  done (took 1.330958677 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.472924691 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.137973098 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.259159769 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.078685756 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.115933253 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.322480651 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.073887777 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.098369859 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.079704339 seconds)
  done (took 2.422157085 seconds)
done (took 11.416726129 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.086456088 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.095625273 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.123267713 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.459615954 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.111365893 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.073984998 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.152814722 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.25030286 seconds)
done (took 2.10287925 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.140907823 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.327155405 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.118402822 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.06980864 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.092281196 seconds)
  done (took 1.360473665 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.073607694 seconds)
    (2/2) benchmarking "read"...
    done (took 0.077509258 seconds)
  done (took 0.898964103 seconds)
done (took 3.155142727 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074492416 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.074330039 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.089094612 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.073773058 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.071865809 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.088404957 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.07440023 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.09091215 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.073982077 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.074216652 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090989847 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.123141084 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071928647 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072275029 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.092701474 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074078836 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.093624395 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.071770914 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072527372 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089952131 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.071730423 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091118112 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.071833823 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.071324806 seconds)
  done (took 2.725791667 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.10275432 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.093705707 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.080500106 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.097923034 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.07885375 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.097957499 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.080056247 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.092451123 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.079922227 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.093892347 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078137183 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.096175207 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.077131223 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.095498666 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076785888 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.095728663 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.079997012 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092357584 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076558354 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.096465452 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.080205306 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092262176 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.07786604 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098236852 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.078695962 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095587318 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.076943445 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.092667161 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080600923 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.096110693 seconds)
  done (took 3.384758194 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.079310438 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.071378892 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.090498377 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.078618121 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.089447372 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.077133091 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.071756472 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.090351908 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.073320163 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.089702081 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.073953176 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.071859075 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.088964934 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.074119371 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.090590943 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.076062011 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.102294586 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.072281425 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.072267384 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.090626518 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.075387706 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.089557443 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.074651854 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.071910724 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.089557888 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.072347683 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.089979643 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.071701896 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.073310105 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.089067544 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.074240774 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.093265383 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.071546745 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.078872179 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.092862648 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.072175821 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.093009068 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.180759003 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.072484682 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.088955632 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.071450115 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.088742319 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.071920035 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.078242467 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.092461794 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.073982625 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.090006459 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.073645056 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.072429149 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.091674839 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.071189634 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.089443508 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.074350894 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.090834463 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.076231041 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.071409164 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090806181 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.071276835 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.090596261 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.072004821 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.071547111 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.088932764 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.07437129 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.089773511 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.0879187 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07902451 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.089105211 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.073824654 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.09322356 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.073830608 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.07528906 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.103579375 seconds)
  done (took 6.698694863 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.077392375 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100547343 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.074553101 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.074553983 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088599261 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072240032 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.097362091 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072709997 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091648525 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.091679845 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09010578 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073997004 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074520067 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093376656 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073510883 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.091629248 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.082019183 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087636877 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.07260963 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.094821687 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072689046 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.09653191 seconds)
  done (took 2.604950828 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.20611511 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100055566 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.136230417 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089597116 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110175893 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08980608 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.096415546 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081651397 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097269726 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082274873 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099658722 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079444842 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108075354 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099468662 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082808325 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.101096443 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079286607 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101583527 seconds)
  done (took 2.60147224 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.088072844 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.093455982 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.097329669 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093263502 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.074917632 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.096301562 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081640486 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.1081229 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.077625744 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.09366471 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.086105595 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09560934 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.078145222 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093177055 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078162532 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.076037274 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.096582705 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07642714 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102677877 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098506727 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.082209916 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103223066 seconds)
  done (took 2.734325805 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091879064 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095234613 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.095654224 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097076129 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.074830594 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.094389101 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.081836745 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.092758051 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.083967958 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.077066177 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092857021 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.076665945 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.098813924 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.0747242 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.098888442 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076098593 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.094967805 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075293966 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09516054 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.074041735 seconds)
  done (took 2.5076768 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114515285 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107522394 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08982909 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118485384 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090548556 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108221059 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117711915 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.089848785 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107554393 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.102806371 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108141104 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090116011 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118091793 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114597475 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.089977271 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118824026 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101032509 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11689942 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10815047 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.090211106 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.120174378 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09029829 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.11747542 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09045337 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.107849592 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091709063 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107775968 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114296358 seconds)
  done (took 3.711316246 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076132852 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075056758 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.091232116 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.072495104 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.07307296 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.090343231 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.074080913 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.091081438 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074608353 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07249829 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.091544357 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.075497225 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.093142171 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.074780738 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07567835 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.092316854 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075370018 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.090477847 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074775347 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073145023 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.092056937 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074970033 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.09291275 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073286932 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073367122 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.093255472 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073112044 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090447042 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074764672 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072957769 seconds)
  done (took 3.186159306 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.083619513 seconds)
    (2/2) benchmarking "in"...
    done (took 0.098768944 seconds)
  done (took 0.954275207 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.073723018 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109792253 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.072701281 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.079233097 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.098747298 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.076268925 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.102561189 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08144028 seconds)
  done (took 1.464386655 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.093688706 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.111924844 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.080983174 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.10550342 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.093387937 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.109846337 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.135944429 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.099561062 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.082784095 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.092643467 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.092850417 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.093818922 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.080880506 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.075979853 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.099863974 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.082466243 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.094656724 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.087253787 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.101017765 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.079842203 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100329965 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.087189209 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097256619 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.084362058 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.077181388 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.104462791 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.085646877 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.106302484 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07919633 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.103288182 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.082134703 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.088436531 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.080731412 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.098986248 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.076709359 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.111665269 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.091373758 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.097083266 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.084707764 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.081809081 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102409037 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.074823729 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.09945932 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.081827033 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.103984722 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.081791122 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.100504627 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.075079292 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.091258555 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.078298707 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.074542074 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.093443375 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.070903843 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.101613229 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.080949317 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107074629 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.078687783 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.095646172 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.078638722 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.079225991 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.100314699 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.078671856 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096457577 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.07991172 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.101800976 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.08054852 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10163826 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.074709274 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.070373382 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.095323058 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.085051815 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.116641083 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.085323531 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.098755883 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.081862824 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.095205786 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.079545749 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099708799 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.083738385 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.103238422 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.080668836 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101275291 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.084538157 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093879393 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.078388917 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.083235174 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.095738599 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.079479719 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.091954731 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09192746 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.096718264 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.076843475 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.091606265 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.085411837 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.080315239 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.098192848 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.074317035 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.101887178 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.070149005 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.099475414 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.081687426 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094383523 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.085301482 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099670529 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.081553497 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.084018076 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.1051207 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.076680456 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.097591631 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.073232337 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099809481 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.078350292 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.101717472 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.070041783 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079090821 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.09623341 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.081333959 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.102017369 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.078445154 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.098980035 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.084253287 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.10203122 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.078749112 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.072457084 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.097157067 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.080973378 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10350118 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.084240978 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.096890726 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.074948694 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.093109333 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.080259858 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.09835823 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.080895097 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.081425951 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09766161 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.071245659 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.096235939 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.081487659 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.102472297 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.076372605 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.095032012 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.081992837 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.077388849 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.097806567 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.082115414 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.096833458 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.075741543 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.099105073 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.078136692 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.075683552 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104059868 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.079163995 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.097454218 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.080794024 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103244408 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.07928991 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.099883795 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.079210559 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.100706627 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.081926308 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.076094568 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.094745678 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.079485635 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.105185938 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.078705519 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.092960672 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.074470937 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.101325934 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.074966513 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.080762298 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.094085036 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.07967612 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.100334738 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.077538979 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.098650927 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.078271917 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.091842806 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106834794 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082626312 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.099885943 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.08649809 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.099485515 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.078767625 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.098816386 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.082330909 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.099662768 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.084608403 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.100146259 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.081582426 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.079099867 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.091310633 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.083190399 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.103062576 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.076528842 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.095603333 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.075456053 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.098958505 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.083318536 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.081990757 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.100159428 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079132437 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09535214 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08589075 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.097786929 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.080874269 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.093439839 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.08114049 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.086182174 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.100476714 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.082552258 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.10440448 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080333883 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.093737177 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086067789 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096516362 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.082698551 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.094135678 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.073941156 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.075295128 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.100898805 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.080175997 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.097865198 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.070726326 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102688932 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.084573086 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.077114567 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.094662071 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.081254877 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.103593837 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.078334008 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.098199307 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.0807462 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.100421049 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091073315 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.093863041 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.079728481 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.10488314 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.081315964 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.07146162 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.101518571 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.079006368 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.094731019 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.079559139 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.097457235 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.080017047 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083479936 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.100991296 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.0711905 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.098329526 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.079060664 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.094786067 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.075095264 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.083430358 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.099025587 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.079051054 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.104223044 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082833116 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.099814559 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.081247383 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.09889786 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.08207178 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.101081442 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.079770309 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.100932945 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.079183405 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.076190341 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.097510236 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.076010553 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.096741901 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.07851166 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100308849 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.077707869 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082663907 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.098632311 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.077243713 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.10087395 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.081957422 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096610215 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.077446433 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.094795014 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.080641815 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078535266 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.095115869 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.079762192 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.094186944 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.084637652 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.099489524 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085140982 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.077296995 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.092066054 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.08199542 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.098216737 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.083279544 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.100617952 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.082677457 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.097454122 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.081112019 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.081008516 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.104702645 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.075178856 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.104275931 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.083538255 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096571704 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.080659721 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.09532942 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.078662924 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.093733003 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.078953834 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.082608473 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.095824644 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.081076563 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.100825084 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.080118015 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.095985003 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.079110193 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.083186771 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.09596033 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.083641417 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.091053827 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.076047289 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.095699 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.081791666 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.103468872 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.082601049 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.079774683 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.098093374 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084340033 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.099141597 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.073666044 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.104258513 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083599822 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.101382839 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09402503 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.076756719 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.097642662 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087383078 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.089784323 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.07908594 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.096584265 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.074628179 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103529734 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.082062045 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.08573202 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.096354313 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.076858964 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.092968474 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.082467201 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.098134417 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.071590281 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.078165518 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.099045666 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.08068837 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098833173 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.082037203 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.098718898 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083177089 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103263488 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.080351003 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.07961673 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.100282504 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.074709729 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.095433382 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.077029153 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.080104923 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.100797947 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.07491135 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.093297965 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.081016765 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.097698532 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.078153549 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.081200028 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.097541871 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.084655902 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099268588 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.080680433 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105570732 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.07218498 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.099152009 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.081202619 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.100051471 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.076882236 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.081890099 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.099753604 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084553961 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.104475884 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.081281743 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097082431 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.081643637 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.097501174 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.081042152 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.082230095 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.10076726 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.077307092 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.101899716 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087259473 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.097372607 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.079857993 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.095640804 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.078434179 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.081956069 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.101845447 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.080951845 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103798255 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.080220018 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.097406936 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.084099183 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.100771884 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080960621 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083162837 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.097629639 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.084175194 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.09584701 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.086432483 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.096450892 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.083719969 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.09795431 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.075727533 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082118584 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.100143919 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081108265 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.101156911 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.082665135 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.095911371 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.076367474 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.078776067 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.098122696 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086334234 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.104036321 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.080826011 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.099539156 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.076396445 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.093828677 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.083017627 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.074779507 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.097974518 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.080774321 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10302511 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.080286627 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.096718167 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.08076507 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.103645906 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.083965946 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.101814201 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.075972838 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.082513828 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.101118552 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.080020965 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.0978421 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.078152529 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101451552 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.083545573 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.098528024 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.076566904 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.105021472 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.081936337 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083330059 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.097992908 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.078742768 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.09648984 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.077060754 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102027231 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.079525459 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.102659917 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.079783512 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081362385 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.106705022 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.076907129 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.096423505 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086240582 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101294062 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.084526621 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.095315627 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.078667844 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.083061306 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102458109 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.076351473 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.096237732 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.076115001 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.099518303 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.077052359 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.076448888 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.106231808 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.086309674 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.098844371 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.080674855 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098980537 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.076947172 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.095762695 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.077632259 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.083609939 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.099245661 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.087363309 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.096963117 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.077656331 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.095738174 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082512777 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.100699771 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.081683804 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.075719169 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.095450256 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.076952718 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.099568755 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.085941842 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100597088 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.082205946 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081984159 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.100787693 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.079229274 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107292704 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.075540026 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.101165964 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.088981919 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.102319146 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078985277 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.103659393 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087198725 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.10200788 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.076933954 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.08380455 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.100005032 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.078686835 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.102219349 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.084145759 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112188532 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081820026 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.096292386 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.080944455 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.100500457 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.077897396 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.085653011 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103399154 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.083926401 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.102926541 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.080831833 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104340149 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.081657012 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10314952 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.080862511 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.09929486 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.081666566 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.078129381 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.099207092 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.077015487 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.10310691 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.083845776 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081971945 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.104845368 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.077894525 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.107643507 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.087071042 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.102500633 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.075863124 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.096958904 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.078357794 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.077085844 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103013461 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.076718286 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.099966179 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.080905211 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.099945007 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.079651795 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.084000969 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.099960127 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.083752398 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.100892082 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.072750763 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.099114417 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.081281215 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.078858073 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.094347825 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.082603746 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.102891922 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.084822021 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106407379 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.078847717 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.101758626 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.080776079 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.078884488 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.096521031 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.084754222 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101020458 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.082065942 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.096445359 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082959951 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.083934048 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10149512 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084715869 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104527059 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.081036302 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.10667412 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086302436 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.095026854 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.076108249 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.10390262 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.080364017 seconds)
  done (took 53.870575195 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12404552 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103133994 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073597712 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093448348 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11880906 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078668039 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073373724 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097592474 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.079078973 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106888166 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.07444611 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09303052 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.094106458 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.11998769 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117224651 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107670891 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074666179 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.097872237 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074365952 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078540562 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113292577 seconds)
  done (took 2.815257643 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.101311794 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.112090881 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089899027 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.115670784 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104906227 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091689272 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109579966 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111204596 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.0957477 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105166248 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.114170508 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091928888 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.105953227 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.085520816 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10600576 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107977596 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.095748908 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103969607 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.092687932 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.110058158 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107932758 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.090043358 seconds)
  done (took 3.07035012 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.086901347 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.081387602 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.102399768 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.073888848 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.101190206 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.0737039 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.106145056 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.077140758 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.08697054 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.096555461 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.077538602 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.095996134 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.082714266 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.07340276 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.097031662 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.076139598 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.149531234 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.106993744 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082771018 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.10351514 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.076113722 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.080458598 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.096382184 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.077836015 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.096547543 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.091354727 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103180882 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.083227853 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.082497823 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.097009173 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.082893304 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.095804502 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.080192111 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.098481113 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.077696601 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.077788886 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.102337283 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.082703366 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.095598176 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.08012477 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.07897508 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.096863477 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084015974 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.099390767 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.080071791 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.095705413 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.080247267 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.082029257 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.092996864 seconds)
  done (took 5.204472936 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.111382131 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.150102219 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.101252151 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.140656441 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.09524394 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.111750974 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.081753689 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.120364345 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.09732871 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.081295224 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.11878089 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.115858539 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.082429773 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.107425111 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.086406331 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102338287 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.08485369 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.097587991 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.087148611 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.09786407 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.087491481 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.105851089 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.116187478 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.094496193 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106404959 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.081487589 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.098555311 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.086842613 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.112823268 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.107189661 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.087564085 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108906489 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.116338528 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.081230558 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.097853831 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.085238501 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.119106749 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.083097244 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.104831375 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.077261305 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.105286264 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.087556679 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.105610263 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.118482817 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083204901 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.104756853 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.082786708 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.075874284 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.113710667 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.104191243 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.092696887 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.115184201 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.105688094 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.083327115 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108140184 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.096376785 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.102633317 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.08133738 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.106166655 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.094036742 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.096459976 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.08656829 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.114651293 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104489707 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.092408648 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.115118763 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.104081315 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.086423546 seconds)
  done (took 7.758456658 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110508586 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.107475986 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097643545 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118929527 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10744118 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.087978719 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106964004 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.087188514 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.107548111 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.093671378 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.106140091 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.154678802 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085010803 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112383586 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.087554353 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107578001 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.087020805 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107221139 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.086794341 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107200385 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.087427732 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.11788676 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.10697887 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.097085871 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.119130454 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.104254338 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087850395 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.107325594 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098154553 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.107051339 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.118829476 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.087327667 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.107193863 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.098133964 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.120336763 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.107432496 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082085099 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107943252 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.088140954 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.106910817 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.085054785 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.117711008 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087523509 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104940167 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107703024 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.088510903 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.118353778 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.120609268 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.092831996 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113717095 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.087704744 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117398588 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106497185 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.087680474 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.118007894 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.126628874 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098495813 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118508353 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.087318491 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.11993699 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.117956838 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.125513188 seconds)
  done (took 7.308498384 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110054914 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.112762182 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.120981729 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.074832498 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.076362047 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109092016 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076582898 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.097670503 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.112263784 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.09361693 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115528927 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086401047 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111047376 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115270883 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.087329121 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111561892 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106951174 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087827628 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112981901 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087241216 seconds)
  done (took 2.840377634 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.088524898 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.11949271 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.080201497 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106786939 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.082807812 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.106847744 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.082696896 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102924496 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080853495 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102724371 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092206834 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.111284342 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080470827 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106815586 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.092112334 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107076103 seconds)
  done (took 2.382274 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.101094363 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120099635 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.103903481 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.106251704 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.077577022 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.103918187 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.082474473 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.095570024 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.076246298 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.115714994 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.086157489 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.106120076 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.083107909 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.098184262 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.080689365 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.084977318 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.096047119 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083376068 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102999986 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.103671069 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106410475 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.084272169 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.104387671 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.081776686 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102807983 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.085409243 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.10768398 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.077535036 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.098293408 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.083385452 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.102852962 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.088143698 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.096374427 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084487106 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.098448746 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.077492689 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102827538 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.083281964 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.106269913 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.08230581 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.07809314 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.102287909 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.082617414 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.101875466 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.076045484 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.103372694 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.075564406 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.10562413 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.081945253 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.102412968 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.082347658 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.087270966 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107679428 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.111516355 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.090776449 seconds)
  done (took 5.991874819 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094491095 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10386625 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.075264494 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.077359897 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103182163 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.081897687 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104064827 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.082269262 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102106457 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.078008569 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101777624 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.085093219 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081244346 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104496343 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082049945 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104332883 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.075275071 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.102589146 seconds)
  done (took 2.482977218 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085872267 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080079208 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.108320575 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079936464 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.100681638 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.08293449 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096325189 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.078593252 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078128536 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.10116158 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080436782 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.102592068 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078725792 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.102532948 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.080861664 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100679282 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.082416829 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078460131 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100688135 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075929782 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102740827 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078687466 seconds)
  done (took 2.801948195 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.116684817 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.120320242 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.087930111 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.205779484 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.119896288 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.10524831 seconds)
  done (took 1.604059903 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104345758 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136932524 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080455496 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103725113 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092120043 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105554286 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08525224 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105394553 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096714387 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117795039 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105445239 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096723073 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116915544 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115085243 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091946834 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112357339 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08450811 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106095768 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079958686 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124994492 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104320669 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096118219 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10587242 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104836249 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084783895 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115941045 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096352996 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118909095 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104760242 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096038901 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111839015 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084662966 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117985967 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117765062 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082811662 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117239275 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084955072 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124820562 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112945871 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11588291 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082963009 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112093958 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097024009 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111772199 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116394812 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085139894 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111744107 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085133751 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104909093 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131179763 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092390834 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116008024 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112188851 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096023693 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116979559 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131696686 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118646375 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09554796 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113067201 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119365396 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095788185 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113103118 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115757067 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097938062 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112324161 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116774556 seconds)
  done (took 7.814359121 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119554552 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102357796 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085342273 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118881259 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116471161 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085010773 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105722416 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085310506 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106582868 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082133415 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.149954311 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105360525 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09520521 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117810869 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105125535 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085305932 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105296695 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095067395 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10222919 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131635784 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084699496 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116498985 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117020358 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095305778 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118331769 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112141798 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085391187 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10649804 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085180451 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105544459 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112171689 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084892013 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116325376 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082287347 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116195416 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084835564 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106047945 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112194256 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085638818 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112828178 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095958674 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127077374 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105599513 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085028537 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118719641 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104803769 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086111899 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101892216 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085313326 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102553497 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098632804 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11947765 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118762928 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095922988 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105844613 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105821797 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086341116 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105975265 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086018804 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112395681 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095595654 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106401281 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133718686 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084672839 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106137462 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117476167 seconds)
  done (took 7.684994315 seconds)
done (took 146.955848751 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.096589699 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.134201394 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.094588275 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.162994055 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.081039445 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.113723225 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.135277217 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.095456169 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.101367736 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.080788733 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.100942601 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.083561459 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.145091494 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.102816483 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.08110436 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.103610992 seconds)
  done (took 2.56320572 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.174433475 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.286747125 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.09855691 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.100467663 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.085490888 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.08028707 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.101410722 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.088732281 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.102891618 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.080683758 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100960015 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.082237153 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.080068811 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.10226454 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.082377352 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.101609032 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.080589882 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.080219004 seconds)
  done (took 2.766329066 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.109056678 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.139156156 seconds)
  done (took 1.107794132 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.115795357 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.172222781 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.267393508 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.149501338 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.130375044 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094845749 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.150060369 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.121438341 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.199544283 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.123589394 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.103193129 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.108226579 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.112653412 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.111330866 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.088356367 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.109048492 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.135051429 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.088224135 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.109612819 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.088676813 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.1339347 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.080728321 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.110876858 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.088184205 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.18253539 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.123250414 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.079999292 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.10100238 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.088333904 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.109644394 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.087350918 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.114025501 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.12130489 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.143215716 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.094009521 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.145561359 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.109358975 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.08641825 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.109627456 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.087205626 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.111855438 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.090649269 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.116464439 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.087738687 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.101150903 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.088521593 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.102872374 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.079974471 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.087801368 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.109922755 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.108779788 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.087977036 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.144768238 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.109362136 seconds)
  done (took 7.057296075 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.798560682 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.150570799 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086355205 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.868326007 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.134333101 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120342836 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.768106812 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.132997311 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.22635752 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.781142749 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125160559 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.117933034 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.19994101 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.221745801 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.91343693 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.301016029 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.896454622 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.095138098 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.137799258 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.144217619 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.0900139 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132640967 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.124946044 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.421001551 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.086663953 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.106586084 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.090652875 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.116237595 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.151916094 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.085345257 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.108988485 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.169617749 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.234357359 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.196721079 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.08691445 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.083150887 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107995868 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.158647463 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260373863 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.18726481 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.169881471 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.081210964 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.106545092 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.092983181 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.125443137 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.102314351 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.155131042 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.164046763 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.161774262 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.085711188 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.116406985 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.113434234 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.094451136 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.153595847 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.105003227 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.284554744 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.303115004 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.105765101 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092702268 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.121144913 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.23173371 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.106192795 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.191642501 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.133079941 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.205379905 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.08418469 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.783269309 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.156848698 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.088048655 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.112910286 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.089646392 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.110557323 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.091900944 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158807607 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.382131096 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.117793938 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.086993315 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.1055786 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.198123939 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084169985 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.1066754 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.155066429 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.084671385 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.11312224 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.117721406 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095722478 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.159939263 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.216638325 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.117233004 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.112897043 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.088849673 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116651792 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.086037675 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.203265473 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.210804144 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.150765511 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.201983324 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.115671558 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.155875152 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.155469097 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.113571271 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.160013584 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.090888516 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120384189 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093418688 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.208815658 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.13421473 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083437654 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11111453 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.089128094 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.137295538 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.108154139 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.090953582 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.157688148 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.469516283 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.157737481 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.081032842 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.108789965 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093054058 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.152722416 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111508995 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.229391901 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114209481 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.156946698 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.089393562 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.103707261 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.089709813 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.176607262 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.095642081 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.113655081 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.093563587 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.113411461 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.220552374 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.208683095 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096095875 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.235401797 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.152039761 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.113438685 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.162465592 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.113167219 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.160562354 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.091578133 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.115844837 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.085647886 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.756102914 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117491022 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.091408406 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.10921311 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.155645544 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.106789775 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084950416 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.106713963 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.0820984 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.765412362 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.087910817 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.081954636 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.107680519 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090787183 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.11397256 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.088902046 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.111668236 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.153915639 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.222175205 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09249956 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.114232567 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.084890988 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.151391534 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.108429607 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.084777584 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.107406729 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.085843623 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.114349466 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.087486762 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107973046 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.163504574 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.151868072 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.210990623 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.566044184 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.083979893 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.108163095 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.218292033 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08584033 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.276540289 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.091175881 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.217969554 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.157352514 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081420574 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.302002169 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.157428866 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.179405594 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.109893452 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.161499289 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.082692021 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.111358498 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.153490403 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.084053545 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.113068037 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.151948494 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.096780218 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.118076009 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.916679594 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.085948386 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.217936746 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.103482051 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.159314582 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.086174013 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116256066 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.260413008 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.107875714 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.122371286 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.154545498 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.088635551 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.107215783 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.695415256 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.084788574 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117569019 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089708936 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.214734104 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.156269076 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.114013302 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.090620689 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116380694 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.153789026 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.201165035 seconds)
  done (took 41.487510692 seconds)
done (took 55.837327755 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.257814827 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.208828087 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.264501819 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.1653848 seconds)
  done (took 1.877137173 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.172679025 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.121652666 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.140780892 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.078429129 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.147654968 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.101894219 seconds)
  done (took 1.645214102 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.341692217 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.291884095 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.214045796 seconds)
  done (took 1.731373659 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.242882226 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.238178907 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.344378542 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.388035176 seconds)
  done (took 2.199136423 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.19990552 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.096284606 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.119120088 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.110844427 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.163793108 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.200460618 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.135874328 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.145047405 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.104192213 seconds)
  done (took 2.210782697 seconds)
done (took 10.552340097 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.26376075 seconds)
    (2/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.154204251 seconds)
    (3/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.207190345 seconds)
    (4/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.277112196 seconds)
    (5/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.123199905 seconds)
    (6/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.151807585 seconds)
    (7/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.216026769 seconds)
    (8/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.095799361 seconds)
    (9/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.119593135 seconds)
    (10/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.235693586 seconds)
    (11/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.212833565 seconds)
    (12/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.09934611 seconds)
    (13/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.190029391 seconds)
    (14/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.149751282 seconds)
    (15/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.094522329 seconds)
    (16/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.25178578 seconds)
    (17/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.111117355 seconds)
    (18/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.08896288 seconds)
    (19/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.089998066 seconds)
    (20/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.090688123 seconds)
    (21/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.134164326 seconds)
    (22/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.100414547 seconds)
    (23/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.189407986 seconds)
    (24/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.196865397 seconds)
    (25/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.093291389 seconds)
    (26/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.133081055 seconds)
    (27/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.11050428 seconds)
    (28/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.11290386 seconds)
    (29/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.161753674 seconds)
    (30/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.114191275 seconds)
    (31/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.210904399 seconds)
    (32/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.186084303 seconds)
    (33/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.088469714 seconds)
    (34/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.211788372 seconds)
    (35/286) benchmarking ("sort", Int64, true)...
    done (took 0.227040049 seconds)
    (36/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.202181276 seconds)
    (37/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.240971179 seconds)
    (38/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.090708534 seconds)
    (39/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.115110336 seconds)
    (40/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.18679863 seconds)
    (41/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.172015969 seconds)
    (42/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.225639621 seconds)
    (43/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.230749104 seconds)
    (44/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.135355739 seconds)
    (45/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.080391747 seconds)
    (46/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.174911042 seconds)
    (47/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.103741096 seconds)
    (48/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.175021809 seconds)
    (49/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.18016067 seconds)
    (50/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.177410186 seconds)
    (51/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.106039535 seconds)
    (52/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.112011683 seconds)
    (53/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.10553675 seconds)
    (54/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.091732922 seconds)
    (55/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.153184542 seconds)
    (56/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.116828813 seconds)
    (57/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.192027407 seconds)
    (58/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.197765371 seconds)
    (59/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.08250821 seconds)
    (60/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.18388736 seconds)
    (61/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.089893401 seconds)
    (62/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.172036554 seconds)
    (63/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.07227133 seconds)
    (64/286) benchmarking ("sort", Float32, false)...
    done (took 0.175031523 seconds)
    (65/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.078724883 seconds)
    (66/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.090982355 seconds)
    (67/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.081291059 seconds)
    (68/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.118977576 seconds)
    (69/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.107705286 seconds)
    (70/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.091031588 seconds)
    (71/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.091522971 seconds)
    (72/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.068201784 seconds)
    (73/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.091109167 seconds)
    (74/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.068041285 seconds)
    (75/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.14835343 seconds)
    (76/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.231459821 seconds)
    (77/286) benchmarking ("sort", Int64, false)...
    done (took 0.081338646 seconds)
    (78/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.095907641 seconds)
    (79/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.10027444 seconds)
    (80/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.148515093 seconds)
    (81/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.102005269 seconds)
    (82/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.108863361 seconds)
    (83/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.115690676 seconds)
    (84/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.092225135 seconds)
    (85/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.091382239 seconds)
    (86/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.088048294 seconds)
    (87/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.109116406 seconds)
    (88/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.069541395 seconds)
    (89/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.110580195 seconds)
    (90/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.174001091 seconds)
    (91/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.105016136 seconds)
    (92/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.141749231 seconds)
    (93/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.10769523 seconds)
    (94/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.081304556 seconds)
    (95/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.091338142 seconds)
    (96/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.110870082 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.106964998 seconds)
    (98/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.159838953 seconds)
    (99/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.113442365 seconds)
    (100/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.165072803 seconds)
    (101/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.096472263 seconds)
    (102/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.085312814 seconds)
    (103/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.068484549 seconds)
    (104/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.187035201 seconds)
    (105/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.106391319 seconds)
    (106/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.069503472 seconds)
    (107/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.095667956 seconds)
    (108/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.161272954 seconds)
    (109/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.089732418 seconds)
    (110/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.093084697 seconds)
    (111/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.17410518 seconds)
    (112/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.090063423 seconds)
    (113/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.132692614 seconds)
    (114/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.152462472 seconds)
    (115/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.093157392 seconds)
    (116/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.110475875 seconds)
    (117/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.104181265 seconds)
    (118/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.081400638 seconds)
    (119/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.133301863 seconds)
    (120/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.092367194 seconds)
    (121/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.131984533 seconds)
    (122/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.0694999 seconds)
    (123/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.15949213 seconds)
    (124/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.069549361 seconds)
    (125/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.087099022 seconds)
    (126/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.171576763 seconds)
    (127/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.129707794 seconds)
    (128/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.091999881 seconds)
    (129/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.110161052 seconds)
    (130/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.152139992 seconds)
    (131/286) benchmarking ("sort", Bool, false)...
    done (took 0.183998692 seconds)
    (132/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.115225174 seconds)
    (133/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.083270729 seconds)
    (134/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.106697361 seconds)
    (135/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.089069257 seconds)
    (136/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.132265805 seconds)
    (137/286) benchmarking ("sort", Int8, true)...
    done (took 0.200199723 seconds)
    (138/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.183087594 seconds)
    (139/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.130026074 seconds)
    (140/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.08755437 seconds)
    (141/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.092001325 seconds)
    (142/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.089399308 seconds)
    (143/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.164355037 seconds)
    (144/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.191706097 seconds)
    (145/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.069563272 seconds)
    (146/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.083453246 seconds)
    (147/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.149882467 seconds)
    (148/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.089758969 seconds)
    (149/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.104898241 seconds)
    (150/286) benchmarking ("sort", Float64, false)...
    done (took 0.173214726 seconds)
    (151/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.08083629 seconds)
    (152/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.06929929 seconds)
    (153/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.104220754 seconds)
    (154/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.088123103 seconds)
    (155/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.088547499 seconds)
    (156/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.105254604 seconds)
    (157/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.08028883 seconds)
    (158/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.165981962 seconds)
    (159/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.093452842 seconds)
    (160/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.093205236 seconds)
    (161/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.069256941 seconds)
    (162/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.090979427 seconds)
    (163/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.104409707 seconds)
    (164/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.125880751 seconds)
    (165/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.132412207 seconds)
    (166/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.104561018 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.082249267 seconds)
    (168/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.069309254 seconds)
    (169/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.117331914 seconds)
    (170/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.088937662 seconds)
    (171/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.078357833 seconds)
    (172/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.09528813 seconds)
    (173/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.068727701 seconds)
    (174/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.111064816 seconds)
    (175/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.095002151 seconds)
    (176/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.185690973 seconds)
    (177/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.083125116 seconds)
    (178/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.18453608 seconds)
    (179/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.188144608 seconds)
    (180/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.086793207 seconds)
    (181/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.082096167 seconds)
    (182/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.109151476 seconds)
    (183/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.080574018 seconds)
    (184/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.107050616 seconds)
    (185/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.159436746 seconds)
    (186/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.238614428 seconds)
    (187/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.093426326 seconds)
    (188/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.095648504 seconds)
    (189/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.06806394 seconds)
    (190/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.112034012 seconds)
    (191/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.069033042 seconds)
    (192/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.107242908 seconds)
    (193/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.154128655 seconds)
    (194/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.091823713 seconds)
    (195/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.092169813 seconds)
    (196/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.115417935 seconds)
    (197/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.069644421 seconds)
    (198/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.080916847 seconds)
    (199/286) benchmarking ("sort", Float32, true)...
    done (took 0.233816004 seconds)
    (200/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.14995751 seconds)
    (201/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.089791972 seconds)
    (202/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.092315199 seconds)
    (203/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.128384851 seconds)
    (204/286) benchmarking ("sort", Bool, true)...
    done (took 0.224591862 seconds)
    (205/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.079086519 seconds)
    (206/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.108355695 seconds)
    (207/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.124175337 seconds)
    (208/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.102927521 seconds)
    (209/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.070099991 seconds)
    (210/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.115142068 seconds)
    (211/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.097990384 seconds)
    (212/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.079149704 seconds)
    (213/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.113504565 seconds)
    (214/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.070085138 seconds)
    (215/286) benchmarking ("sort", Int8, false)...
    done (took 0.191001588 seconds)
    (216/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.115395457 seconds)
    (217/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.090564562 seconds)
    (218/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.118269735 seconds)
    (219/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.082104218 seconds)
    (220/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.068630794 seconds)
    (221/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.112245614 seconds)
    (222/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.079503037 seconds)
    (223/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.128228372 seconds)
    (224/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.083907683 seconds)
    (225/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.095131804 seconds)
    (226/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.142430869 seconds)
    (227/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.103814257 seconds)
    (228/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.100581977 seconds)
    (229/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.104881625 seconds)
    (230/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.08293381 seconds)
    (231/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.080372321 seconds)
    (232/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.093225386 seconds)
    (233/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.081859095 seconds)
    (234/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.082917277 seconds)
    (235/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.104837956 seconds)
    (236/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.078589912 seconds)
    (237/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.092006021 seconds)
    (238/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.071113302 seconds)
    (239/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.07026134 seconds)
    (240/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.102495777 seconds)
    (241/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.079253304 seconds)
    (242/286) benchmarking ("sort", Float64, true)...
    done (took 0.233603432 seconds)
    (243/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.081277937 seconds)
    (244/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.10705414 seconds)
    (245/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.082195431 seconds)
    (246/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.092858179 seconds)
    (247/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.084033364 seconds)
    (248/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.082200854 seconds)
    (249/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.10778845 seconds)
    (250/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.08808311 seconds)
    (251/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.069719348 seconds)
    (252/286) benchmarking ("sort", BigInt, false)...
    done (took 0.245331602 seconds)
    (253/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.069925373 seconds)
    (254/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.090288925 seconds)
    (255/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.095536664 seconds)
    (256/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.080848648 seconds)
    (257/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.087393268 seconds)
    (258/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.135434097 seconds)
    (259/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.069051364 seconds)
    (260/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.124303834 seconds)
    (261/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.083048847 seconds)
    (262/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.105423616 seconds)
    (263/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.085894408 seconds)
    (264/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.096125143 seconds)
    (265/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.069111112 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.089829478 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.104094682 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.080543382 seconds)
    (269/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.082240337 seconds)
    (270/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.105183904 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.089977211 seconds)
    (272/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.105404754 seconds)
    (273/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.070141742 seconds)
    (274/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.068892884 seconds)
    (275/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.091848326 seconds)
    (276/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.083104676 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.103386706 seconds)
    (278/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.069745101 seconds)
    (279/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.087526157 seconds)
    (280/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.104620857 seconds)
    (281/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.082174032 seconds)
    (282/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.103995951 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.081199521 seconds)
    (284/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.105631598 seconds)
    (285/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.093286348 seconds)
    (286/286) benchmarking ("sort", BigInt, true)...
    done (took 0.239523945 seconds)
  done (took 35.053689577 seconds)
done (took 35.954414067 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.094781683 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.146541679 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.092380819 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.133308877 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.095558525 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.118976724 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.090359376 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.09362961 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.118746742 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.096214152 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.117069627 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.072407157 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.116331308 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.093126185 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.11521874 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113719519 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.117887073 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.090033206 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.107903323 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.081106462 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.084734109 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.105172118 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.083582885 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.094567065 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.093567726 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.089519934 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.111482871 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.093695595 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.105806059 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.082251471 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.079449283 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.11314475 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.081804035 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.118623853 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.088536528 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.108583693 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.094103574 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.090502341 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.107283727 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.082074956 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.116245433 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.082305494 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.111686139 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.089929351 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.083600099 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.103949822 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.086543602 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.119083666 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113860486 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.110317121 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.090985844 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.090729827 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.115457526 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.08826743 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.104549581 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.08593609 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.104834351 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.113893202 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.108171763 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087430727 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.089349211 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.113324769 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.081102149 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.108818207 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.08610906 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.11471762 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.093691816 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.080655864 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.115303909 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.087486154 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.105047843 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.086087777 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.080374095 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.105692352 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.092192008 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.11615839 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.081570136 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.082821958 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.113321249 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.087188699 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.104795991 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.084860785 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.106955174 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.083262836 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.084253889 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.095658608 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.081199725 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.087170121 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.104624744 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.085493359 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.111800046 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.089146515 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.106783637 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.093751929 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.081467038 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.105449192 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.082739952 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.104963592 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.084071936 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.080906937 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.105615701 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085517946 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.114046654 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.084222883 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.083249079 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.117649304 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.083200548 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.111253055 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.08186997 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.080878705 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.121147812 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.091911282 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.105878803 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088268438 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.080217159 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.108040809 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.082029229 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.105012463 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.082321016 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.081334036 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.108640357 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.082311408 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.108753342 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.084418175 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.094636977 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.105626207 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.081787331 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.107943005 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.081953297 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.087183337 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.106605126 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.08232793 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.107462137 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.080217018 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.084964833 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.106220891 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.08428186 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.108192186 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.085931216 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.082424179 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.109681766 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.086557972 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.107423727 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.081932255 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.080162259 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.100330337 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087525397 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.108306874 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.08411562 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.081171751 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.106804042 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.082191143 seconds)
done (took 15.628512631 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.082468349 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.180275265 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.141140043 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.115675416 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.126722267 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.08253688 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.117102543 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.114084193 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.108209202 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.137322647 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.105895632 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.126364546 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.122008798 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.105007658 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.083849406 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.086041824 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.108581043 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.098531802 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145651696 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.102522579 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.140641542 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.105379179 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.112225097 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.130381029 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.091735493 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.133847114 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.083337557 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.110160511 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.086711588 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.122564587 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.103858098 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.109453708 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.083398088 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.104246776 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.123752406 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.089527576 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.106741667 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.090023357 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.105684201 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.082739978 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.128485189 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.10469878 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.111728178 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.088656747 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.109894553 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.08614059 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.083508897 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.115492185 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.093282095 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.110588024 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.097290098 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.137086425 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.108763879 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.09386438 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.08088426 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.118919053 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.092697973 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.108902961 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.083021853 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.10867871 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.082726038 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.08579467 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.121945156 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.131046131 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.104162869 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.115328523 seconds)
  done (took 8.049451654 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.100149427 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.135228855 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.100871976 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.123972486 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.082841061 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.08185731 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.107251217 seconds)
  done (took 1.686073014 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.083326535 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.108155894 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.132653212 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.10870656 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.130223991 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.133053241 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093370634 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.083198795 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.127865194 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.084831866 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132936685 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.124028548 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.10876173 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.091725624 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.135152461 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.08375741 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.134422056 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.083645957 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.110274317 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.11039481 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.110295912 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.10505978 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.110220759 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.083990496 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.101343531 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.108658102 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.160329233 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089085785 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.084201751 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.111928589 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.082024074 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.146804926 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.101339694 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.120726063 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.083353824 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126715849 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.102038986 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.105727905 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.100145619 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.11364282 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.101802383 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.083968461 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.109460712 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.082452446 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.112431294 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.097915469 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.111641559 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.08508568 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.086387588 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.131962969 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.084777369 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.126074732 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.084798875 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.111204659 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.086048006 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.090145985 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.117824565 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.084716367 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131892504 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.085807297 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.128329788 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.103491088 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.124788949 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.103592593 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.110492663 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.101644169 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.10085008 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.112080369 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.086298451 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.111486116 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.103769692 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.106441763 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.08551405 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.096528079 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.10998773 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.111071621 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.13523115 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.085557313 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.120267804 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.085042063 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.108665043 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.085424 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.135341223 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.087793394 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.083734143 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114639952 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.087201766 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.108737675 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.08411485 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.087424354 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.109066993 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.08574824 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.111028138 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.084984311 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08653615 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.12892931 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.085242477 seconds)
  done (took 11.112363029 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.08493295 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.087307538 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.112549861 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.085840376 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.108861162 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.085786137 seconds)
  done (took 1.53479686 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.113480019 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.109138346 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.098963978 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.112810027 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.12510485 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.132373792 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.108980129 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.117715716 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.102715421 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.120738353 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.111000757 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.135521336 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.113862689 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.114436579 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.108431009 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.113156091 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.10856831 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.115062113 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.095157307 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114975798 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.100691398 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.114543775 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.089926939 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.128747205 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.094255972 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.114440946 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.091639141 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.121162 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.09591451 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.118578612 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.089688548 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.117477343 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.090747278 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.117048122 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.109914366 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.11445693 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.089319733 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119767856 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.091319023 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.093014091 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.135300678 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.089536312 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.120566892 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095458025 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.119299118 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.089140892 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121802466 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.089385572 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.133912058 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.095455531 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120590171 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.088658105 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118130409 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.096293803 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.114981918 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.093216165 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.121104988 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.109694856 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.114553078 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.090194466 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.111179586 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094825617 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.118255866 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.094229836 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.119335343 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.096465423 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.114718756 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.090676467 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114054831 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.089160321 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119687193 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.086833028 seconds)
  done (took 8.753081597 seconds)
done (took 32.085223826 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.677750972 seconds)
  done (took 1.641823772 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.807395412 seconds)
  done (took 1.772739748 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.227939778 seconds)
  done (took 18.223512064 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.459190746 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.55217904 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.948512081 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.159769217 seconds)
  done (took 3.08515743 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.00918768 seconds)
  done (took 1.993773621 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.278819804 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.230998717 seconds)
  done (took 1.48231486 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.792098077 seconds)
  done (took 1.773343539 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.430494876 seconds)
  done (took 2.406902083 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.323622513 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.15358483 seconds)
  done (took 1.466090164 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.560954751 seconds)
  done (took 1.547824463 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.210126921 seconds)
  done (took 11.198134855 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.2377153 seconds)
  done (took 1.232386534 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.283388095 seconds)
  done (took 1.266647841 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.551717026 seconds)
  done (took 4.535413274 seconds)
done (took 54.602660287 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.093839275 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.097187091 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.122989462 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.094529452 seconds)
  done (took 1.387586516 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.099189419 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.09076041 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.124422118 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.089551133 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.124886769 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.090193835 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.118731959 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.10039591 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.11551316 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.091782088 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.116113638 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.089981338 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.11882531 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.093432199 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.112760372 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.094201022 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.123235163 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.091007482 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.094424111 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.117010857 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.088482823 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.118318634 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.094136181 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.114898901 seconds)
  done (took 3.504889217 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.095332149 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.089838674 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.116616202 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.089461634 seconds)
  done (took 1.38139624 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.094610062 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.101162497 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.12605422 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.094114415 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.126422569 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.099263474 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.112592038 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.086686996 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.11371999 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.094747724 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.085118883 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.133267876 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.126133059 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.094131293 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.120607798 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.083642177 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.085587951 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.125719762 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.094387858 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.120847531 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.088644912 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.120108395 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.086041407 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.126793842 seconds)
  done (took 3.534884819 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.165929768 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.121978192 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.107797045 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.115794728 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.128765983 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.136388358 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.082533089 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.135162946 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.082198567 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.1245526 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.087173499 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.155094026 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.096745229 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.108601142 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.083139596 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.08244655 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.12080487 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.096024036 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.112352743 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096886811 seconds)
  done (took 3.233548956 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.09299995 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.087182055 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.109124861 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.086492237 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.11904585 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.090658844 seconds)
  done (took 1.589903818 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.092028335 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.084824387 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.114250855 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.086751506 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.114626353 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.083882649 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.083743401 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.110305467 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.085302829 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.108784501 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.086413282 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.083808833 seconds)
  done (took 2.138871712 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.503867288 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.086471302 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.111737357 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.10870313 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.094632851 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.082800994 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.12614192 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.085597073 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.137921033 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.082945452 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.11126895 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.087500654 seconds)
  done (took 2.623916906 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202923855 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094393472 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255728878 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.34029328 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15390138 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160572608 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.270196418 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16035539 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.178929016 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109743281 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214074086 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126478008 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150264286 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173808034 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109022929 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.152871107 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170580335 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194607876 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143967947 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199102863 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157885232 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163335199 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175810307 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148627073 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107668923 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153103703 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.115917253 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098821943 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167716034 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165353195 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168407319 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145772721 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13474875 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193947991 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202504967 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173055284 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273057116 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129324629 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.150145796 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.161102967 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246491899 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110496739 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216360475 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123732069 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127691946 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177559168 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153112905 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.174308016 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.101787323 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137841237 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178144207 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171680783 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.175272664 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133600543 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.295153383 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143442248 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115592532 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177085639 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180298038 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183923111 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163653771 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.115502897 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180077039 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176163006 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17380873 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.114553087 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.161472284 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121963149 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169447137 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190879086 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173225959 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159807251 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.179007382 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131565935 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158760487 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165032537 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122510115 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173203751 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156824462 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.089760443 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146855158 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133685375 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097173996 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.190831963 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.092687392 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224913259 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10472076 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.168668556 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196338287 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154224654 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157950269 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160419937 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160887009 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116827781 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.113786986 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114359984 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.148777689 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152331529 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10159074 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152523164 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138593319 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.095888408 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147381487 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.119054103 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127650574 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.124730624 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159547931 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159284335 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.094547089 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16180171 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146418006 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.11896104 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164439791 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178935953 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130006842 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101900151 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188047066 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154152134 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.130650127 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170433409 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1807291 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.152190201 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107189985 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162547262 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18709046 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138594561 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183183366 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136685555 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103506362 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.136825711 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153651762 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124826499 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.154262452 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126297993 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.121795757 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212174792 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.094133784 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133081777 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170740025 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096358949 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1249317 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11049582 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132705518 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.105535909 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.137909312 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.132145391 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123044625 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155825131 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14951035 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150204976 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137866784 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185143636 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103011497 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.147690007 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144402783 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.088722908 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.170478451 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178416223 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125684577 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190181719 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.160818066 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189062227 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157401099 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10055259 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172667261 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125535084 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.088125021 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159748975 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156641059 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157929947 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.176216403 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186305471 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.158162907 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.149080916 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117264803 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158431682 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.160884904 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150460577 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.132682348 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128831582 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153613344 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.11904326 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.093618841 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.124096522 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11094845 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128036439 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101338001 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201876143 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130497122 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20905619 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156949653 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109945827 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177039433 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.122335188 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159128406 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.165171344 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107371898 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.178266438 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175236022 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162514289 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139542287 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167269899 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.088704236 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.092629087 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.128707299 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159781009 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100678317 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131275681 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139591933 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177498518 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168365315 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118371275 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222358606 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161570279 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186164148 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.090047073 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.164901354 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162380472 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152461871 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.145709239 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128694452 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.119314081 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172709828 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138810637 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183226542 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157077174 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162892582 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189127564 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.146412684 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099404105 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14614394 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160377258 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1360588 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133063319 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141575631 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131711124 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118260845 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.123124545 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094910208 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16593357 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141021622 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17007691 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.143731646 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163133705 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095287064 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139218835 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158316118 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113099058 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.111211755 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161771787 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17833466 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139388398 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125552499 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166811399 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127859259 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.30309521 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182978851 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178000511 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133369164 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111550006 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157603816 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156579467 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158101295 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173795784 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114419463 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173616279 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155201718 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.131025228 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104510128 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144817214 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146448987 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.108984526 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.128984463 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.148077525 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.105204999 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170122729 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138257517 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153933703 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158931679 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.117938789 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.142367908 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110247616 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194975381 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153166867 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172148385 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.145907978 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.158494093 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191945093 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.093402532 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126252163 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.095769224 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174750081 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129906707 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154294272 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.178517297 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19108249 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155618079 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161134037 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106675728 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.115514778 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126171542 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144720054 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218149829 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111013939 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.132215517 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181126759 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.111225717 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127405952 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158998428 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278501264 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114566423 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166245971 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.110170636 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.27102119 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093999464 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126115431 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156194477 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164884566 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.104309781 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.170572484 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159916997 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112616181 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156529982 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134208628 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182136771 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198794259 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163387164 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166283492 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.100473023 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155565111 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158224213 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170038207 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140140467 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.104979844 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159402806 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17721078 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.182886276 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.128224364 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12884176 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157368641 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156048646 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164682516 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130586173 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192039629 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09978876 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15943715 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136891534 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092098033 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153293368 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.180416261 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129238554 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166564945 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152644942 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101672774 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123005069 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11814131 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154029476 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138953378 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.094300893 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166265934 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.121319859 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157946676 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146467246 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127211235 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150721711 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113358007 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132405941 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14011513 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113948147 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133021686 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.13544418 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171428357 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.126828601 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170059137 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169521659 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159181452 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154536709 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113034611 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.665128861 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.096217363 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176470494 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143909029 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17932061 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145259244 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161545573 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127310598 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145383475 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161981282 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145867348 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.225344847 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129715806 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.152344431 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128499675 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140588001 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110844444 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.128618963 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119008126 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157167887 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137632091 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.132284143 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.124215131 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141277425 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.12835858 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108161364 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178671444 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143041826 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171641088 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175923743 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105526127 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162337462 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164064015 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127958034 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.154352406 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137685042 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138632863 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145528879 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.09840854 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.132042555 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176489107 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.091388919 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15695023 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156095906 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157526937 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15758281 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.102220914 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155693362 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138996431 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13024869 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126485618 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.147494976 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152268279 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099155899 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.123948846 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12298846 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149656011 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.146315681 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094315139 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.160267872 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177153222 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.091651411 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129796471 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273406465 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124694672 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183848814 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.13892004 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131720432 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110746611 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143906997 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.148042714 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154135413 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.097704239 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128949101 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.097850289 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.162204988 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.111698991 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152727161 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179797024 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152132124 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194568277 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.132866137 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.245926983 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137115753 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152068638 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.091670398 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.125464167 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109243345 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131111242 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139273636 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1841637 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173533308 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.114031147 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.13067287 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094895948 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.122601744 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100884874 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157934344 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150733008 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153642828 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111051795 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.111389928 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111233555 seconds)
  done (took 72.520242411 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.150389694 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.131438166 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.142945202 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.197130438 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.162593713 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.246766545 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.205087748 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.233618321 seconds)
  done (took 2.557594118 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.088186009 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.138359688 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.122089093 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132037605 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.111842642 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.087351665 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.321613691 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.129103546 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.085734031 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.141478585 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.128192879 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.112053951 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.52354662 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.085375393 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.112905953 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.081811658 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.111456615 seconds)
  done (took 3.590037215 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.224337556 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.473105891 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.044499492 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.189772264 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.174539716 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.090150784 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.707073594 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.09035083 seconds)
  done (took 12.078328392 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.118458034 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.112299822 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.158151336 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.158251765 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.116072354 seconds)
  done (took 1.759661065 seconds)
done (took 112.880117082 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.093416365 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.094301144 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.120906403 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.096140536 seconds)
  done (took 1.481627757 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.099883446 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.072588545 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.105095047 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.076915621 seconds)
  done (took 1.44536256 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.188223903 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.164024367 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.394388204 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.073811437 seconds)
  done (took 1.583298673 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.109195859 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.126896716 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.099776103 seconds)
  done (took 1.438899416 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.100838282 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.096088931 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.125221433 seconds)
  done (took 1.421382352 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.099821255 seconds)
  done (took 1.194606836 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.105732482 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.13444513 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.1072257 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.132235489 seconds)
  done (took 1.579978078 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.092660371 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.094840347 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.135358196 seconds)
  done (took 1.419490799 seconds)
done (took 13.009596118 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.101877308 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.416750843 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.38559102 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132706116 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.693297944 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.404042619 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.04204539 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.141100728 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.162842561 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.087706302 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.103273811 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.695473458 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.993963093 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.367233627 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.980528398 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.36462464 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.687143294 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.116021298 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.086962739 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.086488626 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.05421776 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.087115201 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.115469715 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.086722778 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.701287892 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.391219731 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.115518071 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.341618791 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.086316183 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124014592 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.37295191 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.116748469 seconds)
  done (took 16.728158165 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.093148129 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173102804 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.09782292 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117085343 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.095247722 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.088154489 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.119268041 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.087997786 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.17922845 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.115760046 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.105424746 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.086291508 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.120693476 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.087685521 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.136088831 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.08701785 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.116431522 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.088189638 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.08723937 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.116409023 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.106472553 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.115865984 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.087994488 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.115496695 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.087783005 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.12777219 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.088393353 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.086602378 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.116347062 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.094461862 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118377093 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.088457105 seconds)
  done (took 4.528535311 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.138485 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182605334 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098520703 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.150193369 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.167018979 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.089588756 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.19409952 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.142483907 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.151836046 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.116545174 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.103827647 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.116250347 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.121098787 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.117384441 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.107798578 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.116642861 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.088287067 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.115289609 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.087992182 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.087743487 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.135356211 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.087586961 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.116807291 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.087261316 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.116348048 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.101593489 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.116328659 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.088004093 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.087427508 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124882845 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.090296404 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117188428 seconds)
  done (took 4.865826341 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.091604011 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.092622908 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.131815022 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.103150853 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.117199612 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.091306234 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.119931077 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.089902933 seconds)
  done (took 1.93801142 seconds)
done (took 29.157866442 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.106147482 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.093467249 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.130369469 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.100520856 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.126791292 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.099501783 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.11452246 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.099552676 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.100876614 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.125695881 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.103628964 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.115877572 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.088994647 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.114950802 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.1016499 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.091913037 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.130217557 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.09664199 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.131040727 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.101308753 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.117836799 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.100751132 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.097607352 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.131327833 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.101374275 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.131156769 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.103771123 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.12414521 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.088439864 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.118547667 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.10060395 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.136936375 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.090073865 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.131504352 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.093131617 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.091500359 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.118531684 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.092305466 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.129947833 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.099575156 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.123093457 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.099107966 seconds)
  done (took 5.688781647 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.113356129 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.145557696 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.108959933 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.111876153 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.090080886 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081728761 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.14186287 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.081251276 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.112351329 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.112598216 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.105043333 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.07931064 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.081092009 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.103914594 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.079197985 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.077361377 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.11101303 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076944399 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.106666027 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.079719764 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.08115759 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.103629869 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081677664 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.080518416 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.105691346 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.083005042 seconds)
  done (took 3.646751246 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.09570983 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.102154119 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.13742972 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.169679985 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.12165607 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.124506409 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.097184346 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.104101558 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.133546596 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.086584398 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.118677276 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.115072837 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134116796 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.094810691 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.119588075 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.102181018 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.101028229 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.118810942 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.092040212 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.136650059 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.102885516 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.126881858 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.105900271 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.128412542 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.087375165 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.088842207 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.121148968 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.096872761 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.124897579 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.095614395 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.122248144 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.090976572 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.088579845 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.128108652 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.093832265 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.11835518 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.106473544 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126757783 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.097466151 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.117911425 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.098176955 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.090285027 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.138822713 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.126663323 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.117409353 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.093792625 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.120180163 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.096376685 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.117757567 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.105589063 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.12623387 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.088850923 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.091117561 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.118056551 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.089294534 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.131742416 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.090036619 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.088315425 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.12897144 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.092628857 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.129893867 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.09185402 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13103489 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.088457293 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.092714506 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.118308446 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.087928036 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.115866495 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.109895693 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.123151265 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.127694755 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.118901984 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.088739256 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.09543417 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.123215418 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094620014 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.118473509 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.101691542 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.126995497 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.091672426 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.127470894 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.091045957 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.090155388 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.135491477 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.08985322 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.118118541 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.088758498 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.093661817 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.119258766 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.088804801 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131816825 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.086619578 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.119855654 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.101244984 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.087589896 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.118392299 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.093643233 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.121550216 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.08690437 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.130263204 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.093968567 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.117245054 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.098415862 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.08812988 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.120414493 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.097143703 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.122243691 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.088094599 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.121177621 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.094063227 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.088013486 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.120873318 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.091092849 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.120087239 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.097858379 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.123396055 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.092210614 seconds)
  done (took 13.812343771 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.226914185 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.211922973 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.183570067 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.261804583 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.131373627 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.113963691 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.208529127 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.154488215 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.090012729 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.155907189 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.166585451 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.181252432 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.166802333 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.178167473 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.167430134 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.087876707 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.105645357 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.162756471 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.210447801 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.286366671 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.107380705 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.126602034 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.126192935 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.155446598 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.132928975 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.09670988 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.134624539 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.100123246 seconds)
  done (took 5.557141236 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.105199635 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.150275592 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.093928404 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.140335206 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.114766048 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.118174692 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.092651704 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.119230293 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.101273667 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.133305441 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.087857504 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.12336744 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.096109191 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.097031593 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.118741662 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.096771623 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.12758361 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.08989316 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.12001534 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.093218046 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.098396182 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.136478327 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.091334124 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.117841638 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.096674098 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.117543501 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.090478805 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.140514674 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.087862564 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.141067466 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.086035648 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.127320158 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.101913317 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.119450767 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.08841364 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.089987847 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.120461737 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.089672245 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.11974544 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.087178508 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.086487669 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.110353431 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.088017166 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.133267837 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.094978821 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.113033459 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.09535878 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.12303654 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.089605763 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.085992118 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.121497623 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.092601458 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.120956501 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.097674808 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.090544319 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.119354901 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.09187315 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.118129711 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.095535703 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.089883552 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.116521955 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.086970402 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.122894578 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.092137803 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.125908711 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.092888439 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.085944795 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.120570096 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.092504739 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.124738665 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.091278791 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.093686839 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.11628821 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.091230136 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.121008466 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.09428973 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.09144388 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.117206255 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.088115624 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.118878697 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.078750721 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.08826409 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.107363751 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.091695165 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.116494309 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.087815789 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.090330632 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.125339299 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.134785424 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.090286338 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.096795655 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.120004955 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.088107851 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.120918 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.086689798 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.091762946 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.134767679 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.138065114 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.089077907 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.086174483 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.133560025 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.091178736 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.117815919 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.078919174 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.097666601 seconds)
  done (took 12.225903386 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.126599169 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.148736343 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.090881486 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.136587398 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.122428734 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.152676442 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.095559103 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.12707145 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.090773053 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.137203378 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.0890942 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.097561855 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.118946926 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.102745429 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.153175322 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.098893143 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.121615146 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.103711317 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.122790041 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.134765733 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.137513005 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.107250698 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.137038483 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.088835549 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.124807662 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.105997593 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.155667734 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.103216835 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.131351721 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.107869581 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.132878267 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.125467748 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.13849044 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.093566399 seconds)
  done (took 5.200855229 seconds)
done (took 47.237845551 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.224805168 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.435198555 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.193727844 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.10347196 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.215536301 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.208155699 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.226114255 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.195943333 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.239454943 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.195058546 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.44523382 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.792929826 seconds)
done (took 58.603300655 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.227969564 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.359815187 seconds)
    (2/2) benchmarking "String"...
    done (took 1.514608501 seconds)
  done (took 4.000425349 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.762170887 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.140356323 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.45614339 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.194437759 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.194647556 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.483765327 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.88525462 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.592643877 seconds)
  done (took 28.072422272 seconds)
done (took 42.190814542 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.212269313 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.194708092 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.201855492 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.182224187 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.308048252 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.216345023 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.509972385 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.249661237 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.216233269 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.191002581 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.216578671 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.212933318 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.214182444 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.539216588 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.199752587 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.195978821 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.198561216 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.76922256 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.600018528 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.199523332 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.224006289 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.25558389 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.222283204 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.199205998 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.239594692 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.200535991 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.207092551 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.214321135 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.753694905 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.19679601 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.210524103 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.719157133 seconds)
  done (took 190.597333058 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.196633572 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.262802951 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.347704563 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.236309602 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.690515838 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.400245156 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.32055083 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.766992536 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.217014472 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.229803616 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.455768085 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.202299984 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.52121437 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.218734712 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.227818863 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.230425732 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.508558708 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.526883715 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.236229967 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.356345218 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.197998112 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.449834588 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.369065106 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.411020763 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.235947317 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.229335717 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.209694903 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.223959994 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.390743817 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.440635142 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.209934999 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.233127324 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.830062696 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.050816927 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.225024487 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.227976171 seconds)
  done (took 150.215172859 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.197999473 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.197797223 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.19865954 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.199269399 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.230805026 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.198038107 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.776521866 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.776443188 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.726903919 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.616754816 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.627200911 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.465784345 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.199273102 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.292694959 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.213133421 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.203564616 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.215798216 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.229595291 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.200656439 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.198982386 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.788562688 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.214711449 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.292050905 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.379116079 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.215867211 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.23175754 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.596532424 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.199557669 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.232012044 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.532872971 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.249222265 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.200237485 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.601071204 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.712272604 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.315923018 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.200924713 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.232921201 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.202208572 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.202095295 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.481430989 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.20094858 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.201030904 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.20412959 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.909841736 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.205131586 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.769815967 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.201049264 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.154296463 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.200447175 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.201196211 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.674057581 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.863876138 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.200756177 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.200905774 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.203491853 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.20091717 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.201844003 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.234486228 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.77407792 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.299929053 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.203420282 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.204607882 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.234864552 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.20214924 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.222061001 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.202575504 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.24502034 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.256176503 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.419805944 seconds)
    (70/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.201487402 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.791584928 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.207003112 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.301163666 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.324006428 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.202532963 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.203161294 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.202779341 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.20256921 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.314643584 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.20307595 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.624169412 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.3799305 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.220095824 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.629792145 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.303299688 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.202912232 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.622368064 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.207248973 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.203219517 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.964576406 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.301001228 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.203762674 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.202967757 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.203796509 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.204198005 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.625952343 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.774330188 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.482506547 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.206922387 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.212702164 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.207266075 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.636476797 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.765155949 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.900659011 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.208737482 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.317297722 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.380957833 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.22136919 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.204393061 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.634202047 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.208788579 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.260595384 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.207251959 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.602472438 seconds)
  done (took 366.161146274 seconds)
done (took 708.101295656 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.809874066 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.804851404 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.919221579 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.797031726 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.756334562 seconds)
  done (took 10.222219559 seconds)
done (took 11.359054675 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.395311371 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.395048675 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.266416029 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.396706047 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.237491837 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.414467936 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.375675857 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.225853785 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.30802297 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.287737131 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.306731412 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.258394611 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.240715802 seconds)
  done (took 18.244516823 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.523927923 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.514998244 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.269297482 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.530597631 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.248274479 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.523032808 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.413248041 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.418069688 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.403095634 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.221695507 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.219653086 seconds)
  done (took 16.423688454 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.530474151 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.528243969 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.272938357 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.539362334 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.249901593 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.535182629 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.433456927 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.425333322 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.411488641 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.224468365 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.222152593 seconds)
  done (took 16.510146687 seconds)
done (took 52.314569886 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.217395305 seconds)
  done (took 2.355737426 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.257063495 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.417668156 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.240025955 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.222810593 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.218563508 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.226238785 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.223934134 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.220214872 seconds)
  done (took 11.166008349 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.212840037 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.215773036 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.216262075 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.212462347 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.215423307 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.213650573 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.21448211 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.21713169 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.215345953 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.216503036 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.215045796 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.212848603 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.213228402 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.21436665 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.213850947 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.216838779 seconds)
  done (took 20.573980853 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.215394006 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.213817445 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.213435405 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.214665385 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.213950102 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.214349924 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.215757334 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.214641602 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.214437769 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.214564072 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.214459049 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.214720828 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.215322721 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.215214776 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.214133414 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.214629653 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.214773738 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.215098485 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.220156691 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.214683693 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.215580637 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.214216919 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.215639211 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.214398178 seconds)
  done (took 30.299658411 seconds)
done (took 65.534918636 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.839367699 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.866002777 seconds)
  done (took 6.845529467 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.276089216 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.277976601 seconds)
  done (took 3.695837723 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.217809235 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.217558742 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.218418377 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.217801796 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.218416933 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.217361565 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.218514268 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.218781225 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.217510796 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.217439169 seconds)
  done (took 13.320082494 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.218923305 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.2185084 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.216472913 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.21822527 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.218529807 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.21658594 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.218957511 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.21835307 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.219164031 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.216949641 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.219419022 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.216482852 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.219298076 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.21652715 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.219478443 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.216893877 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.216864904 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.2171561 seconds)
  done (took 23.065024171 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.232709173 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.240479052 seconds)
  done (took 3.616030951 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.347302677 seconds)
    (2/7) benchmarking "second"...
    done (took 1.259299722 seconds)
    (3/7) benchmarking "month"...
    done (took 1.327420469 seconds)
    (4/7) benchmarking "year"...
    done (took 1.314620856 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.258267268 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.238225212 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.259750329 seconds)
  done (took 10.147761598 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.220583841 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.404010321 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.50991831 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.79319137 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.221794933 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.224318685 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.091332751 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.224553173 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.226457196 seconds)
  done (took 14.058255708 seconds)
done (took 75.889747275 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.254727744 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.212927545 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.450378744 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.221138834 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.231689946 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.513721092 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.235161723 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.342068996 seconds)
done (took 37.606611869 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.227453192 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.203489211 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.014793114 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.226640361 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.294191524 seconds)
  done (took 18.882966437 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.273066098 seconds)
    (2/2) benchmarking "read"...
    done (took 1.55088155 seconds)
  done (took 4.968289519 seconds)
done (took 31.223625934 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222992827 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.222355043 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.219978243 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.222928205 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.219468944 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.220513387 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.222234936 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.222302744 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.222457966 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 1.223145544 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.22189651 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.219693078 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.219610837 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219988628 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.221933018 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221440176 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.221918899 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.219708602 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219546157 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.219824029 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.219484276 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.222431876 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.219287237 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.220037572 seconds)
  done (took 30.450057713 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.222870003 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.22162553 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.222748575 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.223059929 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.220130937 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.223615857 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.22276571 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.219304591 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.222543542 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.223445002 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.220367142 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.220150851 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.224148468 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.22041331 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223335739 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.221387665 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.222760311 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220592465 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223613726 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.221840282 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.223112924 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220724837 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.221917317 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.223420934 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.221270598 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.221153175 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.223217916 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.221784854 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.223287191 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.222343697 seconds)
  done (took 37.808957026 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.228622578 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.231773278 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.22347663 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.224029681 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.230471815 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.224010704 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.224165568 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.224244408 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.225541411 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.225761198 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.22481731 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.224203816 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.225280259 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.224795414 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.225320049 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.225391712 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.226259127 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.22592092 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.22440582 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.224713222 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.225636044 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.225253385 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.225709808 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.22454718 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.22595186 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.224446243 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.226385665 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.225088452 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.225335007 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.225906629 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.225263797 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.225276492 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.225537044 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.225930698 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.225617381 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.226020465 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.231195422 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.233160701 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.225797613 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.226180249 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.226227756 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.226079243 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.226279341 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.226542444 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.225592324 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.226442476 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.225664279 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.226160672 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.226738769 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.225563494 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.227358755 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.225608546 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.226387134 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.227681648 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.227223303 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.226520238 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.226325551 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.226695852 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.227223145 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.227214492 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.227465 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.227692042 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.228043608 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.228565599 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.227830183 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.228770687 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.227672057 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.228475611 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.228720278 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.227419871 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.228734547 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.227416271 seconds)
  done (took 89.452976064 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.228061148 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.225743458 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.225646133 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.224820061 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.225552322 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.228751824 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.226656821 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229094411 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226837263 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.228409403 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228737596 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.22745954 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225884447 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.228990914 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.229383811 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.227678782 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.22942929 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.228008345 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.229303955 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.230512537 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.22957976 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.227053983 seconds)
  done (took 28.162516865 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.229700957 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.2316037 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.22680215 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.23167355 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.229846954 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.23100833 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.230363253 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.231574774 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.230532937 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.228489615 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227674383 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23017097 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.230339593 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227670296 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.228928079 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.229573948 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.230610661 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.229935415 seconds)
  done (took 23.289410718 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.229245949 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.229211213 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.230875797 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.228506577 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.228993489 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.231253165 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229075437 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.230904759 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.231671828 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.228507595 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.231288148 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232449215 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.231400164 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229486715 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23188773 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.229310462 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.232978281 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228612388 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.231363653 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.228877595 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.229159257 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.23178284 seconds)
  done (took 28.220596012 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.231924786 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.232362437 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.230125049 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.23029753 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.22880669 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.232334123 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.233007 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.229542029 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.235035285 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.232368361 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.685459363 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.233882602 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.231351919 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.230987166 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.230105388 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.230132758 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.233857608 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.231519462 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.233433032 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.229975465 seconds)
  done (took 26.241240004 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.235560439 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.23620314 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.237061851 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.23591907 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.235936061 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.236313107 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.235470498 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.236300635 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.236147551 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.236149269 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.236730685 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.236417289 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.236859096 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.236950174 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.236367244 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.237694425 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.237563208 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.237698415 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.237686069 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.236886224 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.237546961 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.237939172 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.238200646 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.237480629 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.237478036 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.238003148 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.237768298 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.2380686 seconds)
  done (took 35.790761971 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.236235766 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.236118956 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.232734215 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.234295326 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.233411287 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.232967752 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.234205609 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.23401225 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.236026077 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.233612965 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.236728268 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.234610683 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.234977344 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.236708295 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.236735405 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.236725671 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236015135 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.233983731 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.234383276 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233915802 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.237403939 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.236245683 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.236777044 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.234800406 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233699939 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.23742603 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.233516833 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.234941705 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.237035694 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.235220815 seconds)
  done (took 38.213825256 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.280624919 seconds)
    (2/2) benchmarking "in"...
    done (took 1.276305364 seconds)
  done (took 3.715067681 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.235276456 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.2373107 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.237666752 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.235537332 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.234977562 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.238141945 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.23832333 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.235910374 seconds)
  done (took 11.053070986 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.238533849 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.239447226 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.238013453 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.23939244 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.239431312 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.238741459 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.245904463 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.258229958 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.239358659 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.240793478 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.246783737 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.247387114 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.241191904 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.239077045 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.239431841 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.24157547 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.240069189 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.240340897 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.242197529 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.241799107 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.241914001 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.241728194 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.243150639 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.237443817 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.242092445 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.251051648 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.244013288 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.241408512 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.240405294 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.243450913 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.240230114 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.237568985 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.242249277 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.243217769 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.240889557 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.24238814 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.249627338 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.262986906 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.246610465 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.242759897 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.241908661 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.238562749 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.241886288 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.243506224 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.243207057 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.244011078 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.243896464 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.239892218 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.242466701 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.2464947 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.248107952 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.242316417 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.240793094 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.245075362 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.243449586 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.248221595 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.263770201 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.244991475 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.252820609 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.252982617 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.255938563 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.250965503 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.244492984 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.243975841 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.253395968 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.267957131 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.251683508 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.260246318 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.240664293 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.242517114 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.250313542 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.255391314 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.269115082 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.243960767 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.245849525 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.244592796 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.244816035 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.243519776 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.250531248 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.265922288 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.245565093 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.246267521 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.253990791 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.267845168 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.24398389 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.246168732 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.24605349 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.246767215 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.245949339 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.254854641 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.265385001 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.244044867 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.243957923 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.244128924 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.246334699 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.246099203 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.244399403 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.245480345 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.241937505 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.246570854 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.246545645 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.248781918 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.254770657 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.248005866 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.248019183 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.252183194 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.245927318 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.246273973 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.252410453 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.246363385 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.248089448 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.248653517 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.252286813 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.243702901 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.249659567 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.254993069 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.247768316 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.247493597 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.248683656 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.247039686 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.256838891 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.274623249 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.247934923 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.248261366 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.253263247 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.261498598 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.248245396 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.249597471 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.247670444 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.243874433 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.244720169 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.249655814 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.247329612 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.247398679 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.24816693 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.248045189 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.245328101 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.247217968 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.249162782 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.248123803 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.249375122 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.247941237 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.249177609 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.250310874 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.249567072 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.250016791 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.254129099 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.247215181 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.248733424 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.249037457 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.244988177 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.249477786 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.249557017 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.250029703 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.248304237 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.250241576 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.247715114 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.249754418 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.250356966 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.24963807 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.249827233 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.250677668 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.253995865 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.251259525 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.25257359 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.249387535 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.246430377 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.248536705 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.249290767 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.248751653 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.2501012 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.248650195 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.2534234 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.259743617 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.250343917 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.250663961 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.252144944 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.251361225 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.250140243 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.25121739 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.254185481 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.257896999 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.2514948 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.257427532 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.250867077 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.252791479 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.25061653 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.250874756 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.252020692 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.253272453 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.25407725 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.259218961 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.263874795 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.278459294 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.25169185 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.255788949 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.251301652 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.256004628 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.254435641 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.252124635 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.251916415 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.252880471 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.250798013 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.252419594 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.252330205 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.252981246 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.25074399 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.251309869 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.252771836 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.2527755 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.252171166 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.251942618 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.252771015 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.249412141 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.252848593 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.253257495 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.251837896 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.249861771 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.250849106 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.251242045 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.252592 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.253969021 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.257684936 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.249690688 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.2528031 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.253595731 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.252692286 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.252027477 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.252521968 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.25401308 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.253279829 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.260905917 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.273432873 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.253298811 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.259932497 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.274682306 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.253157234 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.255748767 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.255126175 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.251501493 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.256066223 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.263224341 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.253986446 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.255283729 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.256060187 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.25514519 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.255032489 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.260804722 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.251443227 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.25425964 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.256324889 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.256441083 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.251912314 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.255928536 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.255275369 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.255070691 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.256424596 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.255468038 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.256276748 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.256087753 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.258020134 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.256633887 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.256364122 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.259195718 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.265481893 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.261710452 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.2557002 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.25715382 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.25848372 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.259947723 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.256476289 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.259046097 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.256353091 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.269508445 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.284671193 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.262585252 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.258743447 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.25747428 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.263392285 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.257985008 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.262046048 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.257991151 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.258286126 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.258137014 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.258382247 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.254661914 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.258666148 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.258344674 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.259281419 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.260324474 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.261432262 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.258480049 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.258603133 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.258789248 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.258981526 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.258333433 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.25834355 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.258506218 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.261563841 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.260235264 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.257304432 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.259224972 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.265544 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.278426418 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.259809601 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.258972275 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.258054645 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.258732558 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.258832966 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.260306175 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.26242064 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.269384101 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.261174324 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.267285926 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.260654951 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.26927775 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.259648324 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.262665616 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.269967366 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.257471178 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.257817316 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.259521226 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.261829866 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.267586824 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.281214932 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.259628686 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.26536015 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.261461762 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.26097227 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.259472252 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.26096632 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.260746073 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.261058079 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.26791446 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.283087939 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.264876584 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.261496983 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.257074707 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.261548133 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.262077052 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.26173993 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.264498659 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.260475462 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.261982848 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.260509317 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.260781615 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.262687154 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.261491379 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.262525462 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.258955032 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.262135535 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.269214469 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.283330989 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.268179933 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.263075735 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.268150027 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.264009307 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.269348861 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.283681749 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.262556183 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.26449711 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.263009672 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.264387034 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.262172772 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.264163615 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.263511177 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.264367559 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.267177342 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.263542934 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.263962414 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.263756938 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.264461654 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.262305456 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.273523341 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.290035633 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.264930985 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.268655107 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.260927484 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.265496133 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.270243721 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.265565949 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.261347689 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.267424574 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.274417658 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.273211748 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.264407996 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.265138818 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.263914412 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.265124598 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.263676906 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.26486803 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.266106094 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.264504007 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.263834011 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.266574204 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.267227509 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.265450647 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.26453776 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.266641452 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.265867523 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.275179063 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.266612387 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.265355148 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.265400452 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.265902998 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.266066527 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.265211022 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.266602632 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.266023053 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266366265 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.266805921 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.272308939 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.272215325 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.268743329 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.265255064 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.267144269 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.265343276 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.267088184 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.267844901 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.267680201 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.267632819 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.267588898 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.268972337 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.266959654 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.266885932 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.267901829 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.266841516 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.26768641 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.269459117 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.274775585 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.267916138 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.265572876 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.266981536 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.267777663 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.265578738 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.267471747 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.274025631 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.270291674 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.279374473 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.276116871 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.271988971 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.267930894 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.270872214 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.275831984 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.267223195 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.268276309 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.269236614 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.269125256 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.269163818 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.272549516 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.270948482 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.275413376 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.269339407 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.26951294 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.2760359 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.292283395 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.270878296 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.271044069 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.274034175 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.270226696 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.266613211 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.269513621 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.269156417 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.27641264 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.290309416 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.271496437 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.271578162 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.269450332 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.271225298 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.274641843 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.269650599 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.271423963 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.267802183 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.271689607 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.272122893 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.269611587 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.267582884 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.270207858 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.270338077 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.274723347 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.27710936 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.268729052 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.272262918 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.270160028 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.27088118 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.272379108 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.271882808 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.269510928 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.268652043 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.27050762 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.27230004 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.271997557 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.273431244 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.271058451 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.272601546 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.274126907 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.273213004 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.275563725 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.282466168 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.279819131 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.269654491 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.271357891 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.271890197 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.275387383 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.273934305 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.27357989 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.273551143 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.273672742 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.273508774 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.274614334 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.272470908 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.276649662 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.288902628 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.296634794 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.273325874 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.273743315 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.276421222 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.273789835 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.27017195 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.27347154 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.275298102 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.277471975 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.282695962 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.275873892 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.280458282 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.294090909 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.274691845 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.278860124 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.278289892 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.281365969 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.276910721 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.274905532 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.276311189 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.278471541 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.290976021 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.274942777 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.284159127 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.305691194 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.295242677 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.276131046 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.276870799 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.273950219 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.277352738 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.276303403 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.277297449 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.275904984 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.27583364 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.276046172 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.275942696 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.281851148 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.277152892 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.277187251 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.275798882 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.27508545 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.27588327 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.273619529 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.277585921 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.275766353 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.277118146 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.277440613 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.277643234 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.275936155 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.289346229 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.304978367 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.277382426 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.277039649 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.273692131 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.278426509 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.279313918 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.287009041 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.285008771 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.277606601 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.277202376 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.277720251 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.277802926 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.275800261 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.277586431 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.275185382 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.277652228 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.274729398 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.289507863 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.287731892 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.281603867 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.277540639 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.278515666 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.277625182 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.278850675 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.279923123 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.279500633 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.27904487 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.279981785 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.284096777 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.278054543 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.277958901 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.28138249 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.284844617 seconds)
  done (took 752.879766939 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.275441434 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.275348282 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.27666388 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.276390086 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.275807813 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275479908 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.27634927 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.275644622 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.276403689 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.277147566 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.275639106 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.276361969 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.276784941 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.276820184 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.276372431 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.277166687 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.277392664 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.27651031 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.276304905 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.277128207 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.277644948 seconds)
  done (took 28.002994092 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.278780338 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.276768076 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.277371272 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.279378081 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.277927699 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.282245698 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.277141091 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.280800947 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.279874076 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.277989176 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.281254221 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.279194385 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.277526492 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.277506497 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.277408539 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.2802454 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.28016833 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.277291327 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.282103627 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.278497429 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.280141991 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.277938742 seconds)
  done (took 29.335906428 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.282248438 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.283107301 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.280750315 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.278529541 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.28041243 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.27801534 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.281972688 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.280539963 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.281740394 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.281502084 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.280544582 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.282396732 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.288389422 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.286631448 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.283205727 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.281201201 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.426063877 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.283369899 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.282948362 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.283956595 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.279872187 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.28725499 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.280185799 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.280192999 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.280063934 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.283425903 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.282318023 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.281925853 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.283660988 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.28406956 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.288792833 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.282335628 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.283109244 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.283513239 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.281962774 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.28557983 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.287119025 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.284543928 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.280458395 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.284608762 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.293358618 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.305723525 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.285390364 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.288796066 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.283376406 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.2839402 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.287905688 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.291993964 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.281126015 seconds)
  done (took 64.254315392 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.283614366 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.284044104 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.282175249 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.284051366 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.284258896 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.284228064 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.284907102 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.284783591 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.281207906 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.282411727 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.284081027 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.282406553 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.282372338 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.285718878 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.285595481 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.283329569 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.282204416 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.283006447 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.282473712 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.282222124 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.282912991 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.285519425 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.28666574 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.282617223 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.285546306 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.283785718 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.284434193 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.285871868 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.283825895 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.283429775 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.28620006 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.286027957 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.286229914 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.284542022 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.283964181 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.286041582 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.286836752 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.283573347 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.287275869 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.284401391 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.28702558 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.285543401 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.28725904 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.287452455 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.283207968 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.284596165 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.285239442 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.284092277 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.285458861 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.288307693 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.28713786 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.28419823 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.287874127 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.2852769 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.288186487 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.288888191 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.285176936 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.284245156 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.287351357 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.285031494 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.284563906 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.288534151 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.285472823 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.28916743 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.289058445 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.28752218 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.285954004 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.288980133 seconds)
  done (took 88.593448001 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.28870888 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.289950335 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.291054837 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.290752273 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.29004254 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.290502033 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.289874199 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.289514869 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.289924242 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.289203304 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.290170499 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.289980233 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.291159622 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.289837127 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.290499419 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.291667564 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.290576742 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.29090358 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.290897609 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.291674047 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.291520544 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.290532527 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.291819595 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.291765099 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.292342161 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.290685394 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.292218481 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.292048115 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.291112254 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.291696571 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.292833774 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.293101361 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.291147671 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.291997666 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.293531499 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.290853549 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.291872631 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.291971077 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.292052302 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.292807242 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.291757404 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.292167242 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.291661514 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.29154184 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.292532602 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.292535227 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.292036333 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.293129371 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.292454364 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.292173637 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.294384308 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.292813697 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.29314613 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.293717376 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.293263299 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.293480019 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.293771632 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.29447537 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.294623636 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.294080724 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.294415525 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.29293479 seconds)
  done (took 81.299238178 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.293317906 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.293489467 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.29132141 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.289791857 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.292745007 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.292434814 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.292678586 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.293643758 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.293710249 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.292772261 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294793274 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.292365636 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29407156 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294810741 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.291922952 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294017652 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.291424878 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.292383395 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.294349637 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.292568325 seconds)
  done (took 27.069351399 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.291119094 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.294957983 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.290743317 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.290777899 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.293387186 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.292310914 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.294512913 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.293865453 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292559138 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.293693587 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.294916347 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.295143826 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.292831336 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.292746297 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.294778181 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.292839773 seconds)
  done (took 21.90279126 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.293013848 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.295012133 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.296411353 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.2958425 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.291994698 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.292487873 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.29586419 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.293304721 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.293531958 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.295821735 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.295341586 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.295477036 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.296025821 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.29759947 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.292715796 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.295746723 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.293908377 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.292866324 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.295025332 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.296868596 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.294882934 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.292800116 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.295904191 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.296723147 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.293237815 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.294270268 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.293550313 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.293790425 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.294827208 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.297322204 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.293759425 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.293952932 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.294128672 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.294730787 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.298954853 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.294743736 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.297484483 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.29694274 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.298045188 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.297821136 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.297124734 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.294952338 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.297602847 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.297620592 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.294121808 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.297676261 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.295702712 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.294600224 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.297066091 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.296232328 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.297342169 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.299747809 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.299395712 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.298611222 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.298847259 seconds)
  done (took 72.473349991 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.298539641 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.298201919 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.295588588 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.29767043 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.298057221 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.296921773 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.298439171 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.297313571 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.295871467 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.299009408 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.297676317 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.300083726 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.295856517 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.299388241 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.297031326 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.299383694 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.296017478 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.297151539 seconds)
  done (took 24.573138357 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.297506541 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.296760769 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.30011153 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.297647397 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.296422185 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.300248721 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.296697241 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.299289926 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.30014137 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.2975911 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29782367 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.299381496 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.300452603 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.301221058 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.298341587 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.297227179 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.300711156 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.301040572 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.297182684 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.29736566 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.301630707 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.301282289 seconds)
  done (took 29.791931822 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.299811837 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.299483094 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.299844949 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.316664099 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.320314383 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.323776757 seconds)
  done (took 9.077903411 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308382149 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300639253 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.299221555 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302987601 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300938261 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297800372 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298964008 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29986782 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301625853 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2994508 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300433221 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302324093 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301633731 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298058985 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300970032 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301853857 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299781831 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299106145 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29908666 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301824269 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298058464 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30124996 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299294214 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29884763 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299714801 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298754286 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304388058 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303099681 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301715586 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299472006 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29965149 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298849164 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30252379 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298330724 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304447954 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305348152 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298074471 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30031084 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300198683 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297808056 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.302751634 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30211556 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300551286 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302612989 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304524175 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301356096 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302772976 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296507725 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301326003 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301252035 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298585538 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2971863 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298888027 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303821391 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29993447 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300793784 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297889478 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300045253 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300462035 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302241095 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297945472 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29680508 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296735373 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29726336 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296507196 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296307154 seconds)
  done (took 87.065548404 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301039132 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.295514032 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296133713 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29896827 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294935465 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297817548 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297927184 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293849351 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295687555 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298673071 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300786699 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296381724 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300687177 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298745388 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29794783 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296007087 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301848319 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301245331 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303267422 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303131619 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297621333 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300391757 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30307713 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301071027 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301495653 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303713184 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301347862 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304588843 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301615842 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30235947 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299255034 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303536768 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298257895 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.303853999 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302411824 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303423896 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304682224 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303527072 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304113271 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304054824 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299767307 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306117765 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305076543 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306629582 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301301915 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302197275 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303165331 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302950022 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301949262 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302391522 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299494601 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306774204 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30062431 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301865179 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301193693 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299079747 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306335863 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304696629 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299720355 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301708955 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299510673 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29870104 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304607818 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302974951 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301776803 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302840187 seconds)
  done (took 87.091836507 seconds)
done (took 1756.956375919 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.474952274 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.419081214 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.299740606 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.303330896 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.302028806 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.319300136 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.295074098 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.304953243 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.301083447 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.303561859 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.303284316 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.489838235 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.304568431 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.30388586 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.30485259 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.398338121 seconds)
  done (took 42.646379476 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.335103621 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.310889288 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.428350234 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.325175888 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.332061351 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.504104246 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.367757983 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.312198022 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.491183293 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.352566664 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.941611991 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.332381431 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.311377953 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.472453658 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.32777735 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.509847089 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.571343844 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.948780216 seconds)
  done (took 30.39404308 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.789975313 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.320669928 seconds)
  done (took 9.333480392 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.326566178 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.305581401 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.306947513 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.309361707 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.296930046 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.314840265 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.304605134 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.299510453 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.194171793 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.439339144 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.31158055 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.32231637 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.327085518 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.313982306 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.306443271 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.345547368 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.452652356 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.312702763 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.305280153 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.31489023 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.306934542 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.403778946 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.350476709 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.30820389 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.438549392 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.216900951 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.316459726 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.315278857 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.439377779 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.310030777 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.310757364 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.31278527 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.315734234 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.230306582 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.775114309 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.299700335 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.353168485 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.319483044 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.307332279 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.450550953 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.311818224 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.322326169 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.303801403 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.760912684 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.461293288 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.426241557 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.589647608 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.309643271 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.316199488 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.378344268 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.311500842 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.312996752 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.35927403 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.091072769 seconds)
  done (took 110.969552352 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.332653675 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.728912376 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.474362319 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.320114871 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.004561197 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.977854199 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.324016584 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.607922031 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.326352858 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.30560497 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.592755136 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.823009038 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.320866881 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.33327032 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.464020906 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.379944346 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.311268489 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.083856593 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.322519534 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.307791123 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.819406642 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.306940851 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.306292222 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.464388841 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.346246259 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.768853177 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.717527749 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.737633608 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.315372659 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.302431202 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.771399012 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.313382708 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.374721147 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.30278353 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.570171279 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.664800594 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.6458691 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.302300057 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.325019539 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.298852822 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.331878183 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.755967204 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.649171016 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.30090567 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.297535832 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.757883101 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.299672982 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.310556563 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.316466371 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.509872727 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.925443806 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.300094866 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.712038297 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.303313638 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.634355094 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.39128105 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.315662926 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.794759706 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.298898317 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.366169363 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.350710724 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.302179646 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.307411542 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.306011347 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.301954458 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.653693858 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.60072136 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.306606954 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.658928928 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.780073227 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.325889313 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.831871001 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.138852283 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.321428676 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.372247965 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.308087359 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.874135234 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.798635128 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.305927039 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.301049773 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.638258086 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.301944204 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.590960888 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.335781319 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.303014222 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.818996179 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.309723858 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.351312158 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.317875617 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.301537957 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.966340076 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.305198992 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.585756506 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.365756633 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.308325927 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.310033014 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.325099656 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.30339181 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.308615887 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.315352865 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.845051755 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.333466053 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.429145935 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.322965148 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.311010525 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.313163156 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.309770881 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.307827943 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.531350683 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.891752539 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.315798854 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.313150908 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.307104 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.314553753 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.480218317 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.317367462 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.636479378 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.316017812 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.311094799 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.312929978 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.053350542 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.355974252 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.307604868 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.316187296 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.236060683 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.510976089 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.327838452 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.306691162 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.320078302 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.311972998 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.655119091 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.335537407 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.39574565 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.309402247 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.025886392 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.361446432 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.320322334 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.595052246 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.31223477 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.210376414 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.322639602 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.314070957 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.60225031 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.579019897 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.483097765 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.307597534 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.326593185 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.991209962 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.364299358 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.445448236 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.326532191 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.357520918 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.509606796 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.41885693 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.310441253 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.904586956 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.310853938 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.520034322 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.311407114 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.611994603 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.805849433 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.329638031 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.31974129 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.026218835 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.04877416 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.014559598 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.320434944 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.589813034 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.283016867 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.794814059 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.314388878 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.310994293 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.783450942 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.323023297 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.315095572 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.316773553 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.318266504 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.456453889 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.490965778 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.518556693 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.313463413 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.792943294 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.326655512 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.312580162 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.339510956 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.315155717 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.668748752 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.318270753 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.317875011 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.341438304 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.320963244 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.317198666 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.814275533 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.16546237 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.319773808 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.468663562 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.957089067 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.337456596 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.321448537 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.062874169 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.322115757 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.851215434 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.348376902 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.652515481 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.320671441 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.354781924 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.002370137 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.405861949 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.794354187 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.317341816 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.31633479 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.93412181 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.338657364 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.378612796 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.315308545 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.321742258 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.867048113 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.33721492 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.32633022 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.573787269 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.334137658 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.564497102 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.317902169 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.332667977 seconds)
  done (took 1104.853522618 seconds)
done (took 1299.413524801 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.322019291 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.321913266 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.311221505 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.317045367 seconds)
  done (took 26.508366562 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.321168129 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.321063598 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.320462513 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.316785609 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.325486837 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.317635811 seconds)
  done (took 9.150310468 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.369920268 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.315387707 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.316465226 seconds)
  done (took 19.231631351 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.532195867 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.610920558 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.658091432 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.5709733 seconds)
  done (took 10.606203652 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.321259902 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.320874769 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.324579583 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.327942657 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.329681334 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.329583123 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.329573868 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.327063352 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.330547607 seconds)
  done (took 13.177598432 seconds)
done (took 79.912097463 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.709971659 seconds)
    (2/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.43640528 seconds)
    (3/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.960955054 seconds)
    (4/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.304930941 seconds)
    (5/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.349000899 seconds)
    (6/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.615997812 seconds)
    (7/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.301408371 seconds)
    (8/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.33718895 seconds)
    (9/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.334746948 seconds)
    (10/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.308797311 seconds)
    (11/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.093396012 seconds)
    (12/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.597384021 seconds)
    (13/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.349001401 seconds)
    (14/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.560814251 seconds)
    (15/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.357325412 seconds)
    (16/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.310001682 seconds)
    (17/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.236349663 seconds)
    (18/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.343156972 seconds)
    (19/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.307070976 seconds)
    (20/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.315238097 seconds)
    (21/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.32742265 seconds)
    (22/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.54131133 seconds)
    (23/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.327000873 seconds)
    (24/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.86990006 seconds)
    (25/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.323067887 seconds)
    (26/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.839797885 seconds)
    (27/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.750784207 seconds)
    (28/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.451821622 seconds)
    (29/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.899905048 seconds)
    (30/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.331959761 seconds)
    (31/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.532502968 seconds)
    (32/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.250745073 seconds)
    (33/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.339012568 seconds)
    (34/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.921019688 seconds)
    (35/286) benchmarking ("sort", Int64, true)...
    done (took 6.312804554 seconds)
    (36/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.30662404 seconds)
    (37/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.304279662 seconds)
    (38/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.453358016 seconds)
    (39/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.444491048 seconds)
    (40/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.308633133 seconds)
    (41/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.801781779 seconds)
    (42/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.842138095 seconds)
    (43/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.308282834 seconds)
    (44/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.331190096 seconds)
    (45/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.321265988 seconds)
    (46/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.319039935 seconds)
    (47/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.219290355 seconds)
    (48/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.870528213 seconds)
    (49/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.312169835 seconds)
    (50/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.299885215 seconds)
    (51/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.684532655 seconds)
    (52/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.45147661 seconds)
    (53/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.579677845 seconds)
    (54/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.304641751 seconds)
    (55/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.314022899 seconds)
    (56/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.321258462 seconds)
    (57/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.099763712 seconds)
    (58/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.936641347 seconds)
    (59/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.339045781 seconds)
    (60/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.707398794 seconds)
    (61/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.344797781 seconds)
    (62/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.351059957 seconds)
    (63/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.986367013 seconds)
    (64/286) benchmarking ("sort", Float32, false)...
    done (took 5.320014582 seconds)
    (65/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.378537982 seconds)
    (66/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.556877442 seconds)
    (67/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.318920905 seconds)
    (68/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.052468128 seconds)
    (69/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.292596452 seconds)
    (70/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.172687149 seconds)
    (71/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.378147416 seconds)
    (72/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.314598457 seconds)
    (73/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.332057795 seconds)
    (74/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.489022453 seconds)
    (75/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.748002841 seconds)
    (76/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.360943846 seconds)
    (77/286) benchmarking ("sort", Int64, false)...
    done (took 5.566108465 seconds)
    (78/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.40503109 seconds)
    (79/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.71389485 seconds)
    (80/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.294297096 seconds)
    (81/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.115107623 seconds)
    (82/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.321387131 seconds)
    (83/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.427533533 seconds)
    (84/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.433276921 seconds)
    (85/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.313988449 seconds)
    (86/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.370761951 seconds)
    (87/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.111212833 seconds)
    (88/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.222917424 seconds)
    (89/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.194289474 seconds)
    (90/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.612845066 seconds)
    (91/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.336919493 seconds)
    (92/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.32727173 seconds)
    (93/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.386795063 seconds)
    (94/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.750020468 seconds)
    (95/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.370423168 seconds)
    (96/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.354616156 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.943625564 seconds)
    (98/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.685544719 seconds)
    (99/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.329266096 seconds)
    (100/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.449938663 seconds)
    (101/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.31682798 seconds)
    (102/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.387941042 seconds)
    (103/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.315635308 seconds)
    (104/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.161897099 seconds)
    (105/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.460477645 seconds)
    (106/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.31529312 seconds)
    (107/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.056069554 seconds)
    (108/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.344128 seconds)
    (109/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.437338174 seconds)
    (110/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.581390131 seconds)
    (111/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.212228003 seconds)
    (112/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.561346193 seconds)
    (113/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.343581781 seconds)
    (114/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.616961931 seconds)
    (115/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.315350832 seconds)
    (116/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.331529198 seconds)
    (117/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.407557937 seconds)
    (118/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.279477305 seconds)
    (119/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.842338591 seconds)
    (120/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.379629899 seconds)
    (121/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.974519752 seconds)
    (122/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.313453242 seconds)
    (123/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.710183731 seconds)
    (124/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.885558137 seconds)
    (125/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.801696068 seconds)
    (126/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.458584968 seconds)
    (127/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.358820366 seconds)
    (128/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.749768056 seconds)
    (129/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.853630295 seconds)
    (130/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.314031886 seconds)
    (131/286) benchmarking ("sort", Bool, false)...
    done (took 1.908397086 seconds)
    (132/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.354147461 seconds)
    (133/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.394845946 seconds)
    (134/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.462374304 seconds)
    (135/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.587828433 seconds)
    (136/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.977443638 seconds)
    (137/286) benchmarking ("sort", Int8, true)...
    done (took 6.33151279 seconds)
    (138/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.455035847 seconds)
    (139/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.202519105 seconds)
    (140/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.166253102 seconds)
    (141/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.013522772 seconds)
    (142/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.592176774 seconds)
    (143/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.314029439 seconds)
    (144/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.310792272 seconds)
    (145/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.335685444 seconds)
    (146/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.349530388 seconds)
    (147/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.218401637 seconds)
    (148/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.461597087 seconds)
    (149/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.814533185 seconds)
    (150/286) benchmarking ("sort", Float64, false)...
    done (took 5.656867746 seconds)
    (151/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.147962086 seconds)
    (152/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.580463413 seconds)
    (153/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.1237989 seconds)
    (154/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.351335949 seconds)
    (155/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.357570055 seconds)
    (156/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.744188242 seconds)
    (157/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.366765529 seconds)
    (158/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.916562128 seconds)
    (159/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.428953754 seconds)
    (160/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.321452858 seconds)
    (161/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 3.068448207 seconds)
    (162/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.356338775 seconds)
    (163/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.283984 seconds)
    (164/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.54531872 seconds)
    (165/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.342902042 seconds)
    (166/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.33032831 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.066425616 seconds)
    (168/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.315723698 seconds)
    (169/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.340869794 seconds)
    (170/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.230098418 seconds)
    (171/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.739727881 seconds)
    (172/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.321642865 seconds)
    (173/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.570906587 seconds)
    (174/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.370732331 seconds)
    (175/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.456992591 seconds)
    (176/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.940219992 seconds)
    (177/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.334821448 seconds)
    (178/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.370385146 seconds)
    (179/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.3142394 seconds)
    (180/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.434998306 seconds)
    (181/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.434260447 seconds)
    (182/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.392751213 seconds)
    (183/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.347220709 seconds)
    (184/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.351820626 seconds)
    (185/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.453760535 seconds)
    (186/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.334096514 seconds)
    (187/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.387641635 seconds)
    (188/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.738138579 seconds)
    (189/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.097573951 seconds)
    (190/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.356649669 seconds)
    (191/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.322120858 seconds)
    (192/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.418998403 seconds)
    (193/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.795211044 seconds)
    (194/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.323804073 seconds)
    (195/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.415194552 seconds)
    (196/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.377401942 seconds)
    (197/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.322618489 seconds)
    (198/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.167926469 seconds)
    (199/286) benchmarking ("sort", Float32, true)...
    done (took 6.329770225 seconds)
    (200/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.517553776 seconds)
    (201/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.354685966 seconds)
    (202/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.382084984 seconds)
    (203/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.984521729 seconds)
    (204/286) benchmarking ("sort", Bool, true)...
    done (took 5.405187742 seconds)
    (205/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.409729667 seconds)
    (206/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.489300954 seconds)
    (207/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.246085459 seconds)
    (208/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.917592344 seconds)
    (209/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.900205746 seconds)
    (210/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.422570588 seconds)
    (211/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.811864774 seconds)
    (212/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.328350548 seconds)
    (213/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.32953362 seconds)
    (214/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.60498048 seconds)
    (215/286) benchmarking ("sort", Int8, false)...
    done (took 4.360077822 seconds)
    (216/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.345070433 seconds)
    (217/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.559794171 seconds)
    (218/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.737887843 seconds)
    (219/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.237624506 seconds)
    (220/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.151530366 seconds)
    (221/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.486134441 seconds)
    (222/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.154164417 seconds)
    (223/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.981231036 seconds)
    (224/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.344867043 seconds)
    (225/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.320715214 seconds)
    (226/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.363687203 seconds)
    (227/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.357781136 seconds)
    (228/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.914606591 seconds)
    (229/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.022540054 seconds)
    (230/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.337214002 seconds)
    (231/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.370202877 seconds)
    (232/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.335473797 seconds)
    (233/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.318776983 seconds)
    (234/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.44739358 seconds)
    (235/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.705012689 seconds)
    (236/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.760014649 seconds)
    (237/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.986237821 seconds)
    (238/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.366910098 seconds)
    (239/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.324927724 seconds)
    (240/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.724964712 seconds)
    (241/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.74971388 seconds)
    (242/286) benchmarking ("sort", Float64, true)...
    done (took 6.352964811 seconds)
    (243/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.758556885 seconds)
    (244/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.463694066 seconds)
    (245/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.55483501 seconds)
    (246/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.259675724 seconds)
    (247/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.360897453 seconds)
    (248/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.057556939 seconds)
    (249/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.46527812 seconds)
    (250/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.364614113 seconds)
    (251/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.323938772 seconds)
    (252/286) benchmarking ("sort", BigInt, false)...
    done (took 6.414268478 seconds)
    (253/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.328896734 seconds)
    (254/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.716988275 seconds)
    (255/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.357748843 seconds)
    (256/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.418157142 seconds)
    (257/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.365433638 seconds)
    (258/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.418562094 seconds)
    (259/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.324127143 seconds)
    (260/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.694208573 seconds)
    (261/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.446162217 seconds)
    (262/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.608041111 seconds)
    (263/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.355836302 seconds)
    (264/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.36695596 seconds)
    (265/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.582421874 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.432341142 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.42249494 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.492730876 seconds)
    (269/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.348776758 seconds)
    (270/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.80272674 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.156757467 seconds)
    (272/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.333237638 seconds)
    (273/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.613364186 seconds)
    (274/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.032186157 seconds)
    (275/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.367699346 seconds)
    (276/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.445981992 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.381351851 seconds)
    (278/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.539058854 seconds)
    (279/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.367860193 seconds)
    (280/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.993135422 seconds)
    (281/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.261455578 seconds)
    (282/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.42204621 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.363241701 seconds)
    (284/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.355707883 seconds)
    (285/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.85275004 seconds)
    (286/286) benchmarking ("sort", BigInt, true)...
    done (took 6.342249071 seconds)
  done (took 945.016710779 seconds)
done (took 946.254828004 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.372473985 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.370949627 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.349927267 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.373827336 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.460035513 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.527403563 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.361305432 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.353773532 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.398065535 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.401877417 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.351107391 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.528300138 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.353004415 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.352375437 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.350864546 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.369153041 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.494505047 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.356327039 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.370360283 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.361883932 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.3668726 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.351004371 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.402670429 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.527462895 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.357141958 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.354845612 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.35614616 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.372478493 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.464143018 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.356818557 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.355846828 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.365360565 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.494590814 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.352249565 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.348892328 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.373038757 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.365892167 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.363138928 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.359180351 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.386148183 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.855864838 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.34935442 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.355417733 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.354857756 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.353602508 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.357992411 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.355375792 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.360107447 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.367829635 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.369103095 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.84645383 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.364334741 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.357445316 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.356772098 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.365935452 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.354812278 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.358464154 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.372268946 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.374245499 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.372702714 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.485144775 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.360465129 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.358671947 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.371391708 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.362222615 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.888061447 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.346287778 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.360242263 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.864179293 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.354677413 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.88993326 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.35988774 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.358343662 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.368977896 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.389506932 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.500604737 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.353451992 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.356194618 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.364878607 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.355216074 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.365839353 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.369689384 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.362241703 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.357066939 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.371341209 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.533570773 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.367712779 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.358395016 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.365499757 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.376462145 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.365069049 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.368547722 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.360906795 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.353371512 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.366860229 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.360633017 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.360241345 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.360677557 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.362976559 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.369224965 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.866643016 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.370646245 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.355517182 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.354396102 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.358696045 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.373458348 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.940613265 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.359602056 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.380198821 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.406606144 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.360525411 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.447610137 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.357900187 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.376040946 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.3667129 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.360197824 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.35412708 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.442925286 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.953639178 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.375574836 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.360915812 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.35670499 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.376366973 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.360573393 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.357064187 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.464839069 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.355210385 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.375714808 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.480432777 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.368619229 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.39123513 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.357328587 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.363129858 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.390474723 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.377343226 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.390592764 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.362709083 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.377233222 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.375377295 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.357826695 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.3669842 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.371457924 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.360263148 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.36435874 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.354137959 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.390857156 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.3719724 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.374808594 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.380318532 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.48133196 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.358252682 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.443217386 seconds)
done (took 230.880842156 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.422519056 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.356458943 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.449681569 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.357037244 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.459517697 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.452400174 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.356667876 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.355317121 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.356113936 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.742330818 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.355576763 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.354747326 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.348373472 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.35477687 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.441087958 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.356133784 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.351648641 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.710621442 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.360836192 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.429979528 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.35371415 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.356036719 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.357816736 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.74728074 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.35561081 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.352831542 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.43183628 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.35894647 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.70928961 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.35901799 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.352937911 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.710654035 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.451415368 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.374086533 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.369359359 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.366376989 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.461310224 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.372704297 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.443163502 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.442277583 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.453414454 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.401059087 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.349995906 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.356259941 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.357019479 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.361785193 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.360071689 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.387965367 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.351504781 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.357351432 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.712353753 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.37162118 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.360756325 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.358008437 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.359684875 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.391341412 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.359877007 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.36243702 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.448717076 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.36336819 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.42346381 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.748623607 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.745224331 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.363442174 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.360931637 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.361229031 seconds)
  done (took 150.191015945 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.430036229 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.432172698 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.475804191 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.356629765 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.413283332 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.484879095 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.361877988 seconds)
  done (took 11.221372759 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.367996807 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.364610066 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.413699417 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.413944895 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.36452468 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.541644524 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.364083754 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.374852956 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.361306829 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.416186157 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.370510944 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.364936091 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.370120444 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.364888065 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.412425173 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.37377774 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.477673096 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.36407369 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.367201175 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.514161205 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.359326716 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.369826827 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.417259901 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.375541544 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.370905208 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.370452794 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.184756841 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.366408458 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.361700583 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.365358048 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.362206103 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.439076916 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.366082282 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.35937623 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.364223704 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.480969405 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.366365162 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.361293029 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.36565064 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.360215008 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.366128867 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.365717732 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.365371113 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.364000653 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.366385981 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.38828891 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.366780371 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.365371798 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.366143898 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.365610836 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.420079671 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.364738484 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.36076755 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.364591631 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.421467748 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.372252944 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.36770508 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.363707262 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.368905838 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.366829216 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.517232999 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.413540862 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.367196358 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.414670652 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.369659158 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.367861534 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.366484758 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.367975377 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.43211058 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.367616603 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.415756467 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.365118593 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.553344459 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.390054329 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.370822936 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.370031989 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.370451103 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.370959786 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.368790324 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.37373918 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.365275463 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.369295214 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.373846531 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.366724193 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.365553656 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.535717693 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.480236954 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.367446028 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.381949835 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.376671061 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.365148504 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.420865694 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.371649558 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.367086371 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.420136236 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.48214141 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.42234449 seconds)
  done (took 156.815538633 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.374551516 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.376659197 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.372313729 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.393222954 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.365694763 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.367752494 seconds)
  done (took 9.522824277 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.372736417 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.370437006 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.367480988 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.370053313 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.369058558 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.373761034 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.371537977 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.370863891 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.375178416 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.370964306 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.375064913 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.371588647 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.374786311 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.373468661 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.372298416 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.371781736 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.373298277 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.368015522 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.372141115 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.373448829 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.467440648 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.374215966 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.373570014 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.37223561 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.381942495 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.372027176 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.379302629 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.370331922 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.373900237 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.379884666 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.377328801 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.377976645 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.372275886 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.378089986 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.376895808 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.372857524 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.377757023 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.373340715 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.363837846 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.375661831 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.373978925 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.367837685 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.3717237 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.374926318 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.370495335 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.379064175 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.379190065 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.376794946 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.37452794 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.37631992 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.374782173 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.373642954 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.378924512 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.374571746 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.371768613 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.395079405 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.378506526 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.372381217 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.376865875 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.375161169 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.377965146 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.378793572 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.378363708 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.379972161 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.383208512 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.374714971 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.374397361 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.380716034 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.375636999 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.375696564 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.375229081 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.372436044 seconds)
  done (took 101.347287968 seconds)
done (took 430.363829102 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.870723713 seconds)
  done (took 8.148141845 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.547837755 seconds)
  done (took 7.826157847 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.007772815 seconds)
  done (took 24.292975485 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.43577029 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.413368096 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.38198206 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.366093598 seconds)
  done (took 26.87698221 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.838751103 seconds)
  done (took 8.117373985 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.37846778 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.360888364 seconds)
  done (took 14.019808341 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.533273528 seconds)
  done (took 7.813323038 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.378114736 seconds)
  done (took 7.661720082 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.382452463 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.362432382 seconds)
  done (took 14.037405332 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.371327733 seconds)
  done (took 7.6529727 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.835855922 seconds)
  done (took 12.11597832 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.376320072 seconds)
  done (took 7.658184966 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.437679893 seconds)
  done (took 7.716467164 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.938741148 seconds)
  done (took 10.219626654 seconds)
done (took 165.43721097 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.367903788 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.370422141 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.372612739 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.369074812 seconds)
  done (took 26.758560513 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.410198345 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.430447068 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.410941271 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.421863665 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.413600326 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.41187179 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.417891294 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.402961867 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.421177483 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.413402459 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.420493877 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.411722853 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.410200746 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.40375706 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.417401282 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.410935896 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.421393303 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.409662394 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.402861511 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.413465943 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.379188704 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.426005347 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.418662154 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.377670455 seconds)
  done (took 35.161431722 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.897362779 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.450656651 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.530643414 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.432364087 seconds)
  done (took 7.592823004 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.430832586 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.4331177 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.445933093 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.483130896 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.506060087 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.440632403 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.404932635 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.398403955 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.388464422 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.433525219 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.512324753 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.447021283 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.527648421 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.37917461 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.564349221 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.378379902 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.379047728 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.432625054 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.48358227 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.494938577 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.379116654 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.431789577 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.43628176 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.449315617 seconds)
  done (took 35.94224784 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.379250162 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.40025022 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.378010784 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.378690856 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.386802374 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.378898306 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.379123419 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.381148173 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.379248898 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.386175397 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.377562827 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.392568157 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.378630732 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.378810306 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.38661073 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.382524329 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.386088858 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.380850163 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.379266588 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.386880726 seconds)
  done (took 28.940015456 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.374353513 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.22653469 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.725183074 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.628290263 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.374514255 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.367308774 seconds)
  done (took 27.979883241 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.455862313 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.597975884 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.376065121 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.774624018 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.842641389 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.377384385 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.383023652 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.639025615 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.987074963 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.973872042 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.444084877 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.450978543 seconds)
  done (took 20.589661605 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.382058601 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.377250793 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.380181923 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.39180986 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.441415312 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.387291176 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.388793671 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.374690149 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.444240734 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.446623921 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.385512221 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.443743787 seconds)
  done (took 38.129108159 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464719643 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.423356423 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.364196557 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.409391866 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.0896227 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.580358095 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.417833316 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.099836574 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.373968194 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650090471 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37700033 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459754298 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.632423091 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374735007 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.380169711 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.415348329 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.59606033 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879908411 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372821829 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.689810603 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402906149 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.379459814 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.713070511 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.620868622 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.590849304 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.354458573 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.638430679 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.150223769 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.686369435 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.392694199 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388008703 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.376610717 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652963591 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055130817 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467387841 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.606358189 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381958309 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.936480612 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.367419634 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.683681969 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382863349 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.373719839 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390611335 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379262933 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.314220878 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381490567 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.119840204 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.377689968 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.091536147 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.381065105 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.6603314 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478149486 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.385536274 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.951201543 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.410946398 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.376707446 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.386559915 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.47988016 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945433156 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.987243263 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390353486 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.313996542 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.396181046 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.715244326 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046631837 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.389330071 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.386487896 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.38601807 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315430774 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.696387297 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.398415044 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.544124923 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.399673068 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.030695751 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.121666552 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.383958506 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.306652303 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934098211 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.394473759 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.31722758 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.610142621 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.158329434 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320598143 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.328826869 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.316718728 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.090080282 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384829798 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.819133871 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.399658545 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.110019697 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.609024033 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405755802 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40777418 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.609147881 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.27703098 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384480979 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.386878865 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504001763 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399320599 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.116444258 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.312033185 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.377034898 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.640637008 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.597032283 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.385551481 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.427496578 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.877275213 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379387566 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.404900717 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.3911873 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.617455557 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.008433443 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.401971665 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.004746195 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405324731 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.164898475 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.135281335 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381867971 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.391853001 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.400534033 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673651929 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.173590828 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.262726655 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45494794 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.391761807 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.383902564 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.65092651 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.229226625 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.268176773 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.612484257 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.412632472 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.39710301 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.389150282 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.332935818 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.387408552 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396987475 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.157701773 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.611039236 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.402185547 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663513962 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.322216647 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.535355233 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.38903465 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.599946816 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.639186457 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.384585676 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.647418884 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395139944 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.3897858 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.398257655 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405066893 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487731293 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411764413 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.398544526 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.643493551 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.389439977 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.39443752 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.629373918 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.159196115 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392951421 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.393446738 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409029651 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.000480235 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364118265 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.389859532 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.276393536 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.40207148 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457468358 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.395277425 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.624039636 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.746082477 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401308338 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.388907397 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.390246233 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.612328908 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.401918913 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.703748203 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.46870963 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.889305128 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.014003325 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.401162241 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.325112628 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.100387089 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.082090858 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391069765 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.585118572 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.391840747 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.625963496 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.40776751 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.411022213 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.010395214 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393660399 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.746353621 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.391567392 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.404358307 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.39750398 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3932391 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.747216237 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.014907762 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393159944 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.402695073 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.5353301 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.402735351 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.325481032 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.908782569 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.397129276 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.392980612 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.168162289 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428640366 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.754190517 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.224006879 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.644100752 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.396124712 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.687946897 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.715519859 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.418448847 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.390470086 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.409342439 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398676934 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.393960144 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394837752 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.400306561 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.72970584 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.831237025 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952377772 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.177306437 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956302822 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.727476174 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.400380491 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.295722389 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.135987011 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.322523308 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.05002465 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652053908 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.134385915 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33100509 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.892584861 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.653163767 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.219349632 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.677617259 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.625335572 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.723862673 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.402784459 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.672018103 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.605832262 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42987392 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.409789128 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.323660279 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.678483328 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.978807423 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389360332 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.465838351 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.13970505 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.388865473 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.167827229 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.39593299 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.142499533 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.825703742 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.015382336 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.782561767 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.39771705 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.396594676 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.226477516 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.397416576 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.921825013 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045158181 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.400520736 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.899081101 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.325817515 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.629962257 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.409730342 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.404069907 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.070916895 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.400606314 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.64663897 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.67681746 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.333205709 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.395784626 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003217914 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.253789368 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.40440054 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3988912 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.13713062 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.392220633 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.724700231 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.412882127 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.807545531 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408511922 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.331764698 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.333556234 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.092006377 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.406223754 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377508898 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886775186 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.394538069 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391918484 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.401099169 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.250906512 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.653597126 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.411632261 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.029740159 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.626127365 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.402581999 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436523386 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.40344173 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.412208486 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.381475278 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.284681873 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.635998921 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.479401878 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.635995975 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.414197511 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.30479611 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.475778404 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.607037846 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.279898929 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.414556642 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.659424227 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.112019477 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.420330296 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.123282066 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418916632 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.412377669 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.407364202 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.407882071 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.414578298 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46463615 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.638400501 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.415325991 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.410699549 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840063436 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405305476 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.39719224 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.41402419 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493633945 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.067826572 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.820970798 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.177086406 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.042699929 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.154200454 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.039134269 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.687966466 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.404017655 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404866271 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.336534768 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543854257 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.930631485 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676162559 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.531838475 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.40240634 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419474644 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.4012647 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.399609745 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615189153 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674661675 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.271785 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410418714 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.061118575 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.296683379 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.413404284 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.611858146 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89873816 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958110535 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506381603 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.398336503 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.144369785 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669847272 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.491379845 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.404481861 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.99245459 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.402018091 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.161618502 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.401539643 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403473401 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543458811 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.68719493 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.103781255 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.40792656 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.559242074 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.177663846 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.790391236 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.660239173 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.891584879 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.63532867 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.03453159 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.144709093 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.660146815 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474847199 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.641170489 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.510644283 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.55259427 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.408343821 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.295763805 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.407064429 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.249370273 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.114532052 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.415504237 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.046006616 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.670077364 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.408747534 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.410481767 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423136499 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.41799742 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.629412416 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.128970602 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.623244441 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.414432591 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.41660309 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.977036938 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.04958873 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.694961957 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.342294687 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.402269622 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.673148573 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.644121824 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.434650889 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.882445661 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.117516677 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974208424 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.371086168 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4286154 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.407746224 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.197493131 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.043699371 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.787173263 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903309283 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.057973477 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.406119204 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682289727 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.412332847 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.414632747 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684300603 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.411100127 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.415630949 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.647704509 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.036476194 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.241014671 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.406824441 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.81511746 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.34440681 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.633784381 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.42823623 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.338638384 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.401847972 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.881488981 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.429406768 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.540047128 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.413951115 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.405850969 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418308038 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.165476194 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.695454226 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.407192908 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.400206698 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.391018009 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.436584749 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.513872444 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.994276428 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406895444 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.13280814 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.759628628 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.666224875 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.410415955 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.416016761 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.413936522 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411912666 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.12696656 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.373609298 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.403156762 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966883469 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.416790866 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.421058696 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.414545699 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.627064727 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.62130713 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.407771859 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.64565958 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.426709426 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.426062023 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.321473851 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.178320194 seconds)
  done (took 1693.282388309 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.449080449 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.422985377 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.426349982 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.468114121 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.41796868 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.431538401 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.506315064 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.437318053 seconds)
  done (took 52.877470648 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.416658349 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.571405093 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.436813507 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.425098333 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.422760967 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.415188111 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.903137225 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.409649846 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.414324648 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.421759587 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.418091886 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.408916999 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.115140251 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.415490811 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.41921217 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.400124582 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.415992706 seconds)
  done (took 66.755649909 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.843148791 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.674311088 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.79573933 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.437809117 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.430387011 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.414359195 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.730097289 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.42371625 seconds)
  done (took 55.069328222 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.426980858 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.422870037 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.424135412 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.422237834 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.424012474 seconds)
  done (took 8.44035212 seconds)
done (took 2098.80132571 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.416194449 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.41955464 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.418253196 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.42028165 seconds)
  done (took 6.994146154 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.402693592 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.141466198 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.397242854 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.411062356 seconds)
  done (took 18.674047739 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.41668093 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.437574299 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.183337131 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.09462257 seconds)
  done (took 5.598974821 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.167361638 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.173485092 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.158566456 seconds)
  done (took 7.818779952 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.412839499 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.412901009 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.412774474 seconds)
  done (took 20.559877114 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.713266947 seconds)
  done (took 3.035039093 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.561150042 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.605426544 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.730917558 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.758166055 seconds)
  done (took 7.97581619 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.79955815 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.816962456 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.608328422 seconds)
  done (took 6.546637809 seconds)
done (took 91.379686535 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.477518345 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.652464204 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.622106023 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.444023892 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.641206788 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.681339939 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.838056597 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.415768817 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.959557338 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.938842908 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.444609707 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.643338519 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.570306076 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.659777538 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.573632585 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.424753668 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.830807609 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.524849515 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.16364334 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.325809109 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.837520371 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.087643827 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.2786214 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.107287253 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.781971238 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.558273502 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.665458496 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.418009184 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.348176314 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.696761758 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.555435432 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.415079339 seconds)
  done (took 198.904895762 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.413823721 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.409264209 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.428001101 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.406546177 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.408627348 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.40889632 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.409225266 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.407442465 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.43028792 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.409695454 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.409449056 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.413058667 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.412753987 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.412791624 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.408408949 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.413169118 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.406700585 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.439951172 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.408012599 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.420656507 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.411195258 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.42490086 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.412351379 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.408862926 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.423545339 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.408949914 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.436869051 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.410669367 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.413484586 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.407897446 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.407687709 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.428431167 seconds)
  done (took 206.59115881 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.419285139 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.410206661 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.410024089 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.407883381 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.422137252 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.411487495 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.40886459 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.432890941 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.410421279 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.420582938 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.41355142 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.408798181 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.412297482 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.43907537 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.411651944 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.411869439 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.409325575 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.420258894 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.412192615 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.410922773 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.41251399 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.41518855 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.4253514 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.413109941 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.435414287 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.410771252 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.412357507 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.426957322 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.413883389 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.443499234 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.414859778 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.425033397 seconds)
  done (took 206.678206362 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.620101989 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.428490749 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.429791974 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.360931725 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.42738674 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.42634037 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.418059183 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.614993722 seconds)
  done (took 15.051784217 seconds)
done (took 628.54889906 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.844676335 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.514327376 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.624095168 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.439412368 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.263932442 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.461190791 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.44968161 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.635488471 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.3606312 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.632403256 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.758578456 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.440143228 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.910830225 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.441079035 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.717812327 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.545881178 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.330420851 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.437618542 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.779980563 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.031112382 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.714183888 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.02791833 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.643499342 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.380519221 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.923588457 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.9755834 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.189128685 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.348271101 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.452423953 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.789972895 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.224443216 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.488382909 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.491076523 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.492936609 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.552417914 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.54716546 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.442339262 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.50833635 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.63835648 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.743392812 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.030942247 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.175958191 seconds)
  done (took 96.729458994 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.424574136 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.419441257 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.419196745 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.419440793 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.424934099 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.422957604 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.418594135 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.422860765 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.420759546 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.419855228 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.421679618 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.42276534 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.419726535 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.424937073 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.41864951 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.420109303 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.425085217 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.424442501 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.42039355 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.423798169 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.422288697 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.418790393 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.42419743 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.421599453 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.427015618 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.423020502 seconds)
  done (took 38.303365032 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.436021598 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.688681647 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.870854966 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.43342811 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.435586333 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.439091527 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.523365701 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.431960148 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.438323856 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.437376218 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.611713213 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.432102478 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.473551845 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.903603217 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.440579305 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.437656742 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.436300285 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.437213512 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.699786024 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.437621592 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.542435672 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.437080563 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.523230299 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.440061342 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.459240276 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.43689489 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.439358365 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.006802664 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.431710744 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.613991713 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.290038698 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.521771982 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.954274102 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.88870512 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.300187183 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.441781619 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.43961993 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.620439878 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.432910115 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.440609358 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.525962846 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.433129426 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.893301731 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.11876317 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.460159643 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.439696913 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.029837245 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.611523928 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.707184814 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.441694965 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.920402908 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.444908139 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.441735443 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.440024601 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.711481126 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.447030454 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.438048223 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.030066485 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.462197951 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.525325996 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.434778582 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.441652607 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.709026021 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.432580759 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.694608309 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.434056607 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.447972237 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.454434077 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.894127882 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.444464547 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.144185723 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.458723629 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.437196924 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.611654737 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.690884436 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.056041059 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.435802854 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.72029821 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.969811374 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.519210235 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.440072179 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.99326525 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.523977333 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.440150196 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.442534219 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.444063695 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.441870691 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.542920049 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.526550796 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.067123671 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.129564832 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.058690636 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.548387895 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.444313262 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.441511448 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.030779516 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.461144554 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.442600428 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.890114476 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.145484926 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.463502189 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.448418301 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.144722183 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.466901335 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.530306361 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.449649317 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.904929988 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.444452165 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.489513673 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.442491387 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.449967691 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.461491957 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.531579123 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.449549999 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.443095925 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.121076772 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.645249218 seconds)
  done (took 189.73863424 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.436703672 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.42935488 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.454279287 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.428313163 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.436723449 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.442577832 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.436598264 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.433435164 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.441603286 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.432890424 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.435577703 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.436716397 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.436499367 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.459340152 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.443575395 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.445339183 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.050959798 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.438507187 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.438293975 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.429625923 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.245061983 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.441923645 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.438083417 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.429925911 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.43762881 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.439546339 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.459591113 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.433577059 seconds)
  done (took 155.054027908 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.444448753 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.087148231 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.449354785 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.584105787 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.466414078 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.443896379 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.589167501 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.509724755 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.439016174 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.442850723 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.442284588 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.792400512 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.448989676 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.028679836 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.65830881 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.588932655 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.027009895 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.463285602 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.441581479 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.443018015 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.593614207 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.457037305 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.77113625 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.047843958 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.440461556 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.052652614 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.43276893 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.447503273 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.442954737 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.05532155 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.439111088 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.773107747 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.527498964 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.513478441 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.048776269 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.015621308 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.021165221 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.600790226 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.439006579 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.444427852 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.444102947 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.437757186 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.055369444 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.443069269 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.44437276 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.045500403 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.449857803 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.435624805 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.440222302 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.430457911 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.497385762 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.495769542 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.763732717 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.047958523 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.521098864 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.449602529 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.576647781 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.818294872 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.438871862 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.986941664 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.427712954 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.047036682 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.453659627 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.425338078 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.434314636 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.442404316 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.601174222 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.583070181 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.02418329 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.460923574 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.986725326 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.620327473 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.442368842 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.431625992 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.43599108 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.049790789 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.995014763 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.615840689 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.59402922 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.653532123 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.435695958 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.435577024 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.427636372 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.520932058 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.441965565 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.053561284 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.039079617 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.461408181 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.434246852 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.436726742 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.434324952 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.629564728 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.057039054 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.521080745 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.994817422 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.784921459 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.765702194 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.436071466 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.497444219 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.451614605 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.768563488 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.437638014 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.497465691 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.886814855 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.766667387 seconds)
  done (took 172.265812385 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.703617268 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.723262163 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.533086294 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.588356597 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.06857221 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.009110436 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.759161624 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.580577747 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.561330364 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.714802374 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.65854133 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.527644789 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.66189408 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.517356433 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.179630921 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.507948708 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.533231289 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.587700593 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.579371295 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.528474578 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.125513215 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.745139194 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.636340419 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.418268765 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.537369858 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.243672197 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.018855171 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.001987253 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.621992835 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.829861801 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.990129328 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.583721799 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.455046854 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.161442143 seconds)
  done (took 69.236543905 seconds)
done (took 722.655645275 seconds)
SAVING RESULT...
DONE!
