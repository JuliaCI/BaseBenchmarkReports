cset: moving following pidspec: 23628
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.346720842 seconds)
loading group "string"... done (took 0.539259696 seconds)
loading group "linalg"... done (took 7.055361939 seconds)
loading group "parallel"... done (took 0.156976904 seconds)
loading group "find"... done (took 1.109062335 seconds)
loading group "tuple"... done (took 1.753010557 seconds)
loading group "dates"... done (took 1.248338358 seconds)
loading group "micro"... done (took 0.220157495 seconds)
loading group "io"... done (took 0.910486158 seconds)
loading group "scalar"... done (took 36.111190932 seconds)
loading group "sparse"... done (took 11.191272097 seconds)
loading group "broadcast"... done (took 0.919031092 seconds)
loading group "union"... done (took 11.865402405 seconds)
loading group "simd"... done (took 4.12871849 seconds)
loading group "random"... done (took 8.505091746 seconds)
loading group "problem"... done (took 1.860694981 seconds)
loading group "array"... done (took 19.783163633 seconds)
loading group "misc"... done (took 1.659382846 seconds)
loading group "sort"... done (took 3.245819351 seconds)
loading group "collection"... done (took 16.391222762 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.479771614 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.121692391 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.113130976 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117459429 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.144357646 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.113827041 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122028749 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082952482 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.012605584 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.146887492 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117377929 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.414396186 seconds)
done (took 5.3141455 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.170769781 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082000763 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080629833 seconds)
  done (took 1.309989157 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065145564 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121048301 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06551634 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066164406 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066271925 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066296365 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065330981 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065788876 seconds)
  done (took 1.662746592 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.07227341 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067704679 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068671247 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067785587 seconds)
  done (took 1.426125782 seconds)
done (took 5.794331823 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.760654897 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.201750993 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.18230983 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.398773276 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.128778248 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.153830575 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.634490945 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.318280443 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.186178063 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081409298 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104378179 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.317709221 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.110087011 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.635808222 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.07360543 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089177593 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.135099007 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.404046196 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066943455 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081218353 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088845811 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128415876 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.088316842 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.073944085 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.140935749 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067949146 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.129965204 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080185684 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066294969 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.206047943 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172163199 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.652067085 seconds)
  done (took 10.146442599 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095469011 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097029218 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.06860927 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136102728 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.09517378 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.06931374 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070405831 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066855183 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086188736 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127144787 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088334515 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.10117451 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064888602 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068742186 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083836344 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.202755752 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079172518 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081423257 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069930434 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075563073 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.115743237 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077629173 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077587304 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077261268 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127811939 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179927435 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098905675 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098716765 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066468301 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079939656 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114878392 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.12469028 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065118571 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065724588 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123536742 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093804126 seconds)
  done (took 4.598146589 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.285253419 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.139959769 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089854449 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.131477064 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064817144 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106606917 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064985847 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080157052 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.20187951 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.357653153 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.574278939 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110475241 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103090845 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067890258 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068390476 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066390505 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.342080047 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.107185783 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103205296 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080077884 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069943028 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068108098 seconds)
    (22/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.108339799 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067139054 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063339542 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067415632 seconds)
    (26/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.06415278 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.100024341 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.299306769 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.123268416 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067384947 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.925073612 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.125051225 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066670546 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100430105 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.162178984 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.21724231 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.142728644 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068381759 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064760537 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.150910072 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065376473 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072574343 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066761542 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084115556 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103794168 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112066112 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065381078 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067097106 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161713196 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064792039 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.07881143 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.997611042 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.160454707 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078379531 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06456507 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.24599924 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.086364155 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069025138 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064538259 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.203667888 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133021649 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067655076 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066834915 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067595188 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069121284 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.351666149 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066005061 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.653181091 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.067599759 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076846279 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071790847 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069126708 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072115935 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072041312 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085004277 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065877641 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074966782 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065603463 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065735103 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066540308 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083908857 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.356507086 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066386993 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067112802 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063928262 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085318327 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097548039 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066205594 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064294001 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101736026 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067475567 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.16924039 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.11093379 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06710412 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084387139 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069288796 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112981703 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.070590042 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.113934822 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067870678 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096299661 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069743753 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099619223 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.06457955 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081146622 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068322608 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.396883514 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065361053 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064597271 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068212664 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064933814 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.06718061 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066098649 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079562018 seconds)
  done (took 20.883758349 seconds)
done (took 38.062728664 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.271934172 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074485058 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.07472737 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074905197 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074586279 seconds)
  done (took 1.810449132 seconds)
done (took 3.033001441 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119943148 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.09860225 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064005703 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094770247 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06374863 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099496153 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098236239 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080618044 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098952696 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063928371 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096250913 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063781995 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063884071 seconds)
  done (took 2.347503917 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082672964 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082272151 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069538362 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082405029 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063451798 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082383131 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080484931 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087924819 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080513689 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071864485 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063310236 seconds)
  done (took 2.059654721 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081352193 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083560517 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068987538 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081425565 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063801091 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081434281 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080335921 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084769399 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080458108 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072800541 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063432323 seconds)
  done (took 2.05586425 seconds)
done (took 7.674039189 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076845586 seconds)
  done (took 1.28068311 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.586915589 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.057071191 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.08057217 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111107009 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.182801621 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118662417 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.278281732 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086002536 seconds)
  done (took 8.886166442 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.086932988 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069238997 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068869514 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.082442913 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070650632 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068200926 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067577204 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071000514 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069690661 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070214888 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.06869263 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071484602 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068942995 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071292801 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070113885 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.07099847 seconds)
  done (took 2.419259169 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091084138 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090048545 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073187109 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074379896 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071336611 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071399961 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073980317 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073186321 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070708462 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071423544 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074196558 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073200279 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071031121 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064354628 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.07360954 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074826665 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.07048843 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073993874 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074206645 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074400501 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073868158 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064019953 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071051034 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073437759 seconds)
  done (took 3.078677432 seconds)
done (took 16.877672432 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.1133031 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071074699 seconds)
  done (took 1.395414341 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081050084 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082494404 seconds)
  done (took 1.381716661 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084018552 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065417789 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090859524 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078228631 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066065818 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065341462 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089006932 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066240273 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065399294 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.06585796 seconds)
  done (took 1.955387882 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068812046 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078816205 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070320967 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081165621 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073835608 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064322038 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072292831 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067403199 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077774404 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062588065 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071190403 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082264014 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070985917 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084189756 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.0722842 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068271553 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070426913 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06724917 seconds)
  done (took 2.52703475 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065235954 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066432115 seconds)
  done (took 1.355096686 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067880564 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063741994 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066742973 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066664979 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063180487 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062377979 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063098369 seconds)
  done (took 1.674496787 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.382365361 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110149061 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.291882225 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070053474 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081195592 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.247892237 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064546045 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069613703 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070010868 seconds)
  done (took 2.650883082 seconds)
done (took 14.165677531 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.077746722 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084822238 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.093210516 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.361676612 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090992235 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065113538 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113284199 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.187508713 seconds)
done (took 2.30953579 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.213978119 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.609014186 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.381930386 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.196002612 seconds)
  done (took 2.412076548 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.321292082 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.085397864 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058224037 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066094003 seconds)
  done (took 1.766989375 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065465702 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067658826 seconds)
  done (took 1.365401345 seconds)
done (took 6.990253328 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065316036 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.083723102 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065116626 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.06367925 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065057597 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063302778 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.062662526 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063022503 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065439652 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.064976302 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.067934415 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065748361 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.065289787 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065500238 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063075069 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063167595 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065186591 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063226 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065898206 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064385042 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062767323 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064961991 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062862158 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063034136 seconds)
  done (took 2.830742213 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082582888 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065815422 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071397113 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070429747 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069355674 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070880468 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070595921 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065776688 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070658362 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067679168 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069276284 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069418386 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067392582 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069274013 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067648865 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069519364 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070553583 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06558871 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067580005 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069537819 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070208944 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065701982 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.06891385 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070355363 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068675054 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068679111 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068916971 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065831887 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070178721 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068833758 seconds)
  done (took 3.318086663 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069326503 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062690845 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063779062 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069620629 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06314854 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064574619 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.06272758 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063589039 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064077507 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062781819 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064284558 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062785619 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063022741 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064049507 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064096348 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066489372 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.077979808 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063430054 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063546497 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063343558 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065988503 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.06282981 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062924031 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062898543 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.174409944 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062714911 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.06343737 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062927736 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.06327788 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062540355 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065621355 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066257143 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06250776 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070040393 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066067676 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062650352 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066334853 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062550261 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063394461 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062407088 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062396743 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06256355 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062936616 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070201636 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062785837 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064251721 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.06318655 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064007803 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063034822 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065307628 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062157268 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062550107 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064952349 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063631872 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066896173 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062217833 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063450814 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062259989 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063606315 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062523695 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062548938 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062470454 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065156198 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063205017 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077160846 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069022561 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062688894 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064288037 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063890407 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065192279 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064623125 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075384387 seconds)
  done (took 6.005589559 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.08949239 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086522942 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064783943 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064450332 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061336695 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063390793 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066941899 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063159354 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064834717 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069046336 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063502836 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06454965 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065048578 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075660845 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063423403 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06507874 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068889236 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061557755 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063041262 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066703877 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063581501 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067076951 seconds)
  done (took 2.738828429 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.1543789 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069793579 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104947823 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072387479 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066927934 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072219193 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069404495 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06916667 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069365431 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06752743 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067293505 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069052093 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066672894 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067095075 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067369401 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067502911 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069045131 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067884549 seconds)
  done (took 2.605230933 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076216506 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065624978 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085262414 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065246415 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065443599 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067506272 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070220468 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073759284 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067756555 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065440258 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074136235 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067729453 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067791259 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065472931 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067428771 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.064901014 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067814954 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065137671 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073246143 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069855886 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069654696 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07345277 seconds)
  done (took 2.777435398 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079591522 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066933074 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082049299 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068021246 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061651517 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063979149 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069502396 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065676409 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069297407 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067028413 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065190238 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064237287 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068726768 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06535311 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068658595 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065020291 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066850078 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064984194 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066828582 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061068454 seconds)
  done (took 2.603455549 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086029449 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066844189 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067628427 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074852528 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066312228 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066831407 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074338508 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066631825 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066896515 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086629171 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066592265 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066892566 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07419656 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07168356 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06654648 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074465695 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075092872 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074161236 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066912668 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066452796 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086226372 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06678975 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074485056 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066445057 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067123464 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066437898 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067078347 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071357869 seconds)
  done (took 3.245771889 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065815741 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06542283 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062892988 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063673541 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063394322 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062494507 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063135082 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063063652 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065353799 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062904507 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065243557 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065422247 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065245076 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065284143 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065420974 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065536367 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065152313 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063108508 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062724717 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062752853 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065245608 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065074116 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065104486 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062973375 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062769798 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065024492 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062759752 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06310065 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065178518 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06296084 seconds)
  done (took 3.182045729 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074563351 seconds)
    (2/2) benchmarking "in"...
    done (took 0.0719455 seconds)
  done (took 1.403933145 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062965514 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079213903 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.06283139 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068811167 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068933608 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065901445 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072786163 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068996191 seconds)
  done (took 1.805336546 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.080981859 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077335289 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067335906 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079726455 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075986733 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082423485 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131516252 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066527611 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072024025 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063704603 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079419859 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064872072 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071723406 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065698409 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071271001 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07201715 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063149777 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071474103 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067717934 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064387287 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066719258 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074117764 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068078437 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061369768 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066777043 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087662828 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076679175 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065564196 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069144721 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073003369 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071463237 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059781943 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065349725 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066130191 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063813144 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075466077 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080249346 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068000253 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.073620747 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066505276 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075982784 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060430312 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070550466 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071691002 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075189565 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065890192 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066163407 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060529381 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063174473 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067628155 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060671418 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065678894 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060346371 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074582119 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068780643 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076073796 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064528215 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067000869 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068169687 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068747702 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07204716 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067604852 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068241361 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065371438 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072180373 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07013047 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074716109 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061160258 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059976573 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063813431 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075113396 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087890721 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071422344 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066492005 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066544344 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063071623 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068476096 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066563153 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071208396 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072390957 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.06547031 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071011402 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073097505 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066299917 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068076002 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073419609 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063618537 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068377822 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063522116 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081367449 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064868847 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063841139 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063723679 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075890541 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068661244 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065721105 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063453794 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07258389 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059838044 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066125527 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066834513 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066500313 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076084717 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069892983 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069944852 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073343771 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071939876 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064796172 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067278368 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061177418 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065305726 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063592379 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071287623 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059061254 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067320277 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065439797 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064975749 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.197719259 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064597864 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.06643268 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073736742 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072375608 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.064934158 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062920699 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069045164 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.065996303 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070158195 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074525535 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065233425 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061941623 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.0613037 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069576298 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066593502 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069739199 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071136095 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069109795 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060912288 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.063689267 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071299753 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074118887 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066042922 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066275173 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072466533 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067693877 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065432983 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.071750156 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.067945025 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065570035 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071995411 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067283474 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061926054 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069220262 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068831707 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064729841 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069673956 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069893456 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.0684444 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066854828 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064140304 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073449001 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066863136 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06538852 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06584459 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064235641 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076498738 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067166244 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061688143 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063537518 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075742082 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064628857 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065854584 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065201576 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067970906 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066518679 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064108409 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066377517 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067695431 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076701721 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070180496 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066817282 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.07070809 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076448521 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.06609836 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068748633 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065911611 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066661334 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066857428 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074812297 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071612861 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071300881 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068762287 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062938675 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071285992 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073040336 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.06543249 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063620523 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065400631 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070138262 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071577849 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.06991865 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066554836 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064045166 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066832086 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068828489 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069013567 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.06558437 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065303381 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072851874 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064355596 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072855047 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066728888 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076362565 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069836075 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061765925 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069267834 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063942905 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072622669 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061284324 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.06399337 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065130492 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067237958 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065269858 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068471831 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060200366 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072845389 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073259274 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066071399 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065135758 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064633892 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071430798 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066624199 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068467295 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068193467 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070957118 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074843333 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064151968 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067919823 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.07512889 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064453307 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.188813358 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072686294 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065989676 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065705725 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065472737 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064920864 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07019894 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075366156 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072916168 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060571631 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069619875 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065166144 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.06644362 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062608407 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071061028 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069443659 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067819718 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073694284 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067692563 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067896434 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070677001 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066392784 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067135922 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068035936 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069472971 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067121845 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067623722 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06627164 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069354829 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065388485 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064774007 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068425148 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066621253 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066596824 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071895505 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066274824 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066407773 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069268919 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067260084 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067446198 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067153975 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.0655752 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070288255 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067048395 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06661246 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069083805 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062169835 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073713391 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065909464 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073791972 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.065998331 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064034385 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074205289 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068916203 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072553289 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067170752 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067952826 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067611673 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065821204 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069354738 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073482086 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064355237 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076864172 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074226018 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066813852 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069775998 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066815764 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068113335 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065215521 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066253789 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066686254 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.06689775 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06564625 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070741765 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068744291 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065786421 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067661612 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066643901 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066465455 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067128664 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060830612 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.06556495 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065434916 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065896923 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07512836 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066700345 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065727364 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06500512 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066771908 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064804762 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062663126 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073798553 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074852028 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066455003 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073085406 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06491792 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067550335 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076494228 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060041826 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064045508 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06357312 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063668251 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072747327 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066248054 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075045783 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065754112 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065244941 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063132041 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066728665 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064497555 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060375795 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063020087 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068873788 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.06420904 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063820689 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064734745 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067219305 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065316101 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073709577 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064025372 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065862723 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065094284 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062489734 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06431998 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063939572 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.199885252 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067831502 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06490598 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064520104 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066626898 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068059173 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067672044 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066601297 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068542896 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076061645 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066862083 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069939738 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069531796 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061445216 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069385435 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.06663966 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065501937 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065886774 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.06996706 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070355137 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068116395 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.07531575 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066300809 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067236164 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067180304 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064562341 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066467012 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066540587 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067090372 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065399145 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.06777447 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073929534 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064008381 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068945911 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066436827 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067027008 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072661379 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067391927 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069696871 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072897577 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066745644 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068539117 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074862611 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070602471 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070107432 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067389768 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067809605 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07240994 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065643096 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073034949 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066959591 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.066773324 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068272509 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064414067 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065810592 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066017098 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065018796 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073063179 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066896909 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06584878 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066063241 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064551528 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067498974 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069730164 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073969045 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068735275 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068830554 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062423042 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.06380082 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067357102 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064323346 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067910724 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068908582 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071321253 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068568342 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066198364 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064563791 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074702639 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071570924 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069880091 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063795349 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069283628 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066391524 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068191189 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06665461 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065979093 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066804143 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069745319 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067036748 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065546715 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072803948 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.06931864 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067008687 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.06765806 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066679476 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066531704 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061411901 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067051191 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068274021 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071181402 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068185828 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066419623 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076598901 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064059875 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066906617 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069487954 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065389028 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070616869 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061733252 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067728596 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067500922 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067361591 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061056164 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065191414 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064090554 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067670645 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064783503 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060177622 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.074988896 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073673745 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067853872 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063697171 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063849019 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060355865 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060065099 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.196043426 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067784351 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069388609 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077138845 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066122404 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065532388 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061736749 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066708254 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070223087 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069793616 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064090213 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061863879 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066641089 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070094406 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071767156 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064928196 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066557032 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070799805 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.06870734 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064282152 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069612876 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064545642 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071204224 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079819529 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067647547 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067517327 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072482286 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074486613 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067611401 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062206096 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067790917 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069604411 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067507031 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067690199 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067766734 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081884583 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069424241 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065385553 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065324226 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069027804 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066612105 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074377356 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067735715 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067144367 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071978746 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069062113 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075767902 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068977927 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073775484 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.07006843 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069418113 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06513291 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066660732 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064804451 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065600711 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067548067 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067571418 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072247192 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074573921 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066086327 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.0770873 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.074870243 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068440785 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063644774 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065000016 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066102386 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061672721 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067362619 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064046057 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064494912 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064201067 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065346727 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067350759 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070800359 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066914274 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066840875 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065459193 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060349335 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068621448 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068002705 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066379567 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062737756 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065770973 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066318955 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069793472 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068793228 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063490239 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067428135 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067898946 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066610703 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061237404 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072127908 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064705869 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067948396 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065074483 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066067939 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066605188 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069585916 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070904812 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066899898 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068257806 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069677315 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068029835 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063878099 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062969075 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070803853 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063572587 seconds)
  done (took 42.364571294 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.0994641 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063521005 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062821394 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062206055 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073414342 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062501283 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061540909 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063073423 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062607291 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064816486 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061885341 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061676625 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070190536 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077216547 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073163538 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066014224 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061640405 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062822154 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061749501 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06242792 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070311862 seconds)
  done (took 2.75242211 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074216311 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069825398 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072208423 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075874292 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066940959 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069825392 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071694795 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070333759 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076105754 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066436987 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075563988 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070167383 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066772726 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.06661245 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066686789 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070310523 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075400899 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067033003 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.07010239 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080677037 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070569231 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072052438 seconds)
  done (took 2.892004143 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067094672 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066315515 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067637015 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061544239 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065858473 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060792043 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068858482 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063679962 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068841085 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064983221 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.06474862 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064564946 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067690497 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060846584 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065896258 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063238221 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108420716 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.06846524 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065597292 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066388534 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061016675 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067044617 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061072892 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061819739 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064590091 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.06900486 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066506832 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063508189 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064940352 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064819152 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065042549 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063538423 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067100988 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065690239 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064475715 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064384158 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065407049 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065238831 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060897955 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063676971 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06657023 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061153039 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065811789 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066885387 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063574247 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062950382 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066431728 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065123109 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060186198 seconds)
  done (took 4.550148416 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079420799 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107883311 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067425349 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087664664 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079554238 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074929215 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069434212 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088595213 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063167344 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064045807 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080903718 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079188005 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065167982 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069945345 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.068820054 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064968106 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06671062 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064226854 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068807105 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065133426 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068984051 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071911446 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079555493 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078031262 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068882851 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064286388 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064596341 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069232136 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077705527 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070008746 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069775848 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070288359 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079408432 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070300902 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064524469 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067083366 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080627466 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065372491 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067355802 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06266314 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066766019 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069143543 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071226066 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080478888 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065189982 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070053241 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065393158 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062283689 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077282223 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067457257 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072340173 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079187361 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068896425 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065262743 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069915107 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079387633 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064839798 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06312805 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.06776704 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077212247 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062641865 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068661216 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078593114 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066983907 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072047692 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078796684 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070334993 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068837798 seconds)
  done (took 6.324456643 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075905095 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072362217 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079722227 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079671331 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071492824 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071894951 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071483486 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071566137 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071591125 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075996087 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07165506 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.092650863 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067494175 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073923986 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071606691 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071973999 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071849355 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071908096 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071428393 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071565728 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.074470535 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079432651 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071897014 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07928401 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.097075916 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067416543 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071409808 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071980061 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079357589 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071611558 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078732216 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072091952 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071927669 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079251023 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078648511 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071569074 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064832634 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07125488 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071533209 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071429028 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066791923 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079381905 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071708636 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066559757 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071704677 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070985261 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07900323 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078116635 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074180125 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077688473 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071178452 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078707862 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071279647 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071407735 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079136463 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.103497586 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079035484 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078813482 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071266951 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07880531 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079001428 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085248441 seconds)
  done (took 6.010017774 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083002365 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073489862 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076099279 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061214083 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063462578 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06925247 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06366955 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063837363 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073765321 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073750691 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075897394 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069023311 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072135269 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076156939 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069073093 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071812763 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069517118 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069270458 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073607541 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069033887 seconds)
  done (took 2.773075653 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073713207 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08340459 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066991738 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072086081 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.06799963 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070984645 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067624147 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068538315 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06654965 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068390698 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075823951 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075334618 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06630642 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071543979 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075069246 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071253519 seconds)
  done (took 2.489395666 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.074141105 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072118746 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.078875954 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065802109 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063873215 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062071102 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065596877 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060932733 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061800751 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077174009 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065521406 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067880598 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065408144 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06417141 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062676534 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068452507 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062041845 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062871798 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065610729 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077232276 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076064767 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063909845 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.06665206 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065301378 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065429296 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070098964 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064531108 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063146472 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063070662 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065528524 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065849866 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068545353 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062485295 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063468865 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063841276 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062493483 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064939716 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065709611 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067881706 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065212729 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.06352481 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064739023 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065184031 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066159576 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061442807 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065378078 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061443832 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067373045 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063383582 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.06512638 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065120661 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067320293 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066210059 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071520331 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067936368 seconds)
  done (took 4.989125496 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078733957 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068846591 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061641368 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064007134 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068105216 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066946094 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069063354 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067464197 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067024867 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063447657 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067003953 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068262423 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066918769 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068470761 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067020354 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069075122 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.0613152 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067042411 seconds)
  done (took 2.570683135 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070260625 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065624989 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071643497 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065591145 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.06508208 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067704939 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06105215 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063908373 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063943791 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065196842 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065209926 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067552317 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064063852 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067836814 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066077012 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065643993 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067328522 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064457757 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065336138 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061304634 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067312083 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063929396 seconds)
  done (took 2.799648688 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.071324014 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091582902 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.136711668 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.082642913 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.080832167 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.077883998 seconds)
  done (took 1.896767511 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089743015 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078563749 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066488347 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087443776 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07301379 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066581341 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066707036 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066853214 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075417155 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075317541 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066933739 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075448388 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075676054 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074394211 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072667887 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072306918 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066754316 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066555009 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065912307 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082877277 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066906856 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07478895 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066819123 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066581452 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066882678 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074998322 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075129378 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075515163 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066666337 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074885495 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072706612 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066735002 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075478092 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075279022 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068800134 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075600608 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067143774 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08358893 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072527779 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075109097 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068631997 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073479587 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075517458 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071551241 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075265605 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067097566 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071478615 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066944681 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066953039 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085114504 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072766141 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074099478 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072714704 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075413584 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075439825 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085214081 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075303836 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074266684 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072324668 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077841251 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074754505 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072638215 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074359109 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07512475 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07255037 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074325832 seconds)
  done (took 6.187536096 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081550447 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085259773 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067565686 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075401807 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075023998 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067100771 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066936299 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066915136 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066848585 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066737929 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106721191 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067428721 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074858382 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074895358 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067820302 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067245304 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067098973 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074876327 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066987931 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085380876 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066822954 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07516598 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074801239 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074853345 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076010234 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073146219 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066985031 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067656468 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067093341 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067096259 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071645457 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06745831 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07458974 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066661072 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074519162 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067278463 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067141345 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071486971 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067461825 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072703844 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074737764 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083200464 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066865001 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066695074 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075789377 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066897661 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067087798 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066954326 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06693621 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066549772 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075379669 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0753079 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075568813 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074877861 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067454191 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067416919 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066916435 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066977883 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067169132 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072390025 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074766495 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066874845 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084930063 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06674861 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066804777 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074641736 seconds)
  done (took 6.103125052 seconds)
done (took 128.449745041 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.211459054 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.192664407 seconds)
  done (took 1.756996379 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069312539 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096618006 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076812868 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128389739 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066421354 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100230162 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099305257 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077644751 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065996465 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065672076 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.06605459 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068108765 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131604484 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066059505 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065798581 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068621768 seconds)
  done (took 2.680332943 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.096291626 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.156492893 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099218271 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064326394 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096653621 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072298268 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064728663 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074330016 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070468435 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064561423 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072395781 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070294822 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06450582 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070352978 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070671593 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072216454 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064902817 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072321968 seconds)
  done (took 2.784575064 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101159027 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.09180261 seconds)
  done (took 1.561540632 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.154615074 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105060497 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.148602806 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.342771248 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.167331973 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.229313814 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.126902855 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127004123 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116519933 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.122796728 seconds)
  done (took 3.00697868 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097519659 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.151391458 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.255834702 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114703201 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072221669 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.09459031 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115697458 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077431432 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080681922 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080301062 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080101603 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.07603519 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098423898 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073237043 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073169046 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075925528 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101843928 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072319555 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073608775 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076038544 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099068183 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065446378 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073305986 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071939695 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076869004 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077174516 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065299591 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.06552821 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076466893 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.07387714 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076217664 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093080521 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076695534 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106498177 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070001494 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106558303 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076070255 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073438334 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073820201 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073593072 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077894313 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078410815 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072005064 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075852285 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065028824 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076175118 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065388171 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.06502961 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077717844 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066337493 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078067974 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076752555 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105857113 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066580702 seconds)
  done (took 5.952852975 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101117679 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104320273 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071107146 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.111216473 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099970548 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071059413 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.100627601 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09328676 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.10222899 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069673368 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068148796 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070509464 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082249156 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083231685 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.111807619 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.103457949 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073028777 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070436792 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.103387421 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102335818 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068255654 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094811972 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089556969 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101773451 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067141701 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069973187 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067928072 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070813003 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076472794 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078132823 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069769728 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080596916 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085051579 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078197104 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067248721 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067759211 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067863075 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079474587 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079640177 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078594565 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077161039 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067285856 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067528298 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070591301 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069764731 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067527765 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078535426 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080021615 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078792541 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069175419 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070001704 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067728794 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068992232 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080056303 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077669938 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080468932 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079730085 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068605121 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068130664 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071219178 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080508694 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078581342 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079045524 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069256896 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078428024 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06775575 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079590453 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083440235 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068209016 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069420191 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068249598 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069069598 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069135889 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077592289 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077846908 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069617635 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069014734 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067777395 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079007335 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077989288 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067764584 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07666133 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067086524 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068886253 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07044341 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069590998 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077808483 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079911403 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069996519 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068517809 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069337572 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069036448 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067191228 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.077250208 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079794595 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078104296 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077484239 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068178031 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077541844 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07706259 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068265528 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077411393 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066955927 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068552198 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.198001857 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.08035707 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078956019 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.07980542 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070060077 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068892825 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078655669 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081386296 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069324678 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079457324 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081131144 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080107838 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068227692 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081464678 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06914673 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080189352 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070094948 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081033552 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068727515 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079578376 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068971534 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067995289 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068429331 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079972424 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069582298 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068368675 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069338541 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069757957 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079175679 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083033417 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070313325 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.08099931 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079264131 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070045578 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079994894 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068842959 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079104681 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069920044 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070922876 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067764825 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081836305 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068220044 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068546021 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.0693206 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.08126915 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068402522 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080400567 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078359391 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068387238 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081002143 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080954479 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.07703252 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080887103 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069841005 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068906527 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068086182 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06932096 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07826615 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079595842 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071145664 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068869352 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077728533 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079512504 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.06726919 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078469994 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078048897 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.07804633 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068425137 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069383893 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08006668 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081085446 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078677845 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078209571 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078515029 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068388622 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077206137 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078200059 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067674404 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084770094 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067875606 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081747076 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078642589 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076445402 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078699665 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080496017 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080243209 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080154613 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082479035 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068008494 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067852217 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079593731 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067833612 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069423259 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078164102 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069466502 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069346292 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082464508 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067003289 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077650861 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066417482 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.07678177 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065964427 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068422942 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081437336 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066990109 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.199550609 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080705282 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070915765 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078607596 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08120026 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.078766023 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068348648 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070506274 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080048932 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079269964 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06840047 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068486423 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070864261 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078816481 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077938963 seconds)
  done (took 18.618285134 seconds)
done (took 37.738286556 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.208687199 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.151434523 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.180490183 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118487351 seconds)
  done (took 2.123950649 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.121422329 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100347457 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094282429 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064435381 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101300871 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.06456183 seconds)
  done (took 1.950503918 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.314167069 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211599775 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.182782301 seconds)
  done (took 2.107337017 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.197658504 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.186763376 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.392723428 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.252919839 seconds)
  done (took 2.539562768 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143093063 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089310869 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066488639 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082432518 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.134289542 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.161248924 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100952152 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.132339744 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077632597 seconds)
  done (took 2.443572773 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146477136 seconds)
done (took 12.715771398 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.098183569 seconds)
    (2/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.178977248 seconds)
    (3/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.077370615 seconds)
    (4/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.100412684 seconds)
    (5/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.225889496 seconds)
    (6/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.204124796 seconds)
    (7/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.108629205 seconds)
    (8/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065502301 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.10251383 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081067699 seconds)
    (11/309) benchmarking ("sort", Float64, false)...
    done (took 0.124793044 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.127957225 seconds)
    (13/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.176190812 seconds)
    (14/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073033405 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.076928246 seconds)
    (16/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.104980047 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073329005 seconds)
    (18/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.074297927 seconds)
    (19/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.152461107 seconds)
    (20/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.191316333 seconds)
    (21/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.088534084 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.121668199 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.111012676 seconds)
    (24/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.07370761 seconds)
    (25/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071108907 seconds)
    (26/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.088905498 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.088200602 seconds)
    (28/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.100965623 seconds)
    (29/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.207450563 seconds)
    (30/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.078285232 seconds)
    (31/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.074472335 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.099931628 seconds)
    (33/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.074793943 seconds)
    (34/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.148189224 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.133005433 seconds)
    (36/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.172835245 seconds)
    (37/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.196884302 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.064719977 seconds)
    (39/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.06808501 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070887568 seconds)
    (41/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.154331231 seconds)
    (42/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.206590782 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.093002643 seconds)
    (44/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.2130519 seconds)
    (45/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.150738261 seconds)
    (46/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.074665688 seconds)
    (47/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.071543581 seconds)
    (48/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065393455 seconds)
    (49/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.052740236 seconds)
    (50/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.059904333 seconds)
    (51/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.109169694 seconds)
    (52/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.182107222 seconds)
    (53/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.082292981 seconds)
    (54/309) benchmarking ("sort", BigInt, false)...
    done (took 0.183884292 seconds)
    (55/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.193130696 seconds)
    (56/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070702121 seconds)
    (57/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074798536 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071840658 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.07160048 seconds)
    (60/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068248262 seconds)
    (61/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.208065611 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.10626887 seconds)
    (63/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051019907 seconds)
    (64/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.156874492 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065248573 seconds)
    (66/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066607701 seconds)
    (67/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072620478 seconds)
    (68/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.072879489 seconds)
    (69/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.08615437 seconds)
    (70/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072170915 seconds)
    (71/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.078222593 seconds)
    (72/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.050810046 seconds)
    (73/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052190031 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.120646238 seconds)
    (75/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.136509785 seconds)
    (76/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.157093272 seconds)
    (77/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072755881 seconds)
    (78/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060120957 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.06385136 seconds)
    (80/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052469705 seconds)
    (81/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.146842515 seconds)
    (82/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052378514 seconds)
    (83/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.173631101 seconds)
    (84/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051164066 seconds)
    (85/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.153666706 seconds)
    (86/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.073830408 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.110441708 seconds)
    (88/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.287012901 seconds)
    (89/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.29947427 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 0.066682827 seconds)
    (91/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.064553048 seconds)
    (92/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.074833853 seconds)
    (93/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.109149546 seconds)
    (94/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.071314175 seconds)
    (95/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067266224 seconds)
    (96/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.076416681 seconds)
    (97/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073166491 seconds)
    (98/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065334233 seconds)
    (99/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.108214919 seconds)
    (100/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.150762743 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091387361 seconds)
    (102/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.0511567 seconds)
    (103/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.175345485 seconds)
    (104/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052847069 seconds)
    (105/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.149035454 seconds)
    (106/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080755849 seconds)
    (107/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.169398605 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.109391062 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.113454179 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086588546 seconds)
    (111/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075304544 seconds)
    (112/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.185252329 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.127986499 seconds)
    (114/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.184196092 seconds)
    (115/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.150860793 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.09120221 seconds)
    (117/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.071626411 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.093303888 seconds)
    (119/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051900071 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072181098 seconds)
    (121/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.067938754 seconds)
    (122/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072066174 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.09878704 seconds)
    (124/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.1501376 seconds)
    (125/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067220971 seconds)
    (126/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054547107 seconds)
    (127/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.149086445 seconds)
    (128/309) benchmarking ("sort", Float32, false)...
    done (took 0.126490345 seconds)
    (129/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.114671117 seconds)
    (130/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.071237784 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.092796772 seconds)
    (132/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.139321184 seconds)
    (133/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054238962 seconds)
    (134/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069149265 seconds)
    (135/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.085991911 seconds)
    (136/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.150690043 seconds)
    (137/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051654765 seconds)
    (138/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064390685 seconds)
    (139/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065473731 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.108718498 seconds)
    (141/309) benchmarking ("sort", Bool, false)...
    done (took 0.132290327 seconds)
    (142/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072802618 seconds)
    (143/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.15494226 seconds)
    (144/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.133105865 seconds)
    (145/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.084558001 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.085291492 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.069965714 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.084397966 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.088604491 seconds)
    (150/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.062313951 seconds)
    (151/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.072100651 seconds)
    (152/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.099045222 seconds)
    (153/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066220641 seconds)
    (154/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.050933157 seconds)
    (155/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.074713803 seconds)
    (156/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.068966231 seconds)
    (157/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071232916 seconds)
    (158/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071413728 seconds)
    (159/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064687628 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087156119 seconds)
    (161/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064354043 seconds)
    (162/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071920069 seconds)
    (163/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.108439512 seconds)
    (164/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.06793045 seconds)
    (165/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.096452229 seconds)
    (166/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.087993098 seconds)
    (167/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073041279 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.13823349 seconds)
    (169/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064964149 seconds)
    (170/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.142250656 seconds)
    (171/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052482709 seconds)
    (172/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.184072126 seconds)
    (173/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075674741 seconds)
    (174/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.068716163 seconds)
    (175/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051048933 seconds)
    (176/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.170751787 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088117442 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088523388 seconds)
    (179/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070476201 seconds)
    (180/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.148438004 seconds)
    (181/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.050806852 seconds)
    (182/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078504043 seconds)
    (183/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.074516758 seconds)
    (184/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.07169978 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.064076313 seconds)
    (186/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.166171187 seconds)
    (187/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.051629628 seconds)
    (188/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.06250845 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070998793 seconds)
    (190/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.147940327 seconds)
    (191/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.070268327 seconds)
    (192/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.064294614 seconds)
    (193/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.050322708 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.227676244 seconds)
    (195/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.182118788 seconds)
    (196/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079089676 seconds)
    (197/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.175145305 seconds)
    (198/309) benchmarking ("sort", Int8, false)...
    done (took 0.141876463 seconds)
    (199/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052805233 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064074538 seconds)
    (201/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052657559 seconds)
    (202/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.168583015 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086010817 seconds)
    (204/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072804542 seconds)
    (205/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071977059 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.075938217 seconds)
    (207/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.062045658 seconds)
    (208/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.051591768 seconds)
    (209/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052731272 seconds)
    (210/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081900132 seconds)
    (211/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082157766 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073720068 seconds)
    (213/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052450013 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.086057226 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.075716453 seconds)
    (216/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.062298196 seconds)
    (217/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.073520631 seconds)
    (218/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051144648 seconds)
    (219/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087590959 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.133704865 seconds)
    (221/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066104001 seconds)
    (222/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.136831468 seconds)
    (223/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051889008 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071324241 seconds)
    (225/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051847328 seconds)
    (226/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067402455 seconds)
    (227/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052747972 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064135753 seconds)
    (229/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.103357977 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.126600994 seconds)
    (231/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.140869493 seconds)
    (232/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.052295161 seconds)
    (233/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.150403503 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.076077273 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136302129 seconds)
    (236/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052933461 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065453129 seconds)
    (238/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.065985597 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.087468125 seconds)
    (240/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.053844801 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065352489 seconds)
    (242/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051758545 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.06515163 seconds)
    (244/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.07324689 seconds)
    (245/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.087189019 seconds)
    (246/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066029847 seconds)
    (247/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.117981238 seconds)
    (248/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051511553 seconds)
    (249/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.051268478 seconds)
    (250/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.05211881 seconds)
    (251/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065362777 seconds)
    (252/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064774438 seconds)
    (253/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061385511 seconds)
    (254/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052277114 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065252765 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064965791 seconds)
    (257/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066498484 seconds)
    (258/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065718629 seconds)
    (259/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.062551084 seconds)
    (260/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.062299163 seconds)
    (261/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052387321 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071194535 seconds)
    (263/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072812097 seconds)
    (264/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.087192424 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072477629 seconds)
    (266/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.177796718 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.091506369 seconds)
    (268/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051495703 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065014934 seconds)
    (270/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051230185 seconds)
    (271/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.051001042 seconds)
    (272/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060280719 seconds)
    (273/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.050807226 seconds)
    (274/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.06748272 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064787566 seconds)
    (276/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071199992 seconds)
    (277/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051007882 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064747707 seconds)
    (279/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.155511488 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.08867638 seconds)
    (281/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.05176262 seconds)
    (282/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.054046971 seconds)
    (283/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067479457 seconds)
    (284/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051099618 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072131866 seconds)
    (286/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052614086 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063929768 seconds)
    (288/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052315812 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.06326597 seconds)
    (290/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051580802 seconds)
    (291/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.104709118 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072113007 seconds)
    (293/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064117858 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065322688 seconds)
    (295/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066389672 seconds)
    (296/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070111568 seconds)
    (297/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079455832 seconds)
    (298/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066566415 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070710796 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.08764743 seconds)
    (301/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071414894 seconds)
    (302/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.051891828 seconds)
    (303/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066897854 seconds)
    (304/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066124108 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.088480239 seconds)
    (306/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052138145 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.069947933 seconds)
    (308/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.050882612 seconds)
    (309/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.050958821 seconds)
  done (took 30.311598051 seconds)
done (took 31.725391807 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.081793962 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092229507 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074039555 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092746089 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079433702 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076039746 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071471979 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.07723636 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078405203 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080188787 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077367339 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054883636 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073689892 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073327985 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073948639 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090349307 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077236103 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072017468 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072287092 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063911556 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072404636 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065248462 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.06713581 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054536975 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077368357 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071093837 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071872218 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073382297 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065050819 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065546878 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.067946231 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072350403 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064754116 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077223363 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071264513 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.071932555 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074302834 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.07574448 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066956102 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.064987095 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073542921 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06518574 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.0717624 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072803024 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.07094767 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070911906 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.071979531 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.07700042 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090219239 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067363301 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073499528 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.074748397 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075907379 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071465942 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068555288 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072046698 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070093216 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089992282 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072628326 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067454287 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072879323 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073023211 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070229604 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072735737 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072105932 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074352764 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074521732 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070383947 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073959604 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070259878 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064637727 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072241259 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068399439 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06500102 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074539274 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075890363 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064302418 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070190251 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071748912 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070694104 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064076622 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066905766 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.065959555 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070723935 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066539089 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054025194 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.06836249 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070807546 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064272807 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072223136 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.07107539 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071376792 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066822542 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07440257 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064362616 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069643569 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065065913 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064801139 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066014184 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.06841841 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064861592 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066868616 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073135412 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.06650016 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070337109 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077911407 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064856647 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070992159 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063963056 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063884241 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078308412 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073733524 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064874245 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06717139 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064573577 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072038259 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063983947 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064540595 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064682112 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064962245 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070353666 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.0647746 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066388879 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070840052 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075452346 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063658289 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067304045 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06567771 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063594779 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069113159 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063643384 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063549806 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.199616803 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061974069 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067849125 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065070242 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072414292 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067409504 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.071899481 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066948917 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072560031 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070030602 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.07153634 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070568686 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064061533 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058513233 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067345284 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067869038 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066951896 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065317093 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066766763 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066814073 seconds)
done (took 12.338273622 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066133116 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.14216147 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.099013696 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.093968649 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085139669 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066066689 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075330022 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101006675 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066942347 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101819825 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086458681 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084163738 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111373909 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064024518 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065398589 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069263583 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067328923 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081026735 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100150337 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085390657 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.114624006 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064811293 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093404732 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089783377 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086508531 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.100746745 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066421304 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068775445 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068864722 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090474076 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085701817 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.068807199 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065988819 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099716077 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.091784461 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082313624 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065994993 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081573772 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066091859 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06522226 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.06710857 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097301227 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.07945202 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079438582 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069300571 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068647211 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066827518 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083080499 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088229209 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078139762 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085860153 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101784385 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068017308 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064859304 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063779576 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084565465 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064785241 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068172508 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066203699 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067392261 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065685811 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068562301 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080554351 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081238992 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069085718 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079968481 seconds)
  done (took 6.762442294 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082967797 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089211848 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082667309 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.08242717 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065508903 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065641862 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066102984 seconds)
  done (took 2.042794736 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066552826 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087523195 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088809222 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088155119 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083949014 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087085947 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075033689 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066255734 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080090562 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067175132 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086525097 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101243323 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067050325 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07211783 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089814675 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066691385 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089555159 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066816165 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068941484 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089679069 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067737286 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082033046 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.06992512 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066761856 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079855888 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066113319 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112591479 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069989122 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067960919 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068689288 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06405968 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106218654 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079532411 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074953244 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065903884 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080202005 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.079917045 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065057673 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.0818932 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070654148 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079484111 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066458931 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066405842 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063939579 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.07001585 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076295142 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066578362 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.06630625 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068125062 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085693556 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066938464 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079329884 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069489777 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068812744 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067276333 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069522404 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075349285 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067300246 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086213723 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067422058 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082398753 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082042483 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079533538 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082047555 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068810882 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079253046 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079707372 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.06824375 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06771624 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069862077 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.081687276 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064072039 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067646165 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076611123 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067625223 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088673689 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089002926 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067255606 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075217299 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066805571 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066080631 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.06606898 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088182333 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068883376 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066015045 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070176858 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068782343 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064265131 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065113367 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069662136 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064022342 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067177709 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069006071 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068753288 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068613875 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082234313 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068405037 seconds)
  done (took 8.719929169 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068028042 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067947449 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069166359 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067275047 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06788431 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067660827 seconds)
  done (took 1.934989182 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092277214 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.06841455 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079955923 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071882239 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103770303 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086081011 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086216273 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078098083 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083111848 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.077975347 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085675372 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087549329 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092229918 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072141077 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086077691 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071878366 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086343489 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075686953 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077990821 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072661766 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086286648 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072643687 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072751486 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081385028 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.07546499 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071761921 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066664311 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078518758 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077514238 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.07812056 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072018079 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075230412 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070442309 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078204314 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086266301 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070150086 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071711464 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076534778 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071702225 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075235595 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087464727 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072335421 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074162782 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076401784 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077853703 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070326046 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076632965 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074993698 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085468881 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076347007 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076458983 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070958431 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074277369 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076246062 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070214844 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077824982 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076368527 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085834922 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071819193 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.07033454 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068266962 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075035612 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077574524 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074718778 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.07816041 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076303509 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069731134 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071603592 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072189991 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071067038 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.07630283 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068183678 seconds)
  done (took 7.052257724 seconds)
done (took 28.006738685 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.541070161 seconds)
  done (took 2.036847806 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.594330181 seconds)
  done (took 2.113487034 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.571053013 seconds)
  done (took 8.087505469 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.40050317 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.487559256 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.694923523 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130825443 seconds)
  done (took 3.262886131 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.675173828 seconds)
  done (took 2.204004266 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.211036665 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.197682209 seconds)
  done (took 1.945352923 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.376953134 seconds)
  done (took 1.893874113 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.110620449 seconds)
  done (took 2.628436456 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.261733343 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.167820179 seconds)
  done (took 1.957827614 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.462387539 seconds)
  done (took 1.986932507 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.850423896 seconds)
  done (took 6.377285156 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.207493589 seconds)
  done (took 1.774732593 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.241754238 seconds)
  done (took 1.770824744 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.681879303 seconds)
  done (took 3.21062934 seconds)
done (took 42.776663263 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.07929024 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080632121 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080171942 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077203296 seconds)
  done (took 1.833074295 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077197707 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072173915 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075850247 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072123299 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076431344 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072780419 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074168185 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07645962 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071549884 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072499946 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072469652 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072149018 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074662979 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073524967 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070641823 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074430936 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.07549768 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072468167 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.07533934 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072317152 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070430792 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074138383 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.07430151 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.0713059 seconds)
  done (took 3.296621475 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076864166 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073233302 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074256176 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.070941479 seconds)
  done (took 1.833503064 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.07715252 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092033848 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.087931491 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077132877 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091921628 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086412864 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068781364 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068816697 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073523235 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076414677 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067438816 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095222155 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.08717974 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.0763836 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.07849394 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066094785 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.06786908 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086592722 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076577264 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076931344 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070383125 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076426489 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.06752562 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.0872165 seconds)
  done (took 3.412500611 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076904533 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102931096 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076714797 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087088905 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089657006 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064721539 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074572729 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088538505 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.121895824 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064800894 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069354921 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065252026 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071999828 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064649651 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075754012 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104382668 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107326001 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067966533 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095106496 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064910835 seconds)
  done (took 3.17723474 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.07277951 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069776925 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.06551492 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068955506 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076849727 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072118308 seconds)
  done (took 1.968620342 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067432931 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066290964 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066865679 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.065912132 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07140567 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066734451 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066252835 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.06675736 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066232383 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066444488 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066120699 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.06515341 seconds)
  done (took 2.340107043 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.419829093 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068412919 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068186112 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065332304 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070997007 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065931384 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079660289 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067638359 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089974842 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066248341 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066715948 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068136523 seconds)
  done (took 2.739532803 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204396207 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075768285 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23577399 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136181602 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111344025 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114981777 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103341811 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112429396 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.143136221 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101075023 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166861014 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164249088 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106097579 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136090176 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088152381 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097644395 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154815101 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161035553 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102697985 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164553443 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143265677 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123507669 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146495934 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10038166 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104930207 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121059172 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070590164 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07978274 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168986179 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130195931 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145393905 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110161866 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09281268 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175351282 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170036205 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14146294 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133142613 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082878419 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.101024048 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.131784877 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199616894 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087610254 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160780057 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244133895 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080689321 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132724237 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119609044 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.12113406 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106668413 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089171925 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145507383 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182447012 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.137834531 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087404908 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111825412 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114392941 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115364758 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10308013 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180745657 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160288826 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127011437 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.07133818 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098614973 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152059587 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130707792 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.10796007 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.124953539 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092456171 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131664843 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153523198 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11814989 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143376572 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.128249635 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088351367 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118595513 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138830622 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126994041 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16896239 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123622009 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071859326 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12387215 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10286958 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08061338 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.140829951 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074791347 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173977777 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097409781 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.104900657 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112022728 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107567904 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108179024 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159587196 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14141896 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.242670927 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065584882 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103447974 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120168891 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147006667 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086996747 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10851024 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115741577 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076811038 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138356645 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074631164 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122033633 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.074718634 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124391781 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132036894 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075328338 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121912053 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100239817 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100336263 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132884566 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158875854 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08805574 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082104124 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165795297 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121041629 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103629619 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14201785 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155856352 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.098275352 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10125702 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148941422 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17960331 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088714895 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161471932 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106406952 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082979905 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086822778 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122610939 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111852197 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121265436 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081221683 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117495146 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167237441 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074454307 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094595261 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132793292 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078415916 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080376945 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101798975 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099732192 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.09364514 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099132958 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.10280326 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13627885 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123266059 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103773228 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269100283 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098781019 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170118025 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088096219 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.099571715 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103969537 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069663434 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.136753661 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156325607 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079039678 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16451245 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122308323 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104513955 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118752881 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082435028 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139706494 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078451176 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069779156 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142720868 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110340272 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109736301 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.151173692 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104221206 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.125910478 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119402968 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134149406 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130962801 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.127999235 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104644251 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087220911 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111900761 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125722972 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.07246138 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090602676 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079390073 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103353358 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095269075 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082424226 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141662286 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123879496 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099615924 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11158132 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095683687 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146751356 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075972683 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128765808 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118584275 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093320397 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.149831324 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150428581 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129910654 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09848697 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142999546 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069265623 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072929882 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087525261 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.267388885 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083462862 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084340561 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116857889 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147465795 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129704542 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137572069 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110542718 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121931147 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153831231 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068912869 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.114132616 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146532478 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120211306 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.102823534 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088990292 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098500817 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141361383 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10754169 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181459674 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113631949 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126099545 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152540363 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099045622 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079347665 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107754065 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134954042 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103606455 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143479701 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09978963 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087169766 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109153004 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074006347 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099447707 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126356452 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118505128 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135007 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114940873 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132016683 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07623445 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115986828 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120208307 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121895089 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063465068 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119003282 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159697528 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092628183 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117698107 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151673306 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078228559 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.122761475 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.319380746 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145315869 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08483321 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108998556 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118699267 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128014957 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120075341 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13932135 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1080759 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135722222 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109085058 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085061156 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087244796 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097444353 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104354326 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094172326 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107517406 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114632109 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095413668 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131123502 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104121403 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109221844 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117278055 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.095956704 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.08835931 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096263347 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172404001 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118431535 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169210469 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098013607 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.145184735 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163949641 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074409079 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078592487 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077380743 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139109911 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083621453 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129751578 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.096920922 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105344063 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123420562 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141836519 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09470614 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067754025 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107477629 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133992546 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111903817 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097767737 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103902271 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161243596 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099463372 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078666844 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112624354 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103914377 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101395901 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169098944 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.204179646 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098496594 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.0754263 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081047968 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128037231 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152475435 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080346547 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102603823 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119111629 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110042139 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128083228 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101138675 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099203543 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113371321 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150251548 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128341095 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.08920943 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11158297 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129172207 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155274698 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104919602 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095001011 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171590677 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152284786 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.160288499 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088230525 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114256107 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130357212 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107361073 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138079784 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08269077 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162890483 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081219038 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135255872 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103536654 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089372115 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129118053 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098196172 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087828331 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147764711 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116966942 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081891308 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07723276 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117132793 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11944225 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106117844 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074694514 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137708159 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071801157 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130966281 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167051035 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08055012 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103039765 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.240658526 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079820097 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10800912 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103213909 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088599837 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.096870082 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173697062 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087709275 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149062953 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143648535 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113470036 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135924326 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099509118 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.635831813 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077301731 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15164893 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117133243 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172687233 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097300933 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117607648 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108213659 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123548307 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144163271 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103947788 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175299543 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132601896 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115818269 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079043801 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10201239 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10244562 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088761077 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104387624 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1130319 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115190269 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.09322306 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.114737376 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122317089 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081073519 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094802974 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155797695 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116155164 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143914984 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139526129 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084050826 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117757217 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137543927 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079123694 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120684769 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150319866 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105639414 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096686476 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079025813 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.246206644 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169763231 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073538859 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163474499 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119132723 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108849254 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112648624 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114064426 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130644152 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108199964 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12141614 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093620435 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110794334 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11158929 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081448766 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076910844 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10468722 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111928686 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.096765669 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098181266 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.096591688 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15068013 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070818019 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094440916 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102646622 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144216211 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173892832 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087640464 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082280034 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118447461 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112104089 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112281672 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120041659 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079011795 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081670887 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.08095554 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076769355 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108046391 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111337726 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103746456 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110934502 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163173393 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082343073 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.224257471 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094824725 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104374618 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069549369 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078091426 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09532016 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096400959 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107476284 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10002343 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168640843 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093033354 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088437628 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090969481 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072395983 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081369107 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125835345 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.256166032 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120086963 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097450157 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062880162 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108930472 seconds)
  done (took 58.561120602 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.104594164 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.08178486 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.114888214 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.186029343 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.157285769 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.252012052 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.173306994 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.21078832 seconds)
  done (took 2.929925443 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067695938 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093721048 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099133221 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081776057 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066789279 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068076587 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.22438424 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079248516 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066124172 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088224482 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078061918 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067942143 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.421730821 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067281225 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066778437 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.061771014 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067061648 seconds)
  done (took 3.423349446 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.363530489 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.3562858 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.371730736 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073045048 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.934644416 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088414185 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.172219608 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.096513097 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.071286917 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.314826201 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.698709329 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.09194675 seconds)
  done (took 14.292225165 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074373356 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069166599 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083042911 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083101195 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071680463 seconds)
  done (took 2.035150777 seconds)
done (took 103.40171787 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.078709096 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.390165969 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053357811 seconds)
  done (took 2.125107612 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.081631844 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084024118 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.08421523 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082502524 seconds)
  done (took 1.992940487 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.074026708 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075224846 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.084299878 seconds)
  done (took 1.888713271 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.222373187 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.138799118 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086201638 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081617485 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077050618 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078124815 seconds)
  done (took 1.899991953 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071385611 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074524275 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072920305 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076210777 seconds)
  done (took 1.953785316 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.075142868 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.051894 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.05450936 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055972056 seconds)
  done (took 1.896654335 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08640745 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078908426 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077823951 seconds)
  done (took 1.902672915 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.100546819 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.084068425 seconds)
  done (took 1.844709741 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08173708 seconds)
  done (took 1.742100905 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097405339 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.112619171 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.12738684 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.108603236 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.135637503 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.108055934 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085074771 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085892055 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076836298 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086711273 seconds)
  done (took 2.683994977 seconds)
done (took 22.110407267 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077606887 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.365852692 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360482017 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088909309 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671652712 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356014029 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.981304301 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091573407 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112928106 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067201433 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083701087 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648866534 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.009372964 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323052404 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.996093389 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.318888117 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650130768 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068019487 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.0673109 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067357551 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.969139961 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067310655 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067180366 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068073059 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649966314 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370472857 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067727052 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.323453886 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067161585 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069554999 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354897709 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067594958 seconds)
  done (took 16.195786596 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070188236 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.116809667 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073226673 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084350184 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070791775 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.06943838 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070827006 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068512933 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118846037 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067730105 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083788626 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067357759 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071291422 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067994887 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086823479 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068156916 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06848698 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068406319 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067912362 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067951589 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085941142 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067224573 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06788201 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068688303 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067746559 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078918261 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067975827 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067333465 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067941841 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069353739 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070562618 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068259316 seconds)
  done (took 4.047901771 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115238012 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124018823 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074547044 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102031491 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111906578 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.06998328 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142720841 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092010283 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126855665 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067789134 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083833775 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068052335 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100490135 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068803321 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087671258 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068236229 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068627316 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068217042 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068051384 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.0684455 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086760855 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067787857 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06792715 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068309838 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06819318 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081168187 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.0682688 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068492105 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068013281 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069901505 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07149061 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068832053 seconds)
  done (took 4.306835906 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07211341 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074427331 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.08225725 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083961768 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069211954 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071273847 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.07205149 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069558321 seconds)
  done (took 2.272309341 seconds)
done (took 28.488628741 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.07929794 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068153855 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.07219393 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080042876 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072772053 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.077967468 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066797891 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074062936 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071751217 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072542802 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074888081 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067212611 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070831745 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066813639 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073564679 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.06809551 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078649425 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071407036 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078447456 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079118651 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069333655 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073102416 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073562501 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.07875672 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079024743 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078636389 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076755655 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072290043 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068711208 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070536526 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076182596 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.08298522 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068023391 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078703749 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067022792 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067205724 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071333238 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067535739 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079175107 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076291276 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068780851 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075321774 seconds)
  done (took 4.739939482 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087421568 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090436256 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083640362 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.060879793 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066446481 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064879099 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087693561 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059065059 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059236101 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087123363 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055729005 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058898545 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062761261 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053845537 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059449989 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056617533 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061227895 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055669857 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058857615 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059144613 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057957043 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053912905 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059611585 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065094774 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.05636509 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061588555 seconds)
  done (took 3.368444924 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074072081 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083450722 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087555841 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126704144 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.102991177 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076245724 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077284108 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091952919 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.08451386 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066523434 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.069988282 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093291759 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088017325 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073440722 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067423245 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084296405 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082208231 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068766227 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073166333 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090590601 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084150966 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083317118 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092810656 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080968868 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066715576 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069361796 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070994541 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080702495 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072340357 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076353076 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071019162 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070643178 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069109965 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079060192 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071051555 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068650539 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090369135 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07650865 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077223911 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067774399 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070433947 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068060733 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089212414 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.12168 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.06656072 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073516708 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074796825 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076139029 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067085733 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085247481 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077792768 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066477686 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070100375 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066593401 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067015073 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079694649 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069068992 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069433234 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075882507 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.069930272 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.084961835 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070708073 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.092860333 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066674675 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074366783 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066442905 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067515635 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.06579172 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091424836 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068619235 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.107559191 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068208714 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067970566 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07547367 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074217857 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072887555 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067278546 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081505584 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077086786 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070663436 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075914724 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070487934 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070078026 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087407595 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069153754 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068697688 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068022985 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073457559 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069604237 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068368322 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079597242 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067237318 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070036848 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083447132 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067031815 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068634178 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073275018 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.07208192 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066660427 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078125477 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071932308 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067818558 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076173156 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067097124 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070266199 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077577992 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073337088 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066569976 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072226521 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073338189 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067911954 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069267061 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071099873 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070790869 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076309879 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073788326 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071176126 seconds)
  done (took 10.552472595 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.162421317 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.15354313 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069739814 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.14418811 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075893755 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078316214 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.146399614 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093594914 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067136072 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068147228 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069080788 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109429807 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.104821017 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.114666513 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078178559 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.06727346 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082910889 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.112935249 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.148011599 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142496441 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083300016 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076124787 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069622013 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068714673 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070380234 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077795844 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084575086 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075999152 seconds)
  done (took 4.415407866 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080740211 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.096081665 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073587912 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088567567 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089917948 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067185137 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069794482 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068996846 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.07957369 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078220649 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067341735 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073199164 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074603146 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070607218 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.06852751 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074177907 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074693404 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068810161 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070296989 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072366572 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077404035 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080071862 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071287162 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066801729 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073920014 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.06669612 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.06434208 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083667021 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067596201 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089481947 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.06529008 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074486318 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08059573 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068475969 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067122423 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067488155 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.066972606 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066996122 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069455963 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066109561 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065803097 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057352104 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066142278 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079579986 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073300114 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056651714 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072166176 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072152952 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072253379 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065333852 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070009961 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069592396 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.07038864 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074105969 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072241979 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.071778439 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068233139 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065331374 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074511288 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066864675 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064127156 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065489084 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071637919 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065389267 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075030252 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071196649 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065571383 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066632529 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.06853469 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.072990941 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067087162 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070152813 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064676622 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068843336 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071859587 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069228709 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068111944 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065468922 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066788399 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067049748 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055040698 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067177538 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053313041 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070166729 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.06526851 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065578577 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067035099 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071335041 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079138534 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068458722 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072468786 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067836826 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066165468 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070222267 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059966657 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069776032 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.081956314 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082362994 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067293016 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065208353 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081269456 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071721878 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066197552 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055981145 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074408068 seconds)
  done (took 9.118550549 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.094146754 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.087510501 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069117337 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08333117 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.090604069 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.085982527 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074761786 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076003073 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069379917 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.08145057 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.07349889 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075899248 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068128108 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076681865 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.09330147 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076490267 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069667611 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076515103 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071363922 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.100008944 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082215128 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081672065 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.074590708 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067940834 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075663005 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079802531 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.088942869 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.079383696 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.077798869 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075104732 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.080216988 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.088847076 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.074273989 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.071888772 seconds)
  done (took 4.413731362 seconds)
done (took 38.280241625 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.761792008 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.937388024 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.750231497 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.108337313 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.849292464 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.979293481 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.914759383 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.745215827 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.850708426 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.781570708 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.994487424 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.853738849 seconds)
done (took 65.218201074 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.800675517 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.888369185 seconds)
    (2/2) benchmarking "String"...
    done (took 2.020330427 seconds)
  done (took 5.636986108 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.088846139 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.355326334 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.994894503 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.746750224 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.754487077 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.055812559 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.602006097 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.300107116 seconds)
  done (took 30.49991956 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.409614324 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.972692332 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.608546572 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.654473332 seconds)
  done (took 16.401658516 seconds)
done (took 64.206721857 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.758187541 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.752339594 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.757769488 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.733582683 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.808987412 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.76229661 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.150103858 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.773663828 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.750774256 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.741389286 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.753283173 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.183230863 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.757978625 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.151874905 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.749272083 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.789276349 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.755717443 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.284307711 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.907380433 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.771199609 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.764700047 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.77436799 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.752013463 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.782322801 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.749314299 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.756972217 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.250914566 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.75245864 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.397760614 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.750498182 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.780612247 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.904942725 seconds)
  done (took 203.199395539 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.750133653 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.750460293 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.863632054 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.761489505 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.116000537 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.95080777 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.862103232 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.233808622 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.754691836 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.77935623 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.881574532 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.750625542 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.880891886 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.704352319 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.772815058 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.753446089 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.971475201 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.905463859 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.770769106 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.020826354 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.753977607 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.694653697 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.675874827 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.871464121 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.772472849 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.782322908 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.772759409 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.783927501 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.953275904 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.9656497 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.797273113 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.770021515 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.889580255 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.623609759 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.765798235 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.751370961 seconds)
  done (took 168.555590757 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.90280502 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.752051826 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.75089726 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.75162399 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.756646485 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.750210211 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.877251297 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.979995916 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.246047418 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.083198827 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.803716422 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.613111468 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.753734671 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.818325403 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.762552704 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.751918112 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.766026922 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.777903087 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.752761811 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.750461082 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.922553975 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.766016011 seconds)
    (22/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.750807928 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.758345315 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.752868062 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.75670776 seconds)
    (26/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.751157 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.119989075 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.243342616 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.752560235 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.757471289 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.995105872 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.75273821 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.752585049 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.68421585 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.534627651 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 2.12063488 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.754698297 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.757762673 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.751046247 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.981126837 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.752395946 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.753178794 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.752988437 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.754375735 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.110258295 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.752492942 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.879646475 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.753667369 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.291119189 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.75206761 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.753312568 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.955830092 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.502423236 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.754478773 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.753382083 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.758609105 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.755392096 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.753931699 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.760254019 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.636339695 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.834766431 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.75509453 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.756952044 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.759356382 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.754454181 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.975205934 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.757475529 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.749108778 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.811965266 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.975135042 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.875272041 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.756640062 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.822587371 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.848731224 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.754908102 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.754677829 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.754929632 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.754957872 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.835943573 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.756482079 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.963364592 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.763797058 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.756243339 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.806919984 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.824300259 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.756008341 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.675885333 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.754487927 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.755230094 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.087699163 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.823044763 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.755436139 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.75473463 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.755267753 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.93812612 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.878415813 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.56724633 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.754509181 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.797570504 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.761801101 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.922430779 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.756497015 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.955305145 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.755736625 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.756476393 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.838644138 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.760859653 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.758823058 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.756240457 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.789020769 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.756918426 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.812709655 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.756785205 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.127556014 seconds)
  done (took 400.034379191 seconds)
done (took 775.448098888 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.455959949 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.386373221 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.506572492 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.414548379 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.394881849 seconds)
  done (took 13.855691737 seconds)
done (took 15.553705508 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.846345554 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.849555344 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.782186798 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.847007412 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.777903491 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.846437809 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.827759239 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.783828157 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.813055457 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.783003713 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.814604006 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.781981181 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.769283692 seconds)
  done (took 25.220970493 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.984967153 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.993203526 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.825990222 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.994899088 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.80376048 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.988038414 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.931329584 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.908525189 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.909124386 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.774429636 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.771110922 seconds)
  done (took 22.584900415 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.991043576 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.988370073 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.830283015 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.99308165 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.804684722 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.993172269 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.919612529 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.910006644 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.907760765 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.773528749 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.771370459 seconds)
  done (took 22.581732449 seconds)
done (took 72.084920284 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.782505105 seconds)
  done (took 3.481318905 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.789164174 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.927912188 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.789546492 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.771350308 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.782992215 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.768209717 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.771104732 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.782554497 seconds)
  done (took 16.084315543 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.764941441 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.765284374 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.76493775 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.767371364 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.767309053 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.764628734 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.764205255 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.767702177 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.763764473 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.767928656 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.76491682 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.767938119 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.764780572 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.767950282 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.767033703 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.767594312 seconds)
  done (took 29.960768881 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.766181513 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.764583827 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.765619701 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.765340338 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.765595282 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.766015379 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.766777338 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.765624944 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.765119456 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.764952649 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.765919822 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.764910541 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.76561728 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.765576912 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.765172951 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.766251571 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.765384292 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.765634531 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.770019912 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.766369551 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.766261258 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.766217945 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.766045 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.766110635 seconds)
  done (took 44.084508706 seconds)
done (took 95.310720637 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.503954922 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.248178396 seconds)
  done (took 8.45487916 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.770517028 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.768936981 seconds)
  done (took 5.276339451 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.769832133 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.768757944 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.768847856 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.769068001 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.768840932 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.769249783 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.768748051 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.77000161 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.768947373 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.769192313 seconds)
  done (took 19.394409923 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.770007713 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.768939379 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.766628496 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.768565159 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.769552055 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.766122691 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.76968256 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.770184231 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.770716353 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.767544442 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.769698173 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.767031716 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.770534695 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.767247227 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.769381811 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.767556199 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.767069811 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.766496681 seconds)
  done (took 33.537633535 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.770596787 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.770022662 seconds)
  done (took 5.244328226 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.768335912 seconds)
    (2/7) benchmarking "second"...
    done (took 1.768101263 seconds)
    (3/7) benchmarking "month"...
    done (took 1.767980998 seconds)
    (4/7) benchmarking "year"...
    done (took 1.768922049 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.768359365 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.767276592 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.767785707 seconds)
  done (took 14.080919097 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.770872036 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.936279931 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.002738285 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.430820643 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.772597484 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.774651548 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.736963358 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.774791181 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.776591365 seconds)
  done (took 19.680315727 seconds)
done (took 107.369936602 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.604826244 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.768071531 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.137560168 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.8312411 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.807092025 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.065250204 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.784073746 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.988783253 seconds)
done (took 42.691688531 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.866436896 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.327931443 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.354429563 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.23621206 seconds)
  done (took 12.624043633 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.75167243 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.302144581 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.810778518 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.366981718 seconds)
  done (took 19.96331497 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.146041428 seconds)
    (2/2) benchmarking "read"...
    done (took 2.134692304 seconds)
  done (took 5.991481074 seconds)
done (took 47.151828117 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.772189489 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.772559524 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.772971399 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.77038895 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.773721705 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.77039895 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.771003684 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.770429502 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.773341169 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.772563819 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.773592078 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.772702093 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.773410372 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.772881182 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.770491988 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.770311193 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.773056878 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.770898903 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.772068685 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.772767468 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.771354452 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.77354631 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.770732206 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.770960456 seconds)
  done (took 44.235623945 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.774259969 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.772599213 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.773376298 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.774833433 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.771869084 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.774775763 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.774206997 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.771391368 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.773794441 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.774200527 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.770842611 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.772323467 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.774199353 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.771101236 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.774467738 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.771063217 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.773593791 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.771368978 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.773733509 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.771390328 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.774833946 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.772288362 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.772091384 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.774447039 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.771966682 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.772476105 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.776173387 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.772945459 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.774746684 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.772116861 seconds)
  done (took 54.902566208 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.780358942 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.782941054 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.775898272 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.775564316 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.77534258 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.775675256 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.775460343 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.77654562 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.776438506 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.775948478 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.777010854 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.775775274 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.77653836 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.776915372 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.777162445 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.777946734 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.776347599 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.775896827 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.776431788 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.776173169 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.777672552 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.776547364 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.776382609 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.775816704 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.777865374 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.777082648 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.777454415 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.776816327 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.777896004 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.776645142 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.77834306 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.777402809 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.777172661 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.777519977 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.777313084 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.77729798 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.782777373 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.784297152 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.777922861 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.777110797 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.778497993 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.778008524 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.776517303 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.778224445 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.776525329 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.777885148 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.778002486 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.777170895 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.777762629 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.778405989 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.777630298 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.777368413 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.777137986 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.778266004 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.778105589 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.778261201 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.777781426 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.777002201 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.777893693 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.777899131 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.77774896 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.777720013 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.778808704 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.779305119 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.779794029 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.780076868 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.779131147 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.778667125 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.77936374 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.779242203 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.779851905 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.779849849 seconds)
  done (took 129.709277196 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.779768555 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.777301832 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.777297793 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.776679005 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.776261593 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.779248497 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.777497018 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.780102757 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.777067587 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.779083144 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.77967024 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.77805059 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.778232307 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.781266282 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.779752991 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.778131399 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.78023666 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.777333567 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.779935223 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.780160297 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.780465416 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.777712572 seconds)
  done (took 40.844644495 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.779686492 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.780845256 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.778427241 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.779716523 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.777466898 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.780924308 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.780370374 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.781122896 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.779939672 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.77789778 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.778153936 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.78037414 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.777911455 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.778437631 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.777503591 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.777747782 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.781740384 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.77756828 seconds)
  done (took 33.740360549 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.778833867 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.77962004 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.781671103 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.779205033 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.780318753 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.781172802 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.779616592 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.781963501 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.781473401 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.780277357 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.784828641 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.782844154 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.783114866 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.779786194 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.781351072 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.779902034 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.783250057 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.780664503 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.781942668 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.779456114 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.779960508 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.783001696 seconds)
  done (took 40.899358641 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.781874749 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.781770487 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.78047722 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.780017832 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.779822167 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.783401052 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.783543383 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.779236014 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.782284581 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.782045224 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.780758935 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.783442163 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.779709917 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.781326214 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.780875029 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.780734608 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.78405655 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.781090951 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.782498053 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.781284753 seconds)
  done (took 37.346976281 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.799512903 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.799773077 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.800384746 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.79983754 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.799594325 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.800917877 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.800512173 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.800090762 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.800149731 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.801234314 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.800500264 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.801636348 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.800577621 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.801196986 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.799723101 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.801132091 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.800164586 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.801159579 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.802529352 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.801050827 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.801329289 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.801761454 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.801239321 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.801689797 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.801324798 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.802175286 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.801877843 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.801419521 seconds)
  done (took 52.14164424 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.785268806 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.784841903 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.783658304 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.782710922 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.783179779 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.783373801 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.781974542 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.7819709 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.784890897 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.781896097 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.785990509 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.785645891 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.784546599 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.78572286 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.786713325 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.785315554 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.785751293 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.78283357 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.78292497 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.782616113 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.786815622 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.785936535 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.785512039 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.783715077 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.783146303 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.786154204 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.783468938 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.784086167 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.786430117 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.784108502 seconds)
  done (took 55.249730061 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.804926206 seconds)
    (2/2) benchmarking "in"...
    done (took 1.80537638 seconds)
  done (took 5.329211463 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.784208643 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.78670729 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.786192344 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.784255654 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.78340806 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.787164885 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.78703251 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.784890748 seconds)
  done (took 16.003356051 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.786905818 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.78766021 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.788254983 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.787425214 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.803634673 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.789183209 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.795048556 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.788172618 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.789968481 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.790329777 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.794560517 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.797571778 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.792205719 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.788383581 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.78828917 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.789570925 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.788369626 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.804761892 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.803697165 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.787891611 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.804685404 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.790412789 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.790894418 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.784796287 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.789841445 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.800020472 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.794338505 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.78837054 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.790244907 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.794133553 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.789151573 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.785664042 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.80428102 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.80531435 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.787659039 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.805151583 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.798142622 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.790433555 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.795564313 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.804651177 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.790143689 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.785503671 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.789780156 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.794412898 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.790884132 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.805336434 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.789088743 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.785998787 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.78950142 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.793711846 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.79478013 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.789943916 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.787259171 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.796060712 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.792270033 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.797368512 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.806240266 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.793037433 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.80004932 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.80167737 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.804871055 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.799372248 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.792548945 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.805699422 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.801801083 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.815171801 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.797046142 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.788335346 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.787765317 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.791223574 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.799340423 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.806860937 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.800373624 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.80749664 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.806498734 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.791458921 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.791716502 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.791516348 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.799346002 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.793915475 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.806928117 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.807175987 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.800873395 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.813302142 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.791222009 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.807646181 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.808485353 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.807737056 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.79293085 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.803358313 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.808814658 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.791029911 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.791371608 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.791918664 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.795570881 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.80849174 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.791996131 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.793268539 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.790065626 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.791803962 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.80879015 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.79555437 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.801984532 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.808549813 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.807418616 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.800161582 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.791895636 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.792730657 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.802580077 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.793073599 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.810098914 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.793324866 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.802110215 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.790430569 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.795766689 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.802515174 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.808508016 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.794598035 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.809008312 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.793760574 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.805618072 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.82051751 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.794564779 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.792392404 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.799841178 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.822058698 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.80965828 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.798662878 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.794031867 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.79089359 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.791572191 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.796552062 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.793344524 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.795513744 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.810548274 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.796359536 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.791147444 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.794535061 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.810349692 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.796060136 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.798042481 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.79538323 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.796576589 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.798409821 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.811125101 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.796885957 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.802859078 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.795548665 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.796834368 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.796693352 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.791726861 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.79468312 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.796582282 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.81090891 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.798250856 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.811963768 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.794920751 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.811353048 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.795777101 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.794598795 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.795806631 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.797415462 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.799271958 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.811646641 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.801538725 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.795713896 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.79271881 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.79658669 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.796537758 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.797792334 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.795829302 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.795537677 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.798833154 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.819535057 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.796690666 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.81268382 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.80117658 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.811914399 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.812663461 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.812340077 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.800133367 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.805716909 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.813862909 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.805181766 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.813737372 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.812824047 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.797364474 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.798068038 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.798160808 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.812620867 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.800521137 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.804568603 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.811938127 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.806650744 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.798052367 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.800631987 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.799551148 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.817343551 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.802414828 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.813628827 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.797534598 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.813970922 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.797064716 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.813865702 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.802005922 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.813312424 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.797826347 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.798056219 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.797693482 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.814243972 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.79798685 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.800486532 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.800841628 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.795836738 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.79916673 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.813585645 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.798723012 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.79560776 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.798016152 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.798549637 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.798342052 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.815744423 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.808516197 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.795633751 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.800249581 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.800435822 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.800810756 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.798449005 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.799827973 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.802439701 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.800718093 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.806374613 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.801818601 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.800399614 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.806526628 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.799943182 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.799257985 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.802852893 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.79997673 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.796616997 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.803297333 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.806656762 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.799533642 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.815645121 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.815845662 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.799669311 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.800348011 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.808576279 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.797615918 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.799876872 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.799701396 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.804434134 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.797160018 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.802396564 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.802538671 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.801659338 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.803083736 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.80053602 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.800851106 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.80355934 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.816700627 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.818022968 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.816697662 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.803990691 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.824684535 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.807631922 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.802366542 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.805832977 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.802447167 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.805063307 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.802412226 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.816151104 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.801490174 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.816822766 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.82500927 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.808721899 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.805070072 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.801199211 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.809084255 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.804566054 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.807016303 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.803247633 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.803517591 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.802957509 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.801767158 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.798941125 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.804873381 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.802796973 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.803993221 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.80451427 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.806471223 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.802035207 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.802623389 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.818243899 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.81869831 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.802984794 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.802830772 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.802951177 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.808435285 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.80466144 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.802497923 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.802178326 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.809392515 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.804211897 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.804948434 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.803766871 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.803511415 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.803225271 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.804613303 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.819137445 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.807743443 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.827148581 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.806828685 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.815702851 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.805895433 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.81663372 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.818816427 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.808481421 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.828038825 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.801039486 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.804085861 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.805735017 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.819627826 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.81294979 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.820029165 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.805314092 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.824271843 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.819823963 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.820096803 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.803723964 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.820262647 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.80380665 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.820537866 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.813370177 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.806058496 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.808969945 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.807813048 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.802320712 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.821118664 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.805355215 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.804302119 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.812229272 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.820934401 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.807815085 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.804670324 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.806850757 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.806406179 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.82049678 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.805475726 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.802428305 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.805447505 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.812866241 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.806256872 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.825178282 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.805676064 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.817091356 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.821602518 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.814788193 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.821056489 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.807465772 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.821712115 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.805839228 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.809304995 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.806966353 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.809631151 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.822370141 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.808784773 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.810106984 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.82238354 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.810991741 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.807236459 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.82203207 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.807790731 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.817100878 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.847068673 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.808018907 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.811765858 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.803722019 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.807083235 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.826900639 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.824095468 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.80655467 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.811765642 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.818092262 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.815902295 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.80784492 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.822587748 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.808905869 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.823459767 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.807992538 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.80691708 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.824030542 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.807748924 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.810972128 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.823641337 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.814446911 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.807024772 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.809382476 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.811136832 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.811474105 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.818740271 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.825088732 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.810822982 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.824619986 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.808542246 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.810143873 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.80909994 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.824062383 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.810939955 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.808301907 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.810181949 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.816688705 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.81451116 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.812483911 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.808530492 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.824995167 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.810709188 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.811081703 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.824107295 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.825035018 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.825590222 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.810856345 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.82614208 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.812311343 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.808642101 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.809432127 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.812280095 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.809616203 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.813474263 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.818082072 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.810910204 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.806916787 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.810442148 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.808979212 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.809976347 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.811614985 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.821298782 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.81345072 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.821189184 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.819436332 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.830341699 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.810821705 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.814160269 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.818872947 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.809401884 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.812517607 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.826995663 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.815666621 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.812688934 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.815832932 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.827481357 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.819884429 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.812228343 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.811829658 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.821549924 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.81340503 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.827488796 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.812859956 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.816984596 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.813019757 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.809644987 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.811770262 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.81161215 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.820997855 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.815115577 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.827580341 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.813220155 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.810625536 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.814016956 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.831033666 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.812053284 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.814038526 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.809181101 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.812448382 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.827514245 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.812755378 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.809815836 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.813651295 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.812836178 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.81743743 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.820030974 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.809336632 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.815735075 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.813691126 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.813723957 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.828509574 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.812094582 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.809993093 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.810146251 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.814106618 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.829276527 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.814476993 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.815476313 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.813853664 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.814536985 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.814281942 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.83044931 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.817572648 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.824615909 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.82057085 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.810309912 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.813689946 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.815730753 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.817352928 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.82996217 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.829535199 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.814508336 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.817236407 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.813946605 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.829614432 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.813633955 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.816480069 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.831511697 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.814082384 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.815121726 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.814569206 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.820604852 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.813979253 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.811990801 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.814574376 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.817678151 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.817538452 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.838768014 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.831170383 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.822337559 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.814782635 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.816473218 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.818654768 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.818905946 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.824379236 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.818551517 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.830675131 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.831063437 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.822483007 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.833048578 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.814258193 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.825489732 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.845437748 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.816928141 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.818081384 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.831523147 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.814357037 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.830854252 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.81962769 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.832034573 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.815867728 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.8157357 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.831248721 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.816765323 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.822606107 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.818394098 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.815491754 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.815917604 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.816017864 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.82002415 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.814095836 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.832333991 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.816027575 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.83299194 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.832639798 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.832232378 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.81751127 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.832320542 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.828471336 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.81756615 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.834398407 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.815018522 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.821857949 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.820432359 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.829116106 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.82498851 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.832786088 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.834627234 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.819417682 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.833384514 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.814964772 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.818971056 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.81826982 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.817498691 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.814258966 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.946414788 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.841845023 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.823130008 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.81837673 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.832994617 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.81717032 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.82107477 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.834264118 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.836513318 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.821311536 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.81924116 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.838140292 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.817229182 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.817376809 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.821422035 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.825381421 seconds)
  done (took 1079.814998973 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.815535641 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.816436806 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.816065928 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.814745902 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.815158671 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.815682267 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.815314154 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.815830843 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.815518792 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.81578879 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.816294316 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.816175572 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.816241178 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.816254433 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.816631638 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.816480878 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.816128165 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.816425276 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.817350857 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.816026681 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.816380846 seconds)
  done (took 39.886963179 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.819236493 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.816887894 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.816846394 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.81929843 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.817379021 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.819874767 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.81772367 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.820699132 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.820579987 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.817550407 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.819934008 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.820355198 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.81744552 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.817531547 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.819607269 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.820239846 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.820544887 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.818137622 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.819655348 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.818330247 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.820943211 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.817961983 seconds)
  done (took 41.769585278 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.836172194 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.836493269 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.820461706 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.818218153 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.821137144 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.818011641 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.836840617 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.821052321 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.820394954 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.822830291 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.820544643 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.822693634 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.829373138 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.827162212 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.824998635 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.821943494 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.965818195 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.837489355 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.838079299 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.837146204 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.819735567 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.828359312 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.819480054 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.818833383 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.820443742 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.838098367 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.822347168 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.821560001 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.838309192 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.822975342 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.842884976 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.822198634 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.822586297 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.823771772 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.8242828 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.824392361 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.82759504 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.839985357 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.818818058 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.822927027 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.834852563 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.844571536 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.838831899 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.8310557 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.822245569 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.823050406 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.826945367 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.845929046 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.820391518 seconds)
  done (took 91.438917973 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.822474887 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.822321311 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.821078697 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.823759754 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.823396432 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.822285111 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.823115154 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.822898309 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.821045687 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.820452411 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.822676704 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.820667369 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.820455499 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.82246188 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.822341362 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.820133547 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.821021671 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.820842635 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.821780467 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.820076967 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.821271897 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.824106002 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.823586329 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.821030358 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.824361342 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.819507266 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.821020345 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.824009169 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.820769344 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.821772267 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.823261181 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.82652469 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.823859934 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.822267126 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.822267722 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.825050889 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.82469646 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.822846287 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.82485804 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.821921767 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.825088739 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.824950622 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.825679518 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.824828823 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.823253751 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.82356582 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.82335584 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.823598626 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.823086356 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.825164015 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.82537444 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.82344345 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.824762755 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.822453685 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.824955652 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.82587454 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.823809139 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.823086126 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.825914389 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.823327637 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.823610326 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.825293355 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.82282388 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.824902123 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.825904619 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.823300901 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.822827778 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.825749638 seconds)
  done (took 125.732976504 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.843032692 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.843592178 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.843724426 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.842786453 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.843693976 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.844989583 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.843226959 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.842537527 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.844148714 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.842725404 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.844138923 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.827012426 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.843766939 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.827849615 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.84406906 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.843556742 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.84462863 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.84371992 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.844424885 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.84406087 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.844396384 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.844296514 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.844275978 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.84410548 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.844214226 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.844859568 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.843608253 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.84456742 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.843638242 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.843170844 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.844457604 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.844630384 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.8435056 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.845993377 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.844943484 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.844613204 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.844822985 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.844648055 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.844233345 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.844253928 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.844316888 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.845024889 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.844322828 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.844879493 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.845285837 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.844557697 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.845265371 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.84547553 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.828516717 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.845677362 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.845474555 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.845549685 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.846260233 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.844847284 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.845805978 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.830271287 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.845935191 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.845732187 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.847018938 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.845273259 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.845880626 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.829300718 seconds)
  done (took 116.042131271 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.828720812 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.829638789 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.827276758 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.827507323 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.829635259 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.826967208 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.829478268 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.830507142 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.830938959 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.830215823 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.829591777 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.82782401 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.827865383 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.83079857 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.829197209 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.828179178 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.8291019 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.828654125 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.830510129 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.828692018 seconds)
  done (took 38.344550998 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.827455937 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.831137564 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.828117124 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.827801507 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.830791904 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.829395394 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.830660288 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.831763942 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.828973992 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.83166653 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.831061376 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.832195184 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.829472441 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.829145664 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.832268334 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.828895161 seconds)
  done (took 31.044335439 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.830072922 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.830713258 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.846991332 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.848240652 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.829165283 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.829278142 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.832507572 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.827944325 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.829957371 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.831780675 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.831999704 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.83194893 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.832023099 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.848742404 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.829303611 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.833340053 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.829118493 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.830424815 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.833275632 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.847919675 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.831645487 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.82941233 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.833144015 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.833123614 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.830031526 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.831858102 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.830024517 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.830265088 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.830577067 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.833002478 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.830811653 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.831737453 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.830527079 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.831265854 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.84977917 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.83129531 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.834548147 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.833431424 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.833890163 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.83317906 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.832841392 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.831812329 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.833203403 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.833322318 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.831727929 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.833504557 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.831321418 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.831363044 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.831310258 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.831451265 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.834675008 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.85118532 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.834437977 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.833918671 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.835144757 seconds)
  done (took 102.615194145 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.833910947 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.834692339 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.830883429 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.833805584 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.834217782 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.831851656 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.834833898 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.83248852 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.831640757 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.834494491 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.833271682 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.835676996 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.832815047 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.835445822 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.833757082 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.835800626 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.83340893 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.832533558 seconds)
  done (took 34.772608654 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.833586004 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.83303749 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.835043957 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.83354406 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.832856003 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.836055072 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.832824668 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.835734572 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.834772428 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.833703614 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.832877705 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.835306725 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.835689014 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.836155528 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.834482663 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.832796138 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.836946705 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.837071593 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.833948232 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.835084121 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.836325111 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.836691173 seconds)
  done (took 42.132343849 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.836644506 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.835988403 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.854911615 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.882214304 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.869753768 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.835851497 seconds)
  done (took 12.885066391 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834758762 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835645567 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.834680912 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838256568 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836585731 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834779229 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835543207 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834710713 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83685868 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835805109 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834369225 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837580822 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837653026 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834534082 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837480757 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837281572 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834290717 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835625277 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835080442 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83878695 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834609042 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838070092 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834815492 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835379818 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835776531 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834687794 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838608809 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835203361 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83541024 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838367586 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838493015 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836388156 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839329418 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836549567 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838864369 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839825654 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836136163 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839650271 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838646494 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837026915 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.838964013 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839005603 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839783945 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836705464 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839651857 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.836637603 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837439217 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836163511 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836358855 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839877737 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839517089 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837566566 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840047498 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839590272 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840380803 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839541135 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838559162 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836086988 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839347402 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837879874 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837360962 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840316448 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.836635064 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837732887 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838680289 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.836860087 seconds)
  done (took 123.030690615 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838219229 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.838675337 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836751017 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839167911 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83879207 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837805667 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838835698 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837322161 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838361574 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839920456 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842061905 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838739199 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83855256 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838129104 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838291102 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838149508 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838089565 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839191496 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839383662 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.84138834 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840890199 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840016942 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838984735 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839556902 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838893869 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842338751 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838527611 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839107588 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838915506 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839354522 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840696934 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839345876 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839325727 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.839677996 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839648563 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.83920496 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.840259944 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839919469 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839896487 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.843738754 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839772846 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842747313 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839889478 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839848847 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839837147 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840131197 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840148886 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840377364 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840776442 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840050229 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841649474 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840950705 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.841598578 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84086488 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840897995 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.840707265 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840970034 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.840991319 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84070794 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84275557 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.842234584 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841603212 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84568297 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841175224 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841654264 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840940008 seconds)
  done (took 123.217882997 seconds)
done (took 2514.836782408 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.856754482 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.91762987 seconds)
  done (took 15.549917211 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.005450533 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.958488808 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.84355381 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.837143294 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.843392219 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.84954029 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.860689606 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.843513804 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.844826326 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.843949745 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.842587841 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.033625062 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.875303911 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.839904562 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.84173014 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.935000979 seconds)
  done (took 51.881546644 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.842093552 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.843840112 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.855235865 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.846068084 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.842176341 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.851822884 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.871439941 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.841535934 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.878325266 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.853071473 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.915865177 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.851033316 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.839980271 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.886951837 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.855458229 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.856008502 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.926932006 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.914127425 seconds)
  done (took 35.343955265 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.915226892 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.840600677 seconds)
  done (took 10.533919546 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.844862472 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.850279479 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.868169374 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.845668923 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.852633378 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.846143046 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.859734696 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.8556932 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.857544293 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.896804619 seconds)
  done (took 70.369100628 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.846481745 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.843560536 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.843650431 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.840641306 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.83539386 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.841821863 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.841855261 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.840392983 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.54149998 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.880960327 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.847459761 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.846711318 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.841995695 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.84549394 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.841469334 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.86522234 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.978619719 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.837005669 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.839058333 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.846410414 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.843833571 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.895169794 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.854273317 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.844159058 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.873471836 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.545479619 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.850224409 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.850317696 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.957436755 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.838875515 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.844068836 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.841571273 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.841620596 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.238380244 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.172692521 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.842620392 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.850409249 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.850963099 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.841167883 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.97200479 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.843553603 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.845653935 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.833899301 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.150043134 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.925368155 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.887576578 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.223017835 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.845281799 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.843682563 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.872838767 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.845437783 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.842880674 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.855015077 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.356776458 seconds)
  done (took 131.340043334 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.839110875 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.127472263 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.992475262 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.837091426 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.113112035 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.045191199 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.787168163 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.888938888 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.842274402 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.045740944 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.055459183 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.95126264 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.837540091 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.836555555 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.837443822 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.836007729 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.000659476 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.909521557 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.83952023 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.837432101 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.865261779 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.052341168 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.964673494 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.837613499 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.860136097 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.053419652 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.965376762 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.945497864 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.289859166 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.835320259 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.903644976 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.836408453 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.838969364 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.837875228 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.994892628 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.942134082 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.932710516 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.841672093 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.836219038 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.840160828 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.498037404 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.039655073 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.942276225 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.985517045 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.991609118 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.045553753 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.489397104 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.836666076 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.484284222 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.003788685 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.052489666 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.051297257 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.965365274 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.843395022 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.988366885 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.838629104 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.837946928 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.079507862 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.987249258 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.944924233 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.841337598 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.840897004 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.839269013 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.085810868 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.842950573 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.935782442 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.844513874 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.838589036 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.940490441 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.946949228 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.98312735 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.057382304 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.877552109 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.565828547 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.057898578 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.056954769 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.913881015 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.078610673 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.842800461 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.841768819 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.930682002 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.595317591 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.042460632 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.089654338 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.063894937 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.87716208 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.442036783 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.842725966 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.037232503 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.028196507 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.039042737 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.992558037 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.995741508 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.163576856 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.84041053 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.842876527 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.083709452 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.982806437 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.844779084 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.199741644 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.076836632 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.461147644 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.868161426 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.141621266 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.9793935 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.164983281 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.46854876 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.844727595 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.011950477 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.884215443 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.844535678 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.843953504 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.035321816 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.651949916 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.842363823 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.591096928 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.908484222 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.842267325 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.046527991 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.845175384 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.056148248 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.842637654 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.080343426 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.298655634 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.879125316 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.015582642 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.992285026 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.639829385 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.092020392 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.088127412 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.965793171 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.11642403 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.571248262 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.844362163 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.118781227 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.847270068 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.845088275 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.012024377 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.843322993 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.992023538 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.847298314 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.074682687 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.871162987 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.000205736 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.847098273 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.079402434 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.88217332 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.897219849 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.850713337 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.970898223 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.843193128 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.744471882 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.998506676 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.848690414 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.843099303 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.256838855 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.846665994 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.990080998 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.078996732 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.868087133 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.914491326 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.370833471 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.845058522 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.933505482 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.873939316 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.44815316 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.842787647 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.055284309 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.818886648 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.289561835 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.842857286 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.089829439 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.082204694 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.847080009 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.846317734 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.587143548 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.538430186 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.844999113 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.003165688 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.360578828 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.506034551 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.051829469 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.849937648 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.977188878 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.848049482 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.917331309 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.194934734 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.846865461 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.845941836 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.846794175 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.847421085 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.846112105 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.057800973 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.883066436 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.343901656 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.981449482 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.066565475 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.158185341 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.069460614 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.893621299 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.848325718 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.098193015 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.850805986 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.913772269 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.851399173 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.87307755 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.080059187 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.851781347 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.081247429 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.109799327 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.751678532 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.902394236 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.848062146 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.848889857 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.848839914 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.99961406 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.941440731 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.852476981 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.847312548 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.962957119 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.971702782 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.044637218 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.441316956 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.964539241 seconds)
  done (took 893.179554752 seconds)
done (took 1209.974325465 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.847887604 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.849474077 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.84115876 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.852365204 seconds)
  done (took 29.177658284 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.856595667 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.857365425 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.872794636 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.855125171 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.869385715 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.852698427 seconds)
  done (took 12.948475078 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.884740352 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.851028588 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.851388594 seconds)
  done (took 21.374354947 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.924467151 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.273094344 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.963642604 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.308527696 seconds)
  done (took 10.258616521 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.875887131 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.874986586 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.873402725 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.874739828 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.857811061 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.859193967 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.871536568 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.87520688 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.858937193 seconds)
  done (took 18.61028297 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.286588795 seconds)
done (took 98.436740012 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.858111464 seconds)
    (2/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.153712914 seconds)
    (3/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.851140107 seconds)
    (4/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.534693089 seconds)
    (5/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.149823829 seconds)
    (6/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.243674548 seconds)
    (7/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.851212482 seconds)
    (8/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 8.032020987 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.485442764 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.996060856 seconds)
    (11/309) benchmarking ("sort", Float64, false)...
    done (took 5.656052238 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.427567878 seconds)
    (13/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.099793006 seconds)
    (14/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.880196585 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.889008749 seconds)
    (16/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.846795148 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.884447947 seconds)
    (18/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.848645095 seconds)
    (19/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.196830844 seconds)
    (20/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.852793933 seconds)
    (21/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.863013956 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.924942549 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.925130339 seconds)
    (24/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.944155643 seconds)
    (25/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.312764206 seconds)
    (26/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.871484077 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.142318441 seconds)
    (28/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.83543956 seconds)
    (29/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 8.260394814 seconds)
    (30/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.992950792 seconds)
    (31/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.644841599 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.326604447 seconds)
    (33/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.935776555 seconds)
    (34/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.989389827 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.87223748 seconds)
    (36/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.846196728 seconds)
    (37/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.04650659 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.513602841 seconds)
    (39/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.904488874 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.944881226 seconds)
    (41/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.348140739 seconds)
    (42/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.351672204 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.891880388 seconds)
    (44/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.937174597 seconds)
    (45/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.093451855 seconds)
    (46/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.950447217 seconds)
    (47/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.185780373 seconds)
    (48/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.844910223 seconds)
    (49/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.04644087 seconds)
    (50/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.043361459 seconds)
    (51/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.061906972 seconds)
    (52/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.827666415 seconds)
    (53/309) benchmarking ("map", identity, Int64, true)...
    done (took 3.646255623 seconds)
    (54/309) benchmarking ("sort", BigInt, false)...
    done (took 6.838188898 seconds)
    (55/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.822890556 seconds)
    (56/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.952705302 seconds)
    (57/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.852732495 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.947396328 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.095304503 seconds)
    (60/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.901580253 seconds)
    (61/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.745414582 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.824565725 seconds)
    (63/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.216777414 seconds)
    (64/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.030450444 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.50793189 seconds)
    (66/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.895290096 seconds)
    (67/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.860778356 seconds)
    (68/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.960708199 seconds)
    (69/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.851810742 seconds)
    (70/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.862670743 seconds)
    (71/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.999583012 seconds)
    (72/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.126094564 seconds)
    (73/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.716858817 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.514740126 seconds)
    (75/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.849273876 seconds)
    (76/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.047678845 seconds)
    (77/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.869017111 seconds)
    (78/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.33764323 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.114467608 seconds)
    (80/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.825864128 seconds)
    (81/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 3.544175153 seconds)
    (82/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.825956325 seconds)
    (83/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 8.237262922 seconds)
    (84/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.007106197 seconds)
    (85/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.138462908 seconds)
    (86/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.308819635 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.005517093 seconds)
    (88/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.836143327 seconds)
    (89/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.510400299 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 5.557254495 seconds)
    (91/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.919833657 seconds)
    (92/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.883217669 seconds)
    (93/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.76150088 seconds)
    (94/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.052955614 seconds)
    (95/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.837002668 seconds)
    (96/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.837200871 seconds)
    (97/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.910568822 seconds)
    (98/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.047625965 seconds)
    (99/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.142881692 seconds)
    (100/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.833078887 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.631140608 seconds)
    (102/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.042125503 seconds)
    (103/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.136805452 seconds)
    (104/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.241142361 seconds)
    (105/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.909213531 seconds)
    (106/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.771335876 seconds)
    (107/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.744103763 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.823697616 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.949262556 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.715124335 seconds)
    (111/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.96820411 seconds)
    (112/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.117800914 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.939679452 seconds)
    (114/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.443025626 seconds)
    (115/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.942237224 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.637210701 seconds)
    (117/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.005183575 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.889753212 seconds)
    (119/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.12514656 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.056846426 seconds)
    (121/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.977860087 seconds)
    (122/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.917933549 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.745979357 seconds)
    (124/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.080957202 seconds)
    (125/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.981094371 seconds)
    (126/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.819808307 seconds)
    (127/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 8.182285356 seconds)
    (128/309) benchmarking ("sort", Float32, false)...
    done (took 5.595453333 seconds)
    (129/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.821010222 seconds)
    (130/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.324317417 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.880688775 seconds)
    (132/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.831936993 seconds)
    (133/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.82374379 seconds)
    (134/309) benchmarking ("perf_sum", Float32, true)...
    done (took 3.172837613 seconds)
    (135/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.844500777 seconds)
    (136/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.925427222 seconds)
    (137/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.004372225 seconds)
    (138/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.104947835 seconds)
    (139/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.831352836 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.160838383 seconds)
    (141/309) benchmarking ("sort", Bool, false)...
    done (took 2.394703747 seconds)
    (142/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.854099222 seconds)
    (143/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.431939009 seconds)
    (144/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.091429314 seconds)
    (145/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.087407381 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.718202482 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.054668553 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.104262991 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.518769918 seconds)
    (150/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.976125403 seconds)
    (151/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.913994012 seconds)
    (152/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.972723998 seconds)
    (153/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.939495777 seconds)
    (154/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.128424504 seconds)
    (155/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.91804206 seconds)
    (156/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.911470402 seconds)
    (157/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.854559022 seconds)
    (158/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.956861751 seconds)
    (159/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.96337935 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.820860853 seconds)
    (161/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.065544412 seconds)
    (162/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.858500396 seconds)
    (163/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.04167861 seconds)
    (164/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.832676721 seconds)
    (165/309) benchmarking ("map", identity, Int8, false)...
    done (took 4.590838408 seconds)
    (166/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.857839564 seconds)
    (167/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.849910512 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.851318413 seconds)
    (169/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.076641691 seconds)
    (170/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.828965772 seconds)
    (171/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.087347885 seconds)
    (172/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.175808442 seconds)
    (173/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.856443286 seconds)
    (174/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.378929887 seconds)
    (175/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.222948436 seconds)
    (176/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.059471789 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.075063032 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.978058855 seconds)
    (179/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.860381479 seconds)
    (180/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.024590076 seconds)
    (181/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.929040329 seconds)
    (182/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.515574336 seconds)
    (183/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.944028341 seconds)
    (184/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.854585117 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.156984867 seconds)
    (186/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.770830624 seconds)
    (187/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.81645044 seconds)
    (188/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.924241347 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.857950154 seconds)
    (190/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.977445334 seconds)
    (191/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.982066161 seconds)
    (192/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.232982412 seconds)
    (193/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.933075233 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.874715935 seconds)
    (195/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.828961602 seconds)
    (196/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.373498867 seconds)
    (197/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.024794392 seconds)
    (198/309) benchmarking ("sort", Int8, false)...
    done (took 4.829349397 seconds)
    (199/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.846967227 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.889385301 seconds)
    (201/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.229631382 seconds)
    (202/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.830049536 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.846100441 seconds)
    (204/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.868640747 seconds)
    (205/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.85580667 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.154954456 seconds)
    (207/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.906408554 seconds)
    (208/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.975040732 seconds)
    (209/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.818402412 seconds)
    (210/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.759551433 seconds)
    (211/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.655381672 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.537283326 seconds)
    (213/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.340013248 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.060379442 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.128191468 seconds)
    (216/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.114846157 seconds)
    (217/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 8.178211424 seconds)
    (218/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.314161445 seconds)
    (219/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.831333544 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 4.238686544 seconds)
    (221/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.902726194 seconds)
    (222/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.829966059 seconds)
    (223/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.214680995 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.8536685 seconds)
    (225/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.816472371 seconds)
    (226/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.22499 seconds)
    (227/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.453332182 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.872751654 seconds)
    (229/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.068908299 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.924502566 seconds)
    (231/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.832664518 seconds)
    (232/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.970127632 seconds)
    (233/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.937084682 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.219063434 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.726102985 seconds)
    (236/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.529374823 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.232047487 seconds)
    (238/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.944108539 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.757469674 seconds)
    (240/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.825307385 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.082193449 seconds)
    (242/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.136923172 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.076985099 seconds)
    (244/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.862061702 seconds)
    (245/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.934565937 seconds)
    (246/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.832378633 seconds)
    (247/309) benchmarking ("sort", BigFloat, false)...
    done (took 8.279409944 seconds)
    (248/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.910571464 seconds)
    (249/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.431084482 seconds)
    (250/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.997092309 seconds)
    (251/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.194673047 seconds)
    (252/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.089365142 seconds)
    (253/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.173084416 seconds)
    (254/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.243280714 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.215454448 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.931954925 seconds)
    (257/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.961237676 seconds)
    (258/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.833793917 seconds)
    (259/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.385320418 seconds)
    (260/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.478603396 seconds)
    (261/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.201636186 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.865542212 seconds)
    (263/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.841575966 seconds)
    (264/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.836339058 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.233166882 seconds)
    (266/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.833402228 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.867100499 seconds)
    (268/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.19712608 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.222551732 seconds)
    (270/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.01867025 seconds)
    (271/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.123614566 seconds)
    (272/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.004545089 seconds)
    (273/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.899492891 seconds)
    (274/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.906445551 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.207742323 seconds)
    (276/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.862341259 seconds)
    (277/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.911773378 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.156024511 seconds)
    (279/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.424323964 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.224327277 seconds)
    (281/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.180498269 seconds)
    (282/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.820901351 seconds)
    (283/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.989694917 seconds)
    (284/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.094968178 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.918390125 seconds)
    (286/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.278805242 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.923255015 seconds)
    (288/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.414692677 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.952207935 seconds)
    (290/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.740714859 seconds)
    (291/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.002713896 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.013960143 seconds)
    (293/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.9303112 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.133432921 seconds)
    (295/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.837113868 seconds)
    (296/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.854051909 seconds)
    (297/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.344677436 seconds)
    (298/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.972899684 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.875684925 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.093190854 seconds)
    (301/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.942115621 seconds)
    (302/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.9671399 seconds)
    (303/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.838786176 seconds)
    (304/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.980443805 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 4.787350199 seconds)
    (306/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.39066908 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.857398286 seconds)
    (308/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.293133317 seconds)
    (309/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.471436311 seconds)
  done (took 1016.074012637 seconds)
done (took 1018.165382086 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.86995904 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.866200527 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.847174598 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.868366503 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.96144267 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.877113005 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.859302283 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.849442553 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.896324667 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.896729808 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.846851053 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.874790747 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.850190254 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.848067895 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.848929021 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.862389314 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.160383118 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.87630434 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.865031689 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.859115338 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.866843453 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.847718144 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.897899745 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.875450826 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.851451906 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.850896815 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.851591426 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.869334868 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.961511686 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.854412267 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.850903064 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.860192997 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.16304608 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.874237949 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.842246858 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.869692003 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.859681852 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.857362597 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.854114909 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.881537484 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.29945146 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.855636501 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.85156032 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.850413306 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.850697475 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.854062628 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.852450906 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.854273811 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.8640614 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.867830861 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.299310784 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.871281188 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.854940043 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.852371074 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.86052015 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.852079437 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.852291561 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.866931164 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.870479247 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.868260314 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.151635585 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.881350958 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.851617718 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.868668818 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.860338263 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.332830336 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.851843227 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.853865452 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.301537122 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.861947108 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.333124981 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.865942882 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.852276112 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.866991179 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.882748244 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.164210173 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.87116425 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.851258459 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.859534721 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.851881331 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.86342689 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.865746603 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.856900837 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.852280099 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.866181712 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.879939813 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.861119409 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.854125987 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.860755338 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.872568956 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.858526072 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.866408579 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.855197808 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.846900885 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.862386982 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.855654996 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.858189412 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.859510186 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.857322624 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.862563434 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.302593449 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.875973794 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.849945571 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.848698317 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.851863361 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.86830255 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.302393145 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.860463066 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.87450707 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.900701725 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.854287533 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.154187362 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.884078722 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.87115688 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.863944118 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.856563444 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.849999533 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.156434693 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.328514768 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.875854803 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.855010398 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.853334248 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.87158392 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.856004208 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.85223212 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.166150875 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.880893038 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.868735379 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.977536183 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.865324652 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.886234764 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.854885391 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.857656476 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.883811506 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.872190724 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.887359003 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.859137839 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.871444911 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.872065815 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.852032802 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.869249194 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.867144855 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.855189201 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.861531798 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.849536434 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.886061996 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.868577308 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.86898095 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.878747736 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.977645951 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.85328534 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.157316698 seconds)
done (took 291.351038166 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.922131259 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.844640157 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.951384944 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.85256552 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.936024136 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.937341726 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.850223929 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.849997609 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.849292428 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.229602346 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.851079179 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.851781427 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.85066581 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.851023599 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.934207697 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.853891189 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.851418315 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.193749699 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.868259835 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.923301637 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.844827152 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.8498804 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.853356872 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.238216591 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.846639474 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.85034333 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.92430012 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.853640423 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.203009945 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.85092042 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.851718305 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.203416641 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.946633572 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.8716803 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.862794382 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.861095221 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.936677054 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.859370616 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.935786003 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.935802351 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.955491245 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.906559121 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.849379573 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.852183481 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.857522137 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.871616101 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.852955313 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.881519987 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.853144919 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.852630653 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.198228955 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.861972743 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 2.285484085 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.84992755 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.851997924 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.89143749 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.851910323 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.86994526 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.946448264 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.872291533 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.918771126 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.240275158 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.233467277 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.855970618 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.854931606 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.852602941 seconds)
  done (took 183.780901463 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.921646441 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.928673686 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.926542868 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.859942924 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.906475552 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.927684862 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.85738125 seconds)
  done (took 15.107506998 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.861462837 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.854556796 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.906957855 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.905212016 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.871782959 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.014408842 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.856956346 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.868026906 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.853978088 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.909407654 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.87084243 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.856828861 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.863400182 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.849800525 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.906661316 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.86940848 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.971589824 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.86022752 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.874468133 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.012187062 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.855127211 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.863183017 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.928639963 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.868569206 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.872264833 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.864273688 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.44015564 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.873324765 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.854607037 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.856796182 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.853926467 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.899444614 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.857031645 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.855310252 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.8560653 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.97243473 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.873338936 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.854889732 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.856796078 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.857811393 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.858266246 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.85842478 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.857071207 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.854801764 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.855941996 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.882648376 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.85781125 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.857224662 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.858154777 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.856743759 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.909588277 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.857780289 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.855261943 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.855009164 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.914106827 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.866284293 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.873676145 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.854957511 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.858769665 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.854428043 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.015768362 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.906498581 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.857997242 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.905728964 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.85837662 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.860136892 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.859375792 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.860564634 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.914965853 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.859368671 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.907318715 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.855822821 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.019305774 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.881950338 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.861185754 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.861077467 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.862820793 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.876455604 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.854792641 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.867569386 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.857074667 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.860570921 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.864414738 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.856852344 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.855419467 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.982975697 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.969251971 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.856254248 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.873513501 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.868325688 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.857310192 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.912090171 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.859847032 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.858493243 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.914260284 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.975113962 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.936078164 seconds)
  done (took 204.844015965 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.866151755 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.86809781 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.862459116 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.8760043 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.861419525 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.860648263 seconds)
  done (took 12.981091364 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.862974584 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.862746341 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.859522716 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.861261079 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.876261356 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.875714874 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.877417013 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.863353707 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.880911652 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.860346507 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.875913166 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.861712348 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.875394386 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.877740786 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.876448305 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.86126139 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.878135352 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.858429598 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.861064337 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.878852977 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.014136703 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.877673497 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.877731189 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.863549094 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.879070319 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.861066763 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.871176547 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.861255273 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.860725004 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.868149308 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.881873628 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.878901302 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.86392608 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.867199094 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.88124188 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.86272734 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.865778796 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.862912598 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.859623526 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.877577228 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.864283992 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.879643484 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.861970814 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.865026583 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.864401922 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.866902784 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.864715753 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.870916452 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.878106671 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.864172171 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.864947757 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.863903797 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.877605863 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.86528351 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.868988842 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.866905798 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.868712103 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.880576143 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.879888424 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.866657637 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.865655787 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.87783867 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.865676449 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.883565821 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.861097988 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.866352978 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.866289286 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.884236946 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.880051724 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.8611289 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.865095055 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.860620962 seconds)
  done (took 137.531790911 seconds)
done (took 556.040672045 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.099123551 seconds)
  done (took 8.886781967 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.952955378 seconds)
  done (took 8.830956115 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.520054073 seconds)
  done (took 10.309832033 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.873021475 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.894570017 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.865409228 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.8667218 seconds)
  done (took 29.301512801 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.864985773 seconds)
  done (took 8.657909309 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.870364264 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.855971135 seconds)
  done (took 15.550851393 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.973084072 seconds)
  done (took 8.765962232 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.985531762 seconds)
  done (took 8.784157858 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.858803018 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.87263865 seconds)
  done (took 15.536202874 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.843431506 seconds)
  done (took 8.635553943 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.597810154 seconds)
  done (took 11.403922543 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.868937308 seconds)
  done (took 8.673969408 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.931231879 seconds)
  done (took 8.724248711 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.06432393 seconds)
  done (took 9.854747684 seconds)
done (took 163.707924576 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.861809183 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.860465629 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.860698685 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.858554346 seconds)
  done (took 29.232390947 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.899304435 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.898812594 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.899532482 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.909936924 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.90178825 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.898820401 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.890829407 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.892910672 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.907715838 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.903551267 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.89976027 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.900283432 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.904635946 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.893547931 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.904416465 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.902652599 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.911021727 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.901353223 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.892586619 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.902343628 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.86804095 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.910412425 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.902753363 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.866640351 seconds)
  done (took 47.357312937 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.062061875 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.935788117 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.020903331 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.919590925 seconds)
  done (took 9.728558475 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.917313679 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.921148616 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.933898173 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.971838946 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.995867576 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.928668115 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.889564479 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.888719178 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.873592326 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.919604956 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.996229026 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.937247166 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.009885278 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.86580869 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.047190205 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.865104476 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.867365953 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.918586753 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.969422502 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.998063384 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.86853457 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.920816976 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.9220319 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.936576779 seconds)
  done (took 48.154905519 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.865023587 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.875760866 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.873283372 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.867615804 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.86631286 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.86758844 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.87219914 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.867614701 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.885542743 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.868861996 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.867553619 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.867360522 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.866678838 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.86822269 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.866952489 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.881132285 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.881762406 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.867828598 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.870774051 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.872052415 seconds)
  done (took 39.214028036 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.862104264 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.759659493 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.213618003 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.119281706 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.862703992 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.862514576 seconds)
  done (took 31.47354409 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.881916764 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.931382027 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.87686511 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.926298282 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.005248089 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.873573562 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.869703448 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.939236131 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.980413033 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.942254009 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.888446475 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.896915733 seconds)
  done (took 24.810396777 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.865539388 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.863950065 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.864618282 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.879946481 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.880110669 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.87651061 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.875099706 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.86233013 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.879876681 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.88949988 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.878110636 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.881777685 seconds)
  done (took 44.29846916 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951773716 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.008129648 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.909823404 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.62625558 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.241887785 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.07448496 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.597083559 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.209092493 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.866387346 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.138298018 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.954625165 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967648279 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.121988338 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.471825025 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.900272663 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.300233888 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.153382371 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.068560912 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.887125563 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.569600957 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921874251 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.141904958 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.630023992 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.914403395 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.075764315 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.002712289 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.125787756 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.865230919 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996718759 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.893936375 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876493612 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.863566531 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.140814858 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.238698082 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965062714 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876247066 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.616498765 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.587559185 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.858569841 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.672548918 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.626544263 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.991448245 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875984802 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.863058934 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.802227891 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.110673564 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256645637 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.870567957 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.577411704 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.868911165 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.878836891 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959916238 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.871250362 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.686650695 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.815939494 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.867689926 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.865871363 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872617998 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.437672505 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.019547107 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.149161895 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.845271009 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.006594443 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.635502685 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.237795035 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.006515751 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.869583871 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.870781519 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.802703752 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.651016523 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.916788492 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.208886672 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.888543401 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.530668626 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.17908904 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.014818777 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.809773563 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.129496545 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.498520328 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.845079036 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.097570422 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.866490409 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.810961774 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.812969108 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.805628218 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.124980701 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902596887 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.619941537 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906574597 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.210084237 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.880383867 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888278104 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893554241 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.095461527 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.75262466 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.869740727 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.738806059 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.000831046 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88964811 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.219624536 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.802882637 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.874317973 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.131963134 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.081207824 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.043377287 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.347035936 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.025732587 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.529922981 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.925687923 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.123994292 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.923820878 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.138593254 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.921626003 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.002991614 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918002321 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.872296544 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.157052037 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.557050178 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.009753083 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.969977085 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.995150516 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.183591111 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.894210887 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954441588 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.879553737 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.870797151 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.674016458 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.421282238 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.871263081 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.875216606 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.045058549 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.92046818 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.889637033 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.824017628 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.510967622 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.983638091 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.884090448 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.097949142 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.535809061 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.18668152 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.811346111 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.234737863 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.971329243 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.09619663 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.512623894 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.935671647 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.13334952 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.059311924 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.07563108 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.925090691 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890490002 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9711729 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895338904 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.121906367 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.171308582 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.876873253 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.878711827 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.686486605 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.900032811 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.872583724 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.878421517 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.627085434 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.143746668 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.884727404 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.874543407 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.76845628 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.888265288 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939538535 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.879336017 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.883491647 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.41962404 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.720563997 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.878033994 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.468475768 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.097860003 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.887869258 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.668425504 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.982122867 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.9677143 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.138323802 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.922559 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.806557226 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.586053915 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.567285003 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.876205644 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.811038897 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.876702316 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88251291 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.884661463 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.163717876 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.142102282 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.907056505 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.583076501 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.908768122 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.88658542 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.877953072 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.875582444 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.39270395 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.036884649 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.151241542 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.922241689 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016844922 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.886854902 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.809219233 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.879481613 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.880988679 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.876805432 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.87677702 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907804123 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.581927217 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.248610674 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.132644433 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.487023298 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.886082969 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.609953889 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.925457203 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.902754375 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.762296135 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.130518125 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.916953592 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883391224 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.886194266 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.587133616 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.571637531 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.444316278 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.173644052 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.157750715 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.290711178 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.182148065 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.909322315 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.221196719 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.809702257 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.438699584 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.934908387 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.228731119 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.822642429 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.979194633 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.516948011 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.210376237 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.890105187 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.106089154 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.250571291 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.675858775 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.019027546 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.089543806 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913101208 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.134596182 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.843676251 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.160061158 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.026125059 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.613062352 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.079152522 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.224565872 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.628993878 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.005538256 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.877520744 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.556433542 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956286602 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.591581389 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.052020833 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.163992012 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.89227785 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367755765 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.880574281 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.102352662 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215033557 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.133113553 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.014573994 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.816214008 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.892221929 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.887444911 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.878390096 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.87836017 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.749798775 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.135991616 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.887995007 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.810739417 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.091968186 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.159292699 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.774708097 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.884937941 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.876348563 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.164463257 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.510030948 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040721081 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.060755904 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.407356009 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.885760269 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.81316591 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.814138721 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.573787562 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.878977274 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.849210067 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.080585221 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.00128244 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.864465138 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.050383041 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.971658987 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.139848616 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.893367838 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.146948352 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.147552283 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.704910237 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903542282 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.979694652 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.616156183 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.992622791 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.879191868 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.119460671 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.637333311 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.10508693 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.91384627 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.8334221 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.876980465 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.097317872 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.879899623 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.8537705 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107859217 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.602690021 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.977818716 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.17702619 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941862182 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.860926656 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.932109598 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.020095541 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890284149 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959880284 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.892282802 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.890417296 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.890643008 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928255288 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.861526332 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.004036685 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.892916898 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9770443 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.025121275 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.403781288 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.886233038 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.152786405 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.234086476 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.192705961 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.933432586 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.880458784 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.881131492 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.813423195 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024189674 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.106927603 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.1574794 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.000656712 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.060473673 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906776436 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.63644568 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.182764995 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.127892332 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.156647058 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.779009421 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.484818682 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.925075009 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.878622744 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.894064208 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.094333346 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.086517544 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.169062094 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.031304575 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.059835417 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.263932009 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.153726753 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.881456704 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.884347603 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.47614938 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.99580037 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.555832947 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.918612853 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.851870495 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.157774925 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.894247222 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.252866993 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.899659907 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.043021583 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.658812599 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.59901828 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.171983912 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.867127468 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.933599988 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.152423403 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.247672528 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.190535657 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948619132 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.895939581 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.99480444 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031680515 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.767391342 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.883214982 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.881718488 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.938330104 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.597608747 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.894304515 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.154624655 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.189908059 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.883421596 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.774872497 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907160041 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.89473781 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.113352873 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.140248 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.135789974 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.892436162 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.88293626 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.703323388 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.148342197 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.937772947 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.820533925 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.888024361 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982676728 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.128712894 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.908162124 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.336825655 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.596079112 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.144669571 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.882469023 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908788748 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.137241231 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.240247279 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.195715351 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.414683305 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.087972014 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.473192602 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.56468536 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.18872525 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.88829727 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.141844817 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.191343944 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.886601003 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.054218693 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.928474622 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.150356016 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.189263653 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.893759506 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.747839505 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.852873414 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.234614856 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.488052056 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.824668159 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.897076717 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.944283658 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.887013308 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.008578729 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.89918427 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.776904471 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.145599589 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.671574029 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.175318743 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.890142907 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.874322541 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.723611068 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.279481878 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923815552 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.030958272 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.887514653 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.561196647 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.237470824 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.146533857 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.070857451 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.898170197 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.893889754 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.888562609 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.875240194 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.082699281 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.178006111 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.160029715 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.103964561 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.927723067 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.893863056 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.160662518 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.102858483 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.93524619 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.032734598 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.064011598 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.932801127 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.796175864 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.396665542 seconds)
  done (took 1683.827114826 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.996926145 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.893399339 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.925241831 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.916844072 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.918848847 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.010555494 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.913742707 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.012766942 seconds)
  done (took 57.407875976 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.887361541 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.110133946 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.896684858 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.887567855 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.892630055 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.887713201 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.053448175 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.896946066 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.897648506 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.900713939 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.888657191 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.883693371 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.199619698 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.912303387 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.887083489 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.877639279 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.895305512 seconds)
  done (took 74.691182382 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.888476065 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.985960999 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.915685608 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.901471384 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.959428443 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.897987438 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.774133973 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.890933622 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.888459312 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.063227438 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.524683551 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.901552386 seconds)
  done (took 87.4181485 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.895095631 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.895572456 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.899284889 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.897063231 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.896252304 seconds)
  done (took 11.306482577 seconds)
done (took 2190.7380291 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.175038328 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.12537159 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.130271473 seconds)
  done (took 6.078191261 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.0423414 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.09165115 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.20778934 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.219885753 seconds)
  done (took 10.392899759 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.178551113 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.281969819 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.109600561 seconds)
  done (took 8.398080142 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.301410529 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.910716578 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.011689576 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.894219428 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.895503378 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.896816476 seconds)
  done (took 22.513990692 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.899126014 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.90229394 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.898388833 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.901163361 seconds)
  done (took 9.427646031 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.88246082 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.638519546 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.878330405 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.895761081 seconds)
  done (took 21.121736098 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.663783978 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.656892959 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.640643965 seconds)
  done (took 9.790439257 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.824656604 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.851469474 seconds)
  done (took 9.504021523 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.157129669 seconds)
  done (took 3.983892929 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.031108271 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.162186121 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.383196122 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.43582549 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.478735367 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.819604647 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.21291704 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.152085007 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.306797924 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.349978476 seconds)
  done (took 25.160065286 seconds)
done (took 141.591442936 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.289370084 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.901017815 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.105409544 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.238715484 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.1452215 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.107532961 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.094476889 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.224978021 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.757284774 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.747451184 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.242073527 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.172445613 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.250206125 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.898982685 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.252192671 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.901716793 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.172790183 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.333181027 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.940670666 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.176599723 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.101095734 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.883277657 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.078317023 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.903991953 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.147499647 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.05679475 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.461896255 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.903385933 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.098891669 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.477450915 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.061072607 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.324789767 seconds)
  done (took 169.278691965 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.668748505 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.898024212 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.899578332 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.898268504 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.288819586 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.900796027 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.897554298 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.896845579 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.18062508 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.165414542 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.926063689 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.324140196 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.923169703 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.896368704 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.904933369 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.910657567 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.301024205 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.784814944 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.92076435 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.92139467 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.92670817 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.240975808 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.928123412 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.282108336 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.337321628 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.930596825 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.898199843 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.932845551 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.903582889 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.923216077 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.923274462 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.896148971 seconds)
  done (took 209.46645585 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.901970308 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.899427847 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.906753962 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.900368641 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.910669387 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.912473929 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.898208562 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.895700411 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.484796509 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.501741383 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.935479147 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.911854921 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.910287146 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.898830137 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.897819139 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.900672158 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.903900344 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.910176062 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.90911267 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.912159223 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.915282608 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.609655082 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.901354655 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.62988124 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.901697358 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.905222123 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.900678716 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.91579052 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.898805635 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.9115913 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.911087317 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.902196462 seconds)
  done (took 221.472043574 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.103349537 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.909332719 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.907899529 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.861051757 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.90898012 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.905527557 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.903595147 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.103823823 seconds)
  done (took 19.459713316 seconds)
done (took 621.518397331 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.360071041 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.208534196 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.097175986 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.930771325 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.201772353 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.969849174 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.926822823 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.990874034 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.662185149 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.998274013 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.577758339 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.942746496 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.675857272 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.950725437 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.056454905 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.979656816 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.497723444 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.58739771 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.104646708 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.021365298 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.10937811 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.896983666 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.00533988 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.699151037 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.682418869 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.937711603 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.104064401 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.505794569 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.935289476 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.092703406 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.6560809 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.31759046 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.937760692 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.924012029 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.979186475 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.959507487 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.268998742 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.935482685 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.056819018 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.700964345 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.020004924 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.549495371 seconds)
  done (took 104.847012116 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.897074456 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.895341209 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.894421556 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.895566175 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.894907422 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.895371939 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.896958207 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.895282655 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.899600051 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.897896471 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.938938375 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.898241932 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.896605344 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.898814798 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.896163575 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.898799688 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.895838077 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.898545828 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.896515496 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.896655835 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.898314051 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.895769242 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.898781923 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.899410097 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.899132689 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.897291419 seconds)
  done (took 51.213998337 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.909175503 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.053559753 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.138320185 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.929503476 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.912317537 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.916578977 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.931053268 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.914171755 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.911866278 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.912403225 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.003696734 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.917626155 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.927581026 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.137166622 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.925149174 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.910536618 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.910318333 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.911330694 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.061902818 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.929516851 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.931287381 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.915308128 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.927639442 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.922847857 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.911546776 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.910300933 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.913185821 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.34803609 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.919837647 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.003612855 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.956000456 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.933360251 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.310387196 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.147451455 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.963892353 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.917281183 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.908729809 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.006893481 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.916956475 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.910869584 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.928359939 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.916164627 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.135602211 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.413004698 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.923612071 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.910650205 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.357861135 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.015854064 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.951166877 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.922320393 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.140379829 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.927511832 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.914715786 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.912408705 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.952007663 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.922597165 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.911841478 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.222586664 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.923290247 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.929634606 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.917275855 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.913594001 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.078750632 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.924095121 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.056952658 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.920868801 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.918749418 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.914457244 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.137048773 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.926962414 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.411558014 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.927357155 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.911158331 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.005878217 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.060285985 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.386549028 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.925363363 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.073782045 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.322195691 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.941013175 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.920314457 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.339894182 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.941990898 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.920146893 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.914021024 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.915370946 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.915205409 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.958031524 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.927337842 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.35124193 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.419698968 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.234476636 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.941461117 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.930086891 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.916358112 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.223631218 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.923978627 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.914764849 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.131455819 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.426696098 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.929612116 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.923281718 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.398720235 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.928767971 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.932764896 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.923927658 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.142995665 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.929963935 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.958888192 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.914146101 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.923156161 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.918813012 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.93681426 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.920592638 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.915601834 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.39410461 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.023000508 seconds)
  done (took 236.764140953 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.911824952 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.920768969 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.909199124 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.908550471 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.908184038 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.916769127 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.911895686 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.910368225 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.913687213 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.910325184 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.908334678 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.911197546 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.909439208 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.912083465 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.519156393 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.922254932 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.529457446 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.915752251 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.915099732 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.912535538 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.602123798 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.918102518 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.914292392 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.921362427 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.915085803 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.912162072 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.920153867 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.956012782 seconds)
  done (took 169.379784373 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.925798038 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.108324897 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.954538268 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.95684356 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.929147235 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.921817293 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.94853414 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.942509262 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.930236979 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.921167646 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.919237788 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.985144419 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.934175621 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.060679412 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.956569376 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.958184681 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.026761854 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.936275879 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.921903193 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.922816454 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.952584678 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.918475404 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.985601739 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.050424372 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.941179099 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.040316545 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.927777091 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.926082002 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.924346867 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.04203038 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.934571814 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.98429444 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.951216231 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.941576555 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.0434423 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.039587485 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.029829279 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.953546794 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.926556738 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.923802143 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.921299295 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.912144818 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.039924037 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.939435205 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.923843692 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.033217702 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.940700262 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.925956484 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.933133551 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.923248795 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.938094321 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.943182191 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.991896676 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.056464874 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.95508347 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.948654608 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.948328462 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.213982643 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.951950723 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.025050593 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.918523039 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.042361261 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.947861972 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.913116708 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.924756373 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.930392793 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.956134705 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.956999874 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.028506366 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.932540606 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.026581629 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.959691973 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.934269179 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.926024773 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.928476485 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.041939729 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.041250445 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.959255543 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.961204364 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.956015563 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.919438513 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.926876042 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.91318078 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.943285245 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.930435492 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.045198705 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.043227273 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.935303512 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.926422689 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.928451085 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.927581896 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.951290858 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.048247736 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.959508906 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.026230285 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.994554708 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.999122156 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.942064123 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.940299839 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.9289538 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.992106025 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.937627691 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.938333584 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.268316965 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.001799063 seconds)
  done (took 208.569778072 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.020988782 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.397456767 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.982456335 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.984190196 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.203610198 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.35575596 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.730963977 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.974971097 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.976218768 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 2.001191745 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.137027622 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.037368232 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.990828837 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.960118124 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.387367321 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.967473975 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.975255069 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.997010491 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.97879654 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.539781911 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.299992992 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.09695539 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.970061294 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.092633512 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.953144223 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.255255788 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.300497199 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.357640533 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.010495079 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.320676679 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.315655549 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.666004296 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.18166034 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.22041577 seconds)
  done (took 76.50004462 seconds)
done (took 849.106342079 seconds)
SAVING RESULT...
DONE!
